Version 4.0 HI-TECH Software Intermediate Code
[v F47 `(v ~T0 @X0 0 tf ]
"10 scheduler.c
[; ;scheduler.c: 10: tcb_t *rr_scheduler()
[c E39 0 1 2 .. ]
[n E39 . READY RUNNING WAITING  ]
"21 ./types.h
[; ;./types.h: 21: typedef struct tcb {
[s S1 `uc 1 `*F47 1 `E39 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `um -> 32 `i `*um 1 ]
[n S1 tcb task_id task_func task_state task_priority task_time_to_waiting BSR_reg WORK_reg STATUS_reg STACK task_sp ]
"36
[; ;./types.h: 36: typedef struct f_aptos {
[s S2 `S1 -> 5 `i `uc 1 `*S1 1 ]
[n S2 f_aptos readyQueue readyQueueSize taskRunning ]
"7 scheduler.c
[; ;scheduler.c: 7: extern f_aptos_t readyQueue;
[v _readyQueue `S2 ~T0 @X0 0 e ]
"10 scheduler.c
[; ;scheduler.c: 10: tcb_t *rr_scheduler()
[v _rr_scheduler `(*S1 ~T0 @X0 1 ef ]
"11
[; ;scheduler.c: 11: {
{
[e :U _rr_scheduler ]
[f ]
"25
[; ;scheduler.c: 25:     return &readyQueue.readyQueue[0];
[e ) &U *U + &U . _readyQueue 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _readyQueue 0 `ui `ux ]
[e $UE 5  ]
"26
[; ;scheduler.c: 26: }
[e :UE 5 ]
}
"28
[; ;scheduler.c: 28: tcb_t *priority_scheduler()
[v _priority_scheduler `(*S1 ~T0 @X0 1 ef ]
"29
[; ;scheduler.c: 29: {
{
[e :U _priority_scheduler ]
[f ]
"30
[; ;scheduler.c: 30:     tcb_t *next = ((void*)0);
[v _next `*S1 ~T0 @X0 1 a ]
[e = _next -> -> -> 0 `i `*v `*S1 ]
"32
[; ;scheduler.c: 32:     return next;
[e ) _next ]
[e $UE 6  ]
"33
[; ;scheduler.c: 33: }
[e :UE 6 ]
}
"35
[; ;scheduler.c: 35: tcb_t *scheduler()
[v _scheduler `(*S1 ~T0 @X0 1 ef ]
"36
[; ;scheduler.c: 36: {
{
[e :U _scheduler ]
[f ]
"38
[; ;scheduler.c: 38:     return rr_scheduler();
[e ) ( _rr_scheduler ..  ]
[e $UE 7  ]
"42
[; ;scheduler.c: 42: }
[e :UE 7 ]
}
