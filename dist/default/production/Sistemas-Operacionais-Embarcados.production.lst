

Microchip MPLAB XC8 Assembler V3.10 build 20250813170317 
                                                                                               Fri Oct 24 15:51:04 2025

Microchip MPLAB XC8 C Compiler v3.10 (Free license) build 20250813170317 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=1
    39                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	dabs	1,0x1,56
    55   000000                     
    56                           ; Generated 17/01/2025 GMT
    57                           ; 
    58                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4550 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000FE0                     bsr             equ	4064
    91   000FE9                     fsr0            equ	4073
    92   000FEA                     fsr0h           equ	4074
    93   000FE9                     fsr0l           equ	4073
    94   000FE1                     fsr1            equ	4065
    95   000FE2                     fsr1h           equ	4066
    96   000FE1                     fsr1l           equ	4065
    97   000FD9                     fsr2            equ	4057
    98   000FDA                     fsr2h           equ	4058
    99   000FD9                     fsr2l           equ	4057
   100   000FEF                     indf0           equ	4079
   101   000FE7                     indf1           equ	4071
   102   000FDF                     indf2           equ	4063
   103   000FF2                     intcon          equ	4082
   104   000000                     nvmcon          equ	0
   105   000FF9                     pcl             equ	4089
   106   000FFA                     pclath          equ	4090
   107   000FFB                     pclatu          equ	4091
   108   000FEB                     plusw0          equ	4075
   109   000FE3                     plusw1          equ	4067
   110   000FDB                     plusw2          equ	4059
   111   000FED                     postdec0        equ	4077
   112   000FE5                     postdec1        equ	4069
   113   000FDD                     postdec2        equ	4061
   114   000FEE                     postinc0        equ	4078
   115   000FE6                     postinc1        equ	4070
   116   000FDE                     postinc2        equ	4062
   117   000FEC                     preinc0         equ	4076
   118   000FE4                     preinc1         equ	4068
   119   000FDC                     preinc2         equ	4060
   120   000FF3                     prod            equ	4083
   121   000FF4                     prodh           equ	4084
   122   000FF3                     prodl           equ	4083
   123   000FD8                     status          equ	4056
   124   000FF5                     tablat          equ	4085
   125   000FF6                     tblptr          equ	4086
   126   000FF7                     tblptrh         equ	4087
   127   000FF6                     tblptrl         equ	4086
   128   000FF8                     tblptru         equ	4088
   129   000FFD                     tosl            equ	4093
   130   000FE8                     wreg            equ	4072
   131   000F62                     SPPDATA         equ	3938	;# 
   132   000F63                     SPPCFG          equ	3939	;# 
   133   000F64                     SPPEPS          equ	3940	;# 
   134   000F65                     SPPCON          equ	3941	;# 
   135   000F66                     UFRM            equ	3942	;# 
   136   000F66                     UFRML           equ	3942	;# 
   137   000F67                     UFRMH           equ	3943	;# 
   138   000F68                     UIR             equ	3944	;# 
   139   000F69                     UIE             equ	3945	;# 
   140   000F6A                     UEIR            equ	3946	;# 
   141   000F6B                     UEIE            equ	3947	;# 
   142   000F6C                     USTAT           equ	3948	;# 
   143   000F6D                     UCON            equ	3949	;# 
   144   000F6E                     UADDR           equ	3950	;# 
   145   000F6F                     UCFG            equ	3951	;# 
   146   000F70                     UEP0            equ	3952	;# 
   147   000F71                     UEP1            equ	3953	;# 
   148   000F72                     UEP2            equ	3954	;# 
   149   000F73                     UEP3            equ	3955	;# 
   150   000F74                     UEP4            equ	3956	;# 
   151   000F75                     UEP5            equ	3957	;# 
   152   000F76                     UEP6            equ	3958	;# 
   153   000F77                     UEP7            equ	3959	;# 
   154   000F78                     UEP8            equ	3960	;# 
   155   000F79                     UEP9            equ	3961	;# 
   156   000F7A                     UEP10           equ	3962	;# 
   157   000F7B                     UEP11           equ	3963	;# 
   158   000F7C                     UEP12           equ	3964	;# 
   159   000F7D                     UEP13           equ	3965	;# 
   160   000F7E                     UEP14           equ	3966	;# 
   161   000F7F                     UEP15           equ	3967	;# 
   162   000F80                     PORTA           equ	3968	;# 
   163   000F81                     PORTB           equ	3969	;# 
   164   000F82                     PORTC           equ	3970	;# 
   165   000F83                     PORTD           equ	3971	;# 
   166   000F84                     PORTE           equ	3972	;# 
   167   000F89                     LATA            equ	3977	;# 
   168   000F8A                     LATB            equ	3978	;# 
   169   000F8B                     LATC            equ	3979	;# 
   170   000F8C                     LATD            equ	3980	;# 
   171   000F8D                     LATE            equ	3981	;# 
   172   000F92                     TRISA           equ	3986	;# 
   173   000F92                     DDRA            equ	3986	;# 
   174   000F93                     TRISB           equ	3987	;# 
   175   000F93                     DDRB            equ	3987	;# 
   176   000F94                     TRISC           equ	3988	;# 
   177   000F94                     DDRC            equ	3988	;# 
   178   000F95                     TRISD           equ	3989	;# 
   179   000F95                     DDRD            equ	3989	;# 
   180   000F96                     TRISE           equ	3990	;# 
   181   000F96                     DDRE            equ	3990	;# 
   182   000F9B                     OSCTUNE         equ	3995	;# 
   183   000F9D                     PIE1            equ	3997	;# 
   184   000F9E                     PIR1            equ	3998	;# 
   185   000F9F                     IPR1            equ	3999	;# 
   186   000FA0                     PIE2            equ	4000	;# 
   187   000FA1                     PIR2            equ	4001	;# 
   188   000FA2                     IPR2            equ	4002	;# 
   189   000FA6                     EECON1          equ	4006	;# 
   190   000FA7                     EECON2          equ	4007	;# 
   191   000FA8                     EEDATA          equ	4008	;# 
   192   000FA9                     EEADR           equ	4009	;# 
   193   000FAB                     RCSTA           equ	4011	;# 
   194   000FAB                     RCSTA1          equ	4011	;# 
   195   000FAC                     TXSTA           equ	4012	;# 
   196   000FAC                     TXSTA1          equ	4012	;# 
   197   000FAD                     TXREG           equ	4013	;# 
   198   000FAD                     TXREG1          equ	4013	;# 
   199   000FAE                     RCREG           equ	4014	;# 
   200   000FAE                     RCREG1          equ	4014	;# 
   201   000FAF                     SPBRG           equ	4015	;# 
   202   000FAF                     SPBRG1          equ	4015	;# 
   203   000FB0                     SPBRGH          equ	4016	;# 
   204   000FB1                     T3CON           equ	4017	;# 
   205   000FB2                     TMR3            equ	4018	;# 
   206   000FB2                     TMR3L           equ	4018	;# 
   207   000FB3                     TMR3H           equ	4019	;# 
   208   000FB4                     CMCON           equ	4020	;# 
   209   000FB5                     CVRCON          equ	4021	;# 
   210   000FB6                     ECCP1AS         equ	4022	;# 
   211   000FB6                     CCP1AS          equ	4022	;# 
   212   000FB7                     ECCP1DEL        equ	4023	;# 
   213   000FB7                     CCP1DEL         equ	4023	;# 
   214   000FB8                     BAUDCON         equ	4024	;# 
   215   000FB8                     BAUDCTL         equ	4024	;# 
   216   000FBA                     CCP2CON         equ	4026	;# 
   217   000FBB                     CCPR2           equ	4027	;# 
   218   000FBB                     CCPR2L          equ	4027	;# 
   219   000FBC                     CCPR2H          equ	4028	;# 
   220   000FBD                     CCP1CON         equ	4029	;# 
   221   000FBD                     ECCP1CON        equ	4029	;# 
   222   000FBE                     CCPR1           equ	4030	;# 
   223   000FBE                     CCPR1L          equ	4030	;# 
   224   000FBF                     CCPR1H          equ	4031	;# 
   225   000FC0                     ADCON2          equ	4032	;# 
   226   000FC1                     ADCON1          equ	4033	;# 
   227   000FC2                     ADCON0          equ	4034	;# 
   228   000FC3                     ADRES           equ	4035	;# 
   229   000FC3                     ADRESL          equ	4035	;# 
   230   000FC4                     ADRESH          equ	4036	;# 
   231   000FC5                     SSPCON2         equ	4037	;# 
   232   000FC6                     SSPCON1         equ	4038	;# 
   233   000FC7                     SSPSTAT         equ	4039	;# 
   234   000FC8                     SSPADD          equ	4040	;# 
   235   000FC9                     SSPBUF          equ	4041	;# 
   236   000FCA                     T2CON           equ	4042	;# 
   237   000FCB                     PR2             equ	4043	;# 
   238   000FCB                     MEMCON          equ	4043	;# 
   239   000FCC                     TMR2            equ	4044	;# 
   240   000FCD                     T1CON           equ	4045	;# 
   241   000FCE                     TMR1            equ	4046	;# 
   242   000FCE                     TMR1L           equ	4046	;# 
   243   000FCF                     TMR1H           equ	4047	;# 
   244   000FD0                     RCON            equ	4048	;# 
   245   000FD1                     WDTCON          equ	4049	;# 
   246   000FD2                     HLVDCON         equ	4050	;# 
   247   000FD2                     LVDCON          equ	4050	;# 
   248   000FD3                     OSCCON          equ	4051	;# 
   249   000FD5                     T0CON           equ	4053	;# 
   250   000FD6                     TMR0            equ	4054	;# 
   251   000FD6                     TMR0L           equ	4054	;# 
   252   000FD7                     TMR0H           equ	4055	;# 
   253   000FD8                     STATUS          equ	4056	;# 
   254   000FD9                     FSR2            equ	4057	;# 
   255   000FD9                     FSR2L           equ	4057	;# 
   256   000FDA                     FSR2H           equ	4058	;# 
   257   000FDB                     PLUSW2          equ	4059	;# 
   258   000FDC                     PREINC2         equ	4060	;# 
   259   000FDD                     POSTDEC2        equ	4061	;# 
   260   000FDE                     POSTINC2        equ	4062	;# 
   261   000FDF                     INDF2           equ	4063	;# 
   262   000FE0                     BSR             equ	4064	;# 
   263   000FE1                     FSR1            equ	4065	;# 
   264   000FE1                     FSR1L           equ	4065	;# 
   265   000FE2                     FSR1H           equ	4066	;# 
   266   000FE3                     PLUSW1          equ	4067	;# 
   267   000FE4                     PREINC1         equ	4068	;# 
   268   000FE5                     POSTDEC1        equ	4069	;# 
   269   000FE6                     POSTINC1        equ	4070	;# 
   270   000FE7                     INDF1           equ	4071	;# 
   271   000FE8                     WREG            equ	4072	;# 
   272   000FE9                     FSR0            equ	4073	;# 
   273   000FE9                     FSR0L           equ	4073	;# 
   274   000FEA                     FSR0H           equ	4074	;# 
   275   000FEB                     PLUSW0          equ	4075	;# 
   276   000FEC                     PREINC0         equ	4076	;# 
   277   000FED                     POSTDEC0        equ	4077	;# 
   278   000FEE                     POSTINC0        equ	4078	;# 
   279   000FEF                     INDF0           equ	4079	;# 
   280   000FF0                     INTCON3         equ	4080	;# 
   281   000FF1                     INTCON2         equ	4081	;# 
   282   000FF2                     INTCON          equ	4082	;# 
   283   000FF3                     PROD            equ	4083	;# 
   284   000FF3                     PRODL           equ	4083	;# 
   285   000FF4                     PRODH           equ	4084	;# 
   286   000FF5                     TABLAT          equ	4085	;# 
   287   000FF6                     TBLPTR          equ	4086	;# 
   288   000FF6                     TBLPTRL         equ	4086	;# 
   289   000FF7                     TBLPTRH         equ	4087	;# 
   290   000FF8                     TBLPTRU         equ	4088	;# 
   291   000FF9                     PCLAT           equ	4089	;# 
   292   000FF9                     PC              equ	4089	;# 
   293   000FF9                     PCL             equ	4089	;# 
   294   000FFA                     PCLATH          equ	4090	;# 
   295   000FFB                     PCLATU          equ	4091	;# 
   296   000FFC                     STKPTR          equ	4092	;# 
   297   000FFD                     TOS             equ	4093	;# 
   298   000FFD                     TOSL            equ	4093	;# 
   299   000FFE                     TOSH            equ	4094	;# 
   300   000FFF                     TOSU            equ	4095	;# 
   301   000F62                     SPPDATA         equ	3938	;# 
   302   000F63                     SPPCFG          equ	3939	;# 
   303   000F64                     SPPEPS          equ	3940	;# 
   304   000F65                     SPPCON          equ	3941	;# 
   305   000F66                     UFRM            equ	3942	;# 
   306   000F66                     UFRML           equ	3942	;# 
   307   000F67                     UFRMH           equ	3943	;# 
   308   000F68                     UIR             equ	3944	;# 
   309   000F69                     UIE             equ	3945	;# 
   310   000F6A                     UEIR            equ	3946	;# 
   311   000F6B                     UEIE            equ	3947	;# 
   312   000F6C                     USTAT           equ	3948	;# 
   313   000F6D                     UCON            equ	3949	;# 
   314   000F6E                     UADDR           equ	3950	;# 
   315   000F6F                     UCFG            equ	3951	;# 
   316   000F70                     UEP0            equ	3952	;# 
   317   000F71                     UEP1            equ	3953	;# 
   318   000F72                     UEP2            equ	3954	;# 
   319   000F73                     UEP3            equ	3955	;# 
   320   000F74                     UEP4            equ	3956	;# 
   321   000F75                     UEP5            equ	3957	;# 
   322   000F76                     UEP6            equ	3958	;# 
   323   000F77                     UEP7            equ	3959	;# 
   324   000F78                     UEP8            equ	3960	;# 
   325   000F79                     UEP9            equ	3961	;# 
   326   000F7A                     UEP10           equ	3962	;# 
   327   000F7B                     UEP11           equ	3963	;# 
   328   000F7C                     UEP12           equ	3964	;# 
   329   000F7D                     UEP13           equ	3965	;# 
   330   000F7E                     UEP14           equ	3966	;# 
   331   000F7F                     UEP15           equ	3967	;# 
   332   000F80                     PORTA           equ	3968	;# 
   333   000F81                     PORTB           equ	3969	;# 
   334   000F82                     PORTC           equ	3970	;# 
   335   000F83                     PORTD           equ	3971	;# 
   336   000F84                     PORTE           equ	3972	;# 
   337   000F89                     LATA            equ	3977	;# 
   338   000F8A                     LATB            equ	3978	;# 
   339   000F8B                     LATC            equ	3979	;# 
   340   000F8C                     LATD            equ	3980	;# 
   341   000F8D                     LATE            equ	3981	;# 
   342   000F92                     TRISA           equ	3986	;# 
   343   000F92                     DDRA            equ	3986	;# 
   344   000F93                     TRISB           equ	3987	;# 
   345   000F93                     DDRB            equ	3987	;# 
   346   000F94                     TRISC           equ	3988	;# 
   347   000F94                     DDRC            equ	3988	;# 
   348   000F95                     TRISD           equ	3989	;# 
   349   000F95                     DDRD            equ	3989	;# 
   350   000F96                     TRISE           equ	3990	;# 
   351   000F96                     DDRE            equ	3990	;# 
   352   000F9B                     OSCTUNE         equ	3995	;# 
   353   000F9D                     PIE1            equ	3997	;# 
   354   000F9E                     PIR1            equ	3998	;# 
   355   000F9F                     IPR1            equ	3999	;# 
   356   000FA0                     PIE2            equ	4000	;# 
   357   000FA1                     PIR2            equ	4001	;# 
   358   000FA2                     IPR2            equ	4002	;# 
   359   000FA6                     EECON1          equ	4006	;# 
   360   000FA7                     EECON2          equ	4007	;# 
   361   000FA8                     EEDATA          equ	4008	;# 
   362   000FA9                     EEADR           equ	4009	;# 
   363   000FAB                     RCSTA           equ	4011	;# 
   364   000FAB                     RCSTA1          equ	4011	;# 
   365   000FAC                     TXSTA           equ	4012	;# 
   366   000FAC                     TXSTA1          equ	4012	;# 
   367   000FAD                     TXREG           equ	4013	;# 
   368   000FAD                     TXREG1          equ	4013	;# 
   369   000FAE                     RCREG           equ	4014	;# 
   370   000FAE                     RCREG1          equ	4014	;# 
   371   000FAF                     SPBRG           equ	4015	;# 
   372   000FAF                     SPBRG1          equ	4015	;# 
   373   000FB0                     SPBRGH          equ	4016	;# 
   374   000FB1                     T3CON           equ	4017	;# 
   375   000FB2                     TMR3            equ	4018	;# 
   376   000FB2                     TMR3L           equ	4018	;# 
   377   000FB3                     TMR3H           equ	4019	;# 
   378   000FB4                     CMCON           equ	4020	;# 
   379   000FB5                     CVRCON          equ	4021	;# 
   380   000FB6                     ECCP1AS         equ	4022	;# 
   381   000FB6                     CCP1AS          equ	4022	;# 
   382   000FB7                     ECCP1DEL        equ	4023	;# 
   383   000FB7                     CCP1DEL         equ	4023	;# 
   384   000FB8                     BAUDCON         equ	4024	;# 
   385   000FB8                     BAUDCTL         equ	4024	;# 
   386   000FBA                     CCP2CON         equ	4026	;# 
   387   000FBB                     CCPR2           equ	4027	;# 
   388   000FBB                     CCPR2L          equ	4027	;# 
   389   000FBC                     CCPR2H          equ	4028	;# 
   390   000FBD                     CCP1CON         equ	4029	;# 
   391   000FBD                     ECCP1CON        equ	4029	;# 
   392   000FBE                     CCPR1           equ	4030	;# 
   393   000FBE                     CCPR1L          equ	4030	;# 
   394   000FBF                     CCPR1H          equ	4031	;# 
   395   000FC0                     ADCON2          equ	4032	;# 
   396   000FC1                     ADCON1          equ	4033	;# 
   397   000FC2                     ADCON0          equ	4034	;# 
   398   000FC3                     ADRES           equ	4035	;# 
   399   000FC3                     ADRESL          equ	4035	;# 
   400   000FC4                     ADRESH          equ	4036	;# 
   401   000FC5                     SSPCON2         equ	4037	;# 
   402   000FC6                     SSPCON1         equ	4038	;# 
   403   000FC7                     SSPSTAT         equ	4039	;# 
   404   000FC8                     SSPADD          equ	4040	;# 
   405   000FC9                     SSPBUF          equ	4041	;# 
   406   000FCA                     T2CON           equ	4042	;# 
   407   000FCB                     PR2             equ	4043	;# 
   408   000FCB                     MEMCON          equ	4043	;# 
   409   000FCC                     TMR2            equ	4044	;# 
   410   000FCD                     T1CON           equ	4045	;# 
   411   000FCE                     TMR1            equ	4046	;# 
   412   000FCE                     TMR1L           equ	4046	;# 
   413   000FCF                     TMR1H           equ	4047	;# 
   414   000FD0                     RCON            equ	4048	;# 
   415   000FD1                     WDTCON          equ	4049	;# 
   416   000FD2                     HLVDCON         equ	4050	;# 
   417   000FD2                     LVDCON          equ	4050	;# 
   418   000FD3                     OSCCON          equ	4051	;# 
   419   000FD5                     T0CON           equ	4053	;# 
   420   000FD6                     TMR0            equ	4054	;# 
   421   000FD6                     TMR0L           equ	4054	;# 
   422   000FD7                     TMR0H           equ	4055	;# 
   423   000FD8                     STATUS          equ	4056	;# 
   424   000FD9                     FSR2            equ	4057	;# 
   425   000FD9                     FSR2L           equ	4057	;# 
   426   000FDA                     FSR2H           equ	4058	;# 
   427   000FDB                     PLUSW2          equ	4059	;# 
   428   000FDC                     PREINC2         equ	4060	;# 
   429   000FDD                     POSTDEC2        equ	4061	;# 
   430   000FDE                     POSTINC2        equ	4062	;# 
   431   000FDF                     INDF2           equ	4063	;# 
   432   000FE0                     BSR             equ	4064	;# 
   433   000FE1                     FSR1            equ	4065	;# 
   434   000FE1                     FSR1L           equ	4065	;# 
   435   000FE2                     FSR1H           equ	4066	;# 
   436   000FE3                     PLUSW1          equ	4067	;# 
   437   000FE4                     PREINC1         equ	4068	;# 
   438   000FE5                     POSTDEC1        equ	4069	;# 
   439   000FE6                     POSTINC1        equ	4070	;# 
   440   000FE7                     INDF1           equ	4071	;# 
   441   000FE8                     WREG            equ	4072	;# 
   442   000FE9                     FSR0            equ	4073	;# 
   443   000FE9                     FSR0L           equ	4073	;# 
   444   000FEA                     FSR0H           equ	4074	;# 
   445   000FEB                     PLUSW0          equ	4075	;# 
   446   000FEC                     PREINC0         equ	4076	;# 
   447   000FED                     POSTDEC0        equ	4077	;# 
   448   000FEE                     POSTINC0        equ	4078	;# 
   449   000FEF                     INDF0           equ	4079	;# 
   450   000FF0                     INTCON3         equ	4080	;# 
   451   000FF1                     INTCON2         equ	4081	;# 
   452   000FF2                     INTCON          equ	4082	;# 
   453   000FF3                     PROD            equ	4083	;# 
   454   000FF3                     PRODL           equ	4083	;# 
   455   000FF4                     PRODH           equ	4084	;# 
   456   000FF5                     TABLAT          equ	4085	;# 
   457   000FF6                     TBLPTR          equ	4086	;# 
   458   000FF6                     TBLPTRL         equ	4086	;# 
   459   000FF7                     TBLPTRH         equ	4087	;# 
   460   000FF8                     TBLPTRU         equ	4088	;# 
   461   000FF9                     PCLAT           equ	4089	;# 
   462   000FF9                     PC              equ	4089	;# 
   463   000FF9                     PCL             equ	4089	;# 
   464   000FFA                     PCLATH          equ	4090	;# 
   465   000FFB                     PCLATU          equ	4091	;# 
   466   000FFC                     STKPTR          equ	4092	;# 
   467   000FFD                     TOS             equ	4093	;# 
   468   000FFD                     TOSL            equ	4093	;# 
   469   000FFE                     TOSH            equ	4094	;# 
   470   000FFF                     TOSU            equ	4095	;# 
   471   000F62                     SPPDATA         equ	3938	;# 
   472   000F63                     SPPCFG          equ	3939	;# 
   473   000F64                     SPPEPS          equ	3940	;# 
   474   000F65                     SPPCON          equ	3941	;# 
   475   000F66                     UFRM            equ	3942	;# 
   476   000F66                     UFRML           equ	3942	;# 
   477   000F67                     UFRMH           equ	3943	;# 
   478   000F68                     UIR             equ	3944	;# 
   479   000F69                     UIE             equ	3945	;# 
   480   000F6A                     UEIR            equ	3946	;# 
   481   000F6B                     UEIE            equ	3947	;# 
   482   000F6C                     USTAT           equ	3948	;# 
   483   000F6D                     UCON            equ	3949	;# 
   484   000F6E                     UADDR           equ	3950	;# 
   485   000F6F                     UCFG            equ	3951	;# 
   486   000F70                     UEP0            equ	3952	;# 
   487   000F71                     UEP1            equ	3953	;# 
   488   000F72                     UEP2            equ	3954	;# 
   489   000F73                     UEP3            equ	3955	;# 
   490   000F74                     UEP4            equ	3956	;# 
   491   000F75                     UEP5            equ	3957	;# 
   492   000F76                     UEP6            equ	3958	;# 
   493   000F77                     UEP7            equ	3959	;# 
   494   000F78                     UEP8            equ	3960	;# 
   495   000F79                     UEP9            equ	3961	;# 
   496   000F7A                     UEP10           equ	3962	;# 
   497   000F7B                     UEP11           equ	3963	;# 
   498   000F7C                     UEP12           equ	3964	;# 
   499   000F7D                     UEP13           equ	3965	;# 
   500   000F7E                     UEP14           equ	3966	;# 
   501   000F7F                     UEP15           equ	3967	;# 
   502   000F80                     PORTA           equ	3968	;# 
   503   000F81                     PORTB           equ	3969	;# 
   504   000F82                     PORTC           equ	3970	;# 
   505   000F83                     PORTD           equ	3971	;# 
   506   000F84                     PORTE           equ	3972	;# 
   507   000F89                     LATA            equ	3977	;# 
   508   000F8A                     LATB            equ	3978	;# 
   509   000F8B                     LATC            equ	3979	;# 
   510   000F8C                     LATD            equ	3980	;# 
   511   000F8D                     LATE            equ	3981	;# 
   512   000F92                     TRISA           equ	3986	;# 
   513   000F92                     DDRA            equ	3986	;# 
   514   000F93                     TRISB           equ	3987	;# 
   515   000F93                     DDRB            equ	3987	;# 
   516   000F94                     TRISC           equ	3988	;# 
   517   000F94                     DDRC            equ	3988	;# 
   518   000F95                     TRISD           equ	3989	;# 
   519   000F95                     DDRD            equ	3989	;# 
   520   000F96                     TRISE           equ	3990	;# 
   521   000F96                     DDRE            equ	3990	;# 
   522   000F9B                     OSCTUNE         equ	3995	;# 
   523   000F9D                     PIE1            equ	3997	;# 
   524   000F9E                     PIR1            equ	3998	;# 
   525   000F9F                     IPR1            equ	3999	;# 
   526   000FA0                     PIE2            equ	4000	;# 
   527   000FA1                     PIR2            equ	4001	;# 
   528   000FA2                     IPR2            equ	4002	;# 
   529   000FA6                     EECON1          equ	4006	;# 
   530   000FA7                     EECON2          equ	4007	;# 
   531   000FA8                     EEDATA          equ	4008	;# 
   532   000FA9                     EEADR           equ	4009	;# 
   533   000FAB                     RCSTA           equ	4011	;# 
   534   000FAB                     RCSTA1          equ	4011	;# 
   535   000FAC                     TXSTA           equ	4012	;# 
   536   000FAC                     TXSTA1          equ	4012	;# 
   537   000FAD                     TXREG           equ	4013	;# 
   538   000FAD                     TXREG1          equ	4013	;# 
   539   000FAE                     RCREG           equ	4014	;# 
   540   000FAE                     RCREG1          equ	4014	;# 
   541   000FAF                     SPBRG           equ	4015	;# 
   542   000FAF                     SPBRG1          equ	4015	;# 
   543   000FB0                     SPBRGH          equ	4016	;# 
   544   000FB1                     T3CON           equ	4017	;# 
   545   000FB2                     TMR3            equ	4018	;# 
   546   000FB2                     TMR3L           equ	4018	;# 
   547   000FB3                     TMR3H           equ	4019	;# 
   548   000FB4                     CMCON           equ	4020	;# 
   549   000FB5                     CVRCON          equ	4021	;# 
   550   000FB6                     ECCP1AS         equ	4022	;# 
   551   000FB6                     CCP1AS          equ	4022	;# 
   552   000FB7                     ECCP1DEL        equ	4023	;# 
   553   000FB7                     CCP1DEL         equ	4023	;# 
   554   000FB8                     BAUDCON         equ	4024	;# 
   555   000FB8                     BAUDCTL         equ	4024	;# 
   556   000FBA                     CCP2CON         equ	4026	;# 
   557   000FBB                     CCPR2           equ	4027	;# 
   558   000FBB                     CCPR2L          equ	4027	;# 
   559   000FBC                     CCPR2H          equ	4028	;# 
   560   000FBD                     CCP1CON         equ	4029	;# 
   561   000FBD                     ECCP1CON        equ	4029	;# 
   562   000FBE                     CCPR1           equ	4030	;# 
   563   000FBE                     CCPR1L          equ	4030	;# 
   564   000FBF                     CCPR1H          equ	4031	;# 
   565   000FC0                     ADCON2          equ	4032	;# 
   566   000FC1                     ADCON1          equ	4033	;# 
   567   000FC2                     ADCON0          equ	4034	;# 
   568   000FC3                     ADRES           equ	4035	;# 
   569   000FC3                     ADRESL          equ	4035	;# 
   570   000FC4                     ADRESH          equ	4036	;# 
   571   000FC5                     SSPCON2         equ	4037	;# 
   572   000FC6                     SSPCON1         equ	4038	;# 
   573   000FC7                     SSPSTAT         equ	4039	;# 
   574   000FC8                     SSPADD          equ	4040	;# 
   575   000FC9                     SSPBUF          equ	4041	;# 
   576   000FCA                     T2CON           equ	4042	;# 
   577   000FCB                     PR2             equ	4043	;# 
   578   000FCB                     MEMCON          equ	4043	;# 
   579   000FCC                     TMR2            equ	4044	;# 
   580   000FCD                     T1CON           equ	4045	;# 
   581   000FCE                     TMR1            equ	4046	;# 
   582   000FCE                     TMR1L           equ	4046	;# 
   583   000FCF                     TMR1H           equ	4047	;# 
   584   000FD0                     RCON            equ	4048	;# 
   585   000FD1                     WDTCON          equ	4049	;# 
   586   000FD2                     HLVDCON         equ	4050	;# 
   587   000FD2                     LVDCON          equ	4050	;# 
   588   000FD3                     OSCCON          equ	4051	;# 
   589   000FD5                     T0CON           equ	4053	;# 
   590   000FD6                     TMR0            equ	4054	;# 
   591   000FD6                     TMR0L           equ	4054	;# 
   592   000FD7                     TMR0H           equ	4055	;# 
   593   000FD8                     STATUS          equ	4056	;# 
   594   000FD9                     FSR2            equ	4057	;# 
   595   000FD9                     FSR2L           equ	4057	;# 
   596   000FDA                     FSR2H           equ	4058	;# 
   597   000FDB                     PLUSW2          equ	4059	;# 
   598   000FDC                     PREINC2         equ	4060	;# 
   599   000FDD                     POSTDEC2        equ	4061	;# 
   600   000FDE                     POSTINC2        equ	4062	;# 
   601   000FDF                     INDF2           equ	4063	;# 
   602   000FE0                     BSR             equ	4064	;# 
   603   000FE1                     FSR1            equ	4065	;# 
   604   000FE1                     FSR1L           equ	4065	;# 
   605   000FE2                     FSR1H           equ	4066	;# 
   606   000FE3                     PLUSW1          equ	4067	;# 
   607   000FE4                     PREINC1         equ	4068	;# 
   608   000FE5                     POSTDEC1        equ	4069	;# 
   609   000FE6                     POSTINC1        equ	4070	;# 
   610   000FE7                     INDF1           equ	4071	;# 
   611   000FE8                     WREG            equ	4072	;# 
   612   000FE9                     FSR0            equ	4073	;# 
   613   000FE9                     FSR0L           equ	4073	;# 
   614   000FEA                     FSR0H           equ	4074	;# 
   615   000FEB                     PLUSW0          equ	4075	;# 
   616   000FEC                     PREINC0         equ	4076	;# 
   617   000FED                     POSTDEC0        equ	4077	;# 
   618   000FEE                     POSTINC0        equ	4078	;# 
   619   000FEF                     INDF0           equ	4079	;# 
   620   000FF0                     INTCON3         equ	4080	;# 
   621   000FF1                     INTCON2         equ	4081	;# 
   622   000FF2                     INTCON          equ	4082	;# 
   623   000FF3                     PROD            equ	4083	;# 
   624   000FF3                     PRODL           equ	4083	;# 
   625   000FF4                     PRODH           equ	4084	;# 
   626   000FF5                     TABLAT          equ	4085	;# 
   627   000FF6                     TBLPTR          equ	4086	;# 
   628   000FF6                     TBLPTRL         equ	4086	;# 
   629   000FF7                     TBLPTRH         equ	4087	;# 
   630   000FF8                     TBLPTRU         equ	4088	;# 
   631   000FF9                     PCLAT           equ	4089	;# 
   632   000FF9                     PC              equ	4089	;# 
   633   000FF9                     PCL             equ	4089	;# 
   634   000FFA                     PCLATH          equ	4090	;# 
   635   000FFB                     PCLATU          equ	4091	;# 
   636   000FFC                     STKPTR          equ	4092	;# 
   637   000FFD                     TOS             equ	4093	;# 
   638   000FFD                     TOSL            equ	4093	;# 
   639   000FFE                     TOSH            equ	4094	;# 
   640   000FFF                     TOSU            equ	4095	;# 
   641   000F62                     SPPDATA         equ	3938	;# 
   642   000F63                     SPPCFG          equ	3939	;# 
   643   000F64                     SPPEPS          equ	3940	;# 
   644   000F65                     SPPCON          equ	3941	;# 
   645   000F66                     UFRM            equ	3942	;# 
   646   000F66                     UFRML           equ	3942	;# 
   647   000F67                     UFRMH           equ	3943	;# 
   648   000F68                     UIR             equ	3944	;# 
   649   000F69                     UIE             equ	3945	;# 
   650   000F6A                     UEIR            equ	3946	;# 
   651   000F6B                     UEIE            equ	3947	;# 
   652   000F6C                     USTAT           equ	3948	;# 
   653   000F6D                     UCON            equ	3949	;# 
   654   000F6E                     UADDR           equ	3950	;# 
   655   000F6F                     UCFG            equ	3951	;# 
   656   000F70                     UEP0            equ	3952	;# 
   657   000F71                     UEP1            equ	3953	;# 
   658   000F72                     UEP2            equ	3954	;# 
   659   000F73                     UEP3            equ	3955	;# 
   660   000F74                     UEP4            equ	3956	;# 
   661   000F75                     UEP5            equ	3957	;# 
   662   000F76                     UEP6            equ	3958	;# 
   663   000F77                     UEP7            equ	3959	;# 
   664   000F78                     UEP8            equ	3960	;# 
   665   000F79                     UEP9            equ	3961	;# 
   666   000F7A                     UEP10           equ	3962	;# 
   667   000F7B                     UEP11           equ	3963	;# 
   668   000F7C                     UEP12           equ	3964	;# 
   669   000F7D                     UEP13           equ	3965	;# 
   670   000F7E                     UEP14           equ	3966	;# 
   671   000F7F                     UEP15           equ	3967	;# 
   672   000F80                     PORTA           equ	3968	;# 
   673   000F81                     PORTB           equ	3969	;# 
   674   000F82                     PORTC           equ	3970	;# 
   675   000F83                     PORTD           equ	3971	;# 
   676   000F84                     PORTE           equ	3972	;# 
   677   000F89                     LATA            equ	3977	;# 
   678   000F8A                     LATB            equ	3978	;# 
   679   000F8B                     LATC            equ	3979	;# 
   680   000F8C                     LATD            equ	3980	;# 
   681   000F8D                     LATE            equ	3981	;# 
   682   000F92                     TRISA           equ	3986	;# 
   683   000F92                     DDRA            equ	3986	;# 
   684   000F93                     TRISB           equ	3987	;# 
   685   000F93                     DDRB            equ	3987	;# 
   686   000F94                     TRISC           equ	3988	;# 
   687   000F94                     DDRC            equ	3988	;# 
   688   000F95                     TRISD           equ	3989	;# 
   689   000F95                     DDRD            equ	3989	;# 
   690   000F96                     TRISE           equ	3990	;# 
   691   000F96                     DDRE            equ	3990	;# 
   692   000F9B                     OSCTUNE         equ	3995	;# 
   693   000F9D                     PIE1            equ	3997	;# 
   694   000F9E                     PIR1            equ	3998	;# 
   695   000F9F                     IPR1            equ	3999	;# 
   696   000FA0                     PIE2            equ	4000	;# 
   697   000FA1                     PIR2            equ	4001	;# 
   698   000FA2                     IPR2            equ	4002	;# 
   699   000FA6                     EECON1          equ	4006	;# 
   700   000FA7                     EECON2          equ	4007	;# 
   701   000FA8                     EEDATA          equ	4008	;# 
   702   000FA9                     EEADR           equ	4009	;# 
   703   000FAB                     RCSTA           equ	4011	;# 
   704   000FAB                     RCSTA1          equ	4011	;# 
   705   000FAC                     TXSTA           equ	4012	;# 
   706   000FAC                     TXSTA1          equ	4012	;# 
   707   000FAD                     TXREG           equ	4013	;# 
   708   000FAD                     TXREG1          equ	4013	;# 
   709   000FAE                     RCREG           equ	4014	;# 
   710   000FAE                     RCREG1          equ	4014	;# 
   711   000FAF                     SPBRG           equ	4015	;# 
   712   000FAF                     SPBRG1          equ	4015	;# 
   713   000FB0                     SPBRGH          equ	4016	;# 
   714   000FB1                     T3CON           equ	4017	;# 
   715   000FB2                     TMR3            equ	4018	;# 
   716   000FB2                     TMR3L           equ	4018	;# 
   717   000FB3                     TMR3H           equ	4019	;# 
   718   000FB4                     CMCON           equ	4020	;# 
   719   000FB5                     CVRCON          equ	4021	;# 
   720   000FB6                     ECCP1AS         equ	4022	;# 
   721   000FB6                     CCP1AS          equ	4022	;# 
   722   000FB7                     ECCP1DEL        equ	4023	;# 
   723   000FB7                     CCP1DEL         equ	4023	;# 
   724   000FB8                     BAUDCON         equ	4024	;# 
   725   000FB8                     BAUDCTL         equ	4024	;# 
   726   000FBA                     CCP2CON         equ	4026	;# 
   727   000FBB                     CCPR2           equ	4027	;# 
   728   000FBB                     CCPR2L          equ	4027	;# 
   729   000FBC                     CCPR2H          equ	4028	;# 
   730   000FBD                     CCP1CON         equ	4029	;# 
   731   000FBD                     ECCP1CON        equ	4029	;# 
   732   000FBE                     CCPR1           equ	4030	;# 
   733   000FBE                     CCPR1L          equ	4030	;# 
   734   000FBF                     CCPR1H          equ	4031	;# 
   735   000FC0                     ADCON2          equ	4032	;# 
   736   000FC1                     ADCON1          equ	4033	;# 
   737   000FC2                     ADCON0          equ	4034	;# 
   738   000FC3                     ADRES           equ	4035	;# 
   739   000FC3                     ADRESL          equ	4035	;# 
   740   000FC4                     ADRESH          equ	4036	;# 
   741   000FC5                     SSPCON2         equ	4037	;# 
   742   000FC6                     SSPCON1         equ	4038	;# 
   743   000FC7                     SSPSTAT         equ	4039	;# 
   744   000FC8                     SSPADD          equ	4040	;# 
   745   000FC9                     SSPBUF          equ	4041	;# 
   746   000FCA                     T2CON           equ	4042	;# 
   747   000FCB                     PR2             equ	4043	;# 
   748   000FCB                     MEMCON          equ	4043	;# 
   749   000FCC                     TMR2            equ	4044	;# 
   750   000FCD                     T1CON           equ	4045	;# 
   751   000FCE                     TMR1            equ	4046	;# 
   752   000FCE                     TMR1L           equ	4046	;# 
   753   000FCF                     TMR1H           equ	4047	;# 
   754   000FD0                     RCON            equ	4048	;# 
   755   000FD1                     WDTCON          equ	4049	;# 
   756   000FD2                     HLVDCON         equ	4050	;# 
   757   000FD2                     LVDCON          equ	4050	;# 
   758   000FD3                     OSCCON          equ	4051	;# 
   759   000FD5                     T0CON           equ	4053	;# 
   760   000FD6                     TMR0            equ	4054	;# 
   761   000FD6                     TMR0L           equ	4054	;# 
   762   000FD7                     TMR0H           equ	4055	;# 
   763   000FD8                     STATUS          equ	4056	;# 
   764   000FD9                     FSR2            equ	4057	;# 
   765   000FD9                     FSR2L           equ	4057	;# 
   766   000FDA                     FSR2H           equ	4058	;# 
   767   000FDB                     PLUSW2          equ	4059	;# 
   768   000FDC                     PREINC2         equ	4060	;# 
   769   000FDD                     POSTDEC2        equ	4061	;# 
   770   000FDE                     POSTINC2        equ	4062	;# 
   771   000FDF                     INDF2           equ	4063	;# 
   772   000FE0                     BSR             equ	4064	;# 
   773   000FE1                     FSR1            equ	4065	;# 
   774   000FE1                     FSR1L           equ	4065	;# 
   775   000FE2                     FSR1H           equ	4066	;# 
   776   000FE3                     PLUSW1          equ	4067	;# 
   777   000FE4                     PREINC1         equ	4068	;# 
   778   000FE5                     POSTDEC1        equ	4069	;# 
   779   000FE6                     POSTINC1        equ	4070	;# 
   780   000FE7                     INDF1           equ	4071	;# 
   781   000FE8                     WREG            equ	4072	;# 
   782   000FE9                     FSR0            equ	4073	;# 
   783   000FE9                     FSR0L           equ	4073	;# 
   784   000FEA                     FSR0H           equ	4074	;# 
   785   000FEB                     PLUSW0          equ	4075	;# 
   786   000FEC                     PREINC0         equ	4076	;# 
   787   000FED                     POSTDEC0        equ	4077	;# 
   788   000FEE                     POSTINC0        equ	4078	;# 
   789   000FEF                     INDF0           equ	4079	;# 
   790   000FF0                     INTCON3         equ	4080	;# 
   791   000FF1                     INTCON2         equ	4081	;# 
   792   000FF2                     INTCON          equ	4082	;# 
   793   000FF3                     PROD            equ	4083	;# 
   794   000FF3                     PRODL           equ	4083	;# 
   795   000FF4                     PRODH           equ	4084	;# 
   796   000FF5                     TABLAT          equ	4085	;# 
   797   000FF6                     TBLPTR          equ	4086	;# 
   798   000FF6                     TBLPTRL         equ	4086	;# 
   799   000FF7                     TBLPTRH         equ	4087	;# 
   800   000FF8                     TBLPTRU         equ	4088	;# 
   801   000FF9                     PCLAT           equ	4089	;# 
   802   000FF9                     PC              equ	4089	;# 
   803   000FF9                     PCL             equ	4089	;# 
   804   000FFA                     PCLATH          equ	4090	;# 
   805   000FFB                     PCLATU          equ	4091	;# 
   806   000FFC                     STKPTR          equ	4092	;# 
   807   000FFD                     TOS             equ	4093	;# 
   808   000FFD                     TOSL            equ	4093	;# 
   809   000FFE                     TOSH            equ	4094	;# 
   810   000FFF                     TOSU            equ	4095	;# 
   811   000F62                     SPPDATA         equ	3938	;# 
   812   000F63                     SPPCFG          equ	3939	;# 
   813   000F64                     SPPEPS          equ	3940	;# 
   814   000F65                     SPPCON          equ	3941	;# 
   815   000F66                     UFRM            equ	3942	;# 
   816   000F66                     UFRML           equ	3942	;# 
   817   000F67                     UFRMH           equ	3943	;# 
   818   000F68                     UIR             equ	3944	;# 
   819   000F69                     UIE             equ	3945	;# 
   820   000F6A                     UEIR            equ	3946	;# 
   821   000F6B                     UEIE            equ	3947	;# 
   822   000F6C                     USTAT           equ	3948	;# 
   823   000F6D                     UCON            equ	3949	;# 
   824   000F6E                     UADDR           equ	3950	;# 
   825   000F6F                     UCFG            equ	3951	;# 
   826   000F70                     UEP0            equ	3952	;# 
   827   000F71                     UEP1            equ	3953	;# 
   828   000F72                     UEP2            equ	3954	;# 
   829   000F73                     UEP3            equ	3955	;# 
   830   000F74                     UEP4            equ	3956	;# 
   831   000F75                     UEP5            equ	3957	;# 
   832   000F76                     UEP6            equ	3958	;# 
   833   000F77                     UEP7            equ	3959	;# 
   834   000F78                     UEP8            equ	3960	;# 
   835   000F79                     UEP9            equ	3961	;# 
   836   000F7A                     UEP10           equ	3962	;# 
   837   000F7B                     UEP11           equ	3963	;# 
   838   000F7C                     UEP12           equ	3964	;# 
   839   000F7D                     UEP13           equ	3965	;# 
   840   000F7E                     UEP14           equ	3966	;# 
   841   000F7F                     UEP15           equ	3967	;# 
   842   000F80                     PORTA           equ	3968	;# 
   843   000F81                     PORTB           equ	3969	;# 
   844   000F82                     PORTC           equ	3970	;# 
   845   000F83                     PORTD           equ	3971	;# 
   846   000F84                     PORTE           equ	3972	;# 
   847   000F89                     LATA            equ	3977	;# 
   848   000F8A                     LATB            equ	3978	;# 
   849   000F8B                     LATC            equ	3979	;# 
   850   000F8C                     LATD            equ	3980	;# 
   851   000F8D                     LATE            equ	3981	;# 
   852   000F92                     TRISA           equ	3986	;# 
   853   000F92                     DDRA            equ	3986	;# 
   854   000F93                     TRISB           equ	3987	;# 
   855   000F93                     DDRB            equ	3987	;# 
   856   000F94                     TRISC           equ	3988	;# 
   857   000F94                     DDRC            equ	3988	;# 
   858   000F95                     TRISD           equ	3989	;# 
   859   000F95                     DDRD            equ	3989	;# 
   860   000F96                     TRISE           equ	3990	;# 
   861   000F96                     DDRE            equ	3990	;# 
   862   000F9B                     OSCTUNE         equ	3995	;# 
   863   000F9D                     PIE1            equ	3997	;# 
   864   000F9E                     PIR1            equ	3998	;# 
   865   000F9F                     IPR1            equ	3999	;# 
   866   000FA0                     PIE2            equ	4000	;# 
   867   000FA1                     PIR2            equ	4001	;# 
   868   000FA2                     IPR2            equ	4002	;# 
   869   000FA6                     EECON1          equ	4006	;# 
   870   000FA7                     EECON2          equ	4007	;# 
   871   000FA8                     EEDATA          equ	4008	;# 
   872   000FA9                     EEADR           equ	4009	;# 
   873   000FAB                     RCSTA           equ	4011	;# 
   874   000FAB                     RCSTA1          equ	4011	;# 
   875   000FAC                     TXSTA           equ	4012	;# 
   876   000FAC                     TXSTA1          equ	4012	;# 
   877   000FAD                     TXREG           equ	4013	;# 
   878   000FAD                     TXREG1          equ	4013	;# 
   879   000FAE                     RCREG           equ	4014	;# 
   880   000FAE                     RCREG1          equ	4014	;# 
   881   000FAF                     SPBRG           equ	4015	;# 
   882   000FAF                     SPBRG1          equ	4015	;# 
   883   000FB0                     SPBRGH          equ	4016	;# 
   884   000FB1                     T3CON           equ	4017	;# 
   885   000FB2                     TMR3            equ	4018	;# 
   886   000FB2                     TMR3L           equ	4018	;# 
   887   000FB3                     TMR3H           equ	4019	;# 
   888   000FB4                     CMCON           equ	4020	;# 
   889   000FB5                     CVRCON          equ	4021	;# 
   890   000FB6                     ECCP1AS         equ	4022	;# 
   891   000FB6                     CCP1AS          equ	4022	;# 
   892   000FB7                     ECCP1DEL        equ	4023	;# 
   893   000FB7                     CCP1DEL         equ	4023	;# 
   894   000FB8                     BAUDCON         equ	4024	;# 
   895   000FB8                     BAUDCTL         equ	4024	;# 
   896   000FBA                     CCP2CON         equ	4026	;# 
   897   000FBB                     CCPR2           equ	4027	;# 
   898   000FBB                     CCPR2L          equ	4027	;# 
   899   000FBC                     CCPR2H          equ	4028	;# 
   900   000FBD                     CCP1CON         equ	4029	;# 
   901   000FBD                     ECCP1CON        equ	4029	;# 
   902   000FBE                     CCPR1           equ	4030	;# 
   903   000FBE                     CCPR1L          equ	4030	;# 
   904   000FBF                     CCPR1H          equ	4031	;# 
   905   000FC0                     ADCON2          equ	4032	;# 
   906   000FC1                     ADCON1          equ	4033	;# 
   907   000FC2                     ADCON0          equ	4034	;# 
   908   000FC3                     ADRES           equ	4035	;# 
   909   000FC3                     ADRESL          equ	4035	;# 
   910   000FC4                     ADRESH          equ	4036	;# 
   911   000FC5                     SSPCON2         equ	4037	;# 
   912   000FC6                     SSPCON1         equ	4038	;# 
   913   000FC7                     SSPSTAT         equ	4039	;# 
   914   000FC8                     SSPADD          equ	4040	;# 
   915   000FC9                     SSPBUF          equ	4041	;# 
   916   000FCA                     T2CON           equ	4042	;# 
   917   000FCB                     PR2             equ	4043	;# 
   918   000FCB                     MEMCON          equ	4043	;# 
   919   000FCC                     TMR2            equ	4044	;# 
   920   000FCD                     T1CON           equ	4045	;# 
   921   000FCE                     TMR1            equ	4046	;# 
   922   000FCE                     TMR1L           equ	4046	;# 
   923   000FCF                     TMR1H           equ	4047	;# 
   924   000FD0                     RCON            equ	4048	;# 
   925   000FD1                     WDTCON          equ	4049	;# 
   926   000FD2                     HLVDCON         equ	4050	;# 
   927   000FD2                     LVDCON          equ	4050	;# 
   928   000FD3                     OSCCON          equ	4051	;# 
   929   000FD5                     T0CON           equ	4053	;# 
   930   000FD6                     TMR0            equ	4054	;# 
   931   000FD6                     TMR0L           equ	4054	;# 
   932   000FD7                     TMR0H           equ	4055	;# 
   933   000FD8                     STATUS          equ	4056	;# 
   934   000FD9                     FSR2            equ	4057	;# 
   935   000FD9                     FSR2L           equ	4057	;# 
   936   000FDA                     FSR2H           equ	4058	;# 
   937   000FDB                     PLUSW2          equ	4059	;# 
   938   000FDC                     PREINC2         equ	4060	;# 
   939   000FDD                     POSTDEC2        equ	4061	;# 
   940   000FDE                     POSTINC2        equ	4062	;# 
   941   000FDF                     INDF2           equ	4063	;# 
   942   000FE0                     BSR             equ	4064	;# 
   943   000FE1                     FSR1            equ	4065	;# 
   944   000FE1                     FSR1L           equ	4065	;# 
   945   000FE2                     FSR1H           equ	4066	;# 
   946   000FE3                     PLUSW1          equ	4067	;# 
   947   000FE4                     PREINC1         equ	4068	;# 
   948   000FE5                     POSTDEC1        equ	4069	;# 
   949   000FE6                     POSTINC1        equ	4070	;# 
   950   000FE7                     INDF1           equ	4071	;# 
   951   000FE8                     WREG            equ	4072	;# 
   952   000FE9                     FSR0            equ	4073	;# 
   953   000FE9                     FSR0L           equ	4073	;# 
   954   000FEA                     FSR0H           equ	4074	;# 
   955   000FEB                     PLUSW0          equ	4075	;# 
   956   000FEC                     PREINC0         equ	4076	;# 
   957   000FED                     POSTDEC0        equ	4077	;# 
   958   000FEE                     POSTINC0        equ	4078	;# 
   959   000FEF                     INDF0           equ	4079	;# 
   960   000FF0                     INTCON3         equ	4080	;# 
   961   000FF1                     INTCON2         equ	4081	;# 
   962   000FF2                     INTCON          equ	4082	;# 
   963   000FF3                     PROD            equ	4083	;# 
   964   000FF3                     PRODL           equ	4083	;# 
   965   000FF4                     PRODH           equ	4084	;# 
   966   000FF5                     TABLAT          equ	4085	;# 
   967   000FF6                     TBLPTR          equ	4086	;# 
   968   000FF6                     TBLPTRL         equ	4086	;# 
   969   000FF7                     TBLPTRH         equ	4087	;# 
   970   000FF8                     TBLPTRU         equ	4088	;# 
   971   000FF9                     PCLAT           equ	4089	;# 
   972   000FF9                     PC              equ	4089	;# 
   973   000FF9                     PCL             equ	4089	;# 
   974   000FFA                     PCLATH          equ	4090	;# 
   975   000FFB                     PCLATU          equ	4091	;# 
   976   000FFC                     STKPTR          equ	4092	;# 
   977   000FFD                     TOS             equ	4093	;# 
   978   000FFD                     TOSL            equ	4093	;# 
   979   000FFE                     TOSH            equ	4094	;# 
   980   000FFF                     TOSU            equ	4095	;# 
   981   000F62                     SPPDATA         equ	3938	;# 
   982   000F63                     SPPCFG          equ	3939	;# 
   983   000F64                     SPPEPS          equ	3940	;# 
   984   000F65                     SPPCON          equ	3941	;# 
   985   000F66                     UFRM            equ	3942	;# 
   986   000F66                     UFRML           equ	3942	;# 
   987   000F67                     UFRMH           equ	3943	;# 
   988   000F68                     UIR             equ	3944	;# 
   989   000F69                     UIE             equ	3945	;# 
   990   000F6A                     UEIR            equ	3946	;# 
   991   000F6B                     UEIE            equ	3947	;# 
   992   000F6C                     USTAT           equ	3948	;# 
   993   000F6D                     UCON            equ	3949	;# 
   994   000F6E                     UADDR           equ	3950	;# 
   995   000F6F                     UCFG            equ	3951	;# 
   996   000F70                     UEP0            equ	3952	;# 
   997   000F71                     UEP1            equ	3953	;# 
   998   000F72                     UEP2            equ	3954	;# 
   999   000F73                     UEP3            equ	3955	;# 
  1000   000F74                     UEP4            equ	3956	;# 
  1001   000F75                     UEP5            equ	3957	;# 
  1002   000F76                     UEP6            equ	3958	;# 
  1003   000F77                     UEP7            equ	3959	;# 
  1004   000F78                     UEP8            equ	3960	;# 
  1005   000F79                     UEP9            equ	3961	;# 
  1006   000F7A                     UEP10           equ	3962	;# 
  1007   000F7B                     UEP11           equ	3963	;# 
  1008   000F7C                     UEP12           equ	3964	;# 
  1009   000F7D                     UEP13           equ	3965	;# 
  1010   000F7E                     UEP14           equ	3966	;# 
  1011   000F7F                     UEP15           equ	3967	;# 
  1012   000F80                     PORTA           equ	3968	;# 
  1013   000F81                     PORTB           equ	3969	;# 
  1014   000F82                     PORTC           equ	3970	;# 
  1015   000F83                     PORTD           equ	3971	;# 
  1016   000F84                     PORTE           equ	3972	;# 
  1017   000F89                     LATA            equ	3977	;# 
  1018   000F8A                     LATB            equ	3978	;# 
  1019   000F8B                     LATC            equ	3979	;# 
  1020   000F8C                     LATD            equ	3980	;# 
  1021   000F8D                     LATE            equ	3981	;# 
  1022   000F92                     TRISA           equ	3986	;# 
  1023   000F92                     DDRA            equ	3986	;# 
  1024   000F93                     TRISB           equ	3987	;# 
  1025   000F93                     DDRB            equ	3987	;# 
  1026   000F94                     TRISC           equ	3988	;# 
  1027   000F94                     DDRC            equ	3988	;# 
  1028   000F95                     TRISD           equ	3989	;# 
  1029   000F95                     DDRD            equ	3989	;# 
  1030   000F96                     TRISE           equ	3990	;# 
  1031   000F96                     DDRE            equ	3990	;# 
  1032   000F9B                     OSCTUNE         equ	3995	;# 
  1033   000F9D                     PIE1            equ	3997	;# 
  1034   000F9E                     PIR1            equ	3998	;# 
  1035   000F9F                     IPR1            equ	3999	;# 
  1036   000FA0                     PIE2            equ	4000	;# 
  1037   000FA1                     PIR2            equ	4001	;# 
  1038   000FA2                     IPR2            equ	4002	;# 
  1039   000FA6                     EECON1          equ	4006	;# 
  1040   000FA7                     EECON2          equ	4007	;# 
  1041   000FA8                     EEDATA          equ	4008	;# 
  1042   000FA9                     EEADR           equ	4009	;# 
  1043   000FAB                     RCSTA           equ	4011	;# 
  1044   000FAB                     RCSTA1          equ	4011	;# 
  1045   000FAC                     TXSTA           equ	4012	;# 
  1046   000FAC                     TXSTA1          equ	4012	;# 
  1047   000FAD                     TXREG           equ	4013	;# 
  1048   000FAD                     TXREG1          equ	4013	;# 
  1049   000FAE                     RCREG           equ	4014	;# 
  1050   000FAE                     RCREG1          equ	4014	;# 
  1051   000FAF                     SPBRG           equ	4015	;# 
  1052   000FAF                     SPBRG1          equ	4015	;# 
  1053   000FB0                     SPBRGH          equ	4016	;# 
  1054   000FB1                     T3CON           equ	4017	;# 
  1055   000FB2                     TMR3            equ	4018	;# 
  1056   000FB2                     TMR3L           equ	4018	;# 
  1057   000FB3                     TMR3H           equ	4019	;# 
  1058   000FB4                     CMCON           equ	4020	;# 
  1059   000FB5                     CVRCON          equ	4021	;# 
  1060   000FB6                     ECCP1AS         equ	4022	;# 
  1061   000FB6                     CCP1AS          equ	4022	;# 
  1062   000FB7                     ECCP1DEL        equ	4023	;# 
  1063   000FB7                     CCP1DEL         equ	4023	;# 
  1064   000FB8                     BAUDCON         equ	4024	;# 
  1065   000FB8                     BAUDCTL         equ	4024	;# 
  1066   000FBA                     CCP2CON         equ	4026	;# 
  1067   000FBB                     CCPR2           equ	4027	;# 
  1068   000FBB                     CCPR2L          equ	4027	;# 
  1069   000FBC                     CCPR2H          equ	4028	;# 
  1070   000FBD                     CCP1CON         equ	4029	;# 
  1071   000FBD                     ECCP1CON        equ	4029	;# 
  1072   000FBE                     CCPR1           equ	4030	;# 
  1073   000FBE                     CCPR1L          equ	4030	;# 
  1074   000FBF                     CCPR1H          equ	4031	;# 
  1075   000FC0                     ADCON2          equ	4032	;# 
  1076   000FC1                     ADCON1          equ	4033	;# 
  1077   000FC2                     ADCON0          equ	4034	;# 
  1078   000FC3                     ADRES           equ	4035	;# 
  1079   000FC3                     ADRESL          equ	4035	;# 
  1080   000FC4                     ADRESH          equ	4036	;# 
  1081   000FC5                     SSPCON2         equ	4037	;# 
  1082   000FC6                     SSPCON1         equ	4038	;# 
  1083   000FC7                     SSPSTAT         equ	4039	;# 
  1084   000FC8                     SSPADD          equ	4040	;# 
  1085   000FC9                     SSPBUF          equ	4041	;# 
  1086   000FCA                     T2CON           equ	4042	;# 
  1087   000FCB                     PR2             equ	4043	;# 
  1088   000FCB                     MEMCON          equ	4043	;# 
  1089   000FCC                     TMR2            equ	4044	;# 
  1090   000FCD                     T1CON           equ	4045	;# 
  1091   000FCE                     TMR1            equ	4046	;# 
  1092   000FCE                     TMR1L           equ	4046	;# 
  1093   000FCF                     TMR1H           equ	4047	;# 
  1094   000FD0                     RCON            equ	4048	;# 
  1095   000FD1                     WDTCON          equ	4049	;# 
  1096   000FD2                     HLVDCON         equ	4050	;# 
  1097   000FD2                     LVDCON          equ	4050	;# 
  1098   000FD3                     OSCCON          equ	4051	;# 
  1099   000FD5                     T0CON           equ	4053	;# 
  1100   000FD6                     TMR0            equ	4054	;# 
  1101   000FD6                     TMR0L           equ	4054	;# 
  1102   000FD7                     TMR0H           equ	4055	;# 
  1103   000FD8                     STATUS          equ	4056	;# 
  1104   000FD9                     FSR2            equ	4057	;# 
  1105   000FD9                     FSR2L           equ	4057	;# 
  1106   000FDA                     FSR2H           equ	4058	;# 
  1107   000FDB                     PLUSW2          equ	4059	;# 
  1108   000FDC                     PREINC2         equ	4060	;# 
  1109   000FDD                     POSTDEC2        equ	4061	;# 
  1110   000FDE                     POSTINC2        equ	4062	;# 
  1111   000FDF                     INDF2           equ	4063	;# 
  1112   000FE0                     BSR             equ	4064	;# 
  1113   000FE1                     FSR1            equ	4065	;# 
  1114   000FE1                     FSR1L           equ	4065	;# 
  1115   000FE2                     FSR1H           equ	4066	;# 
  1116   000FE3                     PLUSW1          equ	4067	;# 
  1117   000FE4                     PREINC1         equ	4068	;# 
  1118   000FE5                     POSTDEC1        equ	4069	;# 
  1119   000FE6                     POSTINC1        equ	4070	;# 
  1120   000FE7                     INDF1           equ	4071	;# 
  1121   000FE8                     WREG            equ	4072	;# 
  1122   000FE9                     FSR0            equ	4073	;# 
  1123   000FE9                     FSR0L           equ	4073	;# 
  1124   000FEA                     FSR0H           equ	4074	;# 
  1125   000FEB                     PLUSW0          equ	4075	;# 
  1126   000FEC                     PREINC0         equ	4076	;# 
  1127   000FED                     POSTDEC0        equ	4077	;# 
  1128   000FEE                     POSTINC0        equ	4078	;# 
  1129   000FEF                     INDF0           equ	4079	;# 
  1130   000FF0                     INTCON3         equ	4080	;# 
  1131   000FF1                     INTCON2         equ	4081	;# 
  1132   000FF2                     INTCON          equ	4082	;# 
  1133   000FF3                     PROD            equ	4083	;# 
  1134   000FF3                     PRODL           equ	4083	;# 
  1135   000FF4                     PRODH           equ	4084	;# 
  1136   000FF5                     TABLAT          equ	4085	;# 
  1137   000FF6                     TBLPTR          equ	4086	;# 
  1138   000FF6                     TBLPTRL         equ	4086	;# 
  1139   000FF7                     TBLPTRH         equ	4087	;# 
  1140   000FF8                     TBLPTRU         equ	4088	;# 
  1141   000FF9                     PCLAT           equ	4089	;# 
  1142   000FF9                     PC              equ	4089	;# 
  1143   000FF9                     PCL             equ	4089	;# 
  1144   000FFA                     PCLATH          equ	4090	;# 
  1145   000FFB                     PCLATU          equ	4091	;# 
  1146   000FFC                     STKPTR          equ	4092	;# 
  1147   000FFD                     TOS             equ	4093	;# 
  1148   000FFD                     TOSL            equ	4093	;# 
  1149   000FFE                     TOSH            equ	4094	;# 
  1150   000FFF                     TOSU            equ	4095	;# 
  1151   000F62                     SPPDATA         equ	3938	;# 
  1152   000F63                     SPPCFG          equ	3939	;# 
  1153   000F64                     SPPEPS          equ	3940	;# 
  1154   000F65                     SPPCON          equ	3941	;# 
  1155   000F66                     UFRM            equ	3942	;# 
  1156   000F66                     UFRML           equ	3942	;# 
  1157   000F67                     UFRMH           equ	3943	;# 
  1158   000F68                     UIR             equ	3944	;# 
  1159   000F69                     UIE             equ	3945	;# 
  1160   000F6A                     UEIR            equ	3946	;# 
  1161   000F6B                     UEIE            equ	3947	;# 
  1162   000F6C                     USTAT           equ	3948	;# 
  1163   000F6D                     UCON            equ	3949	;# 
  1164   000F6E                     UADDR           equ	3950	;# 
  1165   000F6F                     UCFG            equ	3951	;# 
  1166   000F70                     UEP0            equ	3952	;# 
  1167   000F71                     UEP1            equ	3953	;# 
  1168   000F72                     UEP2            equ	3954	;# 
  1169   000F73                     UEP3            equ	3955	;# 
  1170   000F74                     UEP4            equ	3956	;# 
  1171   000F75                     UEP5            equ	3957	;# 
  1172   000F76                     UEP6            equ	3958	;# 
  1173   000F77                     UEP7            equ	3959	;# 
  1174   000F78                     UEP8            equ	3960	;# 
  1175   000F79                     UEP9            equ	3961	;# 
  1176   000F7A                     UEP10           equ	3962	;# 
  1177   000F7B                     UEP11           equ	3963	;# 
  1178   000F7C                     UEP12           equ	3964	;# 
  1179   000F7D                     UEP13           equ	3965	;# 
  1180   000F7E                     UEP14           equ	3966	;# 
  1181   000F7F                     UEP15           equ	3967	;# 
  1182   000F80                     PORTA           equ	3968	;# 
  1183   000F81                     PORTB           equ	3969	;# 
  1184   000F82                     PORTC           equ	3970	;# 
  1185   000F83                     PORTD           equ	3971	;# 
  1186   000F84                     PORTE           equ	3972	;# 
  1187   000F89                     LATA            equ	3977	;# 
  1188   000F8A                     LATB            equ	3978	;# 
  1189   000F8B                     LATC            equ	3979	;# 
  1190   000F8C                     LATD            equ	3980	;# 
  1191   000F8D                     LATE            equ	3981	;# 
  1192   000F92                     TRISA           equ	3986	;# 
  1193   000F92                     DDRA            equ	3986	;# 
  1194   000F93                     TRISB           equ	3987	;# 
  1195   000F93                     DDRB            equ	3987	;# 
  1196   000F94                     TRISC           equ	3988	;# 
  1197   000F94                     DDRC            equ	3988	;# 
  1198   000F95                     TRISD           equ	3989	;# 
  1199   000F95                     DDRD            equ	3989	;# 
  1200   000F96                     TRISE           equ	3990	;# 
  1201   000F96                     DDRE            equ	3990	;# 
  1202   000F9B                     OSCTUNE         equ	3995	;# 
  1203   000F9D                     PIE1            equ	3997	;# 
  1204   000F9E                     PIR1            equ	3998	;# 
  1205   000F9F                     IPR1            equ	3999	;# 
  1206   000FA0                     PIE2            equ	4000	;# 
  1207   000FA1                     PIR2            equ	4001	;# 
  1208   000FA2                     IPR2            equ	4002	;# 
  1209   000FA6                     EECON1          equ	4006	;# 
  1210   000FA7                     EECON2          equ	4007	;# 
  1211   000FA8                     EEDATA          equ	4008	;# 
  1212   000FA9                     EEADR           equ	4009	;# 
  1213   000FAB                     RCSTA           equ	4011	;# 
  1214   000FAB                     RCSTA1          equ	4011	;# 
  1215   000FAC                     TXSTA           equ	4012	;# 
  1216   000FAC                     TXSTA1          equ	4012	;# 
  1217   000FAD                     TXREG           equ	4013	;# 
  1218   000FAD                     TXREG1          equ	4013	;# 
  1219   000FAE                     RCREG           equ	4014	;# 
  1220   000FAE                     RCREG1          equ	4014	;# 
  1221   000FAF                     SPBRG           equ	4015	;# 
  1222   000FAF                     SPBRG1          equ	4015	;# 
  1223   000FB0                     SPBRGH          equ	4016	;# 
  1224   000FB1                     T3CON           equ	4017	;# 
  1225   000FB2                     TMR3            equ	4018	;# 
  1226   000FB2                     TMR3L           equ	4018	;# 
  1227   000FB3                     TMR3H           equ	4019	;# 
  1228   000FB4                     CMCON           equ	4020	;# 
  1229   000FB5                     CVRCON          equ	4021	;# 
  1230   000FB6                     ECCP1AS         equ	4022	;# 
  1231   000FB6                     CCP1AS          equ	4022	;# 
  1232   000FB7                     ECCP1DEL        equ	4023	;# 
  1233   000FB7                     CCP1DEL         equ	4023	;# 
  1234   000FB8                     BAUDCON         equ	4024	;# 
  1235   000FB8                     BAUDCTL         equ	4024	;# 
  1236   000FBA                     CCP2CON         equ	4026	;# 
  1237   000FBB                     CCPR2           equ	4027	;# 
  1238   000FBB                     CCPR2L          equ	4027	;# 
  1239   000FBC                     CCPR2H          equ	4028	;# 
  1240   000FBD                     CCP1CON         equ	4029	;# 
  1241   000FBD                     ECCP1CON        equ	4029	;# 
  1242   000FBE                     CCPR1           equ	4030	;# 
  1243   000FBE                     CCPR1L          equ	4030	;# 
  1244   000FBF                     CCPR1H          equ	4031	;# 
  1245   000FC0                     ADCON2          equ	4032	;# 
  1246   000FC1                     ADCON1          equ	4033	;# 
  1247   000FC2                     ADCON0          equ	4034	;# 
  1248   000FC3                     ADRES           equ	4035	;# 
  1249   000FC3                     ADRESL          equ	4035	;# 
  1250   000FC4                     ADRESH          equ	4036	;# 
  1251   000FC5                     SSPCON2         equ	4037	;# 
  1252   000FC6                     SSPCON1         equ	4038	;# 
  1253   000FC7                     SSPSTAT         equ	4039	;# 
  1254   000FC8                     SSPADD          equ	4040	;# 
  1255   000FC9                     SSPBUF          equ	4041	;# 
  1256   000FCA                     T2CON           equ	4042	;# 
  1257   000FCB                     PR2             equ	4043	;# 
  1258   000FCB                     MEMCON          equ	4043	;# 
  1259   000FCC                     TMR2            equ	4044	;# 
  1260   000FCD                     T1CON           equ	4045	;# 
  1261   000FCE                     TMR1            equ	4046	;# 
  1262   000FCE                     TMR1L           equ	4046	;# 
  1263   000FCF                     TMR1H           equ	4047	;# 
  1264   000FD0                     RCON            equ	4048	;# 
  1265   000FD1                     WDTCON          equ	4049	;# 
  1266   000FD2                     HLVDCON         equ	4050	;# 
  1267   000FD2                     LVDCON          equ	4050	;# 
  1268   000FD3                     OSCCON          equ	4051	;# 
  1269   000FD5                     T0CON           equ	4053	;# 
  1270   000FD6                     TMR0            equ	4054	;# 
  1271   000FD6                     TMR0L           equ	4054	;# 
  1272   000FD7                     TMR0H           equ	4055	;# 
  1273   000FD8                     STATUS          equ	4056	;# 
  1274   000FD9                     FSR2            equ	4057	;# 
  1275   000FD9                     FSR2L           equ	4057	;# 
  1276   000FDA                     FSR2H           equ	4058	;# 
  1277   000FDB                     PLUSW2          equ	4059	;# 
  1278   000FDC                     PREINC2         equ	4060	;# 
  1279   000FDD                     POSTDEC2        equ	4061	;# 
  1280   000FDE                     POSTINC2        equ	4062	;# 
  1281   000FDF                     INDF2           equ	4063	;# 
  1282   000FE0                     BSR             equ	4064	;# 
  1283   000FE1                     FSR1            equ	4065	;# 
  1284   000FE1                     FSR1L           equ	4065	;# 
  1285   000FE2                     FSR1H           equ	4066	;# 
  1286   000FE3                     PLUSW1          equ	4067	;# 
  1287   000FE4                     PREINC1         equ	4068	;# 
  1288   000FE5                     POSTDEC1        equ	4069	;# 
  1289   000FE6                     POSTINC1        equ	4070	;# 
  1290   000FE7                     INDF1           equ	4071	;# 
  1291   000FE8                     WREG            equ	4072	;# 
  1292   000FE9                     FSR0            equ	4073	;# 
  1293   000FE9                     FSR0L           equ	4073	;# 
  1294   000FEA                     FSR0H           equ	4074	;# 
  1295   000FEB                     PLUSW0          equ	4075	;# 
  1296   000FEC                     PREINC0         equ	4076	;# 
  1297   000FED                     POSTDEC0        equ	4077	;# 
  1298   000FEE                     POSTINC0        equ	4078	;# 
  1299   000FEF                     INDF0           equ	4079	;# 
  1300   000FF0                     INTCON3         equ	4080	;# 
  1301   000FF1                     INTCON2         equ	4081	;# 
  1302   000FF2                     INTCON          equ	4082	;# 
  1303   000FF3                     PROD            equ	4083	;# 
  1304   000FF3                     PRODL           equ	4083	;# 
  1305   000FF4                     PRODH           equ	4084	;# 
  1306   000FF5                     TABLAT          equ	4085	;# 
  1307   000FF6                     TBLPTR          equ	4086	;# 
  1308   000FF6                     TBLPTRL         equ	4086	;# 
  1309   000FF7                     TBLPTRH         equ	4087	;# 
  1310   000FF8                     TBLPTRU         equ	4088	;# 
  1311   000FF9                     PCLAT           equ	4089	;# 
  1312   000FF9                     PC              equ	4089	;# 
  1313   000FF9                     PCL             equ	4089	;# 
  1314   000FFA                     PCLATH          equ	4090	;# 
  1315   000FFB                     PCLATU          equ	4091	;# 
  1316   000FFC                     STKPTR          equ	4092	;# 
  1317   000FFD                     TOS             equ	4093	;# 
  1318   000FFD                     TOSL            equ	4093	;# 
  1319   000FFE                     TOSH            equ	4094	;# 
  1320   000FFF                     TOSU            equ	4095	;# 
  1321   000F62                     SPPDATA         equ	3938	;# 
  1322   000F63                     SPPCFG          equ	3939	;# 
  1323   000F64                     SPPEPS          equ	3940	;# 
  1324   000F65                     SPPCON          equ	3941	;# 
  1325   000F66                     UFRM            equ	3942	;# 
  1326   000F66                     UFRML           equ	3942	;# 
  1327   000F67                     UFRMH           equ	3943	;# 
  1328   000F68                     UIR             equ	3944	;# 
  1329   000F69                     UIE             equ	3945	;# 
  1330   000F6A                     UEIR            equ	3946	;# 
  1331   000F6B                     UEIE            equ	3947	;# 
  1332   000F6C                     USTAT           equ	3948	;# 
  1333   000F6D                     UCON            equ	3949	;# 
  1334   000F6E                     UADDR           equ	3950	;# 
  1335   000F6F                     UCFG            equ	3951	;# 
  1336   000F70                     UEP0            equ	3952	;# 
  1337   000F71                     UEP1            equ	3953	;# 
  1338   000F72                     UEP2            equ	3954	;# 
  1339   000F73                     UEP3            equ	3955	;# 
  1340   000F74                     UEP4            equ	3956	;# 
  1341   000F75                     UEP5            equ	3957	;# 
  1342   000F76                     UEP6            equ	3958	;# 
  1343   000F77                     UEP7            equ	3959	;# 
  1344   000F78                     UEP8            equ	3960	;# 
  1345   000F79                     UEP9            equ	3961	;# 
  1346   000F7A                     UEP10           equ	3962	;# 
  1347   000F7B                     UEP11           equ	3963	;# 
  1348   000F7C                     UEP12           equ	3964	;# 
  1349   000F7D                     UEP13           equ	3965	;# 
  1350   000F7E                     UEP14           equ	3966	;# 
  1351   000F7F                     UEP15           equ	3967	;# 
  1352   000F80                     PORTA           equ	3968	;# 
  1353   000F81                     PORTB           equ	3969	;# 
  1354   000F82                     PORTC           equ	3970	;# 
  1355   000F83                     PORTD           equ	3971	;# 
  1356   000F84                     PORTE           equ	3972	;# 
  1357   000F89                     LATA            equ	3977	;# 
  1358   000F8A                     LATB            equ	3978	;# 
  1359   000F8B                     LATC            equ	3979	;# 
  1360   000F8C                     LATD            equ	3980	;# 
  1361   000F8D                     LATE            equ	3981	;# 
  1362   000F92                     TRISA           equ	3986	;# 
  1363   000F92                     DDRA            equ	3986	;# 
  1364   000F93                     TRISB           equ	3987	;# 
  1365   000F93                     DDRB            equ	3987	;# 
  1366   000F94                     TRISC           equ	3988	;# 
  1367   000F94                     DDRC            equ	3988	;# 
  1368   000F95                     TRISD           equ	3989	;# 
  1369   000F95                     DDRD            equ	3989	;# 
  1370   000F96                     TRISE           equ	3990	;# 
  1371   000F96                     DDRE            equ	3990	;# 
  1372   000F9B                     OSCTUNE         equ	3995	;# 
  1373   000F9D                     PIE1            equ	3997	;# 
  1374   000F9E                     PIR1            equ	3998	;# 
  1375   000F9F                     IPR1            equ	3999	;# 
  1376   000FA0                     PIE2            equ	4000	;# 
  1377   000FA1                     PIR2            equ	4001	;# 
  1378   000FA2                     IPR2            equ	4002	;# 
  1379   000FA6                     EECON1          equ	4006	;# 
  1380   000FA7                     EECON2          equ	4007	;# 
  1381   000FA8                     EEDATA          equ	4008	;# 
  1382   000FA9                     EEADR           equ	4009	;# 
  1383   000FAB                     RCSTA           equ	4011	;# 
  1384   000FAB                     RCSTA1          equ	4011	;# 
  1385   000FAC                     TXSTA           equ	4012	;# 
  1386   000FAC                     TXSTA1          equ	4012	;# 
  1387   000FAD                     TXREG           equ	4013	;# 
  1388   000FAD                     TXREG1          equ	4013	;# 
  1389   000FAE                     RCREG           equ	4014	;# 
  1390   000FAE                     RCREG1          equ	4014	;# 
  1391   000FAF                     SPBRG           equ	4015	;# 
  1392   000FAF                     SPBRG1          equ	4015	;# 
  1393   000FB0                     SPBRGH          equ	4016	;# 
  1394   000FB1                     T3CON           equ	4017	;# 
  1395   000FB2                     TMR3            equ	4018	;# 
  1396   000FB2                     TMR3L           equ	4018	;# 
  1397   000FB3                     TMR3H           equ	4019	;# 
  1398   000FB4                     CMCON           equ	4020	;# 
  1399   000FB5                     CVRCON          equ	4021	;# 
  1400   000FB6                     ECCP1AS         equ	4022	;# 
  1401   000FB6                     CCP1AS          equ	4022	;# 
  1402   000FB7                     ECCP1DEL        equ	4023	;# 
  1403   000FB7                     CCP1DEL         equ	4023	;# 
  1404   000FB8                     BAUDCON         equ	4024	;# 
  1405   000FB8                     BAUDCTL         equ	4024	;# 
  1406   000FBA                     CCP2CON         equ	4026	;# 
  1407   000FBB                     CCPR2           equ	4027	;# 
  1408   000FBB                     CCPR2L          equ	4027	;# 
  1409   000FBC                     CCPR2H          equ	4028	;# 
  1410   000FBD                     CCP1CON         equ	4029	;# 
  1411   000FBD                     ECCP1CON        equ	4029	;# 
  1412   000FBE                     CCPR1           equ	4030	;# 
  1413   000FBE                     CCPR1L          equ	4030	;# 
  1414   000FBF                     CCPR1H          equ	4031	;# 
  1415   000FC0                     ADCON2          equ	4032	;# 
  1416   000FC1                     ADCON1          equ	4033	;# 
  1417   000FC2                     ADCON0          equ	4034	;# 
  1418   000FC3                     ADRES           equ	4035	;# 
  1419   000FC3                     ADRESL          equ	4035	;# 
  1420   000FC4                     ADRESH          equ	4036	;# 
  1421   000FC5                     SSPCON2         equ	4037	;# 
  1422   000FC6                     SSPCON1         equ	4038	;# 
  1423   000FC7                     SSPSTAT         equ	4039	;# 
  1424   000FC8                     SSPADD          equ	4040	;# 
  1425   000FC9                     SSPBUF          equ	4041	;# 
  1426   000FCA                     T2CON           equ	4042	;# 
  1427   000FCB                     PR2             equ	4043	;# 
  1428   000FCB                     MEMCON          equ	4043	;# 
  1429   000FCC                     TMR2            equ	4044	;# 
  1430   000FCD                     T1CON           equ	4045	;# 
  1431   000FCE                     TMR1            equ	4046	;# 
  1432   000FCE                     TMR1L           equ	4046	;# 
  1433   000FCF                     TMR1H           equ	4047	;# 
  1434   000FD0                     RCON            equ	4048	;# 
  1435   000FD1                     WDTCON          equ	4049	;# 
  1436   000FD2                     HLVDCON         equ	4050	;# 
  1437   000FD2                     LVDCON          equ	4050	;# 
  1438   000FD3                     OSCCON          equ	4051	;# 
  1439   000FD5                     T0CON           equ	4053	;# 
  1440   000FD6                     TMR0            equ	4054	;# 
  1441   000FD6                     TMR0L           equ	4054	;# 
  1442   000FD7                     TMR0H           equ	4055	;# 
  1443   000FD8                     STATUS          equ	4056	;# 
  1444   000FD9                     FSR2            equ	4057	;# 
  1445   000FD9                     FSR2L           equ	4057	;# 
  1446   000FDA                     FSR2H           equ	4058	;# 
  1447   000FDB                     PLUSW2          equ	4059	;# 
  1448   000FDC                     PREINC2         equ	4060	;# 
  1449   000FDD                     POSTDEC2        equ	4061	;# 
  1450   000FDE                     POSTINC2        equ	4062	;# 
  1451   000FDF                     INDF2           equ	4063	;# 
  1452   000FE0                     BSR             equ	4064	;# 
  1453   000FE1                     FSR1            equ	4065	;# 
  1454   000FE1                     FSR1L           equ	4065	;# 
  1455   000FE2                     FSR1H           equ	4066	;# 
  1456   000FE3                     PLUSW1          equ	4067	;# 
  1457   000FE4                     PREINC1         equ	4068	;# 
  1458   000FE5                     POSTDEC1        equ	4069	;# 
  1459   000FE6                     POSTINC1        equ	4070	;# 
  1460   000FE7                     INDF1           equ	4071	;# 
  1461   000FE8                     WREG            equ	4072	;# 
  1462   000FE9                     FSR0            equ	4073	;# 
  1463   000FE9                     FSR0L           equ	4073	;# 
  1464   000FEA                     FSR0H           equ	4074	;# 
  1465   000FEB                     PLUSW0          equ	4075	;# 
  1466   000FEC                     PREINC0         equ	4076	;# 
  1467   000FED                     POSTDEC0        equ	4077	;# 
  1468   000FEE                     POSTINC0        equ	4078	;# 
  1469   000FEF                     INDF0           equ	4079	;# 
  1470   000FF0                     INTCON3         equ	4080	;# 
  1471   000FF1                     INTCON2         equ	4081	;# 
  1472   000FF2                     INTCON          equ	4082	;# 
  1473   000FF3                     PROD            equ	4083	;# 
  1474   000FF3                     PRODL           equ	4083	;# 
  1475   000FF4                     PRODH           equ	4084	;# 
  1476   000FF5                     TABLAT          equ	4085	;# 
  1477   000FF6                     TBLPTR          equ	4086	;# 
  1478   000FF6                     TBLPTRL         equ	4086	;# 
  1479   000FF7                     TBLPTRH         equ	4087	;# 
  1480   000FF8                     TBLPTRU         equ	4088	;# 
  1481   000FF9                     PCLAT           equ	4089	;# 
  1482   000FF9                     PC              equ	4089	;# 
  1483   000FF9                     PCL             equ	4089	;# 
  1484   000FFA                     PCLATH          equ	4090	;# 
  1485   000FFB                     PCLATU          equ	4091	;# 
  1486   000FFC                     STKPTR          equ	4092	;# 
  1487   000FFD                     TOS             equ	4093	;# 
  1488   000FFD                     TOSL            equ	4093	;# 
  1489   000FFE                     TOSH            equ	4094	;# 
  1490   000FFF                     TOSU            equ	4095	;# 
  1491   000F62                     SPPDATA         equ	3938	;# 
  1492   000F63                     SPPCFG          equ	3939	;# 
  1493   000F64                     SPPEPS          equ	3940	;# 
  1494   000F65                     SPPCON          equ	3941	;# 
  1495   000F66                     UFRM            equ	3942	;# 
  1496   000F66                     UFRML           equ	3942	;# 
  1497   000F67                     UFRMH           equ	3943	;# 
  1498   000F68                     UIR             equ	3944	;# 
  1499   000F69                     UIE             equ	3945	;# 
  1500   000F6A                     UEIR            equ	3946	;# 
  1501   000F6B                     UEIE            equ	3947	;# 
  1502   000F6C                     USTAT           equ	3948	;# 
  1503   000F6D                     UCON            equ	3949	;# 
  1504   000F6E                     UADDR           equ	3950	;# 
  1505   000F6F                     UCFG            equ	3951	;# 
  1506   000F70                     UEP0            equ	3952	;# 
  1507   000F71                     UEP1            equ	3953	;# 
  1508   000F72                     UEP2            equ	3954	;# 
  1509   000F73                     UEP3            equ	3955	;# 
  1510   000F74                     UEP4            equ	3956	;# 
  1511   000F75                     UEP5            equ	3957	;# 
  1512   000F76                     UEP6            equ	3958	;# 
  1513   000F77                     UEP7            equ	3959	;# 
  1514   000F78                     UEP8            equ	3960	;# 
  1515   000F79                     UEP9            equ	3961	;# 
  1516   000F7A                     UEP10           equ	3962	;# 
  1517   000F7B                     UEP11           equ	3963	;# 
  1518   000F7C                     UEP12           equ	3964	;# 
  1519   000F7D                     UEP13           equ	3965	;# 
  1520   000F7E                     UEP14           equ	3966	;# 
  1521   000F7F                     UEP15           equ	3967	;# 
  1522   000F80                     PORTA           equ	3968	;# 
  1523   000F81                     PORTB           equ	3969	;# 
  1524   000F82                     PORTC           equ	3970	;# 
  1525   000F83                     PORTD           equ	3971	;# 
  1526   000F84                     PORTE           equ	3972	;# 
  1527   000F89                     LATA            equ	3977	;# 
  1528   000F8A                     LATB            equ	3978	;# 
  1529   000F8B                     LATC            equ	3979	;# 
  1530   000F8C                     LATD            equ	3980	;# 
  1531   000F8D                     LATE            equ	3981	;# 
  1532   000F92                     TRISA           equ	3986	;# 
  1533   000F92                     DDRA            equ	3986	;# 
  1534   000F93                     TRISB           equ	3987	;# 
  1535   000F93                     DDRB            equ	3987	;# 
  1536   000F94                     TRISC           equ	3988	;# 
  1537   000F94                     DDRC            equ	3988	;# 
  1538   000F95                     TRISD           equ	3989	;# 
  1539   000F95                     DDRD            equ	3989	;# 
  1540   000F96                     TRISE           equ	3990	;# 
  1541   000F96                     DDRE            equ	3990	;# 
  1542   000F9B                     OSCTUNE         equ	3995	;# 
  1543   000F9D                     PIE1            equ	3997	;# 
  1544   000F9E                     PIR1            equ	3998	;# 
  1545   000F9F                     IPR1            equ	3999	;# 
  1546   000FA0                     PIE2            equ	4000	;# 
  1547   000FA1                     PIR2            equ	4001	;# 
  1548   000FA2                     IPR2            equ	4002	;# 
  1549   000FA6                     EECON1          equ	4006	;# 
  1550   000FA7                     EECON2          equ	4007	;# 
  1551   000FA8                     EEDATA          equ	4008	;# 
  1552   000FA9                     EEADR           equ	4009	;# 
  1553   000FAB                     RCSTA           equ	4011	;# 
  1554   000FAB                     RCSTA1          equ	4011	;# 
  1555   000FAC                     TXSTA           equ	4012	;# 
  1556   000FAC                     TXSTA1          equ	4012	;# 
  1557   000FAD                     TXREG           equ	4013	;# 
  1558   000FAD                     TXREG1          equ	4013	;# 
  1559   000FAE                     RCREG           equ	4014	;# 
  1560   000FAE                     RCREG1          equ	4014	;# 
  1561   000FAF                     SPBRG           equ	4015	;# 
  1562   000FAF                     SPBRG1          equ	4015	;# 
  1563   000FB0                     SPBRGH          equ	4016	;# 
  1564   000FB1                     T3CON           equ	4017	;# 
  1565   000FB2                     TMR3            equ	4018	;# 
  1566   000FB2                     TMR3L           equ	4018	;# 
  1567   000FB3                     TMR3H           equ	4019	;# 
  1568   000FB4                     CMCON           equ	4020	;# 
  1569   000FB5                     CVRCON          equ	4021	;# 
  1570   000FB6                     ECCP1AS         equ	4022	;# 
  1571   000FB6                     CCP1AS          equ	4022	;# 
  1572   000FB7                     ECCP1DEL        equ	4023	;# 
  1573   000FB7                     CCP1DEL         equ	4023	;# 
  1574   000FB8                     BAUDCON         equ	4024	;# 
  1575   000FB8                     BAUDCTL         equ	4024	;# 
  1576   000FBA                     CCP2CON         equ	4026	;# 
  1577   000FBB                     CCPR2           equ	4027	;# 
  1578   000FBB                     CCPR2L          equ	4027	;# 
  1579   000FBC                     CCPR2H          equ	4028	;# 
  1580   000FBD                     CCP1CON         equ	4029	;# 
  1581   000FBD                     ECCP1CON        equ	4029	;# 
  1582   000FBE                     CCPR1           equ	4030	;# 
  1583   000FBE                     CCPR1L          equ	4030	;# 
  1584   000FBF                     CCPR1H          equ	4031	;# 
  1585   000FC0                     ADCON2          equ	4032	;# 
  1586   000FC1                     ADCON1          equ	4033	;# 
  1587   000FC2                     ADCON0          equ	4034	;# 
  1588   000FC3                     ADRES           equ	4035	;# 
  1589   000FC3                     ADRESL          equ	4035	;# 
  1590   000FC4                     ADRESH          equ	4036	;# 
  1591   000FC5                     SSPCON2         equ	4037	;# 
  1592   000FC6                     SSPCON1         equ	4038	;# 
  1593   000FC7                     SSPSTAT         equ	4039	;# 
  1594   000FC8                     SSPADD          equ	4040	;# 
  1595   000FC9                     SSPBUF          equ	4041	;# 
  1596   000FCA                     T2CON           equ	4042	;# 
  1597   000FCB                     PR2             equ	4043	;# 
  1598   000FCB                     MEMCON          equ	4043	;# 
  1599   000FCC                     TMR2            equ	4044	;# 
  1600   000FCD                     T1CON           equ	4045	;# 
  1601   000FCE                     TMR1            equ	4046	;# 
  1602   000FCE                     TMR1L           equ	4046	;# 
  1603   000FCF                     TMR1H           equ	4047	;# 
  1604   000FD0                     RCON            equ	4048	;# 
  1605   000FD1                     WDTCON          equ	4049	;# 
  1606   000FD2                     HLVDCON         equ	4050	;# 
  1607   000FD2                     LVDCON          equ	4050	;# 
  1608   000FD3                     OSCCON          equ	4051	;# 
  1609   000FD5                     T0CON           equ	4053	;# 
  1610   000FD6                     TMR0            equ	4054	;# 
  1611   000FD6                     TMR0L           equ	4054	;# 
  1612   000FD7                     TMR0H           equ	4055	;# 
  1613   000FD8                     STATUS          equ	4056	;# 
  1614   000FD9                     FSR2            equ	4057	;# 
  1615   000FD9                     FSR2L           equ	4057	;# 
  1616   000FDA                     FSR2H           equ	4058	;# 
  1617   000FDB                     PLUSW2          equ	4059	;# 
  1618   000FDC                     PREINC2         equ	4060	;# 
  1619   000FDD                     POSTDEC2        equ	4061	;# 
  1620   000FDE                     POSTINC2        equ	4062	;# 
  1621   000FDF                     INDF2           equ	4063	;# 
  1622   000FE0                     BSR             equ	4064	;# 
  1623   000FE1                     FSR1            equ	4065	;# 
  1624   000FE1                     FSR1L           equ	4065	;# 
  1625   000FE2                     FSR1H           equ	4066	;# 
  1626   000FE3                     PLUSW1          equ	4067	;# 
  1627   000FE4                     PREINC1         equ	4068	;# 
  1628   000FE5                     POSTDEC1        equ	4069	;# 
  1629   000FE6                     POSTINC1        equ	4070	;# 
  1630   000FE7                     INDF1           equ	4071	;# 
  1631   000FE8                     WREG            equ	4072	;# 
  1632   000FE9                     FSR0            equ	4073	;# 
  1633   000FE9                     FSR0L           equ	4073	;# 
  1634   000FEA                     FSR0H           equ	4074	;# 
  1635   000FEB                     PLUSW0          equ	4075	;# 
  1636   000FEC                     PREINC0         equ	4076	;# 
  1637   000FED                     POSTDEC0        equ	4077	;# 
  1638   000FEE                     POSTINC0        equ	4078	;# 
  1639   000FEF                     INDF0           equ	4079	;# 
  1640   000FF0                     INTCON3         equ	4080	;# 
  1641   000FF1                     INTCON2         equ	4081	;# 
  1642   000FF2                     INTCON          equ	4082	;# 
  1643   000FF3                     PROD            equ	4083	;# 
  1644   000FF3                     PRODL           equ	4083	;# 
  1645   000FF4                     PRODH           equ	4084	;# 
  1646   000FF5                     TABLAT          equ	4085	;# 
  1647   000FF6                     TBLPTR          equ	4086	;# 
  1648   000FF6                     TBLPTRL         equ	4086	;# 
  1649   000FF7                     TBLPTRH         equ	4087	;# 
  1650   000FF8                     TBLPTRU         equ	4088	;# 
  1651   000FF9                     PCLAT           equ	4089	;# 
  1652   000FF9                     PC              equ	4089	;# 
  1653   000FF9                     PCL             equ	4089	;# 
  1654   000FFA                     PCLATH          equ	4090	;# 
  1655   000FFB                     PCLATU          equ	4091	;# 
  1656   000FFC                     STKPTR          equ	4092	;# 
  1657   000FFD                     TOS             equ	4093	;# 
  1658   000FFD                     TOSL            equ	4093	;# 
  1659   000FFE                     TOSH            equ	4094	;# 
  1660   000FFF                     TOSU            equ	4095	;# 
  1661                           
  1662                           ; _pSegA loaded to wtemp22
  1663                           ; _pSegA loaded to wtemp22
  1664                           ; _pSegA loaded to wtemp22
  1665                           ; _pSegA loaded to wtemp22
  1666                           ; _pSegA loaded to wtemp22
  1667                           ; _pSegA loaded to wtemp22
  1668                           ; _pSegA loaded to wtemp22
  1669                           ; _pSegA loaded to wtemp22
  1670                           ; _pSegA loaded to wtemp22
  1671                           ; _pSegA loaded to wtemp22
  1672                           ; _pSegA loaded to wtemp22
  1673                           ; _pSegA loaded to wtemp22
  1674                           ; _pSegA loaded to wtemp22
  1675                           ; _pSegA loaded to wtemp22
  1676                           ; _pSegB loaded to wtemp2
  1677                           ; _pSegB loaded to wtemp2
  1678                           ; _pSegB loaded to wtemp2
  1679                           ; _pSegB loaded to wtemp2
  1680                           ; _pSegB loaded to wtemp2
  1681                           ; _pSegB loaded to wtemp2
  1682                           ; _pSegB loaded to wtemp2
  1683                           ; _pSegB loaded to wtemp2
  1684                           ; _pSegB loaded to wtemp2
  1685                           ; _pSegB loaded to wtemp2
  1686                           ; _pSegB loaded to wtemp2
  1687                           ; _pSegB loaded to wtemp2
  1688                           ; _pSegB loaded to wtemp2
  1689                           ; _pSegA loaded to wtemp22
  1690                           ; _pSegA loaded to wtemp22
  1691                           ; _pSegA loaded to wtemp22
  1692                           ; _pSegA loaded to wtemp22
  1693                           ; _pSegA loaded to wtemp22
  1694                           ; _pSegA loaded to wtemp22
  1695                           ; _pSegA loaded to wtemp22
  1696                           ; _pSegA loaded to wtemp22
  1697                           ; _pSegA loaded to wtemp22
  1698                           ; _pSegA loaded to wtemp22
  1699                           ; _pSegA loaded to wtemp22
  1700                           ; _pSegA loaded to wtemp22
  1701                           ; _pSegA loaded to wtemp22
  1702                           ; _pSegA loaded to wtemp22
  1703                           ; _pSegA loaded to wtemp22
  1704                           ; _pSegA loaded to wtemp22
  1705                           ; _pSegA loaded to wtemp22
  1706                           ; _pSegA loaded to wtemp22
  1707                           ; _pSegA loaded to wtemp22
  1708                           ; _pSegA loaded to wtemp22
  1709                           ; _pSegA loaded to wtemp22
  1710                           ; _pSegA loaded to wtemp22
  1711                           ; _pSegA loaded to wtemp22
  1712                           ; _pSegA loaded to wtemp22
  1713                           ; _pSegA loaded to wtemp22
  1714                           ; _pSegA loaded to wtemp22
  1715                           ; _pSegA loaded to wtemp22
  1716                           ; _pSegA loaded to wtemp22
  1717                           ; _pSegA loaded to wtemp22
  1718                           ; _pSegB loaded to wtemp2
  1719                           ; _pSegA loaded to wtemp22
  1720                           ; _pSegB loaded to wtemp2
  1721                           ; _pSegA loaded to wtemp22
  1722                           ; _pSegB loaded to wtemp2
  1723                           ; _pSegA loaded to wtemp22
  1724                           ; _pSegB loaded to wtemp2
  1725                           ; _pSegA loaded to wtemp22
  1726                           ; _pSegB loaded to wtemp2
  1727                           ; _pSegA loaded to wtemp22
  1728                           ; _pSegB loaded to wtemp2
  1729                           ; _pSegA loaded to wtemp22
  1730                           ; _pSegB loaded to wtemp2
  1731                           ; _pSegA loaded to wtemp22
  1732                           ; _pSegB loaded to wtemp2
  1733                           ; _pSegA loaded to wtemp22
  1734                           ; _pSegB loaded to wtemp2
  1735                           ; _pSegA loaded to wtemp22
  1736                           ; _pSegB loaded to wtemp2
  1737                           ; _pSegA loaded to wtemp22
  1738                           ; _pSegB loaded to wtemp2
  1739                           ; _pSegA loaded to wtemp22
  1740                           ; _pSegB loaded to wtemp2
  1741                           ; _pSegA loaded to wtemp22
  1742                           ; _pSegB loaded to wtemp2
  1743                           ; _pSegA loaded to wtemp22
  1744                           ; _pSegB loaded to wtemp2
  1745                           ; _pSegA loaded to wtemp22
  1746                           ; _pSegB loaded to wtemp2
  1747                           ; _pSegA loaded to wtemp22
  1748                           ; _pSegB loaded to wtemp2
  1749                           ; _pSegA loaded to wtemp22
  1750                           ; _pSegB loaded to wtemp2
  1751                           ; _pSegA loaded to wtemp22
  1752                           ; _pSegB loaded to wtemp2
  1753                           ; _pSegA loaded to wtemp22
  1754                           ; _pSegB loaded to wtemp2
  1755                           ; _pSegA loaded to wtemp22
  1756                           ; _pSegB loaded to wtemp2
  1757                           ; _pSegA loaded to wtemp22
  1758                           ; _pSegB loaded to wtemp2
  1759                           ; _pSegA loaded to wtemp22
  1760                           ; _pSegB loaded to wtemp2
  1761                           ; _pSegA loaded to wtemp22
  1762                           ; _pSegB loaded to wtemp2
  1763                           ; _pSegA loaded to wtemp22
  1764                           ; _pSegB loaded to wtemp2
  1765                           ; _pSegA loaded to wtemp22
  1766                           ; _pSegB loaded to wtemp2
  1767                           ; _pSegA loaded to wtemp22
  1768                           ; _pSegB loaded to wtemp2
  1769                           ; _pSegA loaded to wtemp22
  1770                           ; _pSegB loaded to wtemp2
  1771                           ; _pSegA loaded to wtemp22
  1772                           ; _pSegB loaded to wtemp2
  1773                           ; _pSegA loaded to wtemp22
  1774                           ; _pSegB loaded to wtemp2
  1775                           ; _pSegA loaded to wtemp22
  1776                           ; _pSegB loaded to wtemp2
  1777                           ; _pSegA loaded to wtemp22
  1778                           ; _pSegB loaded to wtemp2
  1779                           ; _pSegA loaded to wtemp22
  1780                           ; _pSegB loaded to wtemp2
  1781                           ; _pSegA loaded to wtemp22
  1782                           ; _pSegB loaded to wtemp2
  1783                           ; _pSegA loaded to wtemp22
  1784                           ; _pSegB loaded to wtemp2
  1785                           ; _pSegA loaded to wtemp22
  1786                           ; _pSegB loaded to wtemp2
  1787                           ; _pSegA loaded to wtemp22
  1788                           ; _pSegB loaded to wtemp2
  1789                           ; _pSegA loaded to wtemp22
  1790                           ; _pSegB loaded to wtemp2
  1791                           ; _pSegA loaded to wtemp22
  1792                           ; _pSegB loaded to wtemp2
  1793                           ; _pSegA loaded to wtemp22
  1794                           ; _pSegB loaded to wtemp2
  1795                           ; _pSegA loaded to wtemp22
  1796 ;;_pHeap	offset	0
  1797 ;;_segHeader	offset	2
  1798 ;;_uSegB	offset	0
  1799 ;;_uSegA	offset	1
  1800 ;;_uSum	offset	2
  1801 ;;_pHeap	offset	0
  1802 ;;_new_task	offset	0
  1803 ;;_dados_sensores	offset	0
  1804 ;;_nivel_bateria	offset	4
  1805 ;;_i	offset	0
  1806 ;;_data_buffer	offset	1
  1807 ;;_next_task	offset	0
  1808 ;;_highest_priority	offset	2
  1809 ;;_sign	offset	0
  1810 ;;_dados_sensores	offset	0
  1811 ;;_i	offset	0
  1812 ;;_data_buffer	offset	1
  1813 ;;_nivel_bateria	offset	0
  1814 ;;_next_task	offset	0
  1815 ;;_highest_priority	offset	2
  1816   000FFD                     _TOS            set	4093
  1817   000FC3                     _ADRES          set	4035
  1818   000FCE                     _TMR1           set	4046
  1819   000FD6                     _TMR0           set	4054
  1820   000F9D                     _PIE1bits       set	3997
  1821   000FCD                     _T1CONbits      set	4045
  1822   000FC0                     _ADCON2bits     set	4032
  1823   000FC1                     _ADCON1bits     set	4033
  1824   000FC2                     _ADCON0bits     set	4034
  1825   000F9E                     _PIR1bits       set	3998
  1826   000FD5                     _T0CONbits      set	4053
  1827   000FFC                     _STKPTR         set	4092
  1828   000FE8                     _WREG           set	4072
  1829   000FD8                     _STATUS         set	4056
  1830   000FE0                     _BSR            set	4064
  1831   000FC1                     _ADCON1         set	4033
  1832   000F83                     _PORTDbits      set	3971
  1833   000F8C                     _LATDbits       set	3980
  1834   000F95                     _TRISDbits      set	3989
  1835   000FF2                     _INTCONbits     set	4082
  1836                           
  1837                           ; #config settings
  1838                           
  1839                           	psect	cinit
  1840   001C52                     __pcinit:
  1841                           	callstack 0
  1842   001C52                     start_initialization:
  1843                           	callstack 0
  1844   001C52                     __initialization:
  1845                           	callstack 0
  1846                           
  1847                           ; Clear objects allocated to BIGRAM (1045 bytes)
  1848   001C52  EE00  F0B0         	lfsr	0,__pbssBIGRAM
  1849   001C56  EE24 F015          	lfsr	2,1045
  1850   001C5A                     clear_0:
  1851   001C5A  6AEE               	clrf	postinc0,c
  1852   001C5C  50DD               	movf	postdec2,w,c
  1853   001C5E  50D9               	movf	fsr2l,w,c
  1854   001C60  E1FC               	bnz	clear_0
  1855   001C62  50DA               	movf	fsr2h,w,c
  1856   001C64  E1FA               	bnz	clear_0
  1857                           
  1858                           ; Clear objects allocated to BANK0 (80 bytes)
  1859   001C66  EE00  F060         	lfsr	0,__pbssBANK0
  1860   001C6A  0E50               	movlw	80
  1861   001C6C                     clear_1:
  1862   001C6C  6AEE               	clrf	postinc0,c
  1863   001C6E  06E8               	decf	wreg,f,c
  1864   001C70  E1FD               	bnz	clear_1
  1865                           
  1866                           ; Clear objects allocated to COMRAM (18 bytes)
  1867   001C72  EE00  F039         	lfsr	0,__pbssCOMRAM
  1868   001C76  0E12               	movlw	18
  1869   001C78                     clear_2:
  1870   001C78  6AEE               	clrf	postinc0,c
  1871   001C7A  06E8               	decf	wreg,f,c
  1872   001C7C  E1FD               	bnz	clear_2
  1873   001C7E                     end_of_initialization:
  1874                           	callstack 0
  1875   001C7E                     __end_of__initialization:
  1876                           	callstack 0
  1877   001C7E  0100               	movlb	0
  1878   001C80  EF64  F00D         	goto	_main	;jump to C main() function
  1879                           
  1880                           	psect	bssCOMRAM
  1881   000039                     __pbssCOMRAM:
  1882                           	callstack 0
  1883   000039                     _velocidade_motores:
  1884                           	callstack 0
  1885   000039                     	ds	8
  1886   000041                     ISR_TIMER_0@pwm_cnt:
  1887                           	callstack 0
  1888   000041                     	ds	2
  1889   000043                     _motor_d_duty:
  1890                           	callstack 0
  1891   000043                     	ds	2
  1892   000045                     _motor_c_duty:
  1893                           	callstack 0
  1894   000045                     	ds	2
  1895   000047                     _motor_b_duty:
  1896                           	callstack 0
  1897   000047                     	ds	2
  1898   000049                     _motor_a_duty:
  1899                           	callstack 0
  1900   000049                     	ds	2
  1901                           
  1902                           	psect	bssBANK0
  1903   000060                     __pbssBANK0:
  1904                           	callstack 0
  1905   000060                     _pipe_bateria:
  1906                           	callstack 0
  1907   000060                     	ds	33
  1908   000081                     _pipe_sensores:
  1909                           	callstack 0
  1910   000081                     	ds	33
  1911   0000A2                     _mutex_motores:
  1912                           	callstack 0
  1913   0000A2                     	ds	14
  1914                           
  1915                           	psect	bssBIGRAM
  1916   0000B0                     __pbssBIGRAM:
  1917                           	callstack 0
  1918   0000B0                     _readyQueue:
  1919                           	callstack 0
  1920   0000B0                     	ds	533
  1921   0002C5                     __uDynamicHeap:
  1922                           	callstack 0
  1923   0002C5                     	ds	512
  1924                           
  1925                           	psect	cstackCOMRAM
  1926   00004B                     __pcstackCOMRAM:
  1927                           	callstack 0
  1928   00004B                     ??_ISR_TIMER_0:
  1929                           
  1930                           ; 1 bytes @ 0x0
  1931   00004B                     	ds	14
  1932                           
  1933 ;;
  1934 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1935 ;;
  1936 ;; *************** function _main *****************
  1937 ;; Defined at:
  1938 ;;		line 7 in file "main.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  2  [STACK] int 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp6, btemp8, 
      +btemp9, btemp20, btemp21, btemp22, btemp23, btemp28, btemp29, btemp36, btemp37, btemp44, btemp45, btemp54, btemp55, prod
      +l, prodh, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1952 ;;      Params:         0       0       0       0       0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels required when called: 13
  1958 ;; This function calls:
  1959 ;;		_os_config
  1960 ;;		_os_create_task
  1961 ;;		_os_start
  1962 ;; This function is called by:
  1963 ;;		Startup code after reset
  1964 ;; This function uses a reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text0
  1968   001AC8                     __ptext0:
  1969                           	callstack 0
  1970   001AC8                     _main:
  1971                           	callstack 18
  1972   001AC8                     
  1973                           ;main.c: 10:     os_config();
  1974   001AC8  EC6E  F00E         	call	_os_config	;wreg free
  1975                           
  1976                           ;main.c: 15:     os_create_task(100, tarefa_controle_central, 5);
  1977                           ;register	btemp20
  1978   001ACC  0E64               	movlw	100
  1979   001ACE  6E15               	movwf	btemp20^0,c
  1980                           
  1981                           ;register	btemp21
  1982   001AD0  0E05               	movlw	5
  1983   001AD2  6E16               	movwf	btemp21^0,c
  1984                           
  1985                           ;register	wtemp11
  1986   001AD4  0E5E               	movlw	low _tarefa_controle_central
  1987   001AD6  6E17               	movwf	wtemp11^0,c
  1988   001AD8  0E13               	movlw	high _tarefa_controle_central
  1989   001ADA  6E18               	movwf	btemp23^0,c
  1990   001ADC  ECC4  F00B         	call	_os_create_task	;wreg free
  1991                           
  1992                           ;main.c: 18:     os_create_task(101, tarefa_controle_motores, 4);
  1993                           ;register	btemp20
  1994   001AE0  0E65               	movlw	101
  1995   001AE2  6E15               	movwf	btemp20^0,c
  1996                           
  1997                           ;register	btemp21
  1998   001AE4  0E04               	movlw	4
  1999   001AE6  6E16               	movwf	btemp21^0,c
  2000                           
  2001                           ;register	wtemp11
  2002   001AE8  0E14               	movlw	low _tarefa_controle_motores
  2003   001AEA  6E17               	movwf	wtemp11^0,c
  2004   001AEC  0E1C               	movlw	high _tarefa_controle_motores
  2005   001AEE  6E18               	movwf	btemp23^0,c
  2006   001AF0  ECC4  F00B         	call	_os_create_task	;wreg free
  2007                           
  2008                           ;main.c: 21:     os_create_task(102, tarefa_leitura_sensores, 3);
  2009                           ;register	btemp20
  2010   001AF4  0E66               	movlw	102
  2011   001AF6  6E15               	movwf	btemp20^0,c
  2012                           
  2013                           ;register	btemp21
  2014   001AF8  0E03               	movlw	3
  2015   001AFA  6E16               	movwf	btemp21^0,c
  2016                           
  2017                           ;register	wtemp11
  2018   001AFC  0EE2               	movlw	low _tarefa_leitura_sensores
  2019   001AFE  6E17               	movwf	wtemp11^0,c
  2020   001B00  0E19               	movlw	high _tarefa_leitura_sensores
  2021   001B02  6E18               	movwf	btemp23^0,c
  2022   001B04  ECC4  F00B         	call	_os_create_task	;wreg free
  2023                           
  2024                           ;main.c: 24:     os_create_task(103, tarefa_monitoramento_bateria, 2);
  2025                           ;register	btemp20
  2026   001B08  0E67               	movlw	103
  2027   001B0A  6E15               	movwf	btemp20^0,c
  2028                           
  2029                           ;register	btemp21
  2030   001B0C  0E02               	movlw	2
  2031   001B0E  6E16               	movwf	btemp21^0,c
  2032                           
  2033                           ;register	wtemp11
  2034   001B10  0E82               	movlw	low _tarefa_monitoramento_bateria
  2035   001B12  6E17               	movwf	wtemp11^0,c
  2036   001B14  0E1B               	movlw	high _tarefa_monitoramento_bateria
  2037   001B16  6E18               	movwf	btemp23^0,c
  2038   001B18  ECC4  F00B         	call	_os_create_task	;wreg free
  2039   001B1C                     
  2040                           ;main.c: 29:     os_start();
  2041   001B1C  ECF1  F00E         	call	_os_start	;wreg free
  2042   001B20                     l19:
  2043   001B20  EF90  F00D         	goto	l19
  2044   001B24  EF06  F000         	goto	start
  2045   001B28                     __end_of_main:
  2046                           	callstack 0
  2047                           
  2048 ;; *************** function _os_start *****************
  2049 ;; Defined at:
  2050 ;;		line 26 in file "kernel.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;		None
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1  [STACK] void 
  2057 ;; Registers used:
  2058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp6, btemp8, btemp9, btemp2
      +0, btemp21, btemp28, btemp29, btemp36, btemp37, btemp44, btemp45, btemp54, btemp55, prodl, prodh, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2064 ;;      Params:         0       0       0       0       0       0       0       0       0
  2065 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2067 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2068 ;;Total ram usage:        0 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; Hardware stack levels required when called: 12
  2071 ;; This function calls:
  2072 ;;		_SRAMInitHeap
  2073 ;;		_conf_interrupts
  2074 ;;		_conf_timer_0
  2075 ;;		_config_app
  2076 ;; This function is called by:
  2077 ;;		_main
  2078 ;; This function uses a reentrant model
  2079 ;;
  2080                           
  2081                           	psect	text1
  2082   001DE2                     __ptext1:
  2083                           	callstack 0
  2084   001DE2                     _os_start:
  2085                           	callstack 18
  2086   001DE2                     
  2087                           ;kernel.c: 29:     conf_interrupts();
  2088   001DE2  EC29  F00F         	call	_conf_interrupts	;wreg free
  2089   001DE6                     
  2090                           ;kernel.c: 33:     SRAMInitHeap();
  2091   001DE6  EC67  F00C         	call	_SRAMInitHeap	;wreg free
  2092   001DEA                     
  2093                           ;kernel.c: 37:     config_app();
  2094   001DEA  EC2C  F00D         	call	_config_app	;wreg free
  2095   001DEE                     
  2096                           ;kernel.c: 40:     conf_timer_0();
  2097   001DEE  ECD7  F00E         	call	_conf_timer_0	;wreg free
  2098   001DF2                     
  2099                           ;kernel.c: 43:     (INTCONbits.GIE = 1);
  2100   001DF2  8EF2               	bsf	242,7,c	;volatile
  2101   001DF4                     
  2102                           ; _os_start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  2103   001DF4  0012               	return		;funcret
  2104   001DF6                     __end_of_os_start:
  2105                           	callstack 0
  2106                           
  2107 ;; *************** function _config_app *****************
  2108 ;; Defined at:
  2109 ;;		line 19 in file "user_app.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1  [STACK] void 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp6, btemp8, btemp9, btemp2
      +8, btemp29, btemp36, btemp37, btemp44, btemp45, btemp54, btemp55, prodl, prodh, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2123 ;;      Params:         0       0       0       0       0       0       0       0       0
  2124 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2126 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2127 ;;Total ram usage:        0 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 11
  2130 ;; This function calls:
  2131 ;;		_adc_go
  2132 ;;		_config_adc
  2133 ;;		_create_pipe
  2134 ;;		_mutex_init
  2135 ;;		_pwm_init
  2136 ;;		_set_channel
  2137 ;;		_set_port
  2138 ;; This function is called by:
  2139 ;;		_os_start
  2140 ;; This function uses a reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text2
  2144   001A58                     __ptext2:
  2145                           	callstack 0
  2146   001A58                     _config_app:
  2147                           	callstack 18
  2148   001A58                     
  2149                           ;user_app.c: 23:     ADCON1 = 0x0F;
  2150   001A58  0E0F               	movlw	15
  2151   001A5A  6EC1               	movwf	193,c	;volatile
  2152   001A5C                     
  2153                           ;user_app.c: 26:     set_channel(CHANNEL_0);
  2154                           ;register	btemp28
  2155   001A5C  0E00               	movlw	0
  2156   001A5E  6E1D               	movwf	btemp28^0,c
  2157   001A60  ECFB  F00E         	call	_set_channel	;wreg free
  2158   001A64                     
  2159                           ;user_app.c: 27:     set_port(AN03);
  2160                           ;register	btemp28
  2161   001A64  0E0B               	movlw	11
  2162   001A66  6E1D               	movwf	btemp28^0,c
  2163   001A68  EC13  F00F         	call	_set_port	;wreg free
  2164   001A6C                     
  2165                           ;user_app.c: 28:     config_adc(TAD12, FOSC4);
  2166                           ;register	btemp28
  2167   001A6C  0E05               	movlw	5
  2168   001A6E  6E1D               	movwf	btemp28^0,c
  2169                           
  2170                           ;register	btemp29
  2171   001A70  0E04               	movlw	4
  2172   001A72  6E1E               	movwf	btemp29^0,c
  2173   001A74  EC82  F00E         	call	_config_adc	;wreg free
  2174   001A78                     
  2175                           ;user_app.c: 29:     adc_go(1);
  2176                           ;register	wtemp14
  2177   001A78  6A1E               	clrf	btemp29^0,c
  2178   001A7A  0E01               	movlw	1
  2179   001A7C  6E1D               	movwf	btemp28^0,c
  2180   001A7E  EC19  F00F         	call	_adc_go	;wreg free
  2181   001A82                     
  2182                           ;user_app.c: 31:     pwm_init();
  2183   001A82  ECE8  F00D         	call	_pwm_init	;wreg free
  2184   001A86                     
  2185                           ;user_app.c: 34:     mutex_init(&mutex_motores);
  2186                           ;register	btemp28
  2187   001A86  0EA2               	movlw	low _mutex_motores
  2188   001A88  6E1D               	movwf	btemp28^0,c
  2189   001A8A  EC05  F00F         	call	_mutex_init	;wreg free
  2190   001A8E                     
  2191                           ;user_app.c: 35:     create_pipe(&pipe_sensores, sizeof(sensor_data_t));
  2192                           ;register	btemp28
  2193   001A8E  0E81               	movlw	low _pipe_sensores
  2194   001A90  6E1D               	movwf	btemp28^0,c
  2195                           
  2196                           ;register	btemp29
  2197   001A92  0E04               	movlw	4
  2198   001A94  6E1E               	movwf	btemp29^0,c
  2199   001A96  EC94  F00D         	call	_create_pipe	;wreg free
  2200   001A9A                     
  2201                           ;user_app.c: 36:     create_pipe(&pipe_bateria, sizeof(int));
  2202                           ;register	btemp28
  2203   001A9A  0E60               	movlw	low _pipe_bateria
  2204   001A9C  6E1D               	movwf	btemp28^0,c
  2205                           
  2206                           ;register	btemp29
  2207   001A9E  0E02               	movlw	2
  2208   001AA0  6E1E               	movwf	btemp29^0,c
  2209   001AA2  EC94  F00D         	call	_create_pipe	;wreg free
  2210   001AA6                     
  2211                           ;user_app.c: 39:     velocidade_motores.motor1_speed = 512;
  2212   001AA6  0E02               	movlw	2
  2213   001AA8  6E3A               	movwf	(_velocidade_motores+1)^0,c
  2214   001AAA  0E00               	movlw	0
  2215   001AAC  6E39               	movwf	_velocidade_motores^0,c
  2216   001AAE                     
  2217                           ;user_app.c: 40:     velocidade_motores.motor2_speed = 512;
  2218   001AAE  0E02               	movlw	2
  2219   001AB0  6E3C               	movwf	(_velocidade_motores+3)^0,c
  2220   001AB2  0E00               	movlw	0
  2221   001AB4  6E3B               	movwf	(_velocidade_motores+2)^0,c
  2222   001AB6                     
  2223                           ;user_app.c: 41:     velocidade_motores.motor3_speed = 512;
  2224   001AB6  0E02               	movlw	2
  2225   001AB8  6E3E               	movwf	(_velocidade_motores+5)^0,c
  2226   001ABA  0E00               	movlw	0
  2227   001ABC  6E3D               	movwf	(_velocidade_motores+4)^0,c
  2228   001ABE                     
  2229                           ;user_app.c: 42:     velocidade_motores.motor4_speed = 512;
  2230   001ABE  0E02               	movlw	2
  2231   001AC0  6E40               	movwf	(_velocidade_motores+7)^0,c
  2232   001AC2  0E00               	movlw	0
  2233   001AC4  6E3F               	movwf	(_velocidade_motores+6)^0,c	;# 
  2234   001AC6                     
  2235                           ; _config_app: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  2236   001AC6  0012               	return		;funcret
  2237   001AC8                     __end_of_config_app:
  2238                           	callstack 0
  2239                           
  2240 ;; *************** function _set_port *****************
  2241 ;; Defined at:
  2242 ;;		line 12 in file "io.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  port            1    btemp28  enum E3358
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1  [STACK] void 
  2249 ;; Registers used:
  2250 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp28
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2256 ;;      Params:         0       0       0       0       0       0       0       0       0
  2257 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2259 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2260 ;;Total ram usage:        0 bytes
  2261 ;; Hardware stack levels used: 1
  2262 ;; Hardware stack levels required when called: 8
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		_config_app
  2267 ;; This function uses a reentrant model
  2268 ;;
  2269                           
  2270                           	psect	text3
  2271   001E26                     __ptext3:
  2272                           	callstack 0
  2273   001E26                     _set_port:
  2274                           	callstack 20
  2275   001E26                     
  2276                           ;io.c: 12: void set_port(port_conf_t port);io.c: 13: {;io.c: 14:     ADCON1bits.PCFG = p
      +                          ort;
  2277   001E26  50C1               	movf	193,w,c	;volatile
  2278   001E28  181D               	xorwf	btemp28^0,w,c
  2279   001E2A  0BF0               	andlw	-16
  2280   001E2C  181D               	xorwf	btemp28^0,w,c
  2281   001E2E  6EC1               	movwf	193,c	;volatile
  2282   001E30                     
  2283                           ; _set_port: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  2284   001E30  0012               	return		;funcret
  2285   001E32                     __end_of_set_port:
  2286                           	callstack 0
  2287                           
  2288 ;; *************** function _set_channel *****************
  2289 ;; Defined at:
  2290 ;;		line 7 in file "io.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  channel         1    btemp28  enum E3343
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1  [STACK] void 
  2297 ;; Registers used:
  2298 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp28, btemp55
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2304 ;;      Params:         0       0       0       0       0       0       0       0       0
  2305 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2307 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2308 ;;Total ram usage:        0 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; Hardware stack levels required when called: 8
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_config_app
  2315 ;;		_tarefa_leitura_sensores
  2316 ;;		_tarefa_monitoramento_bateria
  2317 ;; This function uses a reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text4
  2321   001DF6                     __ptext4:
  2322                           	callstack 0
  2323   001DF6                     _set_channel:
  2324                           	callstack 16
  2325   001DF6                     
  2326                           ;io.c: 7: void set_channel(channel_t channel);io.c: 8: {;io.c: 9:     ADCON0bits.CHS = c
      +                          hannel;
  2327   001DF6  C01D F038          	movff	btemp28,btemp55
  2328   001DFA  4638               	rlncf	btemp55^0,f,c
  2329   001DFC  4638               	rlncf	btemp55^0,f,c
  2330   001DFE  50C2               	movf	194,w,c	;volatile
  2331   001E00  1838               	xorwf	btemp55^0,w,c
  2332   001E02  0BC3               	andlw	-61
  2333   001E04  1838               	xorwf	btemp55^0,w,c
  2334   001E06  6EC2               	movwf	194,c	;volatile
  2335   001E08                     
  2336                           ; _set_channel: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2337   001E08  0012               	return		;funcret
  2338   001E0A                     __end_of_set_channel:
  2339                           	callstack 0
  2340                           
  2341 ;; *************** function _pwm_init *****************
  2342 ;; Defined at:
  2343 ;;		line 46 in file "io.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1  [STACK] void 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2357 ;;      Params:         0       0       0       0       0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2360 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2361 ;;Total ram usage:        0 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 8
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_config_app
  2368 ;; This function uses a reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text5
  2372   001BD0                     __ptext5:
  2373                           	callstack 0
  2374   001BD0                     _pwm_init:
  2375                           	callstack 20
  2376   001BD0                     
  2377                           ;io.c: 50:     TRISDbits.RD0 = 0;
  2378   001BD0  9095               	bcf	149,0,c	;volatile
  2379                           
  2380                           ;io.c: 51:     TRISDbits.RD1 = 0;
  2381   001BD2  9295               	bcf	149,1,c	;volatile
  2382                           
  2383                           ;io.c: 52:     TRISDbits.RD2 = 0;
  2384   001BD4  9495               	bcf	149,2,c	;volatile
  2385                           
  2386                           ;io.c: 53:     TRISDbits.RD3 = 0;
  2387   001BD6  9695               	bcf	149,3,c	;volatile
  2388                           
  2389                           ;io.c: 56:     LATDbits.LATD0 = 0;
  2390   001BD8  908C               	bcf	140,0,c	;volatile
  2391                           
  2392                           ;io.c: 57:     LATDbits.LATD1 = 0;
  2393   001BDA  928C               	bcf	140,1,c	;volatile
  2394                           
  2395                           ;io.c: 58:     LATDbits.LATD2 = 0;
  2396   001BDC  948C               	bcf	140,2,c	;volatile
  2397                           
  2398                           ;io.c: 59:     LATDbits.LATD3 = 0;
  2399   001BDE  968C               	bcf	140,3,c	;volatile
  2400   001BE0                     
  2401                           ;io.c: 62:     motor_a_duty = 512;
  2402   001BE0  0E02               	movlw	2
  2403   001BE2  6E4A               	movwf	(_motor_a_duty+1)^0,c
  2404   001BE4  0E00               	movlw	0
  2405   001BE6  6E49               	movwf	_motor_a_duty^0,c
  2406                           
  2407                           ;io.c: 63:     motor_b_duty = 512;
  2408   001BE8  0E02               	movlw	2
  2409   001BEA  6E48               	movwf	(_motor_b_duty+1)^0,c
  2410   001BEC  0E00               	movlw	0
  2411   001BEE  6E47               	movwf	_motor_b_duty^0,c
  2412                           
  2413                           ;io.c: 64:     motor_c_duty = 512;
  2414   001BF0  0E02               	movlw	2
  2415   001BF2  6E46               	movwf	(_motor_c_duty+1)^0,c
  2416   001BF4  0E00               	movlw	0
  2417   001BF6  6E45               	movwf	_motor_c_duty^0,c
  2418                           
  2419                           ;io.c: 65:     motor_d_duty = 512;
  2420   001BF8  0E02               	movlw	2
  2421   001BFA  6E44               	movwf	(_motor_d_duty+1)^0,c
  2422   001BFC  0E00               	movlw	0
  2423   001BFE  6E43               	movwf	_motor_d_duty^0,c
  2424   001C00                     
  2425                           ;io.c: 68:     T1CONbits.TMR1CS = 0;
  2426   001C00  92CD               	bcf	205,1,c	;volatile
  2427                           
  2428                           ;io.c: 69:     T1CONbits.T1CKPS = 0b00;
  2429   001C02  0ECF               	movlw	-49
  2430   001C04  16CD               	andwf	205,f,c	;volatile
  2431   001C06                     
  2432                           ;io.c: 70:     T1CONbits.RD16 = 1;
  2433   001C06  8ECD               	bsf	205,7,c	;volatile
  2434   001C08                     
  2435                           ;io.c: 71:     TMR1 = 0;
  2436   001C08  6ACE               	clrf	206,c	;volatile
  2437   001C0A  6ACF               	clrf	207,c	;volatile
  2438   001C0C                     
  2439                           ;io.c: 74:     PIE1bits.TMR1IE = 1;
  2440   001C0C  809D               	bsf	157,0,c	;volatile
  2441   001C0E                     
  2442                           ;io.c: 75:     PIR1bits.TMR1IF = 0;
  2443   001C0E  909E               	bcf	158,0,c	;volatile
  2444   001C10                     
  2445                           ;io.c: 77:     T1CONbits.TMR1ON = 1;
  2446   001C10  80CD               	bsf	205,0,c	;volatile
  2447   001C12                     
  2448                           ; _pwm_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  2449   001C12  0012               	return		;funcret
  2450   001C14                     __end_of_pwm_init:
  2451                           	callstack 0
  2452                           
  2453 ;; *************** function _mutex_init *****************
  2454 ;; Defined at:
  2455 ;;		line 56 in file "sync.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  m               1    btemp28  PTR struct semaphore
  2458 ;;		 -> mutex_motores(14), 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1  [STACK] void 
  2463 ;; Registers used:
  2464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp28, btemp36, btemp37, btemp54, btemp55, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2470 ;;      Params:         0       0       0       0       0       0       0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2473 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2474 ;;Total ram usage:        0 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; Hardware stack levels required when called: 9
  2477 ;; This function calls:
  2478 ;;		_sem_init
  2479 ;; This function is called by:
  2480 ;;		_config_app
  2481 ;; This function uses a reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text6
  2485   001E0A                     __ptext6:
  2486                           	callstack 0
  2487   001E0A                     _mutex_init:
  2488                           	callstack 19
  2489   001E0A                     
  2490                           ;sync.c: 56: void mutex_init(mutex_t *m);sync.c: 57: {;sync.c: 58:     sem_init(m, 1);
  2491                           ;register	btemp36
  2492   001E0A  C01D F025          	movff	btemp28,btemp36
  2493                           
  2494                           ;register	btemp37
  2495   001E0E  0E01               	movlw	1
  2496   001E10  6E26               	movwf	btemp37^0,c
  2497   001E12  EC42  F00E         	call	_sem_init	;wreg free
  2498   001E16                     
  2499                           ; _mutex_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  2500   001E16  0012               	return		;funcret
  2501   001E18                     __end_of_mutex_init:
  2502                           	callstack 0
  2503                           
  2504 ;; *************** function _create_pipe *****************
  2505 ;; Defined at:
  2506 ;;		line 8 in file "pipe.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  p               1    btemp28  PTR struct pipe
  2509 ;;		 -> pipe_bateria(33), pipe_sensores(33), 
  2510 ;;  size            1    btemp29  unsigned char 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1  [STACK] void 
  2515 ;; Registers used:
  2516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp6, btemp8, btemp9, btemp2
      +8, btemp29, btemp36, btemp37, btemp44, btemp45, btemp54, btemp55, prodl, prodh, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2522 ;;      Params:         0       0       0       0       0       0       0       0       0
  2523 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2525 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2526 ;;Total ram usage:        0 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; Hardware stack levels required when called: 10
  2529 ;; This function calls:
  2530 ;;		_SRAMalloc
  2531 ;;		_sem_init
  2532 ;; This function is called by:
  2533 ;;		_config_app
  2534 ;; This function uses a reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text7
  2538   001B28                     __ptext7:
  2539                           	callstack 0
  2540   001B28                     _create_pipe:
  2541                           	callstack 18
  2542   001B28                     
  2543                           ;pipe.c: 8: void create_pipe(pipe_t *p, uint8_t size);pipe.c: 9: {;pipe.c: 10:     p->pi
      +                          pe_pos_read = 0;
  2544   001B28  501D               	movf	btemp28^0,w,c
  2545   001B2A  6ED9               	movwf	fsr2l,c
  2546   001B2C  6ADA               	clrf	fsr2h,c
  2547   001B2E  6ADF               	clrf	indf2,c
  2548   001B30                     
  2549                           ;pipe.c: 11:     p->pipe_pos_write = 0;
  2550   001B30  501D               	movf	btemp28^0,w,c
  2551   001B32  6ED9               	movwf	fsr2l,c
  2552   001B34  6ADA               	clrf	fsr2h,c
  2553   001B36  0E01               	movlw	1
  2554   001B38  26D9               	addwf	fsr2l,f,c
  2555   001B3A  6ADF               	clrf	indf2,c
  2556   001B3C                     
  2557                           ;pipe.c: 12:     p->pipe_size = size;
  2558   001B3C  501D               	movf	btemp28^0,w,c
  2559   001B3E  6ED9               	movwf	fsr2l,c
  2560   001B40  6ADA               	clrf	fsr2h,c
  2561   001B42  0E04               	movlw	4
  2562   001B44  26D9               	addwf	fsr2l,f,c
  2563   001B46  C01E FFDF          	movff	btemp29,indf2
  2564   001B4A                     
  2565                           ;pipe.c: 13:     p->pipe_data = (char*)SRAMalloc(size);
  2566                           ;register	btemp36
  2567   001B4A  C01E F025          	movff	btemp29,btemp36
  2568   001B4E  EC4E  F008         	call	_SRAMalloc	;wreg free
  2569   001B52  501D               	movf	btemp28^0,w,c
  2570   001B54  6ED9               	movwf	fsr2l,c
  2571   001B56  6ADA               	clrf	fsr2h,c
  2572   001B58  0E02               	movlw	2
  2573   001B5A  26D9               	addwf	fsr2l,f,c
  2574   001B5C  C001 FFDE          	movff	btemp0,postinc2
  2575   001B60  C002 FFDD          	movff	btemp1,postdec2
  2576   001B64                     
  2577                           ;pipe.c: 16:     sem_init(&p->pipe_sem_read, 0);
  2578   001B64  501D               	movf	btemp28^0,w,c
  2579   001B66  0F05               	addlw	5
  2580                           
  2581                           ;register	btemp36
  2582   001B68  6E25               	movwf	btemp36^0,c
  2583                           
  2584                           ;register	btemp37
  2585   001B6A  0E00               	movlw	0
  2586   001B6C  6E26               	movwf	btemp37^0,c
  2587   001B6E  EC42  F00E         	call	_sem_init	;wreg free
  2588   001B72                     
  2589                           ;pipe.c: 17:     sem_init(&p->pipe_sem_write, size);
  2590   001B72  501D               	movf	btemp28^0,w,c
  2591   001B74  0F13               	addlw	19
  2592                           
  2593                           ;register	btemp36
  2594   001B76  6E25               	movwf	btemp36^0,c
  2595                           
  2596                           ;register	btemp37
  2597   001B78  C01E F026          	movff	btemp29,btemp37
  2598   001B7C  EC42  F00E         	call	_sem_init	;wreg free
  2599   001B80                     
  2600                           ; _create_pipe: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2601   001B80  0012               	return		;funcret
  2602   001B82                     __end_of_create_pipe:
  2603                           	callstack 0
  2604                           
  2605 ;; *************** function _sem_init *****************
  2606 ;; Defined at:
  2607 ;;		line 9 in file "sync.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  s               1    btemp36  PTR struct semaphore
  2610 ;;		 -> pipe_bateria(33), pipe_sensores(33), mutex_motores(14), 
  2611 ;;  init_value      1    btemp37  unsigned char 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;		None
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1  [STACK] void 
  2616 ;; Registers used:
  2617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp36, btemp37, btemp54, btemp55
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2623 ;;      Params:         0       0       0       0       0       0       0       0       0
  2624 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2625 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2626 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2627 ;;Total ram usage:        0 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; Hardware stack levels required when called: 8
  2630 ;; This function calls:
  2631 ;;		Nothing
  2632 ;; This function is called by:
  2633 ;;		_mutex_init
  2634 ;;		_create_pipe
  2635 ;; This function uses a reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text8
  2639   001C84                     __ptext8:
  2640                           	callstack 0
  2641   001C84                     _sem_init:
  2642                           	callstack 19
  2643   001C84                     
  2644                           ;sync.c: 9: void sem_init(sem_t *s, uint8_t init_value);sync.c: 10: {;sync.c: 11:     s-
      +                          >contador = init_value;
  2645   001C84  5026               	movf	btemp37^0,w,c
  2646   001C86  6E37               	movwf	btemp54^0,c
  2647   001C88  6A38               	clrf	btemp55^0,c
  2648   001C8A  5025               	movf	btemp36^0,w,c
  2649   001C8C  6ED9               	movwf	fsr2l,c
  2650   001C8E  6ADA               	clrf	fsr2h,c
  2651   001C90  C037 FFDE          	movff	btemp54,postinc2
  2652   001C94  C038 FFDD          	movff	btemp55,postdec2
  2653   001C98                     
  2654                           ;sync.c: 12:     s->sem_queue_in = 0;
  2655   001C98  5025               	movf	btemp36^0,w,c
  2656   001C9A  6ED9               	movwf	fsr2l,c
  2657   001C9C  6ADA               	clrf	fsr2h,c
  2658   001C9E  0E0C               	movlw	12
  2659   001CA0  26D9               	addwf	fsr2l,f,c
  2660   001CA2  6ADF               	clrf	indf2,c
  2661   001CA4                     
  2662                           ;sync.c: 13:     s->sem_queue_out = 0;
  2663   001CA4  5025               	movf	btemp36^0,w,c
  2664   001CA6  6ED9               	movwf	fsr2l,c
  2665   001CA8  6ADA               	clrf	fsr2h,c
  2666   001CAA  0E0D               	movlw	13
  2667   001CAC  26D9               	addwf	fsr2l,f,c
  2668   001CAE  6ADF               	clrf	indf2,c
  2669   001CB0                     
  2670                           ; _sem_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  2671   001CB0  0012               	return		;funcret
  2672   001CB2                     __end_of_sem_init:
  2673                           	callstack 0
  2674                           
  2675 ;; *************** function _SRAMalloc *****************
  2676 ;; Defined at:
  2677 ;;		line 12 in file "mem.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  nBytes          1    btemp36  unsigned char 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  pHeap           2  [STACK] PTR struct _SALLOC
  2682 ;;		 -> _uDynamicHeap(512), 
  2683 ;;  temp            2    wtemp4   PTR struct _SALLOC
  2684 ;;		 -> _uDynamicHeap(512), 
  2685 ;;  segHeader       1  [STACK] struct _SALLOC
  2686 ;;  segLen          1    btemp6   unsigned char 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  2  [STACK] PTR unsigned char 
  2689 ;; Registers used:
  2690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp6, btemp8, btemp9, btemp3
      +6, btemp44, btemp45, btemp54, btemp55, prodl, prodh, cstack
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2696 ;;      Params:         0       0       0       0       0       0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2699 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2700 ;;Total ram usage:        0 bytes
  2701 ;; Hardware stack levels used: 1
  2702 ;; Hardware stack levels required when called: 9
  2703 ;; This function calls:
  2704 ;;		__SRAMmerge
  2705 ;; This function is called by:
  2706 ;;		_create_pipe
  2707 ;; This function uses a reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text9
  2711   00109C                     __ptext9:
  2712                           	callstack 0
  2713   00109C                     _SRAMalloc:
  2714                           	callstack 0
  2715                           
  2716                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2717   00109C  52E6               	movf	postinc1,f,c
  2718   00109E  52E6               	movf	postinc1,f,c
  2719   0010A0  52E6               	movf	postinc1,f,c
  2720   0010A2                     
  2721                           ;mem.c: 12: unsigned char * SRAMalloc(unsigned char nBytes);mem.c: 13: {;mem.c: 14:  SAL
      +                          LOC * pHeap;;mem.c: 15:  SALLOC * temp;;mem.c: 16:  SALLOC segHeader;;mem.c: 17:  unsign
      +                          ed char segLen;;mem.c: 20:  if (nBytes > (0x7F - 1)) return (0);
  2722   0010A2  0E7E               	movlw	126
  2723   0010A4  6425               	cpfsgt	btemp36^0,c
  2724   0010A6  EF57  F008         	goto	u691
  2725   0010AA  EF59  F008         	goto	u690
  2726   0010AE                     u691:
  2727   0010AE  EF5F  F008         	goto	l1924
  2728   0010B2                     u690:
  2729   0010B2                     l1920:
  2730   0010B2  0E00               	movlw	0
  2731   0010B4  6E01               	movwf	btemp0^0,c
  2732   0010B6  0E00               	movlw	0
  2733   0010B8  6E02               	movwf	(btemp0+1)^0,c
  2734   0010BA  EF11  F009         	goto	l382
  2735   0010BE                     l1924:
  2736                           
  2737                           ;mem.c: 23:  pHeap = (SALLOC *)_uDynamicHeap;
  2738                           ;stkvar	_pHeap @ sp[(-3)+0]
  2739   0010BE  0E02               	movlw	high __uDynamicHeap
  2740   0010C0  6E01               	movwf	btemp0^0,c
  2741   0010C2  0EFE               	movlw	-2
  2742   0010C4  C001 FFE3          	movff	btemp0,plusw1
  2743   0010C8  0EC5               	movlw	low __uDynamicHeap
  2744   0010CA  6E01               	movwf	btemp0^0,c
  2745   0010CC  0EFD               	movlw	-3
  2746   0010CE  C001 FFE3          	movff	btemp0,plusw1
  2747   0010D2                     l1926:
  2748                           
  2749                           ; _pHeap loaded to wtemp2
  2750                           ;stkvar	_pHeap @ sp[(-3)+0]
  2751                           ;register	wtemp2
  2752   0010D2  0EFD               	movlw	-3
  2753   0010D4  CFE3 F005          	movff	plusw1,btemp4
  2754   0010D8  0F01               	addlw	1
  2755   0010DA  CFE3 F006          	movff	plusw1,btemp5
  2756                           
  2757                           ;mem.c: 26:  {;mem.c: 27:   segHeader = *pHeap;
  2758   0010DE  C005 FFD9          	movff	btemp4,fsr2l
  2759   0010E2  C006 FFDA          	movff	btemp4+1,fsr2h
  2760   0010E6  50DF               	movf	indf2,w,c
  2761   0010E8  6E38               	movwf	btemp55^0,c
  2762                           
  2763                           ;stkvar	_segHeader @ sp[(-3)+2]
  2764   0010EA  0EFF               	movlw	-1
  2765   0010EC  C038 FFE3          	movff	btemp55,plusw1
  2766   0010F0                     
  2767                           ;mem.c: 28:   segLen = segHeader.bits.count - 1;
  2768                           ;stkvar	_segHeader @ sp[(-3)+2]
  2769   0010F0  0EFF               	movlw	255
  2770   0010F2  24E1               	addwf	fsr1l,w,c
  2771   0010F4  6ED9               	movwf	fsr2l,c
  2772   0010F6  0EFF               	movlw	255
  2773   0010F8  20E2               	addwfc	fsr1h,w,c
  2774   0010FA  6EDA               	movwf	fsr2h,c
  2775   0010FC  50DF               	movf	223,w,c
  2776   0010FE  0B7F               	andlw	127
  2777   001100  6E38               	movwf	btemp55^0,c
  2778   001102  0438               	decf	btemp55^0,w,c
  2779   001104  6E07               	movwf	btemp6^0,c
  2780   001106                     
  2781                           ;_pHeap stored from wtemp2
  2782                           ;register	wtemp2
  2783                           ;stkvar	_pHeap @ sp[(-3)+0]
  2784   001106  0EFE               	movlw	-2
  2785   001108  C006 FFE3          	movff	btemp5,plusw1
  2786   00110C  0EFD               	movlw	-3
  2787   00110E  C005 FFE3          	movff	btemp4,plusw1
  2788                           
  2789                           ;mem.c: 31:   if (segHeader.byte == 0) return (0);
  2790                           ;stkvar	_segHeader @ sp[(-3)+2]
  2791   001112  0EFF               	movlw	-1
  2792   001114  50E3               	movf	plusw1,w,c
  2793   001116  A4D8               	btfss	status,2,c
  2794   001118  EF90  F008         	goto	u701
  2795   00111C  EF92  F008         	goto	u700
  2796   001120                     u701:
  2797   001120  EF94  F008         	goto	l1936
  2798   001124                     u700:
  2799   001124  EF59  F008         	goto	l1920
  2800   001128                     l1936:
  2801                           
  2802                           ;mem.c: 34:   if (!(segHeader.bits.alloc))
  2803                           ;stkvar	_segHeader @ sp[(-3)+2]
  2804   001128  0EFF               	movlw	255
  2805   00112A  24E1               	addwf	fsr1l,w,c
  2806   00112C  6ED9               	movwf	fsr2l,c
  2807   00112E  0EFF               	movlw	255
  2808   001130  20E2               	addwfc	fsr1h,w,c
  2809   001132  6EDA               	movwf	fsr2h,c
  2810   001134  BEDF               	btfsc	indf2,7,c
  2811   001136  EF9F  F008         	goto	u711
  2812   00113A  EFA1  F008         	goto	u710
  2813   00113E                     u711:
  2814   00113E  EFBA  F008         	goto	l1942
  2815   001142                     u710:
  2816   001142                     
  2817                           ;mem.c: 35:   {;mem.c: 37:    if (nBytes > segLen)
  2818   001142  5025               	movf	btemp36^0,w,c
  2819   001144  5C07               	subwf	btemp6^0,w,c
  2820   001146  B0D8               	btfsc	status,0,c
  2821   001148  EFA8  F008         	goto	u721
  2822   00114C  EFAA  F008         	goto	u720
  2823   001150                     u721:
  2824   001150  EFCF  F008         	goto	l1944
  2825   001154                     u720:
  2826   001154                     
  2827                           ;mem.c: 38:    {;mem.c: 39:     if (!(_SRAMmerge(pHeap))) pHeap += segHeader.bits.count;
  2828                           ;stkvar	_pHeap @ sp[(-3)+0]
  2829                           ;register	wtemp22
  2830   001154  0EFD               	movlw	-3
  2831   001156  CFE3 F02D          	movff	plusw1,btemp44
  2832   00115A  0F01               	addlw	1
  2833   00115C  CFE3 F02E          	movff	plusw1,btemp45
  2834   001160  EC15  F009         	call	__SRAMmerge	;wreg free
  2835   001164  5001               	movf	btemp0^0,w,c
  2836   001166  A4D8               	btfss	status,2,c
  2837   001168  EFB8  F008         	goto	u731
  2838   00116C  EFBA  F008         	goto	u730
  2839   001170                     u731:
  2840   001170  EF69  F008         	goto	l1926
  2841   001174                     u730:
  2842   001174                     l1942:
  2843                           
  2844                           ;stkvar	_segHeader @ sp[(-3)+2]
  2845   001174  0EFF               	movlw	255
  2846   001176  24E1               	addwf	fsr1l,w,c
  2847   001178  6ED9               	movwf	fsr2l,c
  2848   00117A  0EFF               	movlw	255
  2849   00117C  20E2               	addwfc	fsr1h,w,c
  2850   00117E  6EDA               	movwf	fsr2h,c
  2851   001180  50DF               	movf	223,w,c
  2852   001182  0B7F               	andlw	127
  2853   001184  0D01               	mullw	1
  2854                           
  2855                           ;stkvar	_pHeap @ sp[(-3)+0]
  2856   001186  0EFD               	movlw	253
  2857   001188  24E1               	addwf	fsr1l,w,c
  2858   00118A  6ED9               	movwf	fsr2l,c
  2859   00118C  0EFF               	movlw	255
  2860   00118E  20E2               	addwfc	fsr1h,w,c
  2861   001190  6EDA               	movwf	fsr2h,c
  2862   001192  50F3               	movf	243,w,c
  2863   001194  26DE               	addwf	postinc2,f,c
  2864   001196  50F4               	movf	244,w,c
  2865   001198  22DD               	addwfc	postdec2,f,c
  2866   00119A  EF69  F008         	goto	l1926
  2867   00119E                     l1944:
  2868                           
  2869                           ; _pHeap loaded to wtemp2
  2870                           ;stkvar	_pHeap @ sp[(-3)+0]
  2871                           ;register	wtemp2
  2872   00119E  0EFD               	movlw	-3
  2873   0011A0  CFE3 F005          	movff	plusw1,btemp4
  2874   0011A4  0F01               	addlw	1
  2875   0011A6  CFE3 F006          	movff	plusw1,btemp5
  2876   0011AA  5007               	movf	btemp6^0,w,c
  2877   0011AC  1825               	xorwf	btemp36^0,w,c
  2878   0011AE  A4D8               	btfss	status,2,c
  2879   0011B0  EFDC  F008         	goto	u741
  2880   0011B4  EFDE  F008         	goto	u740
  2881   0011B8                     u741:
  2882   0011B8  EFEB  F008         	goto	l1954
  2883   0011BC                     u740:
  2884   0011BC                     
  2885                           ;mem.c: 43:    {;mem.c: 44:     (*pHeap).bits.alloc = 1;
  2886   0011BC  C005 FFD9          	movff	btemp4,fsr2l
  2887   0011C0  C006 FFDA          	movff	btemp4+1,fsr2h
  2888   0011C4  8EDF               	bsf	indf2,7,c
  2889   0011C6                     
  2890                           ;mem.c: 45:     return ((unsigned char *)(pHeap + 1));
  2891   0011C6  0E01               	movlw	1
  2892   0011C8  2405               	addwf	btemp4^0,w,c
  2893   0011CA  6E01               	movwf	btemp0^0,c
  2894   0011CC  0E00               	movlw	0
  2895   0011CE  2006               	addwfc	(btemp4+1)^0,w,c
  2896   0011D0  6E02               	movwf	btemp1^0,c
  2897   0011D2  EF11  F009         	goto	l382
  2898   0011D6                     l1954:
  2899                           
  2900                           ;mem.c: 49:    {;mem.c: 50:     (*pHeap).byte = nBytes + 0x81;
  2901   0011D6  5025               	movf	btemp36^0,w,c
  2902   0011D8  0F81               	addlw	129
  2903   0011DA  C005 FFD9          	movff	btemp4,fsr2l
  2904   0011DE  C006 FFDA          	movff	btemp4+1,fsr2h
  2905   0011E2  6EDF               	movwf	indf2,c
  2906   0011E4                     
  2907                           ;mem.c: 51:     temp = pHeap + 1;
  2908   0011E4  C005 F037          	movff	btemp4,btemp54
  2909   0011E8  C006 F038          	movff	btemp4+1,btemp55
  2910   0011EC  0E01               	movlw	1
  2911   0011EE  2437               	addwf	btemp54^0,w,c
  2912   0011F0  6E09               	movwf	btemp8^0,c
  2913   0011F2  0E00               	movlw	0
  2914   0011F4  2038               	addwfc	btemp55^0,w,c
  2915   0011F6  6E0A               	movwf	(btemp8+1)^0,c
  2916   0011F8                     
  2917                           ;mem.c: 52:     pHeap += (nBytes + 1);
  2918   0011F8  0E01               	movlw	1
  2919   0011FA  2425               	addwf	btemp36^0,w,c
  2920   0011FC  6E37               	movwf	btemp54^0,c
  2921   0011FE  6A38               	clrf	(btemp54+1)^0,c
  2922   001200  0E00               	movlw	0
  2923   001202  2238               	addwfc	(btemp54+1)^0,f,c
  2924   001204  5037               	movf	btemp54^0,w,c
  2925   001206  2605               	addwf	btemp4^0,f,c
  2926   001208  5038               	movf	btemp55^0,w,c
  2927   00120A  2206               	addwfc	(btemp4+1)^0,f,c
  2928   00120C                     
  2929                           ;mem.c: 53:     (*pHeap).byte = segLen - nBytes;
  2930   00120C  5025               	movf	btemp36^0,w,c
  2931   00120E  5C07               	subwf	btemp6^0,w,c
  2932   001210  C005 FFD9          	movff	btemp4,fsr2l
  2933   001214  C006 FFDA          	movff	btemp4+1,fsr2h
  2934   001218  6EDF               	movwf	indf2,c
  2935   00121A                     
  2936                           ;mem.c: 54:     return ((unsigned char *) temp);
  2937   00121A  C009 F001          	movff	btemp8,btemp0
  2938   00121E  C00A F002          	movff	btemp8+1,btemp1
  2939   001222                     l382:
  2940                           
  2941                           ; _SRAMalloc: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  2942   001222  52E5               	movf	postdec1,f,c
  2943   001224  52E5               	movf	postdec1,f,c
  2944   001226  52E5               	movf	postdec1,f,c
  2945   001228  0012               	return		;funcret
  2946   00122A                     __end_of_SRAMalloc:
  2947                           	callstack 0
  2948                           
  2949 ;; *************** function __SRAMmerge *****************
  2950 ;; Defined at:
  2951 ;;		line 101 in file "mem.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  pSegA           2    wtemp22  PTR struct _SALLOC
  2954 ;;		 -> _uDynamicHeap(512), 
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  pSegB           2    wtemp2   PTR struct _SALLOC
  2957 ;;		 -> _uDynamicHeap(512), 
  2958 ;;  uSegB           1  [STACK] struct _SALLOC
  2959 ;;  uSegA           1  [STACK] struct _SALLOC
  2960 ;;  uSum            1  [STACK] struct _SALLOC
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1  [STACK] unsigned char 
  2963 ;; Registers used:
  2964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp4, btemp5, btemp44, btemp45, btemp54, btemp55, pr
      +odl, prodh
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2970 ;;      Params:         0       0       0       0       0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2973 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels used: 1
  2976 ;; Hardware stack levels required when called: 8
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_SRAMalloc
  2981 ;; This function uses a reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text10
  2985   00122A                     __ptext10:
  2986                           	callstack 0
  2987   00122A                     __SRAMmerge:
  2988                           	callstack 0
  2989                           
  2990                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2991   00122A  52E6               	movf	postinc1,f,c
  2992   00122C  52E6               	movf	postinc1,f,c
  2993   00122E  52E6               	movf	postinc1,f,c
  2994   001230                     
  2995                           ;mem.c: 101: unsigned char _SRAMmerge(SALLOC * pSegA);mem.c: 102: {;mem.c: 103:  SALLOC 
      +                          * pSegB;;mem.c: 104:  SALLOC uSegA, uSegB, uSum;;mem.c: 106:  pSegB = pSegA + (*pSegA).b
      +                          yte;
  2996   001230  C02D FFD9          	movff	btemp44,fsr2l
  2997   001234  C02E FFDA          	movff	btemp44+1,fsr2h
  2998   001238  50DF               	movf	indf2,w,c
  2999   00123A  6E38               	movwf	btemp55^0,c
  3000   00123C  5038               	movf	btemp55^0,w,c
  3001   00123E  242D               	addwf	btemp44^0,w,c
  3002   001240  6E05               	movwf	btemp4^0,c
  3003   001242  0E00               	movlw	0
  3004   001244  202E               	addwfc	(btemp44+1)^0,w,c
  3005   001246  6E06               	movwf	(btemp4+1)^0,c
  3006   001248                     
  3007                           ;mem.c: 108:  uSegA = *pSegA;
  3008   001248  C02D FFD9          	movff	btemp44,fsr2l
  3009   00124C  C02E FFDA          	movff	btemp44+1,fsr2h
  3010   001250  50DF               	movf	indf2,w,c
  3011   001252  6E38               	movwf	btemp55^0,c
  3012                           
  3013                           ;stkvar	_uSegA @ sp[(-3)+1]
  3014   001254  0EFE               	movlw	-2
  3015   001256  C038 FFE3          	movff	btemp55,plusw1
  3016   00125A                     
  3017                           ;mem.c: 109:  uSegB = *pSegB;
  3018   00125A  C005 FFD9          	movff	btemp4,fsr2l
  3019   00125E  C006 FFDA          	movff	btemp4+1,fsr2h
  3020   001262  50DF               	movf	indf2,w,c
  3021   001264  6E38               	movwf	btemp55^0,c
  3022                           
  3023                           ;stkvar	_uSegB @ sp[(-3)+0]
  3024   001266  0EFD               	movlw	-3
  3025   001268  C038 FFE3          	movff	btemp55,plusw1
  3026   00126C                     
  3027                           ;mem.c: 112:  if (uSegB.byte == 0) return (0);
  3028                           ;stkvar	_uSegB @ sp[(-3)+0]
  3029   00126C  0EFD               	movlw	-3
  3030   00126E  50E3               	movf	plusw1,w,c
  3031   001270  A4D8               	btfss	status,2,c
  3032   001272  EF3D  F009         	goto	u641
  3033   001276  EF3F  F009         	goto	u640
  3034   00127A                     u641:
  3035   00127A  EF43  F009         	goto	l1876
  3036   00127E                     u640:
  3037   00127E                     l1872:
  3038   00127E  0E00               	movlw	0
  3039   001280  6E01               	movwf	btemp0^0,c
  3040   001282  EFAB  F009         	goto	l408
  3041   001286                     l1876:
  3042                           
  3043                           ;mem.c: 113:  if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  3044                           ;stkvar	_uSegA @ sp[(-3)+1]
  3045   001286  0EFE               	movlw	254
  3046   001288  24E1               	addwf	fsr1l,w,c
  3047   00128A  6ED9               	movwf	fsr2l,c
  3048   00128C  0EFF               	movlw	255
  3049   00128E  20E2               	addwfc	fsr1h,w,c
  3050   001290  6EDA               	movwf	fsr2h,c
  3051   001292  BEDF               	btfsc	indf2,7,c
  3052   001294  EF4E  F009         	goto	u651
  3053   001298  EF50  F009         	goto	u650
  3054   00129C                     u651:
  3055   00129C  EF3F  F009         	goto	l1872
  3056   0012A0                     u650:
  3057   0012A0                     
  3058                           ;stkvar	_uSegB @ sp[(-3)+0]
  3059   0012A0  0EFD               	movlw	253
  3060   0012A2  24E1               	addwf	fsr1l,w,c
  3061   0012A4  6ED9               	movwf	fsr2l,c
  3062   0012A6  0EFF               	movlw	255
  3063   0012A8  20E2               	addwfc	fsr1h,w,c
  3064   0012AA  6EDA               	movwf	fsr2h,c
  3065   0012AC  AEDF               	btfss	indf2,7,c
  3066   0012AE  EF5B  F009         	goto	u661
  3067   0012B2  EF5D  F009         	goto	u660
  3068   0012B6                     u661:
  3069   0012B6  EF5F  F009         	goto	l1884
  3070   0012BA                     u660:
  3071   0012BA  EF3F  F009         	goto	l1872
  3072   0012BE                     l1884:
  3073                           
  3074                           ;mem.c: 114:  if (uSegA.bits.count == 0x7F) return (0);
  3075                           ;stkvar	_uSegA @ sp[(-3)+1]
  3076   0012BE  0EFE               	movlw	254
  3077   0012C0  24E1               	addwf	fsr1l,w,c
  3078   0012C2  6ED9               	movwf	fsr2l,c
  3079   0012C4  0EFF               	movlw	255
  3080   0012C6  20E2               	addwfc	fsr1h,w,c
  3081   0012C8  6EDA               	movwf	fsr2h,c
  3082   0012CA  50DF               	movf	223,w,c
  3083   0012CC  0B7F               	andlw	127
  3084   0012CE  0A7F               	xorlw	127
  3085   0012D0  A4D8               	btfss	status,2,c
  3086   0012D2  EF6D  F009         	goto	u671
  3087   0012D6  EF6F  F009         	goto	u670
  3088   0012DA                     u671:
  3089   0012DA  EF71  F009         	goto	l1890
  3090   0012DE                     u670:
  3091   0012DE  EF3F  F009         	goto	l1872
  3092   0012E2                     l1890:
  3093                           
  3094                           ;mem.c: 116:  uSum.byte = uSegA.byte + uSegB.byte;
  3095                           ;stkvar	_uSegB @ sp[(-3)+0]
  3096   0012E2  0EFD               	movlw	-3
  3097   0012E4  CFE3 F038          	movff	plusw1,btemp55
  3098                           
  3099                           ;stkvar	_uSegA @ sp[(-3)+1]
  3100   0012E8  0EFE               	movlw	-2
  3101   0012EA  50E3               	movf	plusw1,w,c
  3102   0012EC  2438               	addwf	btemp55^0,w,c
  3103   0012EE  6E37               	movwf	btemp54^0,c
  3104                           
  3105                           ;stkvar	_uSum @ sp[(-3)+2]
  3106   0012F0  0EFF               	movlw	-1
  3107   0012F2  C037 FFE3          	movff	btemp54,plusw1
  3108   0012F6                     
  3109                           ;mem.c: 119:  if ((uSum.byte) > 0x7F)
  3110                           ;stkvar	_uSum @ sp[(-3)+2]
  3111   0012F6  0EFF               	movlw	-1
  3112   0012F8  CFE3 F001          	movff	plusw1,btemp0
  3113   0012FC  0E7F               	movlw	127
  3114   0012FE  6401               	cpfsgt	btemp0^0,c
  3115   001300  EF84  F009         	goto	u681
  3116   001304  EF86  F009         	goto	u680
  3117   001308                     u681:
  3118   001308  EFA2  F009         	goto	l1908
  3119   00130C                     u680:
  3120   00130C                     
  3121                           ;mem.c: 120:  {;mem.c: 121:   (*pSegA).byte = 0x7F;
  3122   00130C  C02D FFD9          	movff	btemp44,fsr2l
  3123   001310  C02E FFDA          	movff	btemp44+1,fsr2h
  3124   001314  0E7F               	movlw	127
  3125   001316  6EDF               	movwf	indf2,c
  3126   001318                     
  3127                           ;mem.c: 122:   pSegA += 0x7F;
  3128   001318  0E7F               	movlw	127
  3129   00131A  262D               	addwf	btemp44^0,f,c
  3130   00131C  0E00               	movlw	0
  3131   00131E  222E               	addwfc	(btemp44+1)^0,f,c
  3132   001320                     
  3133                           ;mem.c: 123:   pSegB += uSegB.byte;
  3134                           ;stkvar	_uSegB @ sp[(-3)+0]
  3135   001320  0EFD               	movlw	-3
  3136   001322  50E3               	movf	plusw1,w,c
  3137   001324  0D01               	mullw	1
  3138   001326  50F3               	movf	243,w,c
  3139   001328  2605               	addwf	btemp4^0,f,c
  3140   00132A  50F4               	movf	244,w,c
  3141   00132C  2206               	addwfc	(btemp4+1)^0,f,c
  3142   00132E                     
  3143                           ;mem.c: 124:   (*pSegA).byte = pSegB - pSegA;
  3144   00132E  502D               	movf	wtemp22^0,w,c
  3145   001330  5C05               	subwf	wtemp2^0,w,c
  3146   001332  C02D FFD9          	movff	btemp44,fsr2l
  3147   001336  C02E FFDA          	movff	btemp44+1,fsr2h
  3148   00133A  6EDF               	movwf	indf2,c
  3149   00133C                     
  3150                           ;mem.c: 126:   return (0x7F);
  3151   00133C  0E7F               	movlw	127
  3152   00133E  6E01               	movwf	btemp0^0,c
  3153   001340  EFAB  F009         	goto	l408
  3154   001344                     l1908:
  3155                           
  3156                           ;mem.c: 130:  {;mem.c: 131:   return ((*pSegA).byte = uSum.byte);
  3157                           ;stkvar	_uSum @ sp[(-3)+2]
  3158   001344  C02D FFD9          	movff	btemp44,fsr2l
  3159   001348  C02E FFDA          	movff	btemp44+1,fsr2h
  3160   00134C  0EFF               	movlw	-1
  3161   00134E  CFE3 FFDF          	movff	plusw1,indf2
  3162   001352  50DF               	movf	indf2,w,c
  3163   001354  6E01               	movwf	btemp0^0,c
  3164   001356                     l408:
  3165                           
  3166                           ; __SRAMmerge: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3167   001356  52E5               	movf	postdec1,f,c
  3168   001358  52E5               	movf	postdec1,f,c
  3169   00135A  52E5               	movf	postdec1,f,c
  3170   00135C  0012               	return		;funcret
  3171   00135E                     __end_of__SRAMmerge:
  3172                           	callstack 0
  3173                           
  3174 ;; *************** function _config_adc *****************
  3175 ;; Defined at:
  3176 ;;		line 17 in file "io.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  tad             1    btemp28  enum E3374
  3179 ;;  cclk            1    btemp29  enum E3384
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1  [STACK] void 
  3184 ;; Registers used:
  3185 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp28, btemp29, btemp55
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3191 ;;      Params:         0       0       0       0       0       0       0       0       0
  3192 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3194 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3195 ;;Total ram usage:        0 bytes
  3196 ;; Hardware stack levels used: 1
  3197 ;; Hardware stack levels required when called: 8
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_config_app
  3202 ;; This function uses a reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text11
  3206   001D04                     __ptext11:
  3207                           	callstack 0
  3208   001D04                     _config_adc:
  3209                           	callstack 20
  3210   001D04                     
  3211                           ;io.c: 17: void config_adc(tad_t tad, conversion_clock_t cclk);io.c: 18: {;io.c: 19:    
      +                           ADCON2bits.ACQT = tad;
  3212   001D04  C01D F038          	movff	btemp28,btemp55
  3213   001D08  4638               	rlncf	btemp55^0,f,c
  3214   001D0A  4638               	rlncf	btemp55^0,f,c
  3215   001D0C  4638               	rlncf	btemp55^0,f,c
  3216   001D0E  50C0               	movf	192,w,c	;volatile
  3217   001D10  1838               	xorwf	btemp55^0,w,c
  3218   001D12  0BC7               	andlw	-57
  3219   001D14  1838               	xorwf	btemp55^0,w,c
  3220   001D16  6EC0               	movwf	192,c	;volatile
  3221   001D18                     
  3222                           ;io.c: 20:     ADCON2bits.ADCS = cclk;
  3223   001D18  50C0               	movf	192,w,c	;volatile
  3224   001D1A  181E               	xorwf	btemp29^0,w,c
  3225   001D1C  0BF8               	andlw	-8
  3226   001D1E  181E               	xorwf	btemp29^0,w,c
  3227   001D20  6EC0               	movwf	192,c	;volatile
  3228   001D22                     
  3229                           ;io.c: 21:     ADCON2bits.ADFM = 1;
  3230   001D22  8EC0               	bsf	192,7,c	;volatile
  3231   001D24                     
  3232                           ; _config_adc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3233   001D24  0012               	return		;funcret
  3234   001D26                     __end_of_config_adc:
  3235                           	callstack 0
  3236                           
  3237 ;; *************** function _adc_go *****************
  3238 ;; Defined at:
  3239 ;;		line 24 in file "io.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;  go_done         2    wtemp14  int 
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;		None
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  1  [STACK] void 
  3246 ;; Registers used:
  3247 ;;		wreg, fsr1l, fsr1h, btemp28, btemp29
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3253 ;;      Params:         0       0       0       0       0       0       0       0       0
  3254 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3255 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3256 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3257 ;;Total ram usage:        0 bytes
  3258 ;; Hardware stack levels used: 1
  3259 ;; Hardware stack levels required when called: 8
  3260 ;; This function calls:
  3261 ;;		Nothing
  3262 ;; This function is called by:
  3263 ;;		_config_app
  3264 ;; This function uses a reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text12
  3268   001E32                     __ptext12:
  3269                           	callstack 0
  3270   001E32                     _adc_go:
  3271                           	callstack 20
  3272   001E32                     
  3273                           ;io.c: 24: void adc_go(int go_done);io.c: 25: {;io.c: 26:     ADCON0bits.ADON = go_done;
  3274   001E32  B01D               	btfsc	wtemp14^0,0,c
  3275   001E34  D002               	bra	u755
  3276   001E36  90C2               	bcf	194,0,c	;volatile
  3277   001E38  D001               	bra	u756
  3278   001E3A                     u755:
  3279   001E3A  80C2               	bsf	194,0,c	;volatile
  3280   001E3C                     u756:
  3281   001E3C                     
  3282                           ; _adc_go: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsiz
      +                          e = 0, vargsize = 0
  3283   001E3C  0012               	return		;funcret
  3284   001E3E                     __end_of_adc_go:
  3285                           	callstack 0
  3286                           
  3287 ;; *************** function _conf_timer_0 *****************
  3288 ;; Defined at:
  3289 ;;		line 10 in file "hardware.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1  [STACK] void 
  3296 ;; Registers used:
  3297 ;;		wreg, status,2
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3303 ;;      Params:         0       0       0       0       0       0       0       0       0
  3304 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3306 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3307 ;;Total ram usage:        0 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; Hardware stack levels required when called: 8
  3310 ;; This function calls:
  3311 ;;		Nothing
  3312 ;; This function is called by:
  3313 ;;		_os_start
  3314 ;; This function uses a reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text13
  3318   001DAE                     __ptext13:
  3319                           	callstack 0
  3320   001DAE                     _conf_timer_0:
  3321                           	callstack 21
  3322   001DAE                     
  3323                           ;hardware.c: 13:     T0CONbits.T0CS = 0;
  3324   001DAE  9AD5               	bcf	213,5,c	;volatile
  3325                           
  3326                           ;hardware.c: 14:     T0CONbits.PSA = 0;
  3327   001DB0  96D5               	bcf	213,3,c	;volatile
  3328   001DB2                     
  3329                           ;hardware.c: 15:     T0CONbits.T0PS = 0b110;
  3330   001DB2  50D5               	movf	213,w,c	;volatile
  3331   001DB4  0BF8               	andlw	-8
  3332   001DB6  0906               	iorlw	6
  3333   001DB8  6ED5               	movwf	213,c	;volatile
  3334                           
  3335                           ;hardware.c: 16:     TMR0 = 128;
  3336   001DBA  6AD7               	clrf	215,c	;volatile
  3337   001DBC  0E80               	movlw	128
  3338   001DBE  6ED6               	movwf	214,c	;volatile
  3339   001DC0                     
  3340                           ;hardware.c: 17:     INTCONbits.TMR0IE = 1;
  3341   001DC0  8AF2               	bsf	242,5,c	;volatile
  3342   001DC2                     
  3343                           ;hardware.c: 18:     INTCONbits.TMR0IF = 0;
  3344   001DC2  94F2               	bcf	242,2,c	;volatile
  3345   001DC4                     
  3346                           ;hardware.c: 19:     T0CONbits.TMR0ON = 1;
  3347   001DC4  8ED5               	bsf	213,7,c	;volatile
  3348   001DC6                     
  3349                           ; _conf_timer_0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3350   001DC6  0012               	return		;funcret
  3351   001DC8                     __end_of_conf_timer_0:
  3352                           	callstack 0
  3353                           
  3354 ;; *************** function _conf_interrupts *****************
  3355 ;; Defined at:
  3356 ;;		line 22 in file "hardware.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1  [STACK] void 
  3363 ;; Registers used:
  3364 ;;		None
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3370 ;;      Params:         0       0       0       0       0       0       0       0       0
  3371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3373 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3374 ;;Total ram usage:        0 bytes
  3375 ;; Hardware stack levels used: 1
  3376 ;; Hardware stack levels required when called: 8
  3377 ;; This function calls:
  3378 ;;		Nothing
  3379 ;; This function is called by:
  3380 ;;		_os_start
  3381 ;; This function uses a reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text14
  3385   001E52                     __ptext14:
  3386                           	callstack 0
  3387   001E52                     _conf_interrupts:
  3388                           	callstack 21
  3389   001E52                     
  3390                           ;hardware.c: 24:     INTCONbits.PEIE = 1;
  3391   001E52  8CF2               	bsf	242,6,c	;volatile
  3392   001E54                     
  3393                           ; _conf_interrupts: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  3394   001E54  0012               	return		;funcret
  3395   001E56                     __end_of_conf_interrupts:
  3396                           	callstack 0
  3397                           
  3398 ;; *************** function _SRAMInitHeap *****************
  3399 ;; Defined at:
  3400 ;;		line 73 in file "mem.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;		None
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;  count           2    wtemp2   unsigned int 
  3405 ;;  pHeap           2  [STACK] PTR unsigned char 
  3406 ;;		 -> _uDynamicHeap(512), 
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  1  [STACK] void 
  3409 ;; Registers used:
  3410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp4, btemp5, btemp20, btemp21
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3416 ;;      Params:         0       0       0       0       0       0       0       0       0
  3417 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3418 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3419 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3420 ;;Total ram usage:        0 bytes
  3421 ;; Hardware stack levels used: 1
  3422 ;; Hardware stack levels required when called: 8
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_os_start
  3427 ;; This function uses a reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text15
  3431   0018CE                     __ptext15:
  3432                           	callstack 0
  3433   0018CE                     _SRAMInitHeap:
  3434                           	callstack 0
  3435                           
  3436                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3437   0018CE  52E6               	movf	postinc1,f,c
  3438   0018D0  52E6               	movf	postinc1,f,c
  3439   0018D2                     
  3440                           ;mem.c: 75:  unsigned char * pHeap;;mem.c: 76:  unsigned int count;;mem.c: 78:  pHeap = 
      +                          _uDynamicHeap;
  3441                           ;stkvar	_pHeap @ sp[(-2)+0]
  3442   0018D2  0E02               	movlw	high __uDynamicHeap
  3443   0018D4  6E01               	movwf	btemp0^0,c
  3444   0018D6  0EFF               	movlw	-1
  3445   0018D8  C001 FFE3          	movff	btemp0,plusw1
  3446   0018DC  0EC5               	movlw	low __uDynamicHeap
  3447   0018DE  6E01               	movwf	btemp0^0,c
  3448   0018E0  0EFE               	movlw	-2
  3449   0018E2  C001 FFE3          	movff	btemp0,plusw1
  3450   0018E6                     
  3451                           ;mem.c: 79:  count = (0x200 - 1);
  3452   0018E6  0E01               	movlw	1
  3453   0018E8  6E06               	movwf	(btemp4+1)^0,c
  3454   0018EA  6805               	setf	btemp4^0,c
  3455   0018EC                     l1484:
  3456                           
  3457                           ; _pHeap loaded to wtemp10
  3458                           ;stkvar	_pHeap @ sp[(-2)+0]
  3459                           ;register	wtemp10
  3460   0018EC  0EFE               	movlw	-2
  3461   0018EE  CFE3 F015          	movff	plusw1,btemp20
  3462   0018F2  0F01               	addlw	1
  3463   0018F4  CFE3 F016          	movff	plusw1,btemp21
  3464                           
  3465                           ;mem.c: 82:  {;mem.c: 84:   if (count > 0x7F)
  3466   0018F8  5006               	movf	(btemp4+1)^0,w,c
  3467   0018FA  E109               	bnz	u200
  3468   0018FC  0E80               	movlw	128
  3469   0018FE  5C05               	subwf	btemp4^0,w,c
  3470   001900  A0D8               	btfss	status,0,c
  3471   001902  EF85  F00C         	goto	u201
  3472   001906  EF87  F00C         	goto	u200
  3473   00190A                     u201:
  3474   00190A  EF9D  F00C         	goto	l1492
  3475   00190E                     u200:
  3476   00190E                     
  3477                           ;mem.c: 85:   {;mem.c: 86:    *pHeap = 0x7F;
  3478   00190E  C015 FFD9          	movff	btemp20,fsr2l
  3479   001912  C016 FFDA          	movff	btemp20+1,fsr2h
  3480   001916  0E7F               	movlw	127
  3481   001918  6EDF               	movwf	indf2,c
  3482   00191A                     
  3483                           ;mem.c: 87:    pHeap += 0x7F;
  3484   00191A  0E7F               	movlw	127
  3485   00191C  2615               	addwf	btemp20^0,f,c
  3486   00191E  0E00               	movlw	0
  3487   001920  2216               	addwfc	(btemp20+1)^0,f,c
  3488                           
  3489                           ;_pHeap stored from wtemp10
  3490                           ;register	wtemp10
  3491                           ;stkvar	_pHeap @ sp[(-2)+0]
  3492   001922  0EFF               	movlw	-1
  3493   001924  C016 FFE3          	movff	btemp21,plusw1
  3494   001928  0EFE               	movlw	-2
  3495   00192A  C015 FFE3          	movff	btemp20,plusw1
  3496   00192E                     
  3497                           ;mem.c: 88:    count = count - 0x7F;
  3498   00192E  0E81               	movlw	129
  3499   001930  2605               	addwf	btemp4^0,f,c
  3500   001932  0EFF               	movlw	255
  3501   001934  2206               	addwfc	(btemp4+1)^0,f,c
  3502                           
  3503                           ;mem.c: 89:   }
  3504   001936  EF76  F00C         	goto	l1484
  3505   00193A                     l1492:
  3506                           
  3507                           ;mem.c: 92:   {;mem.c: 93:    *pHeap = count;
  3508   00193A  C015 FFD9          	movff	btemp20,fsr2l
  3509   00193E  C016 FFDA          	movff	btemp20+1,fsr2h
  3510   001942  C005 FFDF          	movff	wtemp2,indf2
  3511   001946                     
  3512                           ;mem.c: 94:    *(pHeap + count) = 0;
  3513   001946  5005               	movf	btemp4^0,w,c
  3514   001948  2415               	addwf	btemp20^0,w,c
  3515   00194A  6ED9               	movwf	fsr2l,c
  3516   00194C  5006               	movf	(btemp4+1)^0,w,c
  3517   00194E  2016               	addwfc	(btemp20+1)^0,w,c
  3518   001950  6EDA               	movwf	fsr2h,c
  3519   001952  6ADF               	clrf	indf2,c
  3520   001954                     
  3521                           ; _SRAMInitHeap: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3522   001954  52E5               	movf	postdec1,f,c
  3523   001956  52E5               	movf	postdec1,f,c
  3524   001958  0012               	return		;funcret
  3525   00195A                     __end_of_SRAMInitHeap:
  3526                           	callstack 0
  3527                           
  3528 ;; *************** function _os_config *****************
  3529 ;; Defined at:
  3530 ;;		line 13 in file "kernel.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1  [STACK] void 
  3537 ;; Registers used:
  3538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp20, btemp21, btemp22, btemp23, prodl, prodh
      +, cstack
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3544 ;;      Params:         0       0       0       0       0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3547 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used: 1
  3550 ;; Hardware stack levels required when called: 9
  3551 ;; This function calls:
  3552 ;;		_os_create_task
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;; This function uses a reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text16
  3559   001CDC                     __ptext16:
  3560                           	callstack 0
  3561   001CDC                     _os_config:
  3562                           	callstack 21
  3563   001CDC                     
  3564                           ;kernel.c: 15:     readyQueue.readyQueueSize = 0;
  3565   001CDC  0E00               	movlw	0
  3566   001CDE  CFE8 F2C2          	movff	wreg,_readyQueue+530
  3567                           
  3568                           ;kernel.c: 16:     readyQueue.taskRunning = 0;
  3569   001CE2  0E00               	movlw	0
  3570   001CE4  CFE8 F2C3          	movff	wreg,_readyQueue+531
  3571   001CE8  0E00               	movlw	0
  3572   001CEA  CFE8 F2C4          	movff	wreg,_readyQueue+532
  3573   001CEE                     
  3574                           ;kernel.c: 19:     os_create_task(0, os_idle_task, 1);
  3575                           ;register	btemp20
  3576   001CEE  0E00               	movlw	0
  3577   001CF0  6E15               	movwf	btemp20^0,c
  3578                           
  3579                           ;register	btemp21
  3580   001CF2  0E01               	movlw	1
  3581   001CF4  6E16               	movwf	btemp21^0,c
  3582                           
  3583                           ;register	wtemp11
  3584   001CF6  0EB2               	movlw	low _os_idle_task
  3585   001CF8  6E17               	movwf	wtemp11^0,c
  3586   001CFA  0E1C               	movlw	high _os_idle_task
  3587   001CFC  6E18               	movwf	btemp23^0,c
  3588   001CFE  ECC4  F00B         	call	_os_create_task	;# 
  3589   001D02                     
  3590                           ; _os_config: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  3591   001D02  0012               	return		;funcret
  3592   001D04                     __end_of_os_config:
  3593                           	callstack 0
  3594                           
  3595 ;; *************** function _os_create_task *****************
  3596 ;; Defined at:
  3597 ;;		line 7 in file "syscall.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  id              1    btemp20  unsigned char 
  3600 ;;  task_f          2    wtemp11  PTR FTN()void 
  3601 ;;		 -> os_idle_task(1), tarefa_monitoramento_bateria(1), tarefa_leitura_sensores(1), tarefa_controle_motores(1), 
  3602 ;;		 -> tarefa_controle_central(1), 
  3603 ;;  prior           1    btemp21  unsigned char 
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;  new_task      106  [STACK] struct tcb
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1  [STACK] void 
  3608 ;; Registers used:
  3609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp20, btemp21, btemp22, btemp23, prodl, prodh
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3615 ;;      Params:         0       0       0       0       0       0       0       0       0
  3616 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3617 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3618 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3619 ;;Total ram usage:        0 bytes
  3620 ;; Hardware stack levels used: 1
  3621 ;; Hardware stack levels required when called: 8
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_main
  3626 ;;		_os_config
  3627 ;; This function uses a reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text17
  3631   001788                     __ptext17:
  3632                           	callstack 0
  3633   001788                     _os_create_task:
  3634                           	callstack 0
  3635                           
  3636                           ; autosize = 106, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 v
      +                          argsize = 0, retsize = 0 argfudge = 0
  3637   001788  0E6A               	movlw	106
  3638   00178A  26E1               	addwf	fsr1l,f,c
  3639   00178C  0E00               	movlw	0
  3640   00178E  22E2               	addwfc	fsr1h,f,c
  3641   001790                     
  3642                           ;syscall.c: 7: void os_create_task(uint8_t id, f_ptr task_f, uint8_t prior);syscall.c: 8
      +                          : {;syscall.c: 9:     tcb_t new_task;;syscall.c: 12:     new_task.task_id = id;
  3643                           ;stkvar	_new_task @ sp[(-106)+0]
  3644   001790  0E96               	movlw	-106
  3645   001792  C015 FFE3          	movff	btemp20,plusw1
  3646   001796                     
  3647                           ;syscall.c: 13:     new_task.task_func = task_f;
  3648                           ;stkvar	_new_task @ sp[(-106)+0]
  3649   001796  0E97               	movlw	151
  3650   001798  24E1               	addwf	fsr1l,w,c
  3651   00179A  6ED9               	movwf	fsr2l,c
  3652   00179C  0EFF               	movlw	255
  3653   00179E  20E2               	addwfc	fsr1h,w,c
  3654   0017A0  6EDA               	movwf	fsr2h,c
  3655   0017A2  C017 FFDE          	movff	btemp22,postinc2
  3656   0017A6  C018 FFDD          	movff	btemp22+1,postdec2
  3657   0017AA                     
  3658                           ;syscall.c: 14:     new_task.task_priority = prior;
  3659                           ;stkvar	_new_task @ sp[(-106)+0]
  3660   0017AA  0E9A               	movlw	154
  3661   0017AC  24E1               	addwf	fsr1l,w,c
  3662   0017AE  6ED9               	movwf	fsr2l,c
  3663   0017B0  0EFF               	movlw	255
  3664   0017B2  20E2               	addwfc	fsr1h,w,c
  3665   0017B4  6EDA               	movwf	fsr2h,c
  3666   0017B6  C016 FFDF          	movff	btemp21,indf2
  3667   0017BA                     
  3668                           ;syscall.c: 15:     new_task.task_state = READY;
  3669                           ;stkvar	_new_task @ sp[(-106)+0]
  3670   0017BA  0E99               	movlw	153
  3671   0017BC  24E1               	addwf	fsr1l,w,c
  3672   0017BE  6ED9               	movwf	fsr2l,c
  3673   0017C0  0EFF               	movlw	255
  3674   0017C2  20E2               	addwfc	fsr1h,w,c
  3675   0017C4  6EDA               	movwf	fsr2h,c
  3676   0017C6  6ADF               	clrf	indf2,c
  3677   0017C8                     
  3678                           ;syscall.c: 18:     new_task.BSR_reg = 0;
  3679                           ;stkvar	_new_task @ sp[(-106)+0]
  3680   0017C8  0E9C               	movlw	156
  3681   0017CA  24E1               	addwf	fsr1l,w,c
  3682   0017CC  6ED9               	movwf	fsr2l,c
  3683   0017CE  0EFF               	movlw	255
  3684   0017D0  20E2               	addwfc	fsr1h,w,c
  3685   0017D2  6EDA               	movwf	fsr2h,c
  3686   0017D4  6ADF               	clrf	indf2,c
  3687   0017D6                     
  3688                           ;syscall.c: 19:     new_task.STATUS_reg = 0;
  3689                           ;stkvar	_new_task @ sp[(-106)+0]
  3690   0017D6  0E9E               	movlw	158
  3691   0017D8  24E1               	addwf	fsr1l,w,c
  3692   0017DA  6ED9               	movwf	fsr2l,c
  3693   0017DC  0EFF               	movlw	255
  3694   0017DE  20E2               	addwfc	fsr1h,w,c
  3695   0017E0  6EDA               	movwf	fsr2h,c
  3696   0017E2  6ADF               	clrf	indf2,c
  3697   0017E4                     
  3698                           ;syscall.c: 20:     new_task.WORK_reg = 0;
  3699                           ;stkvar	_new_task @ sp[(-106)+0]
  3700   0017E4  0E9D               	movlw	157
  3701   0017E6  24E1               	addwf	fsr1l,w,c
  3702   0017E8  6ED9               	movwf	fsr2l,c
  3703   0017EA  0EFF               	movlw	255
  3704   0017EC  20E2               	addwfc	fsr1h,w,c
  3705   0017EE  6EDA               	movwf	fsr2h,c
  3706   0017F0  6ADF               	clrf	indf2,c
  3707   0017F2                     
  3708                           ;syscall.c: 21:     new_task.task_sp = 0;
  3709                           ;stkvar	_new_task @ sp[(-106)+0]
  3710   0017F2  0EFF               	movlw	255
  3711   0017F4  24E1               	addwf	fsr1l,w,c
  3712   0017F6  6ED9               	movwf	fsr2l,c
  3713   0017F8  0EFF               	movlw	255
  3714   0017FA  20E2               	addwfc	fsr1h,w,c
  3715   0017FC  6EDA               	movwf	fsr2h,c
  3716   0017FE  6ADF               	clrf	indf2,c
  3717   001800                     
  3718                           ;syscall.c: 24:     readyQueue.readyQueue[readyQueue.readyQueueSize++] = new_task;
  3719                           ;stkvar	_new_task @ sp[(-106)+0]
  3720   001800  0E96               	movlw	150
  3721   001802  24E1               	addwf	fsr1l,w,c
  3722   001804  6ED9               	movwf	fsr2l,c
  3723   001806  0EFF               	movlw	255
  3724   001808  20E2               	addwfc	fsr1h,w,c
  3725   00180A  6EDA               	movwf	fsr2h,c
  3726   00180C  EE02  F0C2         	lfsr	0,_readyQueue+530
  3727   001810  50EF               	movf	indf0,w,c
  3728   001812  0D6A               	mullw	106
  3729   001814  0EB0               	movlw	low _readyQueue
  3730   001816  24F3               	addwf	243,w,c
  3731   001818  6EE9               	movwf	fsr0l,c
  3732   00181A  0E00               	movlw	high _readyQueue
  3733   00181C  20F4               	addwfc	prodh,w,c
  3734   00181E  6EEA               	movwf	fsr0h,c
  3735   001820  0E69               	movlw	105
  3736   001822                     u191:
  3737   001822  CFDB FFEB          	movff	plusw2,plusw0
  3738   001826  06E8               	decf	wreg,f,c
  3739   001828  E2FC               	bc	u191
  3740   00182A  C2C2  FFE8         	movff	_readyQueue+530,wreg
  3741   00182E  0F01               	addlw	1
  3742   001830  CFE8 F2C2          	movff	wreg,_readyQueue+530
  3743   001834                     
  3744                           ; _os_create_task: autosize = 106, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3745   001834  0E96               	movlw	150
  3746   001836  26E1               	addwf	fsr1l,f,c
  3747   001838  0EFF               	movlw	255
  3748   00183A  22E2               	addwfc	fsr1h,f,c
  3749   00183C  0012               	return		;funcret
  3750   00183E                     __end_of_os_create_task:
  3751                           	callstack 0
  3752                           
  3753 ;; *************** function _os_idle_task *****************
  3754 ;; Defined at:
  3755 ;;		line 47 in file "kernel.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;		None
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;		None
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  1  [STACK] void 
  3762 ;; Registers used:
  3763 ;;		wreg, status,2, status,0, btemp55
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3769 ;;      Params:         0       0       0       0       0       0       0       0       0
  3770 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3771 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3772 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3773 ;;Total ram usage:        0 bytes
  3774 ;; Hardware stack levels used: 1
  3775 ;; Hardware stack levels required when called: 3
  3776 ;; This function calls:
  3777 ;;		Nothing
  3778 ;; This function is called by:
  3779 ;;		_os_config
  3780 ;; This function uses a reentrant model
  3781 ;;
  3782                           
  3783                           	psect	text18
  3784   001CB2                     __ptext18:
  3785                           	callstack 0
  3786   001CB2                     _os_idle_task:
  3787                           	callstack 22
  3788   001CB2                     
  3789                           ;kernel.c: 51:     TRISDbits.RD4 = 0;
  3790   001CB2  9895               	bcf	149,4,c	;volatile
  3791   001CB4                     l1764:
  3792                           
  3793                           ;kernel.c: 55:         LATDbits.LATD4 = ~PORTDbits.RD4;
  3794   001CB4  B883               	btfsc	131,4,c	;volatile
  3795   001CB6  EF5F  F00E         	goto	u46_21
  3796   001CBA  EF62  F00E         	goto	u46_20
  3797   001CBE                     u46_21:
  3798   001CBE  0E01               	movlw	1
  3799   001CC0  EF63  F00E         	goto	u46_26
  3800   001CC4                     u46_20:
  3801   001CC4  0E00               	movlw	0
  3802   001CC6                     u46_26:
  3803   001CC6  0AFF               	xorlw	255
  3804   001CC8  6E38               	movwf	btemp55^0,c
  3805   001CCA  3A38               	swapf	btemp55^0,f,c
  3806   001CCC  508C               	movf	140,w,c	;volatile
  3807   001CCE  1838               	xorwf	btemp55^0,w,c
  3808   001CD0  0BEF               	andlw	-17
  3809   001CD2  1838               	xorwf	btemp55^0,w,c
  3810   001CD4  6E8C               	movwf	140,c	;volatile
  3811   001CD6  EF5A  F00E         	goto	l1764
  3812                           
  3813                           ; _os_idle_task: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3814   001CDA  0012               	return		;funcret
  3815   001CDC                     __end_of_os_idle_task:
  3816                           	callstack 0
  3817                           
  3818 ;; *************** function _tarefa_controle_central *****************
  3819 ;; Defined at:
  3820 ;;		line 49 in file "user_app.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  base_speed      2    wtemp2   unsigned short 
  3825 ;;  dados_sensor    4  [STACK] struct .
  3826 ;;  nivel_bateri    2  [STACK] int 
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1  [STACK] void 
  3829 ;; Registers used:
  3830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp12, btemp13
      +, btemp14, btemp15, btemp20, btemp28, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, p
      +rodl, prodh, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3836 ;;      Params:         0       0       0       0       0       0       0       0       0
  3837 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3838 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3839 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3840 ;;Total ram usage:        0 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 7
  3843 ;; This function calls:
  3844 ;;		_mutex_lock
  3845 ;;		_mutex_unlock
  3846 ;;		_os_delay
  3847 ;;		_read_pipe
  3848 ;; This function is called by:
  3849 ;;		_main
  3850 ;; This function uses a reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text19
  3854   00135E                     __ptext19:
  3855                           	callstack 0
  3856   00135E                     _tarefa_controle_central:
  3857                           	callstack 0
  3858                           
  3859                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3860   00135E  0E06               	movlw	6
  3861   001360  26E1               	addwf	fsr1l,f,c
  3862   001362  0E00               	movlw	0
  3863   001364  22E2               	addwfc	fsr1h,f,c
  3864   001366                     l121:
  3865   001366                     
  3866                           ;user_app.c: 56:         read_pipe(&pipe_sensores, &dados_sensores, sizeof(sensor_data_t
      +                          ));
  3867                           ;register	btemp12
  3868   001366  0E81               	movlw	low _pipe_sensores
  3869   001368  6E0D               	movwf	btemp12^0,c
  3870                           
  3871                           ;register	btemp13
  3872   00136A  0E04               	movlw	4
  3873   00136C  6E0E               	movwf	btemp13^0,c
  3874                           
  3875                           ;stkvar	_dados_sensores @ sp[(-6)+0]
  3876   00136E  0EFA               	movlw	250
  3877   001370  24E1               	addwf	fsr1l,w,c
  3878   001372  6E37               	movwf	btemp54^0,c
  3879   001374  0EFF               	movlw	255
  3880   001376  20E2               	addwfc	fsr1h,w,c
  3881   001378  6E38               	movwf	btemp55^0,c
  3882                           
  3883                           ;register	wtemp7
  3884   00137A  C037 F00F          	movff	btemp54,btemp14
  3885   00137E  C038 F010          	movff	btemp55,btemp15
  3886   001382  EC92  F00A         	call	_read_pipe	;wreg free
  3887                           
  3888                           ;user_app.c: 57:         read_pipe(&pipe_bateria, &nivel_bateria, sizeof(int));
  3889                           ;register	btemp12
  3890   001386  0E60               	movlw	low _pipe_bateria
  3891   001388  6E0D               	movwf	btemp12^0,c
  3892                           
  3893                           ;register	btemp13
  3894   00138A  0E02               	movlw	2
  3895   00138C  6E0E               	movwf	btemp13^0,c
  3896                           
  3897                           ;stkvar	_nivel_bateria @ sp[(-6)+4]
  3898   00138E  0EFE               	movlw	254
  3899   001390  24E1               	addwf	fsr1l,w,c
  3900   001392  6E37               	movwf	btemp54^0,c
  3901   001394  0EFF               	movlw	255
  3902   001396  20E2               	addwfc	fsr1h,w,c
  3903   001398  6E38               	movwf	btemp55^0,c
  3904                           
  3905                           ;register	wtemp7
  3906   00139A  C037 F00F          	movff	btemp54,btemp14
  3907   00139E  C038 F010          	movff	btemp55,btemp15
  3908   0013A2  EC92  F00A         	call	_read_pipe	;wreg free
  3909   0013A6                     
  3910                           ;user_app.c: 61:         mutex_lock(&mutex_motores);
  3911                           ;register	btemp12
  3912   0013A6  0EA2               	movlw	low _mutex_motores
  3913   0013A8  6E0D               	movwf	btemp12^0,c
  3914   0013AA  EC24  F00F         	call	_mutex_lock	;wreg free
  3915   0013AE                     
  3916                           ;user_app.c: 64:         if (nivel_bateria < 200) {
  3917                           ;stkvar	_nivel_bateria @ sp[(-6)+4]
  3918   0013AE  0EFF               	movlw	-1
  3919   0013B0  BEE3               	btfsc	plusw1,7,c
  3920   0013B2  EFEA  F009         	goto	u107_20
  3921   0013B6  0EFF               	movlw	-1
  3922   0013B8  50E3               	movf	plusw1,w,c
  3923   0013BA  E10A               	bnz	u107_21
  3924   0013BC  0EFE               	movlw	-2
  3925   0013BE  CFE3 F001          	movff	plusw1,btemp0
  3926   0013C2  0EC8               	movlw	200
  3927   0013C4  5E01               	subwf	btemp0^0,f,c
  3928   0013C6  B0D8               	btfsc	status,0,c
  3929   0013C8  EFE8  F009         	goto	u107_21
  3930   0013CC  EFEA  F009         	goto	u107_20
  3931   0013D0                     u107_21:
  3932   0013D0  EFF8  F009         	goto	l2304
  3933   0013D4                     u107_20:
  3934   0013D4                     
  3935                           ;user_app.c: 66:             velocidade_motores.motor1_speed = 100;
  3936   0013D4  6A3A               	clrf	(_velocidade_motores+1)^0,c
  3937   0013D6  0E64               	movlw	100
  3938   0013D8  6E39               	movwf	_velocidade_motores^0,c
  3939                           
  3940                           ;user_app.c: 67:             velocidade_motores.motor2_speed = 100;
  3941   0013DA  6A3C               	clrf	(_velocidade_motores+3)^0,c
  3942   0013DC  0E64               	movlw	100
  3943   0013DE  6E3B               	movwf	(_velocidade_motores+2)^0,c
  3944                           
  3945                           ;user_app.c: 68:             velocidade_motores.motor3_speed = 100;
  3946   0013E0  6A3E               	clrf	(_velocidade_motores+5)^0,c
  3947   0013E2  0E64               	movlw	100
  3948   0013E4  6E3D               	movwf	(_velocidade_motores+4)^0,c
  3949                           
  3950                           ;user_app.c: 69:             velocidade_motores.motor4_speed = 100;
  3951   0013E6  6A40               	clrf	(_velocidade_motores+7)^0,c
  3952   0013E8  0E64               	movlw	100
  3953   0013EA  6E3F               	movwf	(_velocidade_motores+6)^0,c
  3954                           
  3955                           ;user_app.c: 70:         } else {
  3956   0013EC  EF12  F00A         	goto	l2314
  3957   0013F0                     l2304:
  3958                           
  3959                           ;user_app.c: 72:             uint16_t base_speed = (uint16_t)dados_sensores.acelerometro
      +                          ;
  3960                           ;stkvar	_dados_sensores @ sp[(-6)+0]
  3961   0013F0  0EFC               	movlw	252
  3962   0013F2  24E1               	addwf	fsr1l,w,c
  3963   0013F4  6ED9               	movwf	fsr2l,c
  3964   0013F6  0EFF               	movlw	255
  3965   0013F8  20E2               	addwfc	fsr1h,w,c
  3966   0013FA  6EDA               	movwf	fsr2h,c
  3967   0013FC  CFDE F005          	movff	postinc2,btemp4
  3968   001400  CFDD F006          	movff	postdec2,btemp4+1
  3969   001404                     
  3970                           ;user_app.c: 73:             velocidade_motores.motor1_speed = base_speed;
  3971   001404  C005 F039          	movff	btemp4,_velocidade_motores
  3972   001408  C006 F03A          	movff	btemp4+1,_velocidade_motores+1
  3973   00140C                     
  3974                           ;user_app.c: 74:             velocidade_motores.motor2_speed = base_speed;
  3975   00140C  C005 F03B          	movff	btemp4,_velocidade_motores+2
  3976   001410  C006 F03C          	movff	btemp4+1,_velocidade_motores+3
  3977   001414                     
  3978                           ;user_app.c: 75:             velocidade_motores.motor3_speed = base_speed;
  3979   001414  C005 F03D          	movff	btemp4,_velocidade_motores+4
  3980   001418  C006 F03E          	movff	btemp4+1,_velocidade_motores+5
  3981   00141C                     
  3982                           ;user_app.c: 76:             velocidade_motores.motor4_speed = base_speed;
  3983   00141C  C005 F03F          	movff	btemp4,_velocidade_motores+6
  3984   001420  C006 F040          	movff	btemp4+1,_velocidade_motores+7
  3985   001424                     l2314:
  3986                           
  3987                           ;user_app.c: 80:         mutex_unlock(&mutex_motores);
  3988                           ;register	btemp12
  3989   001424  0EA2               	movlw	low _mutex_motores
  3990   001426  6E0D               	movwf	btemp12^0,c
  3991   001428  EC1F  F00F         	call	_mutex_unlock	;wreg free
  3992   00142C                     
  3993                           ;user_app.c: 83:         os_delay(100);
  3994                           ;register	btemp12
  3995   00142C  0E64               	movlw	100
  3996   00142E  6E0D               	movwf	btemp12^0,c
  3997   001430  EC26  F007         	call	_os_delay	;wreg free
  3998   001434  EFB3  F009         	goto	l121
  3999                           
  4000                           ; _tarefa_controle_central: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 0, argsize = 0, vargsize = 0
  4001   001438  0EFA               	movlw	250
  4002   00143A  26E1               	addwf	fsr1l,f,c
  4003   00143C  0EFF               	movlw	255
  4004   00143E  22E2               	addwfc	fsr1h,f,c
  4005   001440  0012               	return		;funcret
  4006   001442                     __end_of_tarefa_controle_central:
  4007                           	callstack 0
  4008                           
  4009 ;; *************** function _read_pipe *****************
  4010 ;; Defined at:
  4011 ;;		line 21 in file "pipe.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  p               1    btemp12  PTR struct pipe
  4014 ;;		 -> pipe_bateria(33), pipe_sensores(33), 
  4015 ;;  buffer          2    wtemp7   PTR void 
  4016 ;;		 -> nivel_bateria(2), dados_sensores(4), 
  4017 ;;  size            1    btemp13  unsigned char 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  size            1    btemp13  unsigned char 
  4020 ;;  p               1    btemp12  PTR struct pipe
  4021 ;;		 -> pipe_bateria(33), pipe_sensores(33), 
  4022 ;;  i               1  [STACK] unsigned char 
  4023 ;;  data_buffer     2  [STACK] PTR unsigned char 
  4024 ;;		 -> nivel_bateria(2), dados_sensores(4), 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1  [STACK] void 
  4027 ;; Registers used:
  4028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp13, btemp1
      +4, btemp15, btemp20, btemp28, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, pr
      +odh, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4034 ;;      Params:         0       0       0       0       0       0       0       0       0
  4035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4037 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4038 ;;Total ram usage:        0 bytes
  4039 ;; Hardware stack levels used: 1
  4040 ;; Hardware stack levels required when called: 4
  4041 ;; This function calls:
  4042 ;;		___awmod
  4043 ;;		_sem_post
  4044 ;;		_sem_wait
  4045 ;; This function is called by:
  4046 ;;		_tarefa_controle_central
  4047 ;; This function uses a reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text20
  4051   001524                     __ptext20:
  4052                           	callstack 0
  4053   001524                     _read_pipe:
  4054                           	callstack 0
  4055                           
  4056                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4057   001524  52E6               	movf	postinc1,f,c
  4058   001526  52E6               	movf	postinc1,f,c
  4059   001528  52E6               	movf	postinc1,f,c
  4060   00152A                     
  4061                           ;pipe.c: 21: void read_pipe(pipe_t *p, void *buffer, uint8_t size);pipe.c: 22: {;pipe.c:
      +                           23:     char *data_buffer = (char*)buffer;
  4062                           ;stkvar	_data_buffer @ sp[(-3)+1]
  4063   00152A  0EFF               	movlw	-1
  4064   00152C  C010 FFE3          	movff	btemp15,plusw1
  4065   001530  0EFE               	movlw	-2
  4066   001532  C00F FFE3          	movff	btemp14,plusw1
  4067   001536                     
  4068                           ;pipe.c: 24:     for (uint8_t i = 0; i < size; i++) {
  4069   001536  6A05               	clrf	btemp4^0,c
  4070   001538  EFF0  F00A         	goto	l2194
  4071   00153C                     l366:
  4072                           
  4073                           ;pipe.c: 25:         (INTCONbits.GIE = 0);
  4074   00153C  9EF2               	bcf	242,7,c	;volatile
  4075                           
  4076                           ;_i stored from btemp4
  4077                           ;register	btemp4
  4078                           ;stkvar	_i @ sp[(-3)+0]
  4079   00153E  0EFD               	movlw	-3
  4080   001540  C005 FFE3          	movff	btemp4,plusw1
  4081   001544                     
  4082                           ;pipe.c: 26:         sem_wait(&p->pipe_sem_read);
  4083   001544  500D               	movf	btemp12^0,w,c
  4084   001546  0F05               	addlw	5
  4085                           
  4086                           ;register	btemp20
  4087   001548  6E15               	movwf	btemp20^0,c
  4088   00154A  ECCB  F005         	call	_sem_wait	;wreg free
  4089   00154E                     
  4090                           ;pipe.c: 27:         data_buffer[i] = p->pipe_data[p->pipe_pos_read];
  4091   00154E  500D               	movf	btemp12^0,w,c
  4092   001550  6ED9               	movwf	fsr2l,c
  4093   001552  6ADA               	clrf	fsr2h,c
  4094   001554  50DF               	movf	indf2,w,c
  4095   001556  6E38               	movwf	btemp55^0,c
  4096   001558  500D               	movf	btemp12^0,w,c
  4097   00155A  6ED9               	movwf	fsr2l,c
  4098   00155C  6ADA               	clrf	fsr2h,c
  4099   00155E  0E02               	movlw	2
  4100   001560  26D9               	addwf	fsr2l,f,c
  4101   001562  CFDE F035          	movff	postinc2,btemp52
  4102   001566  CFDD F036          	movff	postdec2,btemp53
  4103   00156A  5038               	movf	btemp55^0,w,c
  4104   00156C  2435               	addwf	btemp52^0,w,c
  4105   00156E  6ED9               	movwf	fsr2l,c
  4106   001570  0E00               	movlw	0
  4107   001572  2036               	addwfc	btemp53^0,w,c
  4108   001574  6EDA               	movwf	fsr2h,c
  4109                           
  4110                           ;stkvar	_i @ sp[(-3)+0]
  4111   001576  0EFD               	movlw	-3
  4112   001578  CFE3 F038          	movff	plusw1,btemp55
  4113                           
  4114                           ;stkvar	_data_buffer @ sp[(-3)+1]
  4115   00157C  0EFE               	movlw	-2
  4116   00157E  CFE3 F035          	movff	plusw1,btemp52
  4117   001582  0F01               	addlw	1
  4118   001584  CFE3 F036          	movff	plusw1,btemp53
  4119   001588  5038               	movf	btemp55^0,w,c
  4120   00158A  2435               	addwf	btemp52^0,w,c
  4121   00158C  6EE9               	movwf	fsr0l,c
  4122   00158E  0E00               	movlw	0
  4123   001590  2036               	addwfc	btemp53^0,w,c
  4124   001592  6EEA               	movwf	fsr0h,c
  4125   001594  CFDF FFEF          	movff	indf2,indf0
  4126   001598                     
  4127                           ;pipe.c: 28:         p->pipe_pos_read = (p->pipe_pos_read + 1) % p->pipe_size;
  4128   001598  500D               	movf	btemp12^0,w,c
  4129   00159A  6ED9               	movwf	fsr2l,c
  4130   00159C  6ADA               	clrf	fsr2h,c
  4131   00159E  500D               	movf	btemp12^0,w,c
  4132   0015A0  6EE9               	movwf	fsr0l,c
  4133   0015A2  6AEA               	clrf	fsr0h,c
  4134   0015A4  50EF               	movf	indf0,w,c
  4135   0015A6  6E38               	movwf	btemp55^0,c
  4136   0015A8  0E01               	movlw	1
  4137   0015AA  2438               	addwf	btemp55^0,w,c
  4138                           
  4139                           ;register	wtemp14
  4140   0015AC  6E1D               	movwf	btemp28^0,c
  4141   0015AE  6A1E               	clrf	(btemp28+1)^0,c
  4142   0015B0  0E00               	movlw	0
  4143   0015B2  221E               	addwfc	(btemp28+1)^0,f,c
  4144   0015B4  500D               	movf	btemp12^0,w,c
  4145   0015B6  6EE9               	movwf	fsr0l,c
  4146   0015B8  6AEA               	clrf	fsr0h,c
  4147   0015BA  0E04               	movlw	4
  4148   0015BC  26E9               	addwf	fsr0l,f,c
  4149   0015BE  50EF               	movf	indf0,w,c
  4150                           
  4151                           ;register	wtemp15
  4152   0015C0  6E1F               	movwf	btemp30^0,c
  4153   0015C2  6A20               	clrf	btemp31^0,c
  4154   0015C4  EC65  F00B         	call	___awmod	;wreg free
  4155   0015C8  5001               	movf	btemp0^0,w,c
  4156   0015CA  6EDF               	movwf	indf2,c
  4157   0015CC                     
  4158                           ;pipe.c: 29:         sem_post(&p->pipe_sem_write);
  4159   0015CC  500D               	movf	btemp12^0,w,c
  4160   0015CE  0F13               	addlw	19
  4161                           
  4162                           ;register	btemp20
  4163   0015D0  6E15               	movwf	btemp20^0,c
  4164   0015D2  EC1F  F00C         	call	_sem_post	;wreg free
  4165   0015D6                     
  4166                           ;pipe.c: 30:         (INTCONbits.GIE = 1);
  4167   0015D6  8EF2               	bsf	242,7,c	;volatile
  4168   0015D8                     
  4169                           ; _i loaded to btemp4
  4170                           ;stkvar	_i @ sp[(-3)+0]
  4171                           ;register	btemp4
  4172   0015D8  0EFD               	movlw	-3
  4173   0015DA  CFE3 F005          	movff	plusw1,btemp4
  4174                           
  4175                           ;pipe.c: 31:     }
  4176   0015DE  2A05               	incf	btemp4^0,f,c
  4177   0015E0                     l2194:
  4178   0015E0  500E               	movf	btemp13^0,w,c
  4179   0015E2  5C05               	subwf	btemp4^0,w,c
  4180   0015E4  A0D8               	btfss	status,0,c
  4181   0015E6  EFF7  F00A         	goto	u95_21
  4182   0015EA  EFF9  F00A         	goto	u95_20
  4183   0015EE                     u95_21:
  4184   0015EE  EF9E  F00A         	goto	l366
  4185   0015F2                     u95_20:
  4186   0015F2                     
  4187                           ; _read_pipe: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4188   0015F2  52E5               	movf	postdec1,f,c
  4189   0015F4  52E5               	movf	postdec1,f,c
  4190   0015F6  52E5               	movf	postdec1,f,c
  4191   0015F8  0012               	return		;funcret
  4192   0015FA                     __end_of_read_pipe:
  4193                           	callstack 0
  4194                           
  4195 ;; *************** function _os_delay *****************
  4196 ;; Defined at:
  4197 ;;		line 28 in file "syscall.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;  time            1    btemp12  unsigned char 
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;		None
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1  [STACK] void 
  4204 ;; Registers used:
  4205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp50, btemp5
      +1, btemp52, btemp53, btemp54, btemp55, prodl, prodh
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4211 ;;      Params:         0       0       0       0       0       0       0       0       0
  4212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4214 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4215 ;;Total ram usage:        0 bytes
  4216 ;; Hardware stack levels used: 1
  4217 ;; Hardware stack levels required when called: 5
  4218 ;; This function calls:
  4219 ;;		_scheduler
  4220 ;; This function is called by:
  4221 ;;		_tarefa_controle_central
  4222 ;;		_tarefa_controle_motores
  4223 ;;		_tarefa_leitura_sensores
  4224 ;;		_tarefa_monitoramento_bateria
  4225 ;; This function uses a reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text21
  4229   000E4C                     __ptext21:
  4230                           	callstack 0
  4231   000E4C                     _os_delay:
  4232                           	callstack 19
  4233   000E4C                     
  4234                           ;syscall.c: 28: void os_delay(uint8_t time);syscall.c: 29: {;syscall.c: 30:     (INTCONb
      +                          its.GIE = 0);
  4235   000E4C  9EF2               	bcf	242,7,c	;volatile
  4236   000E4E                     
  4237                           ;syscall.c: 32:     readyQueue.taskRunning->task_time_to_waiting = time;
  4238   000E4E  EE22  F0C3         	lfsr	2,_readyQueue+531
  4239   000E52  EE00 F005          	lfsr	0,5
  4240   000E56  50DE               	movf	postinc2,w,c
  4241   000E58  26E9               	addwf	fsr0l,f,c
  4242   000E5A  50DD               	movf	postdec2,w,c
  4243   000E5C  22EA               	addwfc	fsr0h,f,c
  4244   000E5E  C00D FFEF          	movff	btemp12,indf0
  4245   000E62  EE22  F0C3         	lfsr	2,_readyQueue+531
  4246   000E66  EE00 F003          	lfsr	0,3
  4247   000E6A  50DE               	movf	postinc2,w,c
  4248   000E6C  26E9               	addwf	fsr0l,f,c
  4249   000E6E  50DD               	movf	postdec2,w,c
  4250   000E70  22EA               	addwfc	fsr0h,f,c
  4251   000E72  04EE               	decf	postinc0,w,c
  4252   000E74  A4D8               	btfss	status,2,c
  4253   000E76  EF3F  F007         	goto	u96_21
  4254   000E7A  EF41  F007         	goto	u96_20
  4255   000E7E                     u96_21:
  4256   000E7E  EFAC  F007         	goto	l2216
  4257   000E82                     u96_20:
  4258   000E82  EE22  F0C3         	lfsr	2,_readyQueue+531
  4259   000E86  EE00 F006          	lfsr	0,6
  4260   000E8A  50DE               	movf	postinc2,w,c
  4261   000E8C  26E9               	addwf	fsr0l,f,c
  4262   000E8E  50DD               	movf	postdec2,w,c
  4263   000E90  22EA               	addwfc	fsr0h,f,c
  4264   000E92  CFE0 FFEF          	movff	bsr,indf0	;volatile
  4265   000E96  EE22  F0C3         	lfsr	2,_readyQueue+531
  4266   000E9A  EE00 F008          	lfsr	0,8
  4267   000E9E  50DE               	movf	postinc2,w,c
  4268   000EA0  26E9               	addwf	fsr0l,f,c
  4269   000EA2  50DD               	movf	postdec2,w,c
  4270   000EA4  22EA               	addwfc	fsr0h,f,c
  4271   000EA6  CFD8 FFEF          	movff	status,indf0	;volatile
  4272   000EAA  EE22  F0C3         	lfsr	2,_readyQueue+531
  4273   000EAE  EE00 F007          	lfsr	0,7
  4274   000EB2  50DE               	movf	postinc2,w,c
  4275   000EB4  26E9               	addwf	fsr0l,f,c
  4276   000EB6  50DD               	movf	postdec2,w,c
  4277   000EB8  22EA               	addwfc	fsr0h,f,c
  4278   000EBA  CFE8 FFEF          	movff	wreg,indf0	;volatile
  4279   000EBE  EE22  F0C3         	lfsr	2,_readyQueue+531
  4280   000EC2  EE00 F069          	lfsr	0,105
  4281   000EC6  50DE               	movf	postinc2,w,c
  4282   000EC8  26E9               	addwf	fsr0l,f,c
  4283   000ECA  50DD               	movf	postdec2,w,c
  4284   000ECC  22EA               	addwfc	fsr0h,f,c
  4285   000ECE  6AEF               	clrf	indf0,c
  4286   000ED0  EF9A  F007         	goto	l2212
  4287   000ED4                     l2208:
  4288   000ED4  EE22  F0C3         	lfsr	2,_readyQueue+531
  4289   000ED8  EE00 F069          	lfsr	0,105
  4290   000EDC  50DE               	movf	postinc2,w,c
  4291   000EDE  26E9               	addwf	fsr0l,f,c
  4292   000EE0  50DD               	movf	postdec2,w,c
  4293   000EE2  22EA               	addwfc	fsr0h,f,c
  4294   000EE4  50EF               	movf	indf0,w,c
  4295   000EE6  0D03               	mullw	3
  4296   000EE8  CFF3 F037          	movff	prodl,btemp54
  4297   000EEC  CFF4 F038          	movff	prodh,btemp55
  4298   000EF0  EE22  F0C3         	lfsr	2,_readyQueue+531
  4299   000EF4  CFDE F035          	movff	postinc2,btemp52
  4300   000EF8  CFDD F036          	movff	postdec2,btemp53
  4301   000EFC  5037               	movf	btemp54^0,w,c
  4302   000EFE  2435               	addwf	btemp52^0,w,c
  4303   000F00  6E33               	movwf	btemp50^0,c
  4304   000F02  5038               	movf	btemp55^0,w,c
  4305   000F04  2036               	addwfc	btemp53^0,w,c
  4306   000F06  6E34               	movwf	(btemp50+1)^0,c
  4307   000F08  0E09               	movlw	9
  4308   000F0A  2433               	addwf	btemp50^0,w,c
  4309   000F0C  6ED9               	movwf	fsr2l,c
  4310   000F0E  0E00               	movlw	0
  4311   000F10  2034               	addwfc	btemp51^0,w,c
  4312   000F12  6EDA               	movwf	fsr2h,c
  4313   000F14  CFFD FFDE          	movff	tosl,postinc2	;volatile
  4314   000F18  CFFE FFDE          	movff	tosh,postinc2	;volatile
  4315   000F1C  CFFF FFDE          	movff	tosu,postinc2	;volatile
  4316   000F20  EE22  F0C3         	lfsr	2,_readyQueue+531
  4317   000F24  EE00 F069          	lfsr	0,105
  4318   000F28  50DE               	movf	postinc2,w,c
  4319   000F2A  26E9               	addwf	fsr0l,f,c
  4320   000F2C  50DD               	movf	postdec2,w,c
  4321   000F2E  22EA               	addwfc	fsr0h,f,c
  4322   000F30  2AEF               	incf	indf0,f,c
  4323   000F32  0006               	pop		;# 
  4324   000F34                     l2212:
  4325   000F34  50FC               	movf	252,w,c	;volatile
  4326   000F36  A4D8               	btfss	status,2,c
  4327   000F38  EFA0  F007         	goto	u97_21
  4328   000F3C  EFA2  F007         	goto	u97_20
  4329   000F40                     u97_21:
  4330   000F40  EF6A  F007         	goto	l2208
  4331   000F44                     u97_20:
  4332   000F44  EE22  F0C3         	lfsr	2,_readyQueue+531
  4333   000F48  EE00 F003          	lfsr	0,3
  4334   000F4C  50DE               	movf	postinc2,w,c
  4335   000F4E  26E9               	addwf	fsr0l,f,c
  4336   000F50  50DD               	movf	postdec2,w,c
  4337   000F52  22EA               	addwfc	fsr0h,f,c
  4338   000F54  0E02               	movlw	2
  4339   000F56  6EEF               	movwf	indf0,c
  4340   000F58                     l2216:
  4341                           
  4342                           ;syscall.c: 35:     scheduler();
  4343   000F58  EC0C  F00F         	call	_scheduler	;wreg free
  4344   000F5C  EE22  F0C3         	lfsr	2,_readyQueue+531
  4345   000F60  EE00 F003          	lfsr	0,3
  4346   000F64  50DE               	movf	postinc2,w,c
  4347   000F66  26E9               	addwf	fsr0l,f,c
  4348   000F68  50DD               	movf	postdec2,w,c
  4349   000F6A  22EA               	addwfc	fsr0h,f,c
  4350   000F6C  50EF               	movf	indf0,w,c
  4351   000F6E  A4D8               	btfss	status,2,c
  4352   000F70  EFBC  F007         	goto	u98_21
  4353   000F74  EFBE  F007         	goto	u98_20
  4354   000F78                     u98_21:
  4355   000F78  EF4C  F008         	goto	l2240
  4356   000F7C                     u98_20:
  4357   000F7C  EE22  F0C3         	lfsr	2,_readyQueue+531
  4358   000F80  EE00 F006          	lfsr	0,6
  4359   000F84  50DE               	movf	postinc2,w,c
  4360   000F86  26E9               	addwf	fsr0l,f,c
  4361   000F88  50DD               	movf	postdec2,w,c
  4362   000F8A  22EA               	addwfc	fsr0h,f,c
  4363   000F8C  50EF               	movf	indf0,w,c
  4364   000F8E  6EE0               	movwf	224,c	;volatile
  4365   000F90  EE22  F0C3         	lfsr	2,_readyQueue+531
  4366   000F94  EE00 F008          	lfsr	0,8
  4367   000F98  50DE               	movf	postinc2,w,c
  4368   000F9A  26E9               	addwf	fsr0l,f,c
  4369   000F9C  50DD               	movf	postdec2,w,c
  4370   000F9E  22EA               	addwfc	fsr0h,f,c
  4371   000FA0  50EF               	movf	indf0,w,c
  4372   000FA2  6ED8               	movwf	216,c	;volatile
  4373   000FA4  EE22  F0C3         	lfsr	2,_readyQueue+531
  4374   000FA8  EE00 F007          	lfsr	0,7
  4375   000FAC  50DE               	movf	postinc2,w,c
  4376   000FAE  26E9               	addwf	fsr0l,f,c
  4377   000FB0  50DD               	movf	postdec2,w,c
  4378   000FB2  22EA               	addwfc	fsr0h,f,c
  4379   000FB4  50EF               	movf	indf0,w,c
  4380   000FB6  6E38               	movwf	btemp55^0,c
  4381   000FB8  5038               	movf	btemp55^0,w,c
  4382   000FBA  6AFC               	clrf	252,c	;volatile
  4383   000FBC  EE22  F0C3         	lfsr	2,_readyQueue+531
  4384   000FC0  EE00 F069          	lfsr	0,105
  4385   000FC4  50DE               	movf	postinc2,w,c
  4386   000FC6  26E9               	addwf	fsr0l,f,c
  4387   000FC8  50DD               	movf	postdec2,w,c
  4388   000FCA  22EA               	addwfc	fsr0h,f,c
  4389   000FCC  50EF               	movf	indf0,w,c
  4390   000FCE  A4D8               	btfss	status,2,c
  4391   000FD0  EFEC  F007         	goto	u99_21
  4392   000FD4  EFEE  F007         	goto	u99_20
  4393   000FD8                     u99_21:
  4394   000FD8  EF02  F008         	goto	l176
  4395   000FDC                     u99_20:
  4396   000FDC  0005               	push		;# 
  4397   000FDE  EE22  F0C3         	lfsr	2,_readyQueue+531
  4398   000FE2  EE00 F001          	lfsr	0,1
  4399   000FE6  50DE               	movf	postinc2,w,c
  4400   000FE8  26E9               	addwf	fsr0l,f,c
  4401   000FEA  50DD               	movf	postdec2,w,c
  4402   000FEC  22EA               	addwfc	fsr0h,f,c
  4403   000FEE  CFEE F037          	movff	postinc0,btemp54
  4404   000FF2  CFED F038          	movff	postdec0,btemp55
  4405   000FF6  C037 FFFD          	movff	btemp54,tosl	;volatile
  4406   000FFA  C038 FFFE          	movff	btemp55,tosh	;volatile
  4407   000FFE  6AFF               	clrf	255,c	;volatile
  4408   001000  EF42  F008         	goto	l2238
  4409   001004                     l176:
  4410   001004  0005               	push		;# 
  4411   001006  EE22  F0C3         	lfsr	2,_readyQueue+531
  4412   00100A  EE00 F069          	lfsr	0,105
  4413   00100E  50DE               	movf	postinc2,w,c
  4414   001010  26E9               	addwf	fsr0l,f,c
  4415   001012  50DD               	movf	postdec2,w,c
  4416   001014  22EA               	addwfc	fsr0h,f,c
  4417   001016  06EF               	decf	indf0,f,c
  4418   001018  EE22  F0C3         	lfsr	2,_readyQueue+531
  4419   00101C  EE00 F069          	lfsr	0,105
  4420   001020  50DE               	movf	postinc2,w,c
  4421   001022  26E9               	addwf	fsr0l,f,c
  4422   001024  50DD               	movf	postdec2,w,c
  4423   001026  22EA               	addwfc	fsr0h,f,c
  4424   001028  50EF               	movf	indf0,w,c
  4425   00102A  0D03               	mullw	3
  4426   00102C  CFF3 F037          	movff	prodl,btemp54
  4427   001030  CFF4 F038          	movff	prodh,btemp55
  4428   001034  EE22  F0C3         	lfsr	2,_readyQueue+531
  4429   001038  CFDE F035          	movff	postinc2,btemp52
  4430   00103C  CFDD F036          	movff	postdec2,btemp53
  4431   001040  5037               	movf	btemp54^0,w,c
  4432   001042  2435               	addwf	btemp52^0,w,c
  4433   001044  6E33               	movwf	btemp50^0,c
  4434   001046  5038               	movf	btemp55^0,w,c
  4435   001048  2036               	addwfc	btemp53^0,w,c
  4436   00104A  6E34               	movwf	(btemp50+1)^0,c
  4437   00104C  0E09               	movlw	9
  4438   00104E  2433               	addwf	btemp50^0,w,c
  4439   001050  6ED9               	movwf	fsr2l,c
  4440   001052  0E00               	movlw	0
  4441   001054  2034               	addwfc	btemp51^0,w,c
  4442   001056  6EDA               	movwf	fsr2h,c
  4443   001058  CFDE FFFD          	movff	postinc2,tosl	;volatile
  4444   00105C  CFDE FFFE          	movff	postinc2,tosh	;volatile
  4445   001060  CFDD FFFF          	movff	postdec2,tosu	;volatile
  4446   001064  EE22  F0C3         	lfsr	2,_readyQueue+531
  4447   001068  EE00 F069          	lfsr	0,105
  4448   00106C  50DE               	movf	postinc2,w,c
  4449   00106E  26E9               	addwf	fsr0l,f,c
  4450   001070  50DD               	movf	postdec2,w,c
  4451   001072  22EA               	addwfc	fsr0h,f,c
  4452   001074  50EF               	movf	indf0,w,c
  4453   001076  A4D8               	btfss	status,2,c
  4454   001078  EF40  F008         	goto	u100_21
  4455   00107C  EF42  F008         	goto	u100_20
  4456   001080                     u100_21:
  4457   001080  EF02  F008         	goto	l176
  4458   001084                     u100_20:
  4459   001084                     l2238:
  4460   001084  EE22  F0C3         	lfsr	2,_readyQueue+531
  4461   001088  EE00 F003          	lfsr	0,3
  4462   00108C  50DE               	movf	postinc2,w,c
  4463   00108E  26E9               	addwf	fsr0l,f,c
  4464   001090  50DD               	movf	postdec2,w,c
  4465   001092  22EA               	addwfc	fsr0h,f,c
  4466   001094  0E01               	movlw	1
  4467   001096  6EEF               	movwf	indf0,c
  4468   001098                     l2240:
  4469                           
  4470                           ;syscall.c: 39:     (INTCONbits.GIE = 1);
  4471   001098  8EF2               	bsf	242,7,c	;volatile
  4472   00109A                     
  4473                           ; _os_delay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  4474   00109A  0012               	return		;funcret
  4475   00109C                     __end_of_os_delay:
  4476                           	callstack 0
  4477                           
  4478 ;; *************** function _mutex_unlock *****************
  4479 ;; Defined at:
  4480 ;;		line 68 in file "sync.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  m               1    btemp12  PTR struct semaphore
  4483 ;;		 -> mutex_motores(14), 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;		None
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1  [STACK] void 
  4488 ;; Registers used:
  4489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp20, btemp2
      +8, btemp29, btemp30, btemp31, btemp55, prodl, prodh, cstack
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4495 ;;      Params:         0       0       0       0       0       0       0       0       0
  4496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4498 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4499 ;;Total ram usage:        0 bytes
  4500 ;; Hardware stack levels used: 1
  4501 ;; Hardware stack levels required when called: 5
  4502 ;; This function calls:
  4503 ;;		_sem_post
  4504 ;; This function is called by:
  4505 ;;		_tarefa_controle_central
  4506 ;; This function uses a reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text22
  4510   001E3E                     __ptext22:
  4511                           	callstack 0
  4512   001E3E                     _mutex_unlock:
  4513                           	callstack 19
  4514   001E3E                     
  4515                           ;sync.c: 68: void mutex_unlock(mutex_t *m);sync.c: 69: {;sync.c: 70:     sem_post(m);
  4516                           ;register	btemp20
  4517   001E3E  C00D F015          	movff	btemp12,btemp20
  4518   001E42  EC1F  F00C         	call	_sem_post	;wreg free
  4519   001E46                     
  4520                           ; _mutex_unlock: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4521   001E46  0012               	return		;funcret
  4522   001E48                     __end_of_mutex_unlock:
  4523                           	callstack 0
  4524                           
  4525 ;; *************** function _sem_post *****************
  4526 ;; Defined at:
  4527 ;;		line 38 in file "sync.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;  s               1    btemp20  PTR struct semaphore
  4530 ;;		 -> pipe_bateria(33), pipe_sensores(33), mutex_motores(14), 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1  [STACK] void 
  4535 ;; Registers used:
  4536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp20, btemp28, btemp2
      +9, btemp30, btemp31, btemp55, prodl, prodh, cstack
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4542 ;;      Params:         0       0       0       0       0       0       0       0       0
  4543 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4545 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4546 ;;Total ram usage:        0 bytes
  4547 ;; Hardware stack levels used: 1
  4548 ;; Hardware stack levels required when called: 4
  4549 ;; This function calls:
  4550 ;;		___awmod
  4551 ;; This function is called by:
  4552 ;;		_mutex_unlock
  4553 ;;		_read_pipe
  4554 ;;		_write_pipe
  4555 ;; This function uses a reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text23
  4559   00183E                     __ptext23:
  4560                           	callstack 0
  4561   00183E                     _sem_post:
  4562                           	callstack 19
  4563   00183E                     
  4564                           ;sync.c: 38: void sem_post(sem_t *s);sync.c: 39: {;sync.c: 40:     (INTCONbits.GIE = 0);
  4565   00183E  9EF2               	bcf	242,7,c	;volatile
  4566   001840                     
  4567                           ;sync.c: 42:     s->contador++;
  4568   001840  5015               	movf	btemp20^0,w,c
  4569   001842  6ED9               	movwf	fsr2l,c
  4570   001844  6ADA               	clrf	fsr2h,c
  4571   001846  2ADE               	incf	postinc2,f,c
  4572   001848  0E00               	movlw	0
  4573   00184A  22DD               	addwfc	postdec2,f,c
  4574   00184C                     
  4575                           ;sync.c: 45:     if (s->contador <= 0) {
  4576   00184C  5015               	movf	btemp20^0,w,c
  4577   00184E  6ED9               	movwf	fsr2l,c
  4578   001850  6ADA               	clrf	fsr2h,c
  4579   001852  0E01               	movlw	1
  4580   001854  BEDB               	btfsc	plusw2,7,c
  4581   001856  EF38  F00C         	goto	u91_20
  4582   00185A  0E01               	movlw	1
  4583   00185C  50DB               	movf	plusw2,w,c
  4584   00185E  E106               	bnz	u91_21
  4585   001860  04DE               	decf	postinc2,w,c
  4586   001862  B0D8               	btfsc	status,0,c
  4587   001864  EF36  F00C         	goto	u91_21
  4588   001868  EF38  F00C         	goto	u91_20
  4589   00186C                     u91_21:
  4590   00186C  EF65  F00C         	goto	l2152
  4591   001870                     u91_20:
  4592   001870                     
  4593                           ;sync.c: 46:         s->sem_queue[s->sem_queue_out]->task_state = READY;
  4594   001870  5015               	movf	btemp20^0,w,c
  4595   001872  6ED9               	movwf	fsr2l,c
  4596   001874  6ADA               	clrf	fsr2h,c
  4597   001876  0E0D               	movlw	13
  4598   001878  26D9               	addwf	fsr2l,f,c
  4599   00187A  50DF               	movf	indf2,w,c
  4600   00187C  0D02               	mullw	2
  4601   00187E  5015               	movf	btemp20^0,w,c
  4602   001880  24F3               	addwf	243,w,c
  4603   001882  6ED9               	movwf	fsr2l,c
  4604   001884  6ADA               	clrf	fsr2h,c
  4605   001886  0E02               	movlw	2
  4606   001888  26D9               	addwf	fsr2l,f,c
  4607   00188A  EE00 F003          	lfsr	0,3
  4608   00188E  50DE               	movf	postinc2,w,c
  4609   001890  26E9               	addwf	fsr0l,f,c
  4610   001892  50DD               	movf	postdec2,w,c
  4611   001894  22EA               	addwfc	fsr0h,f,c
  4612   001896  6AEF               	clrf	indf0,c
  4613   001898                     
  4614                           ;sync.c: 47:         s->sem_queue_out = (s->sem_queue_out + 1) % 5;
  4615   001898  5015               	movf	btemp20^0,w,c
  4616   00189A  6ED9               	movwf	fsr2l,c
  4617   00189C  6ADA               	clrf	fsr2h,c
  4618   00189E  0E0D               	movlw	13
  4619   0018A0  26D9               	addwf	fsr2l,f,c
  4620   0018A2  5015               	movf	btemp20^0,w,c
  4621   0018A4  6EE9               	movwf	fsr0l,c
  4622   0018A6  6AEA               	clrf	fsr0h,c
  4623   0018A8  0E0D               	movlw	13
  4624   0018AA  26E9               	addwf	fsr0l,f,c
  4625   0018AC  50EF               	movf	indf0,w,c
  4626   0018AE  6E38               	movwf	btemp55^0,c
  4627   0018B0  0E01               	movlw	1
  4628   0018B2  2438               	addwf	btemp55^0,w,c
  4629                           
  4630                           ;register	wtemp14
  4631   0018B4  6E1D               	movwf	btemp28^0,c
  4632   0018B6  6A1E               	clrf	(btemp28+1)^0,c
  4633   0018B8  0E00               	movlw	0
  4634   0018BA  221E               	addwfc	(btemp28+1)^0,f,c
  4635                           
  4636                           ;register	wtemp15
  4637   0018BC  6A20               	clrf	btemp31^0,c
  4638   0018BE  0E05               	movlw	5
  4639   0018C0  6E1F               	movwf	btemp30^0,c
  4640   0018C2  EC65  F00B         	call	___awmod	;wreg free
  4641   0018C6  5001               	movf	btemp0^0,w,c
  4642   0018C8  6EDF               	movwf	indf2,c
  4643   0018CA                     l2152:
  4644                           
  4645                           ;sync.c: 50:     (INTCONbits.GIE = 1);
  4646   0018CA  8EF2               	bsf	242,7,c	;volatile
  4647   0018CC                     
  4648                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  4649   0018CC  0012               	return		;funcret
  4650   0018CE                     __end_of_sem_post:
  4651                           	callstack 0
  4652                           
  4653 ;; *************** function _mutex_lock *****************
  4654 ;; Defined at:
  4655 ;;		line 62 in file "sync.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  m               1    btemp12  PTR struct semaphore
  4658 ;;		 -> mutex_motores(14), 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;  m               1    btemp12  PTR struct semaphore
  4661 ;;		 -> mutex_motores(14), 
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  1  [STACK] void 
  4664 ;; Registers used:
  4665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp20, btemp2
      +8, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, prodh, cstack
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4671 ;;      Params:         0       0       0       0       0       0       0       0       0
  4672 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4674 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4675 ;;Total ram usage:        0 bytes
  4676 ;; Hardware stack levels used: 1
  4677 ;; Hardware stack levels required when called: 6
  4678 ;; This function calls:
  4679 ;;		_sem_wait
  4680 ;; This function is called by:
  4681 ;;		_tarefa_controle_central
  4682 ;; This function uses a reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text24
  4686   001E48                     __ptext24:
  4687                           	callstack 0
  4688   001E48                     _mutex_lock:
  4689                           	callstack 18
  4690   001E48                     
  4691                           ;sync.c: 62: void mutex_lock(mutex_t *m);sync.c: 63: {;sync.c: 64:     sem_wait(m);
  4692                           ;register	btemp20
  4693   001E48  C00D F015          	movff	btemp12,btemp20
  4694   001E4C  ECCB  F005         	call	_sem_wait	;wreg free
  4695   001E50                     
  4696                           ; _mutex_lock: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4697   001E50  0012               	return		;funcret
  4698   001E52                     __end_of_mutex_lock:
  4699                           	callstack 0
  4700                           
  4701 ;; *************** function _sem_wait *****************
  4702 ;; Defined at:
  4703 ;;		line 17 in file "sync.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  s               1    btemp20  PTR struct semaphore
  4706 ;;		 -> pipe_bateria(33), pipe_sensores(33), mutex_motores(14), 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;		None
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1  [STACK] void 
  4711 ;; Registers used:
  4712 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp20, btemp28, btemp2
      +9, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, prodh, cstack
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4718 ;;      Params:         0       0       0       0       0       0       0       0       0
  4719 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4721 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4722 ;;Total ram usage:        0 bytes
  4723 ;; Hardware stack levels used: 1
  4724 ;; Hardware stack levels required when called: 4
  4725 ;; This function calls:
  4726 ;;		___awmod
  4727 ;;		_scheduler
  4728 ;; This function is called by:
  4729 ;;		_mutex_lock
  4730 ;;		_read_pipe
  4731 ;;		_write_pipe
  4732 ;; This function uses a reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text25
  4736   000B96                     __ptext25:
  4737                           	callstack 0
  4738   000B96                     _sem_wait:
  4739                           	callstack 19
  4740   000B96                     
  4741                           ;sync.c: 17: void sem_wait(sem_t *s);sync.c: 18: {;sync.c: 19:     (INTCONbits.GIE = 0);
  4742   000B96  9EF2               	bcf	242,7,c	;volatile
  4743   000B98                     
  4744                           ;sync.c: 21:     s->contador--;
  4745   000B98  5015               	movf	btemp20^0,w,c
  4746   000B9A  6ED9               	movwf	fsr2l,c
  4747   000B9C  6ADA               	clrf	fsr2h,c
  4748   000B9E  06DE               	decf	postinc2,f,c
  4749   000BA0  0E00               	movlw	0
  4750   000BA2  5ADD               	subwfb	postdec2,f,c
  4751   000BA4                     
  4752                           ;sync.c: 23:     if (s->contador < 0) {
  4753   000BA4  5015               	movf	btemp20^0,w,c
  4754   000BA6  6ED9               	movwf	fsr2l,c
  4755   000BA8  6ADA               	clrf	fsr2h,c
  4756   000BAA  0E01               	movlw	1
  4757   000BAC  BEDB               	btfsc	plusw2,7,c
  4758   000BAE  EFDD  F005         	goto	u85_20
  4759   000BB2  EFDB  F005         	goto	u85_21
  4760   000BB6                     u85_21:
  4761   000BB6  EF24  F007         	goto	l2140
  4762   000BBA                     u85_20:
  4763   000BBA                     
  4764                           ;sync.c: 25:         s->sem_queue[s->sem_queue_in] = readyQueue.taskRunning;
  4765   000BBA  EE22  F0C3         	lfsr	2,_readyQueue+531
  4766   000BBE  5015               	movf	btemp20^0,w,c
  4767   000BC0  6EE9               	movwf	fsr0l,c
  4768   000BC2  6AEA               	clrf	fsr0h,c
  4769   000BC4  0E0C               	movlw	12
  4770   000BC6  26E9               	addwf	fsr0l,f,c
  4771   000BC8  50EF               	movf	indf0,w,c
  4772   000BCA  0D02               	mullw	2
  4773   000BCC  5015               	movf	btemp20^0,w,c
  4774   000BCE  24F3               	addwf	243,w,c
  4775   000BD0  6EE9               	movwf	fsr0l,c
  4776   000BD2  6AEA               	clrf	fsr0h,c
  4777   000BD4  0E02               	movlw	2
  4778   000BD6  26E9               	addwf	fsr0l,f,c
  4779   000BD8  CFDE FFEE          	movff	postinc2,postinc0
  4780   000BDC  CFDD FFED          	movff	postdec2,postdec0
  4781   000BE0                     
  4782                           ;sync.c: 26:         s->sem_queue_in = (s->sem_queue_in + 1) % 5;
  4783   000BE0  5015               	movf	btemp20^0,w,c
  4784   000BE2  6ED9               	movwf	fsr2l,c
  4785   000BE4  6ADA               	clrf	fsr2h,c
  4786   000BE6  0E0C               	movlw	12
  4787   000BE8  26D9               	addwf	fsr2l,f,c
  4788   000BEA  5015               	movf	btemp20^0,w,c
  4789   000BEC  6EE9               	movwf	fsr0l,c
  4790   000BEE  6AEA               	clrf	fsr0h,c
  4791   000BF0  0E0C               	movlw	12
  4792   000BF2  26E9               	addwf	fsr0l,f,c
  4793   000BF4  50EF               	movf	indf0,w,c
  4794   000BF6  6E38               	movwf	btemp55^0,c
  4795   000BF8  0E01               	movlw	1
  4796   000BFA  2438               	addwf	btemp55^0,w,c
  4797                           
  4798                           ;register	wtemp14
  4799   000BFC  6E1D               	movwf	btemp28^0,c
  4800   000BFE  6A1E               	clrf	(btemp28+1)^0,c
  4801   000C00  0E00               	movlw	0
  4802   000C02  221E               	addwfc	(btemp28+1)^0,f,c
  4803                           
  4804                           ;register	wtemp15
  4805   000C04  6A20               	clrf	btemp31^0,c
  4806   000C06  0E05               	movlw	5
  4807   000C08  6E1F               	movwf	btemp30^0,c
  4808   000C0A  EC65  F00B         	call	___awmod	;wreg free
  4809   000C0E  5001               	movf	btemp0^0,w,c
  4810   000C10  6EDF               	movwf	indf2,c
  4811   000C12  EE22  F0C3         	lfsr	2,_readyQueue+531
  4812   000C16  EE00 F003          	lfsr	0,3
  4813   000C1A  50DE               	movf	postinc2,w,c
  4814   000C1C  26E9               	addwf	fsr0l,f,c
  4815   000C1E  50DD               	movf	postdec2,w,c
  4816   000C20  22EA               	addwfc	fsr0h,f,c
  4817   000C22  04EE               	decf	postinc0,w,c
  4818   000C24  A4D8               	btfss	status,2,c
  4819   000C26  EF17  F006         	goto	u86_21
  4820   000C2A  EF19  F006         	goto	u86_20
  4821   000C2E                     u86_21:
  4822   000C2E  EF84  F006         	goto	l2116
  4823   000C32                     u86_20:
  4824   000C32  EE22  F0C3         	lfsr	2,_readyQueue+531
  4825   000C36  EE00 F006          	lfsr	0,6
  4826   000C3A  50DE               	movf	postinc2,w,c
  4827   000C3C  26E9               	addwf	fsr0l,f,c
  4828   000C3E  50DD               	movf	postdec2,w,c
  4829   000C40  22EA               	addwfc	fsr0h,f,c
  4830   000C42  CFE0 FFEF          	movff	bsr,indf0	;volatile
  4831   000C46  EE22  F0C3         	lfsr	2,_readyQueue+531
  4832   000C4A  EE00 F008          	lfsr	0,8
  4833   000C4E  50DE               	movf	postinc2,w,c
  4834   000C50  26E9               	addwf	fsr0l,f,c
  4835   000C52  50DD               	movf	postdec2,w,c
  4836   000C54  22EA               	addwfc	fsr0h,f,c
  4837   000C56  CFD8 FFEF          	movff	status,indf0	;volatile
  4838   000C5A  EE22  F0C3         	lfsr	2,_readyQueue+531
  4839   000C5E  EE00 F007          	lfsr	0,7
  4840   000C62  50DE               	movf	postinc2,w,c
  4841   000C64  26E9               	addwf	fsr0l,f,c
  4842   000C66  50DD               	movf	postdec2,w,c
  4843   000C68  22EA               	addwfc	fsr0h,f,c
  4844   000C6A  CFE8 FFEF          	movff	wreg,indf0	;volatile
  4845   000C6E  EE22  F0C3         	lfsr	2,_readyQueue+531
  4846   000C72  EE00 F069          	lfsr	0,105
  4847   000C76  50DE               	movf	postinc2,w,c
  4848   000C78  26E9               	addwf	fsr0l,f,c
  4849   000C7A  50DD               	movf	postdec2,w,c
  4850   000C7C  22EA               	addwfc	fsr0h,f,c
  4851   000C7E  6AEF               	clrf	indf0,c
  4852   000C80  EF72  F006         	goto	l2112
  4853   000C84                     l2108:
  4854   000C84  EE22  F0C3         	lfsr	2,_readyQueue+531
  4855   000C88  EE00 F069          	lfsr	0,105
  4856   000C8C  50DE               	movf	postinc2,w,c
  4857   000C8E  26E9               	addwf	fsr0l,f,c
  4858   000C90  50DD               	movf	postdec2,w,c
  4859   000C92  22EA               	addwfc	fsr0h,f,c
  4860   000C94  50EF               	movf	indf0,w,c
  4861   000C96  0D03               	mullw	3
  4862   000C98  CFF3 F037          	movff	prodl,btemp54
  4863   000C9C  CFF4 F038          	movff	prodh,btemp55
  4864   000CA0  EE22  F0C3         	lfsr	2,_readyQueue+531
  4865   000CA4  CFDE F035          	movff	postinc2,btemp52
  4866   000CA8  CFDD F036          	movff	postdec2,btemp53
  4867   000CAC  5037               	movf	btemp54^0,w,c
  4868   000CAE  2435               	addwf	btemp52^0,w,c
  4869   000CB0  6E33               	movwf	btemp50^0,c
  4870   000CB2  5038               	movf	btemp55^0,w,c
  4871   000CB4  2036               	addwfc	btemp53^0,w,c
  4872   000CB6  6E34               	movwf	(btemp50+1)^0,c
  4873   000CB8  0E09               	movlw	9
  4874   000CBA  2433               	addwf	btemp50^0,w,c
  4875   000CBC  6ED9               	movwf	fsr2l,c
  4876   000CBE  0E00               	movlw	0
  4877   000CC0  2034               	addwfc	btemp51^0,w,c
  4878   000CC2  6EDA               	movwf	fsr2h,c
  4879   000CC4  CFFD FFDE          	movff	tosl,postinc2	;volatile
  4880   000CC8  CFFE FFDE          	movff	tosh,postinc2	;volatile
  4881   000CCC  CFFF FFDE          	movff	tosu,postinc2	;volatile
  4882   000CD0  EE22  F0C3         	lfsr	2,_readyQueue+531
  4883   000CD4  EE00 F069          	lfsr	0,105
  4884   000CD8  50DE               	movf	postinc2,w,c
  4885   000CDA  26E9               	addwf	fsr0l,f,c
  4886   000CDC  50DD               	movf	postdec2,w,c
  4887   000CDE  22EA               	addwfc	fsr0h,f,c
  4888   000CE0  2AEF               	incf	indf0,f,c
  4889   000CE2  0006               	pop		;# 
  4890   000CE4                     l2112:
  4891   000CE4  50FC               	movf	252,w,c	;volatile
  4892   000CE6  A4D8               	btfss	status,2,c
  4893   000CE8  EF78  F006         	goto	u87_21
  4894   000CEC  EF7A  F006         	goto	u87_20
  4895   000CF0                     u87_21:
  4896   000CF0  EF42  F006         	goto	l2108
  4897   000CF4                     u87_20:
  4898   000CF4  EE22  F0C3         	lfsr	2,_readyQueue+531
  4899   000CF8  EE00 F003          	lfsr	0,3
  4900   000CFC  50DE               	movf	postinc2,w,c
  4901   000CFE  26E9               	addwf	fsr0l,f,c
  4902   000D00  50DD               	movf	postdec2,w,c
  4903   000D02  22EA               	addwfc	fsr0h,f,c
  4904   000D04  0E03               	movlw	3
  4905   000D06  6EEF               	movwf	indf0,c
  4906   000D08                     l2116:
  4907                           
  4908                           ;sync.c: 30:         scheduler();
  4909   000D08  EC0C  F00F         	call	_scheduler	;wreg free
  4910   000D0C  EE22  F0C3         	lfsr	2,_readyQueue+531
  4911   000D10  EE00 F003          	lfsr	0,3
  4912   000D14  50DE               	movf	postinc2,w,c
  4913   000D16  26E9               	addwf	fsr0l,f,c
  4914   000D18  50DD               	movf	postdec2,w,c
  4915   000D1A  22EA               	addwfc	fsr0h,f,c
  4916   000D1C  50EF               	movf	indf0,w,c
  4917   000D1E  A4D8               	btfss	status,2,c
  4918   000D20  EF94  F006         	goto	u88_21
  4919   000D24  EF96  F006         	goto	u88_20
  4920   000D28                     u88_21:
  4921   000D28  EF24  F007         	goto	l2140
  4922   000D2C                     u88_20:
  4923   000D2C  EE22  F0C3         	lfsr	2,_readyQueue+531
  4924   000D30  EE00 F006          	lfsr	0,6
  4925   000D34  50DE               	movf	postinc2,w,c
  4926   000D36  26E9               	addwf	fsr0l,f,c
  4927   000D38  50DD               	movf	postdec2,w,c
  4928   000D3A  22EA               	addwfc	fsr0h,f,c
  4929   000D3C  50EF               	movf	indf0,w,c
  4930   000D3E  6EE0               	movwf	224,c	;volatile
  4931   000D40  EE22  F0C3         	lfsr	2,_readyQueue+531
  4932   000D44  EE00 F008          	lfsr	0,8
  4933   000D48  50DE               	movf	postinc2,w,c
  4934   000D4A  26E9               	addwf	fsr0l,f,c
  4935   000D4C  50DD               	movf	postdec2,w,c
  4936   000D4E  22EA               	addwfc	fsr0h,f,c
  4937   000D50  50EF               	movf	indf0,w,c
  4938   000D52  6ED8               	movwf	216,c	;volatile
  4939   000D54  EE22  F0C3         	lfsr	2,_readyQueue+531
  4940   000D58  EE00 F007          	lfsr	0,7
  4941   000D5C  50DE               	movf	postinc2,w,c
  4942   000D5E  26E9               	addwf	fsr0l,f,c
  4943   000D60  50DD               	movf	postdec2,w,c
  4944   000D62  22EA               	addwfc	fsr0h,f,c
  4945   000D64  50EF               	movf	indf0,w,c
  4946   000D66  6E38               	movwf	btemp55^0,c
  4947   000D68  5038               	movf	btemp55^0,w,c
  4948   000D6A  6AFC               	clrf	252,c	;volatile
  4949   000D6C  EE22  F0C3         	lfsr	2,_readyQueue+531
  4950   000D70  EE00 F069          	lfsr	0,105
  4951   000D74  50DE               	movf	postinc2,w,c
  4952   000D76  26E9               	addwf	fsr0l,f,c
  4953   000D78  50DD               	movf	postdec2,w,c
  4954   000D7A  22EA               	addwfc	fsr0h,f,c
  4955   000D7C  50EF               	movf	indf0,w,c
  4956   000D7E  A4D8               	btfss	status,2,c
  4957   000D80  EFC4  F006         	goto	u89_21
  4958   000D84  EFC6  F006         	goto	u89_20
  4959   000D88                     u89_21:
  4960   000D88  EFDA  F006         	goto	l333
  4961   000D8C                     u89_20:
  4962   000D8C  0005               	push		;# 
  4963   000D8E  EE22  F0C3         	lfsr	2,_readyQueue+531
  4964   000D92  EE00 F001          	lfsr	0,1
  4965   000D96  50DE               	movf	postinc2,w,c
  4966   000D98  26E9               	addwf	fsr0l,f,c
  4967   000D9A  50DD               	movf	postdec2,w,c
  4968   000D9C  22EA               	addwfc	fsr0h,f,c
  4969   000D9E  CFEE F037          	movff	postinc0,btemp54
  4970   000DA2  CFED F038          	movff	postdec0,btemp55
  4971   000DA6  C037 FFFD          	movff	btemp54,tosl	;volatile
  4972   000DAA  C038 FFFE          	movff	btemp55,tosh	;volatile
  4973   000DAE  6AFF               	clrf	255,c	;volatile
  4974   000DB0  EF1A  F007         	goto	l2138
  4975   000DB4                     l333:
  4976   000DB4  0005               	push		;# 
  4977   000DB6  EE22  F0C3         	lfsr	2,_readyQueue+531
  4978   000DBA  EE00 F069          	lfsr	0,105
  4979   000DBE  50DE               	movf	postinc2,w,c
  4980   000DC0  26E9               	addwf	fsr0l,f,c
  4981   000DC2  50DD               	movf	postdec2,w,c
  4982   000DC4  22EA               	addwfc	fsr0h,f,c
  4983   000DC6  06EF               	decf	indf0,f,c
  4984   000DC8  EE22  F0C3         	lfsr	2,_readyQueue+531
  4985   000DCC  EE00 F069          	lfsr	0,105
  4986   000DD0  50DE               	movf	postinc2,w,c
  4987   000DD2  26E9               	addwf	fsr0l,f,c
  4988   000DD4  50DD               	movf	postdec2,w,c
  4989   000DD6  22EA               	addwfc	fsr0h,f,c
  4990   000DD8  50EF               	movf	indf0,w,c
  4991   000DDA  0D03               	mullw	3
  4992   000DDC  CFF3 F037          	movff	prodl,btemp54
  4993   000DE0  CFF4 F038          	movff	prodh,btemp55
  4994   000DE4  EE22  F0C3         	lfsr	2,_readyQueue+531
  4995   000DE8  CFDE F035          	movff	postinc2,btemp52
  4996   000DEC  CFDD F036          	movff	postdec2,btemp53
  4997   000DF0  5037               	movf	btemp54^0,w,c
  4998   000DF2  2435               	addwf	btemp52^0,w,c
  4999   000DF4  6E33               	movwf	btemp50^0,c
  5000   000DF6  5038               	movf	btemp55^0,w,c
  5001   000DF8  2036               	addwfc	btemp53^0,w,c
  5002   000DFA  6E34               	movwf	(btemp50+1)^0,c
  5003   000DFC  0E09               	movlw	9
  5004   000DFE  2433               	addwf	btemp50^0,w,c
  5005   000E00  6ED9               	movwf	fsr2l,c
  5006   000E02  0E00               	movlw	0
  5007   000E04  2034               	addwfc	btemp51^0,w,c
  5008   000E06  6EDA               	movwf	fsr2h,c
  5009   000E08  CFDE FFFD          	movff	postinc2,tosl	;volatile
  5010   000E0C  CFDE FFFE          	movff	postinc2,tosh	;volatile
  5011   000E10  CFDD FFFF          	movff	postdec2,tosu	;volatile
  5012   000E14  EE22  F0C3         	lfsr	2,_readyQueue+531
  5013   000E18  EE00 F069          	lfsr	0,105
  5014   000E1C  50DE               	movf	postinc2,w,c
  5015   000E1E  26E9               	addwf	fsr0l,f,c
  5016   000E20  50DD               	movf	postdec2,w,c
  5017   000E22  22EA               	addwfc	fsr0h,f,c
  5018   000E24  50EF               	movf	indf0,w,c
  5019   000E26  A4D8               	btfss	status,2,c
  5020   000E28  EF18  F007         	goto	u90_21
  5021   000E2C  EF1A  F007         	goto	u90_20
  5022   000E30                     u90_21:
  5023   000E30  EFDA  F006         	goto	l333
  5024   000E34                     u90_20:
  5025   000E34                     l2138:
  5026   000E34  EE22  F0C3         	lfsr	2,_readyQueue+531
  5027   000E38  EE00 F003          	lfsr	0,3
  5028   000E3C  50DE               	movf	postinc2,w,c
  5029   000E3E  26E9               	addwf	fsr0l,f,c
  5030   000E40  50DD               	movf	postdec2,w,c
  5031   000E42  22EA               	addwfc	fsr0h,f,c
  5032   000E44  0E01               	movlw	1
  5033   000E46  6EEF               	movwf	indf0,c
  5034   000E48                     l2140:
  5035                           
  5036                           ;sync.c: 34:     (INTCONbits.GIE = 1);
  5037   000E48  8EF2               	bsf	242,7,c	;volatile
  5038   000E4A                     
  5039                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  5040   000E4A  0012               	return		;funcret
  5041   000E4C                     __end_of_sem_wait:
  5042                           	callstack 0
  5043                           
  5044 ;; *************** function _scheduler *****************
  5045 ;; Defined at:
  5046 ;;		line 48 in file "scheduler.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;		None
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;		None
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  1  [STACK] void 
  5053 ;; Registers used:
  5054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp54, btemp55, prodl, prodh
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5060 ;;      Params:         0       0       0       0       0       0       0       0       0
  5061 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5062 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5063 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5064 ;;Total ram usage:        0 bytes
  5065 ;; Hardware stack levels used: 1
  5066 ;; Hardware stack levels required when called: 3
  5067 ;; This function calls:
  5068 ;;		_priority_scheduler
  5069 ;; This function is called by:
  5070 ;;		_os_delay
  5071 ;;		_ISR_TIMER_0
  5072 ;;		_sem_wait
  5073 ;; This function uses a reentrant model
  5074 ;;
  5075                           
  5076                           	psect	text26
  5077   001E18                     __ptext26:
  5078                           	callstack 0
  5079   001E18                     _scheduler:
  5080                           	callstack 16
  5081   001E18                     
  5082                           ;scheduler.c: 54:         readyQueue.taskRunning = priority_scheduler();
  5083   001E18  ECFD  F00A         	call	_priority_scheduler	;wreg free
  5084   001E1C  C001 F2C3          	movff	btemp0,_readyQueue+531
  5085   001E20  C002 F2C4          	movff	btemp1,_readyQueue+532
  5086   001E24                     
  5087                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5088   001E24  0012               	return		;funcret
  5089   001E26                     __end_of_scheduler:
  5090                           	callstack 0
  5091                           
  5092 ;; *************** function _priority_scheduler *****************
  5093 ;; Defined at:
  5094 ;;		line 28 in file "scheduler.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;		None
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  i               1    btemp4   unsigned char 
  5099 ;;  next_task       2  [STACK] PTR struct tcb
  5100 ;;		 -> readyQueue$readyQueue(530), readyQueue(533), 
  5101 ;;  highest_prio    1  [STACK] unsigned char 
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  2  [STACK] PTR struct tcb
  5104 ;; Registers used:
  5105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp54, btemp55, prodl, prodh
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5111 ;;      Params:         0       0       0       0       0       0       0       0       0
  5112 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5113 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5114 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5115 ;;Total ram usage:        0 bytes
  5116 ;; Hardware stack levels used: 1
  5117 ;; Hardware stack levels required when called: 3
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_scheduler
  5122 ;; This function uses a reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text27
  5126   0015FA                     __ptext27:
  5127                           	callstack 0
  5128   0015FA                     _priority_scheduler:
  5129                           	callstack 0
  5130                           
  5131                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5132   0015FA  52E6               	movf	postinc1,f,c
  5133   0015FC  52E6               	movf	postinc1,f,c
  5134   0015FE  52E6               	movf	postinc1,f,c
  5135   001600                     
  5136                           ;scheduler.c: 31:     tcb_t *next_task = &readyQueue.readyQueue[0];
  5137                           ;stkvar	_next_task @ sp[(-3)+0]
  5138   001600  0E00               	movlw	high _readyQueue
  5139   001602  6E01               	movwf	btemp0^0,c
  5140   001604  0EFE               	movlw	-2
  5141   001606  C001 FFE3          	movff	btemp0,plusw1
  5142   00160A  0EB0               	movlw	low _readyQueue
  5143   00160C  6E01               	movwf	btemp0^0,c
  5144   00160E  0EFD               	movlw	-3
  5145   001610  C001 FFE3          	movff	btemp0,plusw1
  5146   001614                     
  5147                           ;scheduler.c: 32:     uint8_t highest_priority = 0;
  5148                           ;stkvar	_highest_priority @ sp[(-3)+2]
  5149   001614  0EFF               	movlw	-1
  5150   001616  6AE3               	clrf	plusw1,c
  5151   001618                     
  5152                           ;scheduler.c: 35:     for (uint8_t i = 1; i < readyQueue.readyQueueSize; i++) {
  5153   001618  0E01               	movlw	1
  5154   00161A  6E05               	movwf	btemp4^0,c
  5155   00161C  EF50  F00B         	goto	l2088
  5156   001620                     l2078:
  5157                           
  5158                           ;scheduler.c: 36:         if (readyQueue.readyQueue[i].task_state == READY) {
  5159   001620  5005               	movf	btemp4^0,w,c
  5160   001622  0D6A               	mullw	106
  5161   001624  0EB3               	movlw	low (_readyQueue+3)
  5162   001626  24F3               	addwf	243,w,c
  5163   001628  6ED9               	movwf	fsr2l,c
  5164   00162A  0E00               	movlw	high (_readyQueue+3)
  5165   00162C  20F4               	addwfc	prodh,w,c
  5166   00162E  6EDA               	movwf	fsr2h,c
  5167   001630  50DF               	movf	indf2,w,c
  5168   001632  A4D8               	btfss	status,2,c
  5169   001634  EF1E  F00B         	goto	u82_21
  5170   001638  EF20  F00B         	goto	u82_20
  5171   00163C                     u82_21:
  5172   00163C  EF4F  F00B         	goto	l2086
  5173   001640                     u82_20:
  5174   001640                     
  5175                           ;scheduler.c: 37:             if (readyQueue.readyQueue[i].task_priority > highest_prior
      +                          ity) {
  5176   001640  5005               	movf	btemp4^0,w,c
  5177   001642  0D6A               	mullw	106
  5178   001644  0EB4               	movlw	low (_readyQueue+4)
  5179   001646  24F3               	addwf	243,w,c
  5180   001648  6ED9               	movwf	fsr2l,c
  5181   00164A  0E00               	movlw	high (_readyQueue+4)
  5182   00164C  20F4               	addwfc	prodh,w,c
  5183   00164E  6EDA               	movwf	fsr2h,c
  5184                           
  5185                           ;stkvar	_highest_priority @ sp[(-3)+2]
  5186   001650  0EFF               	movlw	-1
  5187   001652  CFE3 F001          	movff	plusw1,btemp0
  5188   001656  50DE               	movf	postinc2,w,c
  5189   001658  5C01               	subwf	btemp0^0,w,c
  5190   00165A  B0D8               	btfsc	status,0,c
  5191   00165C  EF32  F00B         	goto	u83_21
  5192   001660  EF34  F00B         	goto	u83_20
  5193   001664                     u83_21:
  5194   001664  EF4F  F00B         	goto	l2086
  5195   001668                     u83_20:
  5196   001668                     
  5197                           ;scheduler.c: 38:                 highest_priority = readyQueue.readyQueue[i].task_prior
      +                          ity;
  5198   001668  5005               	movf	btemp4^0,w,c
  5199   00166A  0D6A               	mullw	106
  5200   00166C  0EB4               	movlw	low (_readyQueue+4)
  5201   00166E  24F3               	addwf	243,w,c
  5202   001670  6ED9               	movwf	fsr2l,c
  5203   001672  0E00               	movlw	high (_readyQueue+4)
  5204   001674  20F4               	addwfc	prodh,w,c
  5205   001676  6EDA               	movwf	fsr2h,c
  5206   001678  50DF               	movf	indf2,w,c
  5207   00167A  6E38               	movwf	btemp55^0,c
  5208                           
  5209                           ;stkvar	_highest_priority @ sp[(-3)+2]
  5210   00167C  0EFF               	movlw	-1
  5211   00167E  C038 FFE3          	movff	btemp55,plusw1
  5212   001682                     
  5213                           ;scheduler.c: 39:                 next_task = &readyQueue.readyQueue[i];
  5214   001682  5005               	movf	btemp4^0,w,c
  5215   001684  0D6A               	mullw	106
  5216   001686  0EB0               	movlw	low _readyQueue
  5217   001688  24F3               	addwf	243,w,c
  5218   00168A  6E37               	movwf	btemp54^0,c
  5219   00168C  0E00               	movlw	high _readyQueue
  5220   00168E  20F4               	addwfc	prodh,w,c
  5221   001690  6E38               	movwf	(btemp54+1)^0,c
  5222                           
  5223                           ;stkvar	_next_task @ sp[(-3)+0]
  5224   001692  0EFE               	movlw	-2
  5225   001694  C038 FFE3          	movff	btemp55,plusw1
  5226   001698  0EFD               	movlw	-3
  5227   00169A  C037 FFE3          	movff	btemp54,plusw1
  5228   00169E                     l2086:
  5229                           
  5230                           ;scheduler.c: 42:     }
  5231   00169E  2A05               	incf	btemp4^0,f,c
  5232   0016A0                     l2088:
  5233   0016A0  EE22  F0C2         	lfsr	2,_readyQueue+530
  5234   0016A4  50DE               	movf	postinc2,w,c
  5235   0016A6  5C05               	subwf	btemp4^0,w,c
  5236   0016A8  A0D8               	btfss	status,0,c
  5237   0016AA  EF59  F00B         	goto	u84_21
  5238   0016AE  EF5B  F00B         	goto	u84_20
  5239   0016B2                     u84_21:
  5240   0016B2  EF10  F00B         	goto	l2078
  5241   0016B6                     u84_20:
  5242   0016B6                     
  5243                           ;scheduler.c: 44:     return next_task;
  5244                           ;stkvar	_next_task @ sp[(-3)+0]
  5245   0016B6  0EFD               	movlw	-3
  5246   0016B8  CFE3 F001          	movff	plusw1,btemp0
  5247   0016BC  0F01               	addlw	1
  5248   0016BE  CFE3 F002          	movff	plusw1,btemp1
  5249   0016C2                     
  5250                           ; _priority_scheduler: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
  5251   0016C2  52E5               	movf	postdec1,f,c
  5252   0016C4  52E5               	movf	postdec1,f,c
  5253   0016C6  52E5               	movf	postdec1,f,c
  5254   0016C8  0012               	return		;funcret
  5255   0016CA                     __end_of_priority_scheduler:
  5256                           	callstack 0
  5257                           
  5258 ;; *************** function ___awmod *****************
  5259 ;; Defined at:
  5260 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\awmod.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  dividend        2    wtemp14  int 
  5263 ;;  divisor         2    wtemp15  int 
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;  sign            1  [STACK] unsigned char 
  5266 ;;  counter         1    btemp4   unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  2  [STACK] int 
  5269 ;; Registers used:
  5270 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp0, btemp1, btemp4, btemp28, btemp29, btemp30, btemp31
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5276 ;;      Params:         0       0       0       0       0       0       0       0       0
  5277 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5279 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5280 ;;Total ram usage:        0 bytes
  5281 ;; Hardware stack levels used: 1
  5282 ;; Hardware stack levels required when called: 3
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_sem_wait
  5287 ;;		_sem_post
  5288 ;;		_read_pipe
  5289 ;;		_write_pipe
  5290 ;; This function uses a reentrant model
  5291 ;;
  5292                           
  5293                           	psect	text28
  5294   0016CA                     __ptext28:
  5295                           	callstack 0
  5296   0016CA                     ___awmod:
  5297                           	callstack 0
  5298                           
  5299                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5300   0016CA  52E6               	movf	postinc1,f,c
  5301   0016CC  6A05               	clrf	btemp4^0,c
  5302   0016CE  BE1E               	btfsc	(btemp28+1)^0,7,c
  5303   0016D0  EF6E  F00B         	goto	u76_20
  5304   0016D4  EF6C  F00B         	goto	u76_21
  5305   0016D8                     u76_21:
  5306   0016D8  EF74  F00B         	goto	l2016
  5307   0016DC                     u76_20:
  5308   0016DC  6C1D               	negf	btemp28^0,c
  5309   0016DE  1E1E               	comf	(btemp28+1)^0,f,c
  5310   0016E0  B0D8               	btfsc	status,0,c
  5311   0016E2  2A1E               	incf	(btemp28+1)^0,f,c
  5312   0016E4  0E01               	movlw	1
  5313   0016E6  6E05               	movwf	btemp4^0,c
  5314   0016E8                     l2016:
  5315   0016E8  BE20               	btfsc	(btemp30+1)^0,7,c
  5316   0016EA  EF7B  F00B         	goto	u77_20
  5317   0016EE  EF79  F00B         	goto	u77_21
  5318   0016F2                     u77_21:
  5319   0016F2  EF7F  F00B         	goto	l2020
  5320   0016F6                     u77_20:
  5321   0016F6  6C1F               	negf	btemp30^0,c
  5322   0016F8  1E20               	comf	(btemp30+1)^0,f,c
  5323   0016FA  B0D8               	btfsc	status,0,c
  5324   0016FC  2A20               	incf	(btemp30+1)^0,f,c
  5325   0016FE                     l2020:
  5326                           
  5327                           ;_sign stored from btemp4
  5328                           ;register	btemp4
  5329                           ;stkvar	_sign @ sp[(-1)+0]
  5330   0016FE  0EFF               	movlw	-1
  5331   001700  C005 FFE3          	movff	btemp4,plusw1
  5332   001704  501F               	movf	btemp30^0,w,c
  5333   001706  1020               	iorwf	(btemp30+1)^0,w,c
  5334   001708  B4D8               	btfsc	status,2,c
  5335   00170A  EF89  F00B         	goto	u78_21
  5336   00170E  EF8B  F00B         	goto	u78_20
  5337   001712                     u78_21:
  5338   001712  EFAF  F00B         	goto	l2038
  5339   001716                     u78_20:
  5340   001716  0E01               	movlw	1
  5341   001718  6E05               	movwf	btemp4^0,c
  5342   00171A  EF93  F00B         	goto	l2028
  5343   00171E                     l2024:
  5344   00171E  90D8               	bcf	status,0,c
  5345   001720  361F               	rlcf	btemp30^0,f,c
  5346   001722  3620               	rlcf	btemp31^0,f,c
  5347   001724  2A05               	incf	btemp4^0,f,c
  5348   001726                     l2028:
  5349   001726  AE20               	btfss	(btemp30+1)^0,7,c
  5350   001728  EF98  F00B         	goto	u79_21
  5351   00172C  EF9A  F00B         	goto	u79_20
  5352   001730                     u79_21:
  5353   001730  EF8F  F00B         	goto	l2024
  5354   001734                     u79_20:
  5355   001734                     l2030:
  5356   001734  501F               	movf	btemp30^0,w,c
  5357   001736  5C1D               	subwf	btemp28^0,w,c
  5358   001738  5020               	movf	(btemp30+1)^0,w,c
  5359   00173A  581E               	subwfb	(btemp28+1)^0,w,c
  5360   00173C  A0D8               	btfss	status,0,c
  5361   00173E  EFA3  F00B         	goto	u80_21
  5362   001742  EFA5  F00B         	goto	u80_20
  5363   001746                     u80_21:
  5364   001746  EFA9  F00B         	goto	l2034
  5365   00174A                     u80_20:
  5366   00174A  501F               	movf	btemp30^0,w,c
  5367   00174C  5E1D               	subwf	btemp28^0,f,c
  5368   00174E  5020               	movf	(btemp30+1)^0,w,c
  5369   001750  5A1E               	subwfb	(btemp28+1)^0,f,c
  5370   001752                     l2034:
  5371   001752  90D8               	bcf	status,0,c
  5372   001754  3220               	rrcf	btemp31^0,f,c
  5373   001756  321F               	rrcf	btemp30^0,f,c
  5374   001758  2E05               	decfsz	btemp4^0,f,c
  5375   00175A  EF9A  F00B         	goto	l2030
  5376   00175E                     l2038:
  5377                           
  5378                           ; _sign loaded to btemp4
  5379                           ;stkvar	_sign @ sp[(-1)+0]
  5380                           ;register	btemp4
  5381   00175E  0EFF               	movlw	-1
  5382   001760  CFE3 F005          	movff	plusw1,btemp4
  5383   001764  5005               	movf	btemp4^0,w,c
  5384   001766  B4D8               	btfsc	status,2,c
  5385   001768  EFB8  F00B         	goto	u81_21
  5386   00176C  EFBA  F00B         	goto	u81_20
  5387   001770                     u81_21:
  5388   001770  EFBE  F00B         	goto	l2042
  5389   001774                     u81_20:
  5390   001774  6C1D               	negf	btemp28^0,c
  5391   001776  1E1E               	comf	(btemp28+1)^0,f,c
  5392   001778  B0D8               	btfsc	status,0,c
  5393   00177A  2A1E               	incf	(btemp28+1)^0,f,c
  5394   00177C                     l2042:
  5395   00177C  C01D F001          	movff	btemp28,btemp0
  5396   001780  C01E F002          	movff	btemp28+1,btemp1
  5397   001784                     
  5398                           ; ___awmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  5399   001784  52E5               	movf	postdec1,f,c
  5400   001786  0012               	return		;funcret
  5401   001788                     __end_of___awmod:
  5402                           	callstack 0
  5403                           
  5404 ;; *************** function _tarefa_controle_motores *****************
  5405 ;; Defined at:
  5406 ;;		line 88 in file "user_app.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1  [STACK] void 
  5413 ;; Registers used:
  5414 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp13, btemp5
      +0, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, prodh, cstack
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5420 ;;      Params:         0       0       0       0       0       0       0       0       0
  5421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5423 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5424 ;;Total ram usage:        0 bytes
  5425 ;; Hardware stack levels used: 1
  5426 ;; Hardware stack levels required when called: 6
  5427 ;; This function calls:
  5428 ;;		_os_delay
  5429 ;;		_pwm_set_duty_cycle_motor1
  5430 ;;		_pwm_set_duty_cycle_motor2
  5431 ;;		_pwm_set_duty_cycle_motor3
  5432 ;;		_pwm_set_duty_cycle_motor4
  5433 ;; This function is called by:
  5434 ;;		_main
  5435 ;; This function uses a reentrant model
  5436 ;;
  5437                           
  5438                           	psect	text29
  5439   001C14                     __ptext29:
  5440                           	callstack 0
  5441   001C14                     _tarefa_controle_motores:
  5442                           	callstack 19
  5443   001C14                     l129:
  5444   001C14                     
  5445                           ;user_app.c: 93:         pwm_set_duty_cycle_motor1(velocidade_motores.motor1_speed);
  5446                           ;register	wtemp6
  5447   001C14  C039  F00D         	movff	_velocidade_motores,btemp12
  5448   001C18  C03A  F00E         	movff	_velocidade_motores+1,btemp13
  5449   001C1C  ECC6  F00E         	call	_pwm_set_duty_cycle_motor1	;wreg free
  5450                           
  5451                           ;user_app.c: 94:         pwm_set_duty_cycle_motor2(velocidade_motores.motor2_speed);
  5452                           ;register	wtemp6
  5453   001C20  C03B  F00D         	movff	_velocidade_motores+2,btemp12
  5454   001C24  C03C  F00E         	movff	_velocidade_motores+3,btemp13
  5455   001C28  ECB5  F00E         	call	_pwm_set_duty_cycle_motor2	;wreg free
  5456                           
  5457                           ;user_app.c: 95:         pwm_set_duty_cycle_motor3(velocidade_motores.motor3_speed);
  5458                           ;register	wtemp6
  5459   001C2C  C03D  F00D         	movff	_velocidade_motores+4,btemp12
  5460   001C30  C03E  F00E         	movff	_velocidade_motores+5,btemp13
  5461   001C34  ECA4  F00E         	call	_pwm_set_duty_cycle_motor3	;wreg free
  5462                           
  5463                           ;user_app.c: 96:         pwm_set_duty_cycle_motor4(velocidade_motores.motor4_speed);
  5464                           ;register	wtemp6
  5465   001C38  C03F  F00D         	movff	_velocidade_motores+6,btemp12
  5466   001C3C  C040  F00E         	movff	_velocidade_motores+7,btemp13
  5467   001C40  EC93  F00E         	call	_pwm_set_duty_cycle_motor4	;wreg free
  5468   001C44                     
  5469                           ;user_app.c: 98:         os_delay(100);
  5470                           ;register	btemp12
  5471   001C44  0E64               	movlw	100
  5472   001C46  6E0D               	movwf	btemp12^0,c
  5473   001C48  EC26  F007         	call	_os_delay	;wreg free
  5474   001C4C  EF0A  F00E         	goto	l129
  5475                           
  5476                           ; _tarefa_controle_motores: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 0, argsize = 0, vargsize = 0
  5477   001C50  0012               	return		;funcret
  5478   001C52                     __end_of_tarefa_controle_motores:
  5479                           	callstack 0
  5480                           
  5481 ;; *************** function _pwm_set_duty_cycle_motor4 *****************
  5482 ;; Defined at:
  5483 ;;		line 102 in file "io.c"
  5484 ;; Parameters:    Size  Location     Type
  5485 ;;  duty_cycle      2    wtemp6   unsigned short 
  5486 ;; Auto vars:     Size  Location     Type
  5487 ;;		None
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  1  [STACK] void 
  5490 ;; Registers used:
  5491 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp12, btemp13
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5497 ;;      Params:         0       0       0       0       0       0       0       0       0
  5498 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5499 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5500 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5501 ;;Total ram usage:        0 bytes
  5502 ;; Hardware stack levels used: 1
  5503 ;; Hardware stack levels required when called: 3
  5504 ;; This function calls:
  5505 ;;		Nothing
  5506 ;; This function is called by:
  5507 ;;		_tarefa_controle_motores
  5508 ;; This function uses a reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text30
  5512   001D26                     __ptext30:
  5513                           	callstack 0
  5514   001D26                     _pwm_set_duty_cycle_motor4:
  5515                           	callstack 21
  5516   001D26                     
  5517                           ;io.c: 102: void pwm_set_duty_cycle_motor4(uint16_t duty_cycle);io.c: 103: {;io.c: 104: 
      +                              if (duty_cycle > 1023) duty_cycle = 1023;
  5518   001D26  0E04               	movlw	4
  5519   001D28  5C0E               	subwf	(btemp12+1)^0,w,c
  5520   001D2A  A0D8               	btfss	status,0,c
  5521   001D2C  EF9A  F00E         	goto	u104_21
  5522   001D30  EF9C  F00E         	goto	u104_20
  5523   001D34                     u104_21:
  5524   001D34  EF9F  F00E         	goto	l2264
  5525   001D38                     u104_20:
  5526   001D38  0E03               	movlw	3
  5527   001D3A  6E0E               	movwf	(btemp12+1)^0,c
  5528   001D3C  680D               	setf	btemp12^0,c
  5529   001D3E                     l2264:
  5530                           
  5531                           ;io.c: 105:     motor_d_duty = duty_cycle;
  5532   001D3E  C00D F043          	movff	btemp12,_motor_d_duty
  5533   001D42  C00E F044          	movff	btemp12+1,_motor_d_duty+1
  5534   001D46                     
  5535                           ; _pwm_set_duty_cycle_motor4: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 0, argsize = 0, vargsize = 0
  5536   001D46  0012               	return		;funcret
  5537   001D48                     __end_of_pwm_set_duty_cycle_motor4:
  5538                           	callstack 0
  5539                           
  5540 ;; *************** function _pwm_set_duty_cycle_motor3 *****************
  5541 ;; Defined at:
  5542 ;;		line 95 in file "io.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  duty_cycle      2    wtemp6   unsigned short 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;		None
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1  [STACK] void 
  5549 ;; Registers used:
  5550 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp12, btemp13
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5556 ;;      Params:         0       0       0       0       0       0       0       0       0
  5557 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5559 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5560 ;;Total ram usage:        0 bytes
  5561 ;; Hardware stack levels used: 1
  5562 ;; Hardware stack levels required when called: 3
  5563 ;; This function calls:
  5564 ;;		Nothing
  5565 ;; This function is called by:
  5566 ;;		_tarefa_controle_motores
  5567 ;; This function uses a reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text31
  5571   001D48                     __ptext31:
  5572                           	callstack 0
  5573   001D48                     _pwm_set_duty_cycle_motor3:
  5574                           	callstack 21
  5575   001D48                     
  5576                           ;io.c: 95: void pwm_set_duty_cycle_motor3(uint16_t duty_cycle);io.c: 96: {;io.c: 97:    
      +                           if (duty_cycle > 1023) duty_cycle = 1023;
  5577   001D48  0E04               	movlw	4
  5578   001D4A  5C0E               	subwf	(btemp12+1)^0,w,c
  5579   001D4C  A0D8               	btfss	status,0,c
  5580   001D4E  EFAB  F00E         	goto	u103_21
  5581   001D52  EFAD  F00E         	goto	u103_20
  5582   001D56                     u103_21:
  5583   001D56  EFB0  F00E         	goto	l2258
  5584   001D5A                     u103_20:
  5585   001D5A  0E03               	movlw	3
  5586   001D5C  6E0E               	movwf	(btemp12+1)^0,c
  5587   001D5E  680D               	setf	btemp12^0,c
  5588   001D60                     l2258:
  5589                           
  5590                           ;io.c: 98:     motor_c_duty = duty_cycle;
  5591   001D60  C00D F045          	movff	btemp12,_motor_c_duty
  5592   001D64  C00E F046          	movff	btemp12+1,_motor_c_duty+1
  5593   001D68                     
  5594                           ; _pwm_set_duty_cycle_motor3: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 0, argsize = 0, vargsize = 0
  5595   001D68  0012               	return		;funcret
  5596   001D6A                     __end_of_pwm_set_duty_cycle_motor3:
  5597                           	callstack 0
  5598                           
  5599 ;; *************** function _pwm_set_duty_cycle_motor2 *****************
  5600 ;; Defined at:
  5601 ;;		line 88 in file "io.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  duty_cycle      2    wtemp6   unsigned short 
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;		None
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  1  [STACK] void 
  5608 ;; Registers used:
  5609 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp12, btemp13
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5615 ;;      Params:         0       0       0       0       0       0       0       0       0
  5616 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5617 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5618 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5619 ;;Total ram usage:        0 bytes
  5620 ;; Hardware stack levels used: 1
  5621 ;; Hardware stack levels required when called: 3
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_tarefa_controle_motores
  5626 ;; This function uses a reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text32
  5630   001D6A                     __ptext32:
  5631                           	callstack 0
  5632   001D6A                     _pwm_set_duty_cycle_motor2:
  5633                           	callstack 21
  5634   001D6A                     
  5635                           ;io.c: 88: void pwm_set_duty_cycle_motor2(uint16_t duty_cycle);io.c: 89: {;io.c: 90:    
      +                           if (duty_cycle > 1023) duty_cycle = 1023;
  5636   001D6A  0E04               	movlw	4
  5637   001D6C  5C0E               	subwf	(btemp12+1)^0,w,c
  5638   001D6E  A0D8               	btfss	status,0,c
  5639   001D70  EFBC  F00E         	goto	u102_21
  5640   001D74  EFBE  F00E         	goto	u102_20
  5641   001D78                     u102_21:
  5642   001D78  EFC1  F00E         	goto	l2252
  5643   001D7C                     u102_20:
  5644   001D7C  0E03               	movlw	3
  5645   001D7E  6E0E               	movwf	(btemp12+1)^0,c
  5646   001D80  680D               	setf	btemp12^0,c
  5647   001D82                     l2252:
  5648                           
  5649                           ;io.c: 91:     motor_b_duty = duty_cycle;
  5650   001D82  C00D F047          	movff	btemp12,_motor_b_duty
  5651   001D86  C00E F048          	movff	btemp12+1,_motor_b_duty+1
  5652   001D8A                     
  5653                           ; _pwm_set_duty_cycle_motor2: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 0, argsize = 0, vargsize = 0
  5654   001D8A  0012               	return		;funcret
  5655   001D8C                     __end_of_pwm_set_duty_cycle_motor2:
  5656                           	callstack 0
  5657                           
  5658 ;; *************** function _pwm_set_duty_cycle_motor1 *****************
  5659 ;; Defined at:
  5660 ;;		line 81 in file "io.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  duty_cycle      2    wtemp6   unsigned short 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;		None
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  1  [STACK] void 
  5667 ;; Registers used:
  5668 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp12, btemp13
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5674 ;;      Params:         0       0       0       0       0       0       0       0       0
  5675 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5676 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5677 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5678 ;;Total ram usage:        0 bytes
  5679 ;; Hardware stack levels used: 1
  5680 ;; Hardware stack levels required when called: 3
  5681 ;; This function calls:
  5682 ;;		Nothing
  5683 ;; This function is called by:
  5684 ;;		_tarefa_controle_motores
  5685 ;; This function uses a reentrant model
  5686 ;;
  5687                           
  5688                           	psect	text33
  5689   001D8C                     __ptext33:
  5690                           	callstack 0
  5691   001D8C                     _pwm_set_duty_cycle_motor1:
  5692                           	callstack 21
  5693   001D8C                     
  5694                           ;io.c: 81: void pwm_set_duty_cycle_motor1(uint16_t duty_cycle);io.c: 82: {;io.c: 83:    
      +                           if (duty_cycle > 1023) duty_cycle = 1023;
  5695   001D8C  0E04               	movlw	4
  5696   001D8E  5C0E               	subwf	(btemp12+1)^0,w,c
  5697   001D90  A0D8               	btfss	status,0,c
  5698   001D92  EFCD  F00E         	goto	u101_21
  5699   001D96  EFCF  F00E         	goto	u101_20
  5700   001D9A                     u101_21:
  5701   001D9A  EFD2  F00E         	goto	l2246
  5702   001D9E                     u101_20:
  5703   001D9E  0E03               	movlw	3
  5704   001DA0  6E0E               	movwf	(btemp12+1)^0,c
  5705   001DA2  680D               	setf	btemp12^0,c
  5706   001DA4                     l2246:
  5707                           
  5708                           ;io.c: 84:     motor_a_duty = duty_cycle;
  5709   001DA4  C00D F049          	movff	btemp12,_motor_a_duty
  5710   001DA8  C00E F04A          	movff	btemp12+1,_motor_a_duty+1
  5711   001DAC                     
  5712                           ; _pwm_set_duty_cycle_motor1: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 0, argsize = 0, vargsize = 0
  5713   001DAC  0012               	return		;funcret
  5714   001DAE                     __end_of_pwm_set_duty_cycle_motor1:
  5715                           	callstack 0
  5716                           
  5717 ;; *************** function _tarefa_leitura_sensores *****************
  5718 ;; Defined at:
  5719 ;;		line 103 in file "user_app.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;		None
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;  dados_sensor    4  [STACK] struct .
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  1  [STACK] void 
  5726 ;; Registers used:
  5727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp13, btemp1
      +4, btemp15, btemp20, btemp28, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, pr
      +odh, cstack
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5733 ;;      Params:         0       0       0       0       0       0       0       0       0
  5734 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5735 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5736 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5737 ;;Total ram usage:        0 bytes
  5738 ;; Hardware stack levels used: 1
  5739 ;; Hardware stack levels required when called: 6
  5740 ;; This function calls:
  5741 ;;		_adc_read
  5742 ;;		_os_delay
  5743 ;;		_set_channel
  5744 ;;		_write_pipe
  5745 ;; This function is called by:
  5746 ;;		_main
  5747 ;; This function uses a reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text34
  5751   0019E2                     __ptext34:
  5752                           	callstack 0
  5753   0019E2                     _tarefa_leitura_sensores:
  5754                           	callstack 0
  5755                           
  5756                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5757   0019E2  52E6               	movf	postinc1,f,c
  5758   0019E4  52E6               	movf	postinc1,f,c
  5759   0019E6  52E6               	movf	postinc1,f,c
  5760   0019E8  52E6               	movf	postinc1,f,c
  5761   0019EA                     l135:
  5762   0019EA                     
  5763                           ;user_app.c: 108:         set_channel(CHANNEL_0);
  5764                           ;register	btemp28
  5765   0019EA  0E00               	movlw	0
  5766   0019EC  6E1D               	movwf	btemp28^0,c
  5767   0019EE  ECFB  F00E         	call	_set_channel	;wreg free
  5768   0019F2                     
  5769                           ;user_app.c: 109:         dados_sensores.giroscopio = adc_read();
  5770   0019F2  ECE4  F00E         	call	_adc_read	;wreg free
  5771                           
  5772                           ;stkvar	_dados_sensores @ sp[(-4)+0]
  5773   0019F6  0EFC               	movlw	-4
  5774   0019F8  C001 FFE3          	movff	btemp0,plusw1
  5775   0019FC  0F01               	addlw	1
  5776   0019FE  C002 FFE3          	movff	btemp1,plusw1
  5777   001A02                     
  5778                           ;user_app.c: 111:         set_channel(CHANNEL_1);
  5779                           ;register	btemp28
  5780   001A02  0E01               	movlw	1
  5781   001A04  6E1D               	movwf	btemp28^0,c
  5782   001A06  ECFB  F00E         	call	_set_channel	;wreg free
  5783   001A0A                     
  5784                           ;user_app.c: 112:         dados_sensores.acelerometro = adc_read();
  5785   001A0A  ECE4  F00E         	call	_adc_read	;wreg free
  5786                           
  5787                           ;stkvar	_dados_sensores @ sp[(-4)+0]
  5788   001A0E  0EFE               	movlw	254
  5789   001A10  24E1               	addwf	fsr1l,w,c
  5790   001A12  6ED9               	movwf	fsr2l,c
  5791   001A14  0EFF               	movlw	255
  5792   001A16  20E2               	addwfc	fsr1h,w,c
  5793   001A18  6EDA               	movwf	fsr2h,c
  5794   001A1A  C001 FFDE          	movff	btemp0,postinc2
  5795   001A1E  C002 FFDD          	movff	btemp1,postdec2
  5796   001A22                     
  5797                           ;user_app.c: 115:         write_pipe(&pipe_sensores, &dados_sensores, sizeof(sensor_data
      +                          _t));
  5798                           ;register	btemp12
  5799   001A22  0E81               	movlw	low _pipe_sensores
  5800   001A24  6E0D               	movwf	btemp12^0,c
  5801                           
  5802                           ;register	btemp13
  5803   001A26  0E04               	movlw	4
  5804   001A28  6E0E               	movwf	btemp13^0,c
  5805                           
  5806                           ;stkvar	_dados_sensores @ sp[(-4)+0]
  5807   001A2A  0EFC               	movlw	252
  5808   001A2C  24E1               	addwf	fsr1l,w,c
  5809   001A2E  6E37               	movwf	btemp54^0,c
  5810   001A30  0EFF               	movlw	255
  5811   001A32  20E2               	addwfc	fsr1h,w,c
  5812   001A34  6E38               	movwf	btemp55^0,c
  5813                           
  5814                           ;register	wtemp7
  5815   001A36  C037 F00F          	movff	btemp54,btemp14
  5816   001A3A  C038 F010          	movff	btemp55,btemp15
  5817   001A3E  EC21  F00A         	call	_write_pipe	;wreg free
  5818   001A42                     
  5819                           ;user_app.c: 117:         os_delay(150);
  5820                           ;register	btemp12
  5821   001A42  0E96               	movlw	150
  5822   001A44  6E0D               	movwf	btemp12^0,c
  5823   001A46  EC26  F007         	call	_os_delay	;wreg free
  5824   001A4A  EFF5  F00C         	goto	l135
  5825                           
  5826                           ; _tarefa_leitura_sensores: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 0, argsize = 0, vargsize = 0
  5827   001A4E  52E5               	movf	postdec1,f,c
  5828   001A50  52E5               	movf	postdec1,f,c
  5829   001A52  52E5               	movf	postdec1,f,c
  5830   001A54  52E5               	movf	postdec1,f,c
  5831   001A56  0012               	return		;funcret
  5832   001A58                     __end_of_tarefa_leitura_sensores:
  5833                           	callstack 0
  5834                           
  5835 ;; *************** function _write_pipe *****************
  5836 ;; Defined at:
  5837 ;;		line 35 in file "pipe.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;  p               1    btemp12  PTR struct pipe
  5840 ;;		 -> pipe_bateria(33), pipe_sensores(33), 
  5841 ;;  buffer          2    wtemp7   PTR void 
  5842 ;;		 -> nivel_bateria(2), dados_sensores(4), 
  5843 ;;  size            1    btemp13  unsigned char 
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;  size            1    btemp13  unsigned char 
  5846 ;;  p               1    btemp12  PTR struct pipe
  5847 ;;		 -> pipe_bateria(33), pipe_sensores(33), 
  5848 ;;  i               1  [STACK] unsigned char 
  5849 ;;  data_buffer     2  [STACK] PTR unsigned char 
  5850 ;;		 -> nivel_bateria(2), dados_sensores(4), 
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  1  [STACK] void 
  5853 ;; Registers used:
  5854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp13, btemp1
      +4, btemp15, btemp20, btemp28, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, pr
      +odh, cstack
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5860 ;;      Params:         0       0       0       0       0       0       0       0       0
  5861 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5862 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5863 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5864 ;;Total ram usage:        0 bytes
  5865 ;; Hardware stack levels used: 1
  5866 ;; Hardware stack levels required when called: 5
  5867 ;; This function calls:
  5868 ;;		___awmod
  5869 ;;		_sem_post
  5870 ;;		_sem_wait
  5871 ;; This function is called by:
  5872 ;;		_tarefa_leitura_sensores
  5873 ;;		_tarefa_monitoramento_bateria
  5874 ;; This function uses a reentrant model
  5875 ;;
  5876                           
  5877                           	psect	text35
  5878   001442                     __ptext35:
  5879                           	callstack 0
  5880   001442                     _write_pipe:
  5881                           	callstack 0
  5882                           
  5883                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5884   001442  52E6               	movf	postinc1,f,c
  5885   001444  52E6               	movf	postinc1,f,c
  5886   001446  52E6               	movf	postinc1,f,c
  5887   001448                     
  5888                           ;pipe.c: 35: void write_pipe(pipe_t *p, void *buffer, uint8_t size);pipe.c: 36: {;pipe.c
      +                          : 37:     char *data_buffer = (char*)buffer;
  5889                           ;stkvar	_data_buffer @ sp[(-3)+1]
  5890   001448  0EFF               	movlw	-1
  5891   00144A  C010 FFE3          	movff	btemp15,plusw1
  5892   00144E  0EFE               	movlw	-2
  5893   001450  C00F FFE3          	movff	btemp14,plusw1
  5894   001454                     
  5895                           ;pipe.c: 38:     for (uint8_t i = 0; i < size; i++) {
  5896   001454  6A05               	clrf	btemp4^0,c
  5897   001456  EF85  F00A         	goto	l2288
  5898   00145A                     l372:
  5899                           
  5900                           ;pipe.c: 39:         (INTCONbits.GIE = 0);
  5901   00145A  9EF2               	bcf	242,7,c	;volatile
  5902                           
  5903                           ;_i stored from btemp4
  5904                           ;register	btemp4
  5905                           ;stkvar	_i @ sp[(-3)+0]
  5906   00145C  0EFD               	movlw	-3
  5907   00145E  C005 FFE3          	movff	btemp4,plusw1
  5908   001462                     
  5909                           ;pipe.c: 40:         sem_wait(&p->pipe_sem_write);
  5910   001462  500D               	movf	btemp12^0,w,c
  5911   001464  0F13               	addlw	19
  5912                           
  5913                           ;register	btemp20
  5914   001466  6E15               	movwf	btemp20^0,c
  5915   001468  ECCB  F005         	call	_sem_wait	;wreg free
  5916   00146C                     
  5917                           ;pipe.c: 41:         p->pipe_data[p->pipe_pos_write] = data_buffer[i];
  5918                           ;stkvar	_i @ sp[(-3)+0]
  5919   00146C  0EFD               	movlw	-3
  5920   00146E  CFE3 F038          	movff	plusw1,btemp55
  5921                           
  5922                           ;stkvar	_data_buffer @ sp[(-3)+1]
  5923   001472  0EFE               	movlw	-2
  5924   001474  CFE3 F035          	movff	plusw1,btemp52
  5925   001478  0F01               	addlw	1
  5926   00147A  CFE3 F036          	movff	plusw1,btemp53
  5927   00147E  5038               	movf	btemp55^0,w,c
  5928   001480  2435               	addwf	btemp52^0,w,c
  5929   001482  6ED9               	movwf	fsr2l,c
  5930   001484  0E00               	movlw	0
  5931   001486  2036               	addwfc	btemp53^0,w,c
  5932   001488  6EDA               	movwf	fsr2h,c
  5933   00148A  500D               	movf	btemp12^0,w,c
  5934   00148C  6EE9               	movwf	fsr0l,c
  5935   00148E  6AEA               	clrf	fsr0h,c
  5936   001490  0E01               	movlw	1
  5937   001492  26E9               	addwf	fsr0l,f,c
  5938   001494  50EF               	movf	indf0,w,c
  5939   001496  6E38               	movwf	btemp55^0,c
  5940   001498  500D               	movf	btemp12^0,w,c
  5941   00149A  6EE9               	movwf	fsr0l,c
  5942   00149C  6AEA               	clrf	fsr0h,c
  5943   00149E  0E02               	movlw	2
  5944   0014A0  26E9               	addwf	fsr0l,f,c
  5945   0014A2  CFEE F035          	movff	postinc0,btemp52
  5946   0014A6  CFED F036          	movff	postdec0,btemp53
  5947   0014AA  5038               	movf	btemp55^0,w,c
  5948   0014AC  2435               	addwf	btemp52^0,w,c
  5949   0014AE  6EE9               	movwf	fsr0l,c
  5950   0014B0  0E00               	movlw	0
  5951   0014B2  2036               	addwfc	btemp53^0,w,c
  5952   0014B4  6EEA               	movwf	fsr0h,c
  5953   0014B6  CFDF FFEF          	movff	indf2,indf0
  5954   0014BA                     
  5955                           ;pipe.c: 42:         p->pipe_pos_write = (p->pipe_pos_write + 1) % p->pipe_size;
  5956   0014BA  500D               	movf	btemp12^0,w,c
  5957   0014BC  6ED9               	movwf	fsr2l,c
  5958   0014BE  6ADA               	clrf	fsr2h,c
  5959   0014C0  0E01               	movlw	1
  5960   0014C2  26D9               	addwf	fsr2l,f,c
  5961   0014C4  500D               	movf	btemp12^0,w,c
  5962   0014C6  6EE9               	movwf	fsr0l,c
  5963   0014C8  6AEA               	clrf	fsr0h,c
  5964   0014CA  0E01               	movlw	1
  5965   0014CC  26E9               	addwf	fsr0l,f,c
  5966   0014CE  50EF               	movf	indf0,w,c
  5967   0014D0  6E38               	movwf	btemp55^0,c
  5968   0014D2  0E01               	movlw	1
  5969   0014D4  2438               	addwf	btemp55^0,w,c
  5970                           
  5971                           ;register	wtemp14
  5972   0014D6  6E1D               	movwf	btemp28^0,c
  5973   0014D8  6A1E               	clrf	(btemp28+1)^0,c
  5974   0014DA  0E00               	movlw	0
  5975   0014DC  221E               	addwfc	(btemp28+1)^0,f,c
  5976   0014DE  500D               	movf	btemp12^0,w,c
  5977   0014E0  6EE9               	movwf	fsr0l,c
  5978   0014E2  6AEA               	clrf	fsr0h,c
  5979   0014E4  0E04               	movlw	4
  5980   0014E6  26E9               	addwf	fsr0l,f,c
  5981   0014E8  50EF               	movf	indf0,w,c
  5982                           
  5983                           ;register	wtemp15
  5984   0014EA  6E1F               	movwf	btemp30^0,c
  5985   0014EC  6A20               	clrf	btemp31^0,c
  5986   0014EE  EC65  F00B         	call	___awmod	;wreg free
  5987   0014F2  5001               	movf	btemp0^0,w,c
  5988   0014F4  6EDF               	movwf	indf2,c
  5989   0014F6                     
  5990                           ;pipe.c: 43:         sem_post(&p->pipe_sem_read);
  5991   0014F6  500D               	movf	btemp12^0,w,c
  5992   0014F8  0F05               	addlw	5
  5993                           
  5994                           ;register	btemp20
  5995   0014FA  6E15               	movwf	btemp20^0,c
  5996   0014FC  EC1F  F00C         	call	_sem_post	;wreg free
  5997   001500                     
  5998                           ;pipe.c: 44:         (INTCONbits.GIE = 1);
  5999   001500  8EF2               	bsf	242,7,c	;volatile
  6000   001502                     
  6001                           ; _i loaded to btemp4
  6002                           ;stkvar	_i @ sp[(-3)+0]
  6003                           ;register	btemp4
  6004   001502  0EFD               	movlw	-3
  6005   001504  CFE3 F005          	movff	plusw1,btemp4
  6006                           
  6007                           ;pipe.c: 45:     }
  6008   001508  2A05               	incf	btemp4^0,f,c
  6009   00150A                     l2288:
  6010   00150A  500E               	movf	btemp13^0,w,c
  6011   00150C  5C05               	subwf	btemp4^0,w,c
  6012   00150E  A0D8               	btfss	status,0,c
  6013   001510  EF8C  F00A         	goto	u106_21
  6014   001514  EF8E  F00A         	goto	u106_20
  6015   001518                     u106_21:
  6016   001518  EF2D  F00A         	goto	l372
  6017   00151C                     u106_20:
  6018   00151C                     
  6019                           ; _write_pipe: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6020   00151C  52E5               	movf	postdec1,f,c
  6021   00151E  52E5               	movf	postdec1,f,c
  6022   001520  52E5               	movf	postdec1,f,c
  6023   001522  0012               	return		;funcret
  6024   001524                     __end_of_write_pipe:
  6025                           	callstack 0
  6026                           
  6027 ;; *************** function _adc_read *****************
  6028 ;; Defined at:
  6029 ;;		line 29 in file "io.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;		None
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;		None
  6034 ;; Return value:  Size  Location     Type
  6035 ;;                  2  [STACK] int 
  6036 ;; Registers used:
  6037 ;;		btemp0, btemp1
  6038 ;; Tracked objects:
  6039 ;;		On entry : 0/0
  6040 ;;		On exit  : 0/0
  6041 ;;		Unchanged: 0/0
  6042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6043 ;;      Params:         0       0       0       0       0       0       0       0       0
  6044 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6045 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6046 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6047 ;;Total ram usage:        0 bytes
  6048 ;; Hardware stack levels used: 1
  6049 ;; Hardware stack levels required when called: 3
  6050 ;; This function calls:
  6051 ;;		Nothing
  6052 ;; This function is called by:
  6053 ;;		_tarefa_leitura_sensores
  6054 ;;		_tarefa_monitoramento_bateria
  6055 ;; This function uses a reentrant model
  6056 ;;
  6057                           
  6058                           	psect	text36
  6059   001DC8                     __ptext36:
  6060                           	callstack 0
  6061   001DC8                     _adc_read:
  6062                           	callstack 21
  6063   001DC8                     
  6064                           ;io.c: 31:     ADCON0bits.GO = 1;
  6065   001DC8  82C2               	bsf	194,1,c	;volatile
  6066   001DCA                     l457:
  6067   001DCA  B2C2               	btfsc	194,1,c	;volatile
  6068   001DCC  EFEA  F00E         	goto	u105_21
  6069   001DD0  EFEC  F00E         	goto	u105_20
  6070   001DD4                     u105_21:
  6071   001DD4  EFE5  F00E         	goto	l457
  6072   001DD8                     u105_20:
  6073   001DD8                     
  6074                           ;io.c: 33:     return ADRES;
  6075   001DD8  CFC3 F001          	movff	4035,btemp0	;volatile
  6076   001DDC  CFC4 F002          	movff	4036,btemp1	;volatile
  6077   001DE0                     
  6078                           ; _adc_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  6079   001DE0  0012               	return		;funcret
  6080   001DE2                     __end_of_adc_read:
  6081                           	callstack 0
  6082                           
  6083 ;; *************** function _tarefa_monitoramento_bateria *****************
  6084 ;; Defined at:
  6085 ;;		line 122 in file "user_app.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;		None
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;  nivel_bateri    2  [STACK] int 
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  1  [STACK] void 
  6092 ;; Registers used:
  6093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp13, btemp1
      +4, btemp15, btemp20, btemp28, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, pr
      +odh, cstack
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6099 ;;      Params:         0       0       0       0       0       0       0       0       0
  6100 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6102 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6103 ;;Total ram usage:        0 bytes
  6104 ;; Hardware stack levels used: 1
  6105 ;; Hardware stack levels required when called: 6
  6106 ;; This function calls:
  6107 ;;		_adc_read
  6108 ;;		_os_delay
  6109 ;;		_set_channel
  6110 ;;		_write_pipe
  6111 ;; This function is called by:
  6112 ;;		_main
  6113 ;; This function uses a reentrant model
  6114 ;;
  6115                           
  6116                           	psect	text37
  6117   001B82                     __ptext37:
  6118                           	callstack 0
  6119   001B82                     _tarefa_monitoramento_bateria:
  6120                           	callstack 0
  6121                           
  6122                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6123   001B82  52E6               	movf	postinc1,f,c
  6124   001B84  52E6               	movf	postinc1,f,c
  6125   001B86                     l141:
  6126   001B86                     
  6127                           ;user_app.c: 127:         set_channel(CHANNEL_2);
  6128                           ;register	btemp28
  6129   001B86  0E02               	movlw	2
  6130   001B88  6E1D               	movwf	btemp28^0,c
  6131   001B8A  ECFB  F00E         	call	_set_channel	;wreg free
  6132   001B8E                     
  6133                           ;user_app.c: 128:         nivel_bateria = adc_read();
  6134   001B8E  ECE4  F00E         	call	_adc_read	;wreg free
  6135                           
  6136                           ;stkvar	_nivel_bateria @ sp[(-2)+0]
  6137   001B92  0EFE               	movlw	-2
  6138   001B94  C001 FFE3          	movff	btemp0,plusw1
  6139   001B98  0F01               	addlw	1
  6140   001B9A  C002 FFE3          	movff	btemp1,plusw1
  6141   001B9E                     
  6142                           ;user_app.c: 131:         write_pipe(&pipe_bateria, &nivel_bateria, sizeof(int));
  6143                           ;register	btemp12
  6144   001B9E  0E60               	movlw	low _pipe_bateria
  6145   001BA0  6E0D               	movwf	btemp12^0,c
  6146                           
  6147                           ;register	btemp13
  6148   001BA2  0E02               	movlw	2
  6149   001BA4  6E0E               	movwf	btemp13^0,c
  6150                           
  6151                           ;stkvar	_nivel_bateria @ sp[(-2)+0]
  6152   001BA6  0EFE               	movlw	254
  6153   001BA8  24E1               	addwf	fsr1l,w,c
  6154   001BAA  6E37               	movwf	btemp54^0,c
  6155   001BAC  0EFF               	movlw	255
  6156   001BAE  20E2               	addwfc	fsr1h,w,c
  6157   001BB0  6E38               	movwf	btemp55^0,c
  6158                           
  6159                           ;register	wtemp7
  6160   001BB2  C037 F00F          	movff	btemp54,btemp14
  6161   001BB6  C038 F010          	movff	btemp55,btemp15
  6162   001BBA  EC21  F00A         	call	_write_pipe	;wreg free
  6163   001BBE                     
  6164                           ;user_app.c: 134:         os_delay(250);
  6165                           ;register	btemp12
  6166   001BBE  0EFA               	movlw	250
  6167   001BC0  6E0D               	movwf	btemp12^0,c
  6168   001BC2  EC26  F007         	call	_os_delay	;wreg free
  6169   001BC6  EFC3  F00D         	goto	l141
  6170                           
  6171                           ; _tarefa_monitoramento_bateria: autosize = 2, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
  6172   001BCA  52E5               	movf	postdec1,f,c
  6173   001BCC  52E5               	movf	postdec1,f,c
  6174   001BCE  0012               	return		;funcret
  6175   001BD0                     __end_of_tarefa_monitoramento_bateria:
  6176                           	callstack 0
  6177                           
  6178 ;; *************** function _ISR_TIMER_0 *****************
  6179 ;; Defined at:
  6180 ;;		line 28 in file "hardware.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;		None
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;		None
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  1    wreg      void 
  6187 ;; Registers used:
  6188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp54, btemp55, prodl,
      + prodh
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6194 ;;      Params:         0       0       0       0       0       0       0       0       0
  6195 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6196 ;;      Temps:         14       0       0       0       0       0       0       0       0
  6197 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6198 ;;Total ram usage:       14 bytes
  6199 ;; Hardware stack levels used: 1
  6200 ;; Hardware stack levels required when called: 2
  6201 ;; This function calls:
  6202 ;;		_os_task_time_decrease
  6203 ;;		_scheduler
  6204 ;; This function is called by:
  6205 ;;		Interrupt level 2
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           	psect	intcode
  6210   000008                     __pintcode:
  6211                           	callstack 0
  6212   000008                     _ISR_TIMER_0:
  6213                           	callstack 18
  6214                           
  6215                           ;incstack = 0
  6216   000008  ED01  F004         	call	int_func,f	;refresh shadow registers
  6217                           
  6218                           	psect	intcode_body
  6219   000802                     __pintcode_body:
  6220                           	callstack 18
  6221   000802                     int_func:
  6222                           	callstack 18
  6223   000802  0006               	pop		; remove dummy address from shadow register refresh
  6224   000804  CFE9 F051          	movff	fsr0l,??_ISR_TIMER_0+6
  6225   000808  CFEA F052          	movff	fsr0h,??_ISR_TIMER_0+7
  6226   00080C  CFE1 F053          	movff	fsr1l,??_ISR_TIMER_0+8
  6227   000810  CFE2 F054          	movff	fsr1h,??_ISR_TIMER_0+9
  6228   000814  CFD9 F055          	movff	fsr2l,??_ISR_TIMER_0+10
  6229   000818  CFDA F056          	movff	fsr2h,??_ISR_TIMER_0+11
  6230   00081C  CFF3 F057          	movff	prodl,??_ISR_TIMER_0+12
  6231   000820  CFF4 F058          	movff	prodh,??_ISR_TIMER_0+13
  6232   000824  EE16  F063         	lfsr	1,___inthi_sp
  6233   000828  C001 FFE6          	movff	btemp0,postinc1
  6234   00082C  C002 FFE6          	movff	btemp1,postinc1
  6235   000830  C005 FFE6          	movff	btemp4,postinc1
  6236   000834  C037 FFE6          	movff	btemp54,postinc1
  6237   000838  C038 FFE6          	movff	btemp55,postinc1
  6238   00083C                     
  6239                           ;hardware.c: 32:     if (PIR1bits.TMR1IF == 1) {
  6240   00083C  A09E               	btfss	158,0,c	;volatile
  6241   00083E  EF23  F004         	goto	i2u108_41
  6242   000842  EF25  F004         	goto	i2u108_40
  6243   000846                     i2u108_41:
  6244   000846  EF89  F004         	goto	i2l2356
  6245   00084A                     i2u108_40:
  6246   00084A                     
  6247                           ;hardware.c: 33:         PIR1bits.TMR1IF = 0;
  6248   00084A  909E               	bcf	158,0,c	;volatile
  6249   00084C                     
  6250                           ;hardware.c: 34:         TMR1 = 65535 - 500;
  6251   00084C  0EFE               	movlw	254
  6252   00084E  6ECF               	movwf	207,c	;volatile
  6253   000850  0E0B               	movlw	11
  6254   000852  6ECE               	movwf	206,c	;volatile
  6255   000854                     
  6256                           ;hardware.c: 36:         static uint16_t pwm_cnt = 0;;hardware.c: 37:         pwm_cnt++;
  6257   000854  4A41               	infsnz	ISR_TIMER_0@pwm_cnt^0,f,c
  6258   000856  2A42               	incf	(ISR_TIMER_0@pwm_cnt+1)^0,f,c
  6259   000858                     
  6260                           ;hardware.c: 38:         if (pwm_cnt >= 1024) pwm_cnt = 0;
  6261   000858  0E04               	movlw	4
  6262   00085A  5C42               	subwf	(ISR_TIMER_0@pwm_cnt+1)^0,w,c
  6263   00085C  A0D8               	btfss	status,0,c
  6264   00085E  EF33  F004         	goto	i2u109_41
  6265   000862  EF35  F004         	goto	i2u109_40
  6266   000866                     i2u109_41:
  6267   000866  EF37  F004         	goto	i2l2354
  6268   00086A                     i2u109_40:
  6269   00086A  6A41               	clrf	ISR_TIMER_0@pwm_cnt^0,c
  6270   00086C  6A42               	clrf	(ISR_TIMER_0@pwm_cnt+1)^0,c
  6271   00086E                     i2l2354:
  6272                           
  6273                           ;hardware.c: 41:         LATDbits.LATD0 = (pwm_cnt < motor_a_duty) ? 1 : 0;
  6274   00086E  5049               	movf	_motor_a_duty^0,w,c
  6275   000870  5C41               	subwf	ISR_TIMER_0@pwm_cnt^0,w,c
  6276   000872  504A               	movf	(_motor_a_duty+1)^0,w,c
  6277   000874  5842               	subwfb	(ISR_TIMER_0@pwm_cnt+1)^0,w,c
  6278   000876  A0D8               	btfss	status,0,c
  6279   000878  EF40  F004         	goto	i2u110_41
  6280   00087C  EF44  F004         	goto	i2u110_40
  6281   000880                     i2u110_41:
  6282   000880  6A4B               	clrf	??_ISR_TIMER_0^0,c
  6283   000882  2A4B               	incf	??_ISR_TIMER_0^0,f,c
  6284   000884  EF45  F004         	goto	i2u111_48
  6285   000888                     i2u110_40:
  6286   000888  6A4B               	clrf	??_ISR_TIMER_0^0,c
  6287   00088A                     i2u111_48:
  6288   00088A  508C               	movf	140,w,c	;volatile
  6289   00088C  184B               	xorwf	??_ISR_TIMER_0^0,w,c
  6290   00088E  0BFE               	andlw	-2
  6291   000890  184B               	xorwf	??_ISR_TIMER_0^0,w,c
  6292   000892  6E8C               	movwf	140,c	;volatile
  6293                           
  6294                           ;hardware.c: 42:         LATDbits.LATD1 = (pwm_cnt < motor_b_duty) ? 1 : 0;
  6295   000894  5047               	movf	_motor_b_duty^0,w,c
  6296   000896  5C41               	subwf	ISR_TIMER_0@pwm_cnt^0,w,c
  6297   000898  5048               	movf	(_motor_b_duty+1)^0,w,c
  6298   00089A  5842               	subwfb	(ISR_TIMER_0@pwm_cnt+1)^0,w,c
  6299   00089C  A0D8               	btfss	status,0,c
  6300   00089E  EF53  F004         	goto	i2u112_41
  6301   0008A2  EF57  F004         	goto	i2u112_40
  6302   0008A6                     i2u112_41:
  6303   0008A6  6A4B               	clrf	??_ISR_TIMER_0^0,c
  6304   0008A8  2A4B               	incf	??_ISR_TIMER_0^0,f,c
  6305   0008AA  EF58  F004         	goto	i2u113_48
  6306   0008AE                     i2u112_40:
  6307   0008AE  6A4B               	clrf	??_ISR_TIMER_0^0,c
  6308   0008B0                     i2u113_48:
  6309   0008B0  464B               	rlncf	??_ISR_TIMER_0^0,f,c
  6310   0008B2  508C               	movf	140,w,c	;volatile
  6311   0008B4  184B               	xorwf	??_ISR_TIMER_0^0,w,c
  6312   0008B6  0BFD               	andlw	-3
  6313   0008B8  184B               	xorwf	??_ISR_TIMER_0^0,w,c
  6314   0008BA  6E8C               	movwf	140,c	;volatile
  6315                           
  6316                           ;hardware.c: 43:         LATDbits.LATD2 = (pwm_cnt < motor_c_duty) ? 1 : 0;
  6317   0008BC  5045               	movf	_motor_c_duty^0,w,c
  6318   0008BE  5C41               	subwf	ISR_TIMER_0@pwm_cnt^0,w,c
  6319   0008C0  5046               	movf	(_motor_c_duty+1)^0,w,c
  6320   0008C2  5842               	subwfb	(ISR_TIMER_0@pwm_cnt+1)^0,w,c
  6321   0008C4  A0D8               	btfss	status,0,c
  6322   0008C6  EF67  F004         	goto	i2u114_41
  6323   0008CA  EF6B  F004         	goto	i2u114_40
  6324   0008CE                     i2u114_41:
  6325   0008CE  6A4B               	clrf	??_ISR_TIMER_0^0,c
  6326   0008D0  2A4B               	incf	??_ISR_TIMER_0^0,f,c
  6327   0008D2  EF6C  F004         	goto	i2u115_48
  6328   0008D6                     i2u114_40:
  6329   0008D6  6A4B               	clrf	??_ISR_TIMER_0^0,c
  6330   0008D8                     i2u115_48:
  6331   0008D8  464B               	rlncf	??_ISR_TIMER_0^0,f,c
  6332   0008DA  464B               	rlncf	??_ISR_TIMER_0^0,f,c
  6333   0008DC  508C               	movf	140,w,c	;volatile
  6334   0008DE  184B               	xorwf	??_ISR_TIMER_0^0,w,c
  6335   0008E0  0BFB               	andlw	-5
  6336   0008E2  184B               	xorwf	??_ISR_TIMER_0^0,w,c
  6337   0008E4  6E8C               	movwf	140,c	;volatile
  6338                           
  6339                           ;hardware.c: 44:         LATDbits.LATD3 = (pwm_cnt < motor_d_duty) ? 1 : 0;
  6340   0008E6  5043               	movf	_motor_d_duty^0,w,c
  6341   0008E8  5C41               	subwf	ISR_TIMER_0@pwm_cnt^0,w,c
  6342   0008EA  5044               	movf	(_motor_d_duty+1)^0,w,c
  6343   0008EC  5842               	subwfb	(ISR_TIMER_0@pwm_cnt+1)^0,w,c
  6344   0008EE  A0D8               	btfss	status,0,c
  6345   0008F0  EF7C  F004         	goto	i2u116_41
  6346   0008F4  EF80  F004         	goto	i2u116_40
  6347   0008F8                     i2u116_41:
  6348   0008F8  6A4B               	clrf	??_ISR_TIMER_0^0,c
  6349   0008FA  2A4B               	incf	??_ISR_TIMER_0^0,f,c
  6350   0008FC  EF81  F004         	goto	i2u117_48
  6351   000900                     i2u116_40:
  6352   000900  6A4B               	clrf	??_ISR_TIMER_0^0,c
  6353   000902                     i2u117_48:
  6354   000902  464B               	rlncf	??_ISR_TIMER_0^0,f,c
  6355   000904  464B               	rlncf	??_ISR_TIMER_0^0,f,c
  6356   000906  464B               	rlncf	??_ISR_TIMER_0^0,f,c
  6357   000908  508C               	movf	140,w,c	;volatile
  6358   00090A  184B               	xorwf	??_ISR_TIMER_0^0,w,c
  6359   00090C  0BF7               	andlw	-9
  6360   00090E  184B               	xorwf	??_ISR_TIMER_0^0,w,c
  6361   000910  6E8C               	movwf	140,c	;volatile
  6362   000912                     i2l2356:
  6363                           
  6364                           ;hardware.c: 48:     if (INTCONbits.TMR0IF == 1) {
  6365   000912  A4F2               	btfss	242,2,c	;volatile
  6366   000914  EF8E  F004         	goto	i2u118_41
  6367   000918  EF90  F004         	goto	i2u118_40
  6368   00091C                     i2u118_41:
  6369   00091C  EFAF  F005         	goto	i2l300
  6370   000920                     i2u118_40:
  6371   000920                     
  6372                           ;hardware.c: 49:         INTCONbits.TMR0IF = 0;
  6373   000920  94F2               	bcf	242,2,c	;volatile
  6374                           
  6375                           ;hardware.c: 51:         (INTCONbits.GIE = 0);
  6376   000922  9EF2               	bcf	242,7,c	;volatile
  6377   000924                     
  6378                           ;hardware.c: 53:         os_task_time_decrease();
  6379   000924  ECAD  F00C         	call	_os_task_time_decrease	;wreg free
  6380   000928  EE22  F0C3         	lfsr	2,_readyQueue+531
  6381   00092C  EE00 F003          	lfsr	0,3
  6382   000930  50DE               	movf	postinc2,w,c
  6383   000932  26E9               	addwf	fsr0l,f,c
  6384   000934  50DD               	movf	postdec2,w,c
  6385   000936  22EA               	addwfc	fsr0h,f,c
  6386   000938  04EE               	decf	postinc0,w,c
  6387   00093A  A4D8               	btfss	status,2,c
  6388   00093C  EFA2  F004         	goto	i2u119_41
  6389   000940  EFA4  F004         	goto	i2u119_40
  6390   000944                     i2u119_41:
  6391   000944  EF0E  F005         	goto	i2l2374
  6392   000948                     i2u119_40:
  6393   000948  EE22  F0C3         	lfsr	2,_readyQueue+531
  6394   00094C  EE00 F006          	lfsr	0,6
  6395   000950  50DE               	movf	postinc2,w,c
  6396   000952  26E9               	addwf	fsr0l,f,c
  6397   000954  50DD               	movf	postdec2,w,c
  6398   000956  22EA               	addwfc	fsr0h,f,c
  6399   000958  CFE0 FFEF          	movff	bsr,indf0	;volatile
  6400   00095C  EE22  F0C3         	lfsr	2,_readyQueue+531
  6401   000960  EE00 F008          	lfsr	0,8
  6402   000964  50DE               	movf	postinc2,w,c
  6403   000966  26E9               	addwf	fsr0l,f,c
  6404   000968  50DD               	movf	postdec2,w,c
  6405   00096A  22EA               	addwfc	fsr0h,f,c
  6406   00096C  CFD8 FFEF          	movff	status,indf0	;volatile
  6407   000970  EE22  F0C3         	lfsr	2,_readyQueue+531
  6408   000974  EE00 F007          	lfsr	0,7
  6409   000978  50DE               	movf	postinc2,w,c
  6410   00097A  26E9               	addwf	fsr0l,f,c
  6411   00097C  50DD               	movf	postdec2,w,c
  6412   00097E  22EA               	addwfc	fsr0h,f,c
  6413   000980  CFE8 FFEF          	movff	wreg,indf0	;volatile
  6414   000984  EE22  F0C3         	lfsr	2,_readyQueue+531
  6415   000988  EE00 F069          	lfsr	0,105
  6416   00098C  50DE               	movf	postinc2,w,c
  6417   00098E  26E9               	addwf	fsr0l,f,c
  6418   000990  50DD               	movf	postdec2,w,c
  6419   000992  22EA               	addwfc	fsr0h,f,c
  6420   000994  6AEF               	clrf	indf0,c
  6421   000996  EFFD  F004         	goto	i2l2370
  6422   00099A                     i2l2366:
  6423   00099A  EE22  F0C3         	lfsr	2,_readyQueue+531
  6424   00099E  EE00 F069          	lfsr	0,105
  6425   0009A2  50DE               	movf	postinc2,w,c
  6426   0009A4  26E9               	addwf	fsr0l,f,c
  6427   0009A6  50DD               	movf	postdec2,w,c
  6428   0009A8  22EA               	addwfc	fsr0h,f,c
  6429   0009AA  50EF               	movf	indf0,w,c
  6430   0009AC  0D03               	mullw	3
  6431   0009AE  CFF3 F04B          	movff	prodl,??_ISR_TIMER_0
  6432   0009B2  CFF4 F04C          	movff	prodh,??_ISR_TIMER_0+1
  6433   0009B6  EE22  F0C3         	lfsr	2,_readyQueue+531
  6434   0009BA  CFDE F04D          	movff	postinc2,??_ISR_TIMER_0+2
  6435   0009BE  CFDD F04E          	movff	postdec2,??_ISR_TIMER_0+3
  6436   0009C2  504B               	movf	??_ISR_TIMER_0^0,w,c
  6437   0009C4  244D               	addwf	(??_ISR_TIMER_0+2)^0,w,c
  6438   0009C6  6E4F               	movwf	(??_ISR_TIMER_0+4)^0,c
  6439   0009C8  504C               	movf	(??_ISR_TIMER_0+1)^0,w,c
  6440   0009CA  204E               	addwfc	(??_ISR_TIMER_0+3)^0,w,c
  6441   0009CC  6E50               	movwf	(??_ISR_TIMER_0+5)^0,c
  6442   0009CE  0E09               	movlw	9
  6443   0009D0  244F               	addwf	(??_ISR_TIMER_0+4)^0,w,c
  6444   0009D2  6ED9               	movwf	fsr2l,c
  6445   0009D4  0E00               	movlw	0
  6446   0009D6  2050               	addwfc	(??_ISR_TIMER_0+5)^0,w,c
  6447   0009D8  6EDA               	movwf	fsr2h,c
  6448   0009DA  CFFD FFDE          	movff	tosl,postinc2	;volatile
  6449   0009DE  CFFE FFDE          	movff	tosh,postinc2	;volatile
  6450   0009E2  CFFF FFDE          	movff	tosu,postinc2	;volatile
  6451   0009E6  EE22  F0C3         	lfsr	2,_readyQueue+531
  6452   0009EA  EE00 F069          	lfsr	0,105
  6453   0009EE  50DE               	movf	postinc2,w,c
  6454   0009F0  26E9               	addwf	fsr0l,f,c
  6455   0009F2  50DD               	movf	postdec2,w,c
  6456   0009F4  22EA               	addwfc	fsr0h,f,c
  6457   0009F6  2AEF               	incf	indf0,f,c
  6458   0009F8  0006               	pop		;# 
  6459   0009FA                     i2l2370:
  6460   0009FA  50FC               	movf	252,w,c	;volatile
  6461   0009FC  A4D8               	btfss	status,2,c
  6462   0009FE  EF03  F005         	goto	i2u120_41
  6463   000A02  EF05  F005         	goto	i2u120_40
  6464   000A06                     i2u120_41:
  6465   000A06  EFCD  F004         	goto	i2l2366
  6466   000A0A                     i2u120_40:
  6467   000A0A  EE22  F0C3         	lfsr	2,_readyQueue+531
  6468   000A0E  EE00 F003          	lfsr	0,3
  6469   000A12  50DE               	movf	postinc2,w,c
  6470   000A14  26E9               	addwf	fsr0l,f,c
  6471   000A16  50DD               	movf	postdec2,w,c
  6472   000A18  22EA               	addwfc	fsr0h,f,c
  6473   000A1A  6AEF               	clrf	indf0,c
  6474   000A1C                     i2l2374:
  6475                           
  6476                           ;hardware.c: 56:         scheduler();
  6477   000A1C  EC0C  F00F         	call	_scheduler	;wreg free
  6478   000A20  EE22  F0C3         	lfsr	2,_readyQueue+531
  6479   000A24  EE00 F003          	lfsr	0,3
  6480   000A28  50DE               	movf	postinc2,w,c
  6481   000A2A  26E9               	addwf	fsr0l,f,c
  6482   000A2C  50DD               	movf	postdec2,w,c
  6483   000A2E  22EA               	addwfc	fsr0h,f,c
  6484   000A30  50EF               	movf	indf0,w,c
  6485   000A32  A4D8               	btfss	status,2,c
  6486   000A34  EF1E  F005         	goto	i2u121_41
  6487   000A38  EF20  F005         	goto	i2u121_40
  6488   000A3C                     i2u121_41:
  6489   000A3C  EFAE  F005         	goto	i2l2394
  6490   000A40                     i2u121_40:
  6491   000A40  EE22  F0C3         	lfsr	2,_readyQueue+531
  6492   000A44  EE00 F006          	lfsr	0,6
  6493   000A48  50DE               	movf	postinc2,w,c
  6494   000A4A  26E9               	addwf	fsr0l,f,c
  6495   000A4C  50DD               	movf	postdec2,w,c
  6496   000A4E  22EA               	addwfc	fsr0h,f,c
  6497   000A50  50EF               	movf	indf0,w,c
  6498   000A52  6EE0               	movwf	224,c	;volatile
  6499   000A54  EE22  F0C3         	lfsr	2,_readyQueue+531
  6500   000A58  EE00 F008          	lfsr	0,8
  6501   000A5C  50DE               	movf	postinc2,w,c
  6502   000A5E  26E9               	addwf	fsr0l,f,c
  6503   000A60  50DD               	movf	postdec2,w,c
  6504   000A62  22EA               	addwfc	fsr0h,f,c
  6505   000A64  50EF               	movf	indf0,w,c
  6506   000A66  6ED8               	movwf	216,c	;volatile
  6507   000A68  EE22  F0C3         	lfsr	2,_readyQueue+531
  6508   000A6C  EE00 F007          	lfsr	0,7
  6509   000A70  50DE               	movf	postinc2,w,c
  6510   000A72  26E9               	addwf	fsr0l,f,c
  6511   000A74  50DD               	movf	postdec2,w,c
  6512   000A76  22EA               	addwfc	fsr0h,f,c
  6513   000A78  50EF               	movf	indf0,w,c
  6514   000A7A  6E4B               	movwf	??_ISR_TIMER_0^0,c
  6515   000A7C  504B               	movf	??_ISR_TIMER_0^0,w,c
  6516   000A7E  6AFC               	clrf	252,c	;volatile
  6517   000A80  EE22  F0C3         	lfsr	2,_readyQueue+531
  6518   000A84  EE00 F069          	lfsr	0,105
  6519   000A88  50DE               	movf	postinc2,w,c
  6520   000A8A  26E9               	addwf	fsr0l,f,c
  6521   000A8C  50DD               	movf	postdec2,w,c
  6522   000A8E  22EA               	addwfc	fsr0h,f,c
  6523   000A90  50EF               	movf	indf0,w,c
  6524   000A92  A4D8               	btfss	status,2,c
  6525   000A94  EF4E  F005         	goto	i2u122_41
  6526   000A98  EF50  F005         	goto	i2u122_40
  6527   000A9C                     i2u122_41:
  6528   000A9C  EF64  F005         	goto	i2l297
  6529   000AA0                     i2u122_40:
  6530   000AA0  0005               	push		;# 
  6531   000AA2  EE22  F0C3         	lfsr	2,_readyQueue+531
  6532   000AA6  EE00 F001          	lfsr	0,1
  6533   000AAA  50DE               	movf	postinc2,w,c
  6534   000AAC  26E9               	addwf	fsr0l,f,c
  6535   000AAE  50DD               	movf	postdec2,w,c
  6536   000AB0  22EA               	addwfc	fsr0h,f,c
  6537   000AB2  CFEE F04B          	movff	postinc0,??_ISR_TIMER_0
  6538   000AB6  CFED F04C          	movff	postdec0,??_ISR_TIMER_0+1
  6539   000ABA  C04B  FFFD         	movff	??_ISR_TIMER_0,tosl	;volatile
  6540   000ABE  C04C  FFFE         	movff	??_ISR_TIMER_0+1,tosh	;volatile
  6541   000AC2  6AFF               	clrf	255,c	;volatile
  6542   000AC4  EFA4  F005         	goto	i2l2392
  6543   000AC8                     i2l297:
  6544   000AC8  0005               	push		;# 
  6545   000ACA  EE22  F0C3         	lfsr	2,_readyQueue+531
  6546   000ACE  EE00 F069          	lfsr	0,105
  6547   000AD2  50DE               	movf	postinc2,w,c
  6548   000AD4  26E9               	addwf	fsr0l,f,c
  6549   000AD6  50DD               	movf	postdec2,w,c
  6550   000AD8  22EA               	addwfc	fsr0h,f,c
  6551   000ADA  06EF               	decf	indf0,f,c
  6552   000ADC  EE22  F0C3         	lfsr	2,_readyQueue+531
  6553   000AE0  EE00 F069          	lfsr	0,105
  6554   000AE4  50DE               	movf	postinc2,w,c
  6555   000AE6  26E9               	addwf	fsr0l,f,c
  6556   000AE8  50DD               	movf	postdec2,w,c
  6557   000AEA  22EA               	addwfc	fsr0h,f,c
  6558   000AEC  50EF               	movf	indf0,w,c
  6559   000AEE  0D03               	mullw	3
  6560   000AF0  CFF3 F04B          	movff	prodl,??_ISR_TIMER_0
  6561   000AF4  CFF4 F04C          	movff	prodh,??_ISR_TIMER_0+1
  6562   000AF8  EE22  F0C3         	lfsr	2,_readyQueue+531
  6563   000AFC  CFDE F04D          	movff	postinc2,??_ISR_TIMER_0+2
  6564   000B00  CFDD F04E          	movff	postdec2,??_ISR_TIMER_0+3
  6565   000B04  504B               	movf	??_ISR_TIMER_0^0,w,c
  6566   000B06  244D               	addwf	(??_ISR_TIMER_0+2)^0,w,c
  6567   000B08  6E4F               	movwf	(??_ISR_TIMER_0+4)^0,c
  6568   000B0A  504C               	movf	(??_ISR_TIMER_0+1)^0,w,c
  6569   000B0C  204E               	addwfc	(??_ISR_TIMER_0+3)^0,w,c
  6570   000B0E  6E50               	movwf	(??_ISR_TIMER_0+5)^0,c
  6571   000B10  0E09               	movlw	9
  6572   000B12  244F               	addwf	(??_ISR_TIMER_0+4)^0,w,c
  6573   000B14  6ED9               	movwf	fsr2l,c
  6574   000B16  0E00               	movlw	0
  6575   000B18  2050               	addwfc	(??_ISR_TIMER_0+5)^0,w,c
  6576   000B1A  6EDA               	movwf	fsr2h,c
  6577   000B1C  CFDE FFFD          	movff	postinc2,tosl	;volatile
  6578   000B20  CFDE FFFE          	movff	postinc2,tosh	;volatile
  6579   000B24  CFDD FFFF          	movff	postdec2,tosu	;volatile
  6580   000B28  EE22  F0C3         	lfsr	2,_readyQueue+531
  6581   000B2C  EE00 F069          	lfsr	0,105
  6582   000B30  50DE               	movf	postinc2,w,c
  6583   000B32  26E9               	addwf	fsr0l,f,c
  6584   000B34  50DD               	movf	postdec2,w,c
  6585   000B36  22EA               	addwfc	fsr0h,f,c
  6586   000B38  50EF               	movf	indf0,w,c
  6587   000B3A  A4D8               	btfss	status,2,c
  6588   000B3C  EFA2  F005         	goto	i2u123_41
  6589   000B40  EFA4  F005         	goto	i2u123_40
  6590   000B44                     i2u123_41:
  6591   000B44  EF64  F005         	goto	i2l297
  6592   000B48                     i2u123_40:
  6593   000B48                     i2l2392:
  6594   000B48  EE22  F0C3         	lfsr	2,_readyQueue+531
  6595   000B4C  EE00 F003          	lfsr	0,3
  6596   000B50  50DE               	movf	postinc2,w,c
  6597   000B52  26E9               	addwf	fsr0l,f,c
  6598   000B54  50DD               	movf	postdec2,w,c
  6599   000B56  22EA               	addwfc	fsr0h,f,c
  6600   000B58  0E01               	movlw	1
  6601   000B5A  6EEF               	movwf	indf0,c
  6602   000B5C                     i2l2394:
  6603                           
  6604                           ;hardware.c: 59:         (INTCONbits.GIE = 1);
  6605   000B5C  8EF2               	bsf	242,7,c	;volatile
  6606   000B5E                     i2l300:
  6607   000B5E  52E5               	movf	postdec1,f,c
  6608   000B60  CFE5 F038          	movff	postdec1,btemp55
  6609   000B64  CFE5 F037          	movff	postdec1,btemp54
  6610   000B68  CFE5 F005          	movff	postdec1,btemp4
  6611   000B6C  CFE5 F002          	movff	postdec1,btemp1
  6612   000B70  CFE5 F001          	movff	postdec1,btemp0
  6613   000B74  C058  FFF4         	movff	??_ISR_TIMER_0+13,prodh
  6614   000B78  C057  FFF3         	movff	??_ISR_TIMER_0+12,prodl
  6615   000B7C  C056  FFDA         	movff	??_ISR_TIMER_0+11,fsr2h
  6616   000B80  C055  FFD9         	movff	??_ISR_TIMER_0+10,fsr2l
  6617   000B84  C054  FFE2         	movff	??_ISR_TIMER_0+9,fsr1h
  6618   000B88  C053  FFE1         	movff	??_ISR_TIMER_0+8,fsr1l
  6619   000B8C  C052  FFEA         	movff	??_ISR_TIMER_0+7,fsr0h
  6620   000B90  C051  FFE9         	movff	??_ISR_TIMER_0+6,fsr0l
  6621   000B94  0011               	retfie		f
  6622   000B96                     __end_of_ISR_TIMER_0:
  6623                           	callstack 0
  6624                           
  6625 ;; *************** function _os_task_time_decrease *****************
  6626 ;; Defined at:
  6627 ;;		line 70 in file "kernel.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;		None
  6630 ;; Auto vars:     Size  Location     Type
  6631 ;;  i               1    btemp4   unsigned char 
  6632 ;; Return value:  Size  Location     Type
  6633 ;;                  1  [STACK] void 
  6634 ;; Registers used:
  6635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp4, prodl, prodh
  6636 ;; Tracked objects:
  6637 ;;		On entry : 0/0
  6638 ;;		On exit  : 0/0
  6639 ;;		Unchanged: 0/0
  6640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6641 ;;      Params:         0       0       0       0       0       0       0       0       0
  6642 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6644 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6645 ;;Total ram usage:        0 bytes
  6646 ;; Hardware stack levels used: 1
  6647 ;; This function calls:
  6648 ;;		Nothing
  6649 ;; This function is called by:
  6650 ;;		_ISR_TIMER_0
  6651 ;; This function uses a reentrant model
  6652 ;;
  6653                           
  6654                           	psect	text39
  6655   00195A                     __ptext39:
  6656                           	callstack 0
  6657   00195A                     _os_task_time_decrease:
  6658                           	callstack 19
  6659   00195A                     
  6660                           ;kernel.c: 73:     for (uint8_t i = 1; i < readyQueue.readyQueueSize; i++) {
  6661   00195A  0E01               	movlw	1
  6662   00195C  6E05               	movwf	btemp4^0,c
  6663   00195E  EFE5  F00C         	goto	l2174
  6664   001962                     l2166:
  6665                           
  6666                           ;kernel.c: 74:         if (readyQueue.readyQueue[i].task_state == WAITING) {
  6667   001962  5005               	movf	btemp4^0,w,c
  6668   001964  0D6A               	mullw	106
  6669   001966  0EB3               	movlw	low (_readyQueue+3)
  6670   001968  24F3               	addwf	243,w,c
  6671   00196A  6ED9               	movwf	fsr2l,c
  6672   00196C  0E00               	movlw	high (_readyQueue+3)
  6673   00196E  20F4               	addwfc	prodh,w,c
  6674   001970  6EDA               	movwf	fsr2h,c
  6675   001972  0E02               	movlw	2
  6676   001974  18DE               	xorwf	postinc2,w,c
  6677   001976  A4D8               	btfss	status,2,c
  6678   001978  EFC0  F00C         	goto	u92_41
  6679   00197C  EFC2  F00C         	goto	u92_40
  6680   001980                     u92_41:
  6681   001980  EFE4  F00C         	goto	l2172
  6682   001984                     u92_40:
  6683   001984                     
  6684                           ;kernel.c: 75:             readyQueue.readyQueue[i].task_time_to_waiting--;
  6685   001984  5005               	movf	btemp4^0,w,c
  6686   001986  0D6A               	mullw	106
  6687   001988  0EB5               	movlw	low (_readyQueue+5)
  6688   00198A  24F3               	addwf	243,w,c
  6689   00198C  6ED9               	movwf	fsr2l,c
  6690   00198E  0E00               	movlw	high (_readyQueue+5)
  6691   001990  20F4               	addwfc	prodh,w,c
  6692   001992  6EDA               	movwf	fsr2h,c
  6693   001994  06DF               	decf	indf2,f,c
  6694                           
  6695                           ;kernel.c: 76:             if (readyQueue.readyQueue[i].task_time_to_waiting == 0) {
  6696   001996  5005               	movf	btemp4^0,w,c
  6697   001998  0D6A               	mullw	106
  6698   00199A  0EB5               	movlw	low (_readyQueue+5)
  6699   00199C  24F3               	addwf	243,w,c
  6700   00199E  6ED9               	movwf	fsr2l,c
  6701   0019A0  0E00               	movlw	high (_readyQueue+5)
  6702   0019A2  20F4               	addwfc	prodh,w,c
  6703   0019A4  6EDA               	movwf	fsr2h,c
  6704   0019A6  50DF               	movf	indf2,w,c
  6705   0019A8  A4D8               	btfss	status,2,c
  6706   0019AA  EFD9  F00C         	goto	u93_41
  6707   0019AE  EFDB  F00C         	goto	u93_40
  6708   0019B2                     u93_41:
  6709   0019B2  EFE4  F00C         	goto	l2172
  6710   0019B6                     u93_40:
  6711   0019B6                     
  6712                           ;kernel.c: 78:                 readyQueue.readyQueue[i].task_state = READY;
  6713   0019B6  5005               	movf	btemp4^0,w,c
  6714   0019B8  0D6A               	mullw	106
  6715   0019BA  0EB3               	movlw	low (_readyQueue+3)
  6716   0019BC  24F3               	addwf	243,w,c
  6717   0019BE  6ED9               	movwf	fsr2l,c
  6718   0019C0  0E00               	movlw	high (_readyQueue+3)
  6719   0019C2  20F4               	addwfc	prodh,w,c
  6720   0019C4  6EDA               	movwf	fsr2h,c
  6721   0019C6  6ADF               	clrf	indf2,c
  6722   0019C8                     l2172:
  6723                           
  6724                           ;kernel.c: 81:     }
  6725   0019C8  2A05               	incf	btemp4^0,f,c
  6726   0019CA                     l2174:
  6727   0019CA  EE22  F0C2         	lfsr	2,_readyQueue+530
  6728   0019CE  50DE               	movf	postinc2,w,c
  6729   0019D0  5C05               	subwf	btemp4^0,w,c
  6730   0019D2  A0D8               	btfss	status,0,c
  6731   0019D4  EFEE  F00C         	goto	u94_41
  6732   0019D8  EFF0  F00C         	goto	u94_40
  6733   0019DC                     u94_41:
  6734   0019DC  EFB1  F00C         	goto	l2166
  6735   0019E0                     u94_40:
  6736   0019E0                     
  6737                           ; _os_task_time_decrease: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 0, argsize = 0, vargsize = 0
  6738   0019E0  0012               	return		;funcret
  6739   0019E2                     __end_of_os_task_time_decrease:
  6740                           	callstack 0
  6741                           
  6742                           	psect	smallconst
  6743   000800                     __psmallconst:
  6744                           	callstack 0
  6745   000800  00                 	db	0
  6746   000801  00                 	db	0	; dummy byte at the end
  6747   000800                     __smallconst    set	__psmallconst
  6748   000800                     __mediumconst   set	__psmallconst
  6749   000000                     __activetblptr  equ	0
  6750                           
  6751                           	psect	rparam
  6752   000001                     ___rparam_used  equ	1
  6753   000000                     ___param_bank   equ	0
  6754   000000                     __Lparam        equ	__Lrparam
  6755   000000                     __Hparam        equ	__Hrparam
  6756   000001                     btemp           set	1	;btemp
  6757   000001                     btemp0          set	1
  6758   000002                     btemp1          set	2
  6759   000003                     btemp2          set	3
  6760   000004                     btemp3          set	4
  6761   000005                     btemp4          set	5
  6762   000006                     btemp5          set	6
  6763   000007                     btemp6          set	7
  6764   000008                     btemp7          set	8
  6765   000009                     btemp8          set	9
  6766   00000A                     btemp9          set	10
  6767   00000B                     btemp10         set	11
  6768   00000C                     btemp11         set	12
  6769   00000D                     btemp12         set	13
  6770   00000E                     btemp13         set	14
  6771   00000F                     btemp14         set	15
  6772   000010                     btemp15         set	16
  6773   000011                     btemp16         set	17
  6774   000012                     btemp17         set	18
  6775   000013                     btemp18         set	19
  6776   000014                     btemp19         set	20
  6777   000015                     btemp20         set	21
  6778   000016                     btemp21         set	22
  6779   000017                     btemp22         set	23
  6780   000018                     btemp23         set	24
  6781   000019                     btemp24         set	25
  6782   00001A                     btemp25         set	26
  6783   00001B                     btemp26         set	27
  6784   00001C                     btemp27         set	28
  6785   00001D                     btemp28         set	29
  6786   00001E                     btemp29         set	30
  6787   00001F                     btemp30         set	31
  6788   000020                     btemp31         set	32
  6789   000021                     btemp32         set	33
  6790   000022                     btemp33         set	34
  6791   000023                     btemp34         set	35
  6792   000024                     btemp35         set	36
  6793   000025                     btemp36         set	37
  6794   000026                     btemp37         set	38
  6795   000027                     btemp38         set	39
  6796   000028                     btemp39         set	40
  6797   000029                     btemp40         set	41
  6798   00002A                     btemp41         set	42
  6799   00002B                     btemp42         set	43
  6800   00002C                     btemp43         set	44
  6801   00002D                     btemp44         set	45
  6802   00002E                     btemp45         set	46
  6803   00002F                     btemp46         set	47
  6804   000030                     btemp47         set	48
  6805   000031                     btemp48         set	49
  6806   000032                     btemp49         set	50
  6807   000033                     btemp50         set	51
  6808   000034                     btemp51         set	52
  6809   000035                     btemp52         set	53
  6810   000036                     btemp53         set	54
  6811   000037                     btemp54         set	55
  6812   000038                     btemp55         set	56
  6813   000001                     wtemp0          set	1
  6814   000003                     wtemp1          set	3
  6815   000005                     wtemp2          set	5
  6816   000007                     wtemp3          set	7
  6817   000009                     wtemp4          set	9
  6818   00000B                     wtemp5          set	11
  6819   00000D                     wtemp6          set	13
  6820   00000F                     wtemp7          set	15
  6821   000011                     wtemp8          set	17
  6822   000013                     wtemp9          set	19
  6823   000015                     wtemp10         set	21
  6824   000017                     wtemp11         set	23
  6825   000019                     wtemp12         set	25
  6826   00001B                     wtemp13         set	27
  6827   00001D                     wtemp14         set	29
  6828   00001F                     wtemp15         set	31
  6829   000021                     wtemp16         set	33
  6830   000023                     wtemp17         set	35
  6831   000025                     wtemp18         set	37
  6832   000027                     wtemp19         set	39
  6833   000029                     wtemp20         set	41
  6834   00002B                     wtemp21         set	43
  6835   00002D                     wtemp22         set	45
  6836   00002F                     wtemp23         set	47
  6837   000031                     wtemp24         set	49
  6838   000033                     wtemp25         set	51
  6839   000035                     wtemp26         set	53
  6840   000037                     wtemp27         set	55
  6841   000001                     ttemp0          set	1
  6842   000005                     ttemp1          set	5
  6843   000009                     ttemp2          set	9
  6844   00000D                     ttemp3          set	13
  6845   000011                     ttemp4          set	17
  6846   000015                     ttemp5          set	21
  6847   000019                     ttemp6          set	25
  6848   00001D                     ttemp7          set	29
  6849   000021                     ttemp8          set	33
  6850   000025                     ttemp9          set	37
  6851   000029                     ttemp10         set	41
  6852   00002D                     ttemp11         set	45
  6853   000031                     ttemp12         set	49
  6854   000035                     ttemp13         set	53
  6855   000001                     ltemp0          set	1
  6856   000005                     ltemp1          set	5
  6857   000009                     ltemp2          set	9
  6858   00000D                     ltemp3          set	13
  6859   000011                     ltemp4          set	17
  6860   000015                     ltemp5          set	21
  6861   000019                     ltemp6          set	25
  6862   00001D                     ltemp7          set	29
  6863   000021                     ltemp8          set	33
  6864   000025                     ltemp9          set	37
  6865   000029                     ltemp10         set	41
  6866   00002D                     ltemp11         set	45
  6867   000031                     ltemp12         set	49
  6868   000035                     ltemp13         set	53
  6869   000001                     lltemp0         set	1
  6870   000009                     lltemp1         set	9
  6871   000011                     lltemp2         set	17
  6872   000019                     lltemp3         set	25
  6873   000021                     lltemp4         set	33
  6874   000029                     lltemp5         set	41
  6875   000031                     lltemp6         set	49
  6876                           tosu	equ	0xFFF
  6877                           tosh	equ	0xFFE
  6878                           tosl	equ	0xFFD
  6879                           stkptr	equ	0xFFC
  6880                           pclatu	equ	0xFFB
  6881                           pclath	equ	0xFFA
  6882                           pcl	equ	0xFF9
  6883                           tblptru	equ	0xFF8
  6884                           tblptrh	equ	0xFF7
  6885                           tblptrl	equ	0xFF6
  6886                           tablat	equ	0xFF5
  6887                           prodh	equ	0xFF4
  6888                           prodl	equ	0xFF3
  6889                           indf0	equ	0xFEF
  6890                           postinc0	equ	0xFEE
  6891                           postdec0	equ	0xFED
  6892                           preinc0	equ	0xFEC
  6893                           plusw0	equ	0xFEB
  6894                           fsr0h	equ	0xFEA
  6895                           fsr0l	equ	0xFE9
  6896                           wreg	equ	0xFE8
  6897                           indf1	equ	0xFE7
  6898                           postinc1	equ	0xFE6
  6899                           postdec1	equ	0xFE5
  6900                           preinc1	equ	0xFE4
  6901                           plusw1	equ	0xFE3
  6902                           fsr1h	equ	0xFE2
  6903                           fsr1l	equ	0xFE1
  6904                           bsr	equ	0xFE0
  6905                           indf2	equ	0xFDF
  6906                           postinc2	equ	0xFDE
  6907                           postdec2	equ	0xFDD
  6908                           preinc2	equ	0xFDC
  6909                           plusw2	equ	0xFDB
  6910                           fsr2h	equ	0xFDA
  6911                           fsr2l	equ	0xFD9
  6912                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1143
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           39     14      32
    BANK0           160      0      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    buffer	PTR void  size(2) Largest target is 4
		 -> dados_sensores(STACK[4]), nivel_bateria(STACK[2]), 

    buffer	PTR void  size(2) Largest target is 4
		 -> dados_sensores(STACK[4]), nivel_bateria(STACK[2]), 

    data_buffer	PTR unsigned char  size(2) Largest target is 4
		 -> dados_sensores(STACK[4]), nivel_bateria(STACK[2]), 

    data_buffer	PTR unsigned char  size(2) Largest target is 4
		 -> dados_sensores(STACK[4]), nivel_bateria(STACK[2]), 

    m	PTR struct semaphore size(1) Largest target is 14
		 -> mutex_motores(BANK0[14]), 

    m	PTR struct semaphore size(1) Largest target is 14
		 -> mutex_motores(BANK0[14]), 

    m	PTR struct semaphore size(1) Largest target is 14
		 -> mutex_motores(BANK0[14]), 

    m$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    m$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    m$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    mutex_motores$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    mutex_motores$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    new_task$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    next_task	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 

    next_task$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    p	PTR struct pipe size(1) Largest target is 33
		 -> pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    p	PTR struct pipe size(1) Largest target is 33
		 -> pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    p	PTR struct pipe size(1) Largest target is 33
		 -> pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    p$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pipe_bateria$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_bateria$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_bateria$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_bateria$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_bateria$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    pipe_sensores$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_sensores$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_sensores$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_sensores$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_sensores$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    pSegA	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pSegB	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    readyQueue$readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    readyQueue$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), NULL(NULL[0]), 

    readyQueue$taskRunning$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    s	PTR struct semaphore size(1) Largest target is 33
		 -> mutex_motores(BANK0[14]), pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    s	PTR struct semaphore size(1) Largest target is 33
		 -> mutex_motores(BANK0[14]), pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    s	PTR struct semaphore size(1) Largest target is 33
		 -> mutex_motores(BANK0[14]), pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    s$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    s$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    S354semaphore$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    S359pipe$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    S67tcb$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    S78f_aptos$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    sp__priority_scheduler	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 

    sp__priority_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    sp__rr_scheduler	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    task_f	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    temp	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _tarefa_controle_central in COMRAM

    None.

Critical Paths under _tarefa_controle_motores in COMRAM

    None.

Critical Paths under _tarefa_leitura_sensores in COMRAM

    None.

Critical Paths under _tarefa_monitoramento_bateria in COMRAM

    None.

Critical Paths under _tarefa_controle_central in COMRAM

    None.

Critical Paths under _tarefa_controle_motores in COMRAM

    None.

Critical Paths under _tarefa_leitura_sensores in COMRAM

    None.

Critical Paths under _tarefa_monitoramento_bateria in COMRAM

    None.

Critical Paths under _ISR_TIMER_0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _tarefa_controle_central in BANK0

    None.

Critical Paths under _tarefa_controle_motores in BANK0

    None.

Critical Paths under _tarefa_leitura_sensores in BANK0

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK0

    None.

Critical Paths under _tarefa_controle_central in BANK0

    None.

Critical Paths under _tarefa_controle_motores in BANK0

    None.

Critical Paths under _tarefa_leitura_sensores in BANK0

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK0

    None.

Critical Paths under _ISR_TIMER_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _tarefa_controle_central in BANK1

    None.

Critical Paths under _tarefa_controle_motores in BANK1

    None.

Critical Paths under _tarefa_leitura_sensores in BANK1

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK1

    None.

Critical Paths under _tarefa_controle_central in BANK1

    None.

Critical Paths under _tarefa_controle_motores in BANK1

    None.

Critical Paths under _tarefa_leitura_sensores in BANK1

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK1

    None.

Critical Paths under _ISR_TIMER_0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _tarefa_controle_central in BANK2

    None.

Critical Paths under _tarefa_controle_motores in BANK2

    None.

Critical Paths under _tarefa_leitura_sensores in BANK2

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK2

    None.

Critical Paths under _tarefa_controle_central in BANK2

    None.

Critical Paths under _tarefa_controle_motores in BANK2

    None.

Critical Paths under _tarefa_leitura_sensores in BANK2

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK2

    None.

Critical Paths under _ISR_TIMER_0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _tarefa_controle_central in BANK3

    None.

Critical Paths under _tarefa_controle_motores in BANK3

    None.

Critical Paths under _tarefa_leitura_sensores in BANK3

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK3

    None.

Critical Paths under _tarefa_controle_central in BANK3

    None.

Critical Paths under _tarefa_controle_motores in BANK3

    None.

Critical Paths under _tarefa_leitura_sensores in BANK3

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK3

    None.

Critical Paths under _ISR_TIMER_0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _tarefa_controle_central in BANK4

    None.

Critical Paths under _tarefa_controle_motores in BANK4

    None.

Critical Paths under _tarefa_leitura_sensores in BANK4

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK4

    None.

Critical Paths under _tarefa_controle_central in BANK4

    None.

Critical Paths under _tarefa_controle_motores in BANK4

    None.

Critical Paths under _tarefa_leitura_sensores in BANK4

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK4

    None.

Critical Paths under _ISR_TIMER_0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _tarefa_controle_central in BANK5

    None.

Critical Paths under _tarefa_controle_motores in BANK5

    None.

Critical Paths under _tarefa_leitura_sensores in BANK5

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK5

    None.

Critical Paths under _tarefa_controle_central in BANK5

    None.

Critical Paths under _tarefa_controle_motores in BANK5

    None.

Critical Paths under _tarefa_leitura_sensores in BANK5

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK5

    None.

Critical Paths under _ISR_TIMER_0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _tarefa_controle_central in BANK6

    None.

Critical Paths under _tarefa_controle_motores in BANK6

    None.

Critical Paths under _tarefa_leitura_sensores in BANK6

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK6

    None.

Critical Paths under _tarefa_controle_central in BANK6

    None.

Critical Paths under _tarefa_controle_motores in BANK6

    None.

Critical Paths under _tarefa_leitura_sensores in BANK6

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK6

    None.

Critical Paths under _ISR_TIMER_0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _tarefa_controle_central in BANK7

    None.

Critical Paths under _tarefa_controle_motores in BANK7

    None.

Critical Paths under _tarefa_leitura_sensores in BANK7

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK7

    None.

Critical Paths under _tarefa_controle_central in BANK7

    None.

Critical Paths under _tarefa_controle_motores in BANK7

    None.

Critical Paths under _tarefa_leitura_sensores in BANK7

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK7

    None.

Critical Paths under _ISR_TIMER_0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1819
                          _os_config
                     _os_create_task
                           _os_start
 ---------------------------------------------------------------------------------
 (1) _os_start                                             0     0      0    1489
                       _SRAMInitHeap
                    _conf_interrupts
                       _conf_timer_0
                         _config_app
 ---------------------------------------------------------------------------------
 (2) _config_app                                           0     0      0    1399
                             _adc_go
                         _config_adc
                        _create_pipe
                         _mutex_init
                           _pwm_init
                        _set_channel
                           _set_port
 ---------------------------------------------------------------------------------
 (3) _set_port                                             0     0      0      22
 ---------------------------------------------------------------------------------
 (7) _set_channel                                          0     0      0      22
 ---------------------------------------------------------------------------------
 (3) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mutex_init                                           0     0      0     110
                           _sem_init
 ---------------------------------------------------------------------------------
 (3) _create_pipe                                          0     0      0    1179
                          _SRAMalloc
                           _sem_init
 ---------------------------------------------------------------------------------
 (4) _sem_init                                             0     0      0      88
 ---------------------------------------------------------------------------------
 (4) _SRAMalloc                                            6     6      0     893
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (5) __SRAMmerge                                           5     5      0     402
 ---------------------------------------------------------------------------------
 (3) _config_adc                                           0     0      0      44
 ---------------------------------------------------------------------------------
 (3) _adc_go                                               0     0      0      22
 ---------------------------------------------------------------------------------
 (2) _conf_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0      90
 ---------------------------------------------------------------------------------
 (1) _os_config                                            0     0      0     165
                     _os_create_task
 ---------------------------------------------------------------------------------
 (2) _os_create_task                                     106   106      0     165
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _os_idle_task                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _os_idle_task                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_controle_central                              8     8      0    3066
                         _mutex_lock
                       _mutex_unlock
                           _os_delay
                          _read_pipe
 ---------------------------------------------------------------------------------
 (7) _read_pipe                                            5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         0     0      0     450
                           _sem_post
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           1     1      0     617
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_controle_motores                              0     0      0     362
                           _os_delay
          _pwm_set_duty_cycle_motor1
          _pwm_set_duty_cycle_motor2
          _pwm_set_duty_cycle_motor3
          _pwm_set_duty_cycle_motor4
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor4                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor3                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor2                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor1                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_leitura_sensores                              4     4      0    1887
                           _adc_read
                           _os_delay
                        _set_channel
                         _write_pipe
 ---------------------------------------------------------------------------------
 (7) _write_pipe                                           5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (7) _set_channel                                          0     0      0      22
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (7) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_monitoramento_bateria                         2     2      0    1863
                           _adc_read
                           _os_delay
                        _set_channel
                         _write_pipe
 ---------------------------------------------------------------------------------
 (7) _write_pipe                                           5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (7) _set_channel                                          0     0      0      22
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (7) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_controle_central                              8     8      0    3066
                         _mutex_lock
                       _mutex_unlock
                           _os_delay
                          _read_pipe
 ---------------------------------------------------------------------------------
 (7) _read_pipe                                            5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         0     0      0     450
                           _sem_post
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           1     1      0     617
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_controle_motores                              0     0      0     362
                           _os_delay
          _pwm_set_duty_cycle_motor1
          _pwm_set_duty_cycle_motor2
          _pwm_set_duty_cycle_motor3
          _pwm_set_duty_cycle_motor4
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor4                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor3                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor2                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor1                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_leitura_sensores                              4     4      0    1887
                           _adc_read
                           _os_delay
                        _set_channel
                         _write_pipe
 ---------------------------------------------------------------------------------
 (7) _write_pipe                                           5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (7) _set_channel                                          0     0      0      22
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (7) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_monitoramento_bateria                         2     2      0    1863
                           _adc_read
                           _os_delay
                        _set_channel
                         _write_pipe
 ---------------------------------------------------------------------------------
 (7) _write_pipe                                           5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (7) _set_channel                                          0     0      0      22
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (7) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR_TIMER_0                                        14    14      0     272
                                              0 COMRAM    14    14      0
              _os_task_time_decrease
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (12) _os_task_time_decrease                               1     1      0     112
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _os_config
     _os_create_task
   _os_create_task
   _os_start
     _SRAMInitHeap
     _conf_interrupts
     _conf_timer_0
     _config_app
       _adc_go
       _config_adc
       _create_pipe
         _SRAMalloc
           __SRAMmerge
         _sem_init
       _mutex_init
         _sem_init
       _pwm_init
       _set_channel
       _set_port

 _os_idle_task (ROOT)

 _os_idle_task (ROOT)

 _tarefa_controle_central (ROOT)
   _mutex_lock
     _sem_wait
       ___awmod
       _scheduler
         _priority_scheduler
   _mutex_unlock
     _sem_post
       ___awmod
   _os_delay
     _scheduler
   _read_pipe
     ___awmod
     _sem_post
     _sem_wait

 _tarefa_controle_motores (ROOT)
   _os_delay
     _scheduler
       _priority_scheduler
   _pwm_set_duty_cycle_motor1
   _pwm_set_duty_cycle_motor2
   _pwm_set_duty_cycle_motor3
   _pwm_set_duty_cycle_motor4

 _tarefa_leitura_sensores (ROOT)
   _adc_read
   _os_delay
     _scheduler
       _priority_scheduler
   _set_channel
   _write_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler

 _tarefa_monitoramento_bateria (ROOT)
   _adc_read
   _os_delay
     _scheduler
       _priority_scheduler
   _set_channel
   _write_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler

 _tarefa_controle_central (ROOT)
   _mutex_lock
     _sem_wait
       ___awmod
       _scheduler
         _priority_scheduler
   _mutex_unlock
     _sem_post
       ___awmod
   _os_delay
     _scheduler
   _read_pipe
     ___awmod
     _sem_post
     _sem_wait

 _tarefa_controle_motores (ROOT)
   _os_delay
     _scheduler
       _priority_scheduler
   _pwm_set_duty_cycle_motor1
   _pwm_set_duty_cycle_motor2
   _pwm_set_duty_cycle_motor3
   _pwm_set_duty_cycle_motor4

 _tarefa_leitura_sensores (ROOT)
   _adc_read
   _os_delay
     _scheduler
       _priority_scheduler
   _set_channel
   _write_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler

 _tarefa_monitoramento_bateria (ROOT)
   _adc_read
   _os_delay
     _scheduler
       _priority_scheduler
   _set_channel
   _write_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler

 _ISR_TIMER_0 (ROOT)
   _os_task_time_decrease
   _scheduler
     _priority_scheduler

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0    1045     51.1%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      80     50.0%
BITBIGSFRh          61      0       0      0.0%
BITBIGSFRlh         53      0       0      0.0%
BITCOMRAM           39      0       0      0.0%
COMRAM              39     14      32     82.1%
BITBIGSFRlll        35      0       0      0.0%
BITBIGSFRllh         8      0       0      0.0%
STACK                0      0     142      0.0%
DATA                 0      0    1299      0.0%


Microchip Technology PIC18 Macro Assembler V3.10 build 20250813170317 
Symbol Table                                                                                   Fri Oct 24 15:51:04 2025

                                  l20 1B20                                    l50 1DF4  
                                  l19 1B20                                    l71 19E0  
                                  l47 1D02                                   l121 1366  
                                 l141 1B86                                   l118 1AC6  
                                 l135 19EA                                   l232 16C2  
                                 l129 1C14                                   l402 1954  
                                 l235 1E24                                   l163 1834  
                                 l340 18CC                                   l333 0DB4  
                                 l319 1CB0                                   l343 1E16  
                                 l336 0E4A                                   l176 1004  
                                 l408 1356                                   l346 1E50  
                                 l274 1DC6                                   l362 1B80  
                                 l179 109A                                   l451 1D24  
                                 l460 1DE0                                   l372 145A  
                                 l349 1E46                                   l277 1E54  
                                 l445 1E08                                   l374 151C  
                                 l366 153C                                   l454 1E3C  
                                 l382 1222                                   l368 15F2  
                                 l448 1E30                                   l457 1DCA  
                                 l481 1D8A                                   l473 1C12  
                                 l477 1DAC                                   l485 1D68  
                                 l489 1D46                                   l849 1784  
                                 _BSR 0FE0         __end_of_os_task_time_decrease 19E2  
                                 u200 190E                                   u201 190A  
                                 u191 1822                                   u700 1124  
                                 u701 1120                                   u710 1142  
                                 u711 113E                                   u640 127E  
                                 u720 1154                                   u641 127A  
                                 u721 1150                                   u650 12A0  
                                 u730 1174                                   u651 129C  
                                 u731 1170                                   u660 12BA  
                                 u740 11BC                                   u661 12B6  
                                 u741 11B8                                   u670 12DE  
                                 u671 12DA                                   u680 130C  
                                 u681 1308                                   u690 10B2  
                                 u755 1E3A                                   u691 10AE  
                                 u756 1E3C                                   _TOS 0FFD  
                                 prod 0FF3                                   wreg 0FE8  
                  _priority_scheduler 15FA                                  l2000 1B3C  
                                l2010 16CE                                  l2002 1B4A  
                                l2020 16FE                                  l2012 16DC  
                                l2100 0BBA                                  l2004 1B64  
                                l2030 1734                                  l2022 1716  
                                l2014 16E4                                  l2110 0CD0  
                                l2102 0BE0                                  l2006 1B72  
                                l2040 1774                                  l2032 174A  
                                l2024 171E                                  l2016 16E8  
                                l2008 16CC                                  l2120 0D2C  
                                l2112 0CE4                                  l2104 0C12  
                                l2200 0E4C                                  l2042 177C  
                                l2034 1752                                  l2026 1724  
                                l2018 16F6                                  l2130 0D8E  
                                l2122 0D54                                  l2114 0CF4  
                                l2106 0C32                                  l2210 0F20  
                                l2202 0E4E                                  l2050 1A64  
                                l2036 1758                                  l2028 1726  
                                l2132 0DB6                                  l2124 0D6A  
                                l2108 0C84                                  l2116 0D08  
                                l2140 0E48                                  l2220 0F7C  
                                l2212 0F34                                  l2204 0E62  
                                l2300 13AE                                  l2060 1A8E  
                                l2052 1A6C                                  l2038 175E  
                                l2134 0DC8                                  l2126 0D6C  
                                l2118 0D0C                                  l2150 1898  
                                l2142 183E                                  l2230 0FDE  
                                l2222 0FA4                                  l2214 0F44  
                                l2206 0E82                                  l2310 1414  
                                l2302 13D4                                  l2070 1ABE  
                                l2062 1A9A                                  l2054 1A78  
                                l2046 1A58                                  l2320 1C44  
                                l2080 1640                                  l2072 1600  
                                l2136 0E14                                  l2128 0D8C  
                                l2152 18CA                                  l2144 1840  
                                l2232 1006                                  l2224 0FBA  
                                l2240 1098                                  l2208 0ED4  
                                l2216 0F58                                  l2312 141C  
                                l2304 13F0                                  l2064 1AA6  
                                l2056 1A82                                  l2048 1A5C  
                                l2160 1DEE                                  l2170 19B6  
                                l2330 1A22                                  l2322 19EA  
                                l2242 1D8C                                  l2250 1D7C  
                                l2090 16B6                                  l2082 1668  
                                l2074 1614                                  l2138 0E34  
                                l2146 184C                                  l2234 1018  
                                l2226 0FBC                                  l2218 0F5C  
                                l2306 1404                                  l2314 1424  
                                l1530 1DC2                                  l2066 1AAE  
                                l2058 1A86                                  l2162 1DF2  
                                l2154 1DE2                                  l2172 19C8  
                                l2164 195A                                  l2340 1BBE  
                                l2332 1A42                                  l2324 19F2  
                                l2244 1D9E                                  l2252 1D82  
                                l2260 1D26                                  l2084 1682  
                                l2076 1618                                  l2148 1870  
                                l2236 1064                                  l2228 0FDC  
                                l2180 1536                                  l2316 142C  
                                l2308 140C                                  l1460 1796  
                                l1532 1DC4                                  l1524 1DAE  
                                l2068 1AB6                                  l2156 1DE6  
                                l2166 1962                                  l2174 19CA  
                                l2334 1B86                                  l2326 1A02  
                                l2246 1DA4                                  l2254 1D48  
                                l2262 1D38                                  l2318 1C14  
                                l2086 169E                                  l2078 1620  
                                l2094 0B96                                  l2238 1084  
                                l2190 15D6                                  l2182 1544  
                                l1470 17E4                                  l1462 17AA  
                                l1526 1DB2                                  l2158 1DEA  
                                l2168 1984                                  l2336 1B8E  
                                l2280 14BA                                  l2272 1448  
                                l2328 1A0A                                  l2248 1D6A  
                                l2256 1D5A                                  l2264 1D3E  
                                l2088 16A0                                  l2096 0B98  
                                l2192 15D8                                  l2184 154E  
                                l1472 17F2                                  l1464 17BA  
                                l1616 1CDC                                  l1480 18D2  
                                l1528 1DC0                                  l2176 1DF6  
                                l2338 1B9E                                  l2266 1DC8  
                                l2282 14F6                                  l2274 1454  
                                l2258 1D60                                  l2290 1E18  
                                l2098 0BA4                                  l2186 1598  
                                l2194 15E0                                  l2178 152A  
                                l1474 1800                                  l1466 17C8  
                                l1458 1790                                  l1618 1CEE  
                                l1490 192E                                  l1482 18E6  
                                l2268 1DD8                                  l2284 1500  
                                l2276 1462                                  l2196 1E48  
                                l2188 15CC                                  l1476 182A  
                                l1468 17D6                                  l1492 193A  
                                l1484 18EC                                  l1900 132E  
                                l2292 1AC8                                  l2286 1502  
                                l2278 146C                                  l2198 1E3E  
                                l1494 1946                                  l1486 190E  
                                l1478 1E52                                  l1902 133C  
                                l2294 1B1C                                  l2288 150A  
                                l2296 1366                                  l1488 191A  
                                l1920 10B2                                  l1912 1C84  
                                l2298 13A6                                  l1762 1CB2  
                                l1930 1106                                  l1914 1C98  
                                l1764 1CB4                                  l1908 1344  
                                l1940 1154                                  l1924 10BE  
                                l1916 1CA4                                  l1870 126C  
                                l1942 1174                                  l1926 10D2  
                                l1918 10A2                                  l1872 127E  
                                l1864 1230                                  l1960 120C  
                                l1944 119E                                  l1936 1128  
                                l1928 10F0                                  l1970 1D04  
                                l1890 12E2                                  l1866 1248  
                                l1962 121A                                  l1946 11BC  
                                l1954 11D6                                  l1938 1142  
                                l1972 1D18                                  l1892 12F6  
                                l1884 12BE                                  l1876 1286  
                                l1868 125A                                  l1956 11E4  
                                l1948 11C6                                  l1980 1BE0  
                                l1974 1D22                                  l1894 130C  
                                l1878 12A0                                  l1958 11F8  
                                l1990 1C0E                                  l1982 1C00  
                                l1976 1E32                                  l1896 1318  
                                l1992 1C10                                  l1984 1C06  
                                l1968 1E26                                  l1898 1320  
                                l1994 1E0A                                  l1986 1C08  
                                l1978 1BD0                                  l1996 1B28  
                                l1988 1C0C                                  l1998 1B30  
                                _TMR0 0FD6                                  _TMR1 0FCE  
                                _WREG 0FE8                                  _main 1AC8  
                                fsr0h 0FEA                                  fsr1h 0FE2  
                                indf0 0FEF                                  fsr2h 0FDA  
                                fsr0l 0FE9                                  indf2 0FDF  
                                fsr1l 0FE1                                  fsr2l 0FD9  
                                btemp 0001                                  prodh 0FF4  
                                prodl 0FF3                                  start 000C  
     __end_of_tarefa_controle_central 1442  __end_of_tarefa_monitoramento_bateria 1BD0  
        _tarefa_monitoramento_bateria 1B82                          ___param_bank 0000  
     __end_of_tarefa_controle_motores 1C52                                 _ADRES 0FC3  
                     __end_of___awmod 1788                                 i2l300 0B5E  
                               i2l297 0AC8                                 u46_20 1CC4  
                               u46_21 1CBE                                 u46_26 1CC6  
                               u80_20 174A                                 u80_21 1746  
                               u81_20 1774                                 u81_21 1770  
                               u82_20 1640                                 u90_20 0E34  
                               u82_21 163C                                 u90_21 0E30  
                               u83_20 1668                                 u91_20 1870  
                               u83_21 1664                                 u91_21 186C  
                               u76_20 16DC                                 u84_20 16B6  
                               u76_21 16D8                                 u84_21 16B2  
                               u92_40 1984                                 u92_41 1980  
                               u77_20 16F6                                 u85_20 0BBA  
                               u77_21 16F2                                 u85_21 0BB6  
                               u93_40 19B6                                 u93_41 19B2  
                               u78_20 1716                                 u86_20 0C32  
                               u78_21 1712                                 u86_21 0C2E  
                               u94_40 19E0                                 u94_41 19DC  
                               u79_20 1734                                 u87_20 0CF4  
                               u95_20 15F2                                 u79_21 1730  
                               u87_21 0CF0                                 u95_21 15EE  
                               u88_20 0D2C                                 u96_20 0E82  
                               u88_21 0D28                                 u96_21 0E7E  
                               u89_20 0D8C                                 u97_20 0F44  
                               u89_21 0D88                                 u97_21 0F40  
                               u98_20 0F7C                                 u98_21 0F78  
                               u99_20 0FDC                                 u99_21 0FD8  
                          __SRAMmerge 122A                                 btemp0 0001  
                               btemp1 0002                                 btemp2 0003  
                               btemp3 0004                                 btemp4 0005  
                               btemp5 0006                                 btemp6 0007  
                               btemp7 0008                                 btemp8 0009  
                               btemp9 000A                                 ltemp0 0001  
                               ltemp1 0005                                 ltemp2 0009  
                               ltemp3 000D                                 ltemp4 0011  
                               ltemp5 0015                                 ltemp6 0019  
                               ltemp7 001D                                 ltemp8 0021  
                               ltemp9 0025                                 plusw0 0FEB  
                               plusw1 0FE3                                 plusw2 0FDB  
                               ttemp0 0001                                 ttemp1 0005  
                               ttemp2 0009                                 ttemp3 000D  
                               ttemp4 0011                                 ttemp5 0015  
                               ttemp6 0019                                 ttemp7 001D  
                               ttemp8 0021                                 ttemp9 0025  
                               status 0FD8                                 wtemp0 0001  
                               wtemp1 0003                                 wtemp2 0005  
                               wtemp3 0007                                 wtemp4 0009  
                               wtemp5 000B                                 wtemp6 000D  
                               wtemp7 000F                                 wtemp8 0011  
                               wtemp9 0013                       __initialization 1C52  
                        ?_ISR_TIMER_0 004B                          __end_of_main 1B28  
   __end_of_pwm_set_duty_cycle_motor1 1DAE     __end_of_pwm_set_duty_cycle_motor2 1D8C  
   __end_of_pwm_set_duty_cycle_motor3 1D6A     __end_of_pwm_set_duty_cycle_motor4 1D48  
                       __activetblptr 0000                                _ADCON1 0FC1  
                    __end_of_adc_read 1DE2                                u100_20 1084  
                              u100_21 1080                                u101_20 1D9E  
                              u101_21 1D9A                                u102_20 1D7C  
                              u102_21 1D78                                u103_20 1D5A  
                              u103_21 1D56                                u104_20 1D38  
                              u104_21 1D34                                u105_20 1DD8  
                              u105_21 1DD4                                u106_20 151C  
                              u106_21 1518                                u107_20 13D4  
                              u107_21 13D0                                i2l2350 0858  
                              i2l2342 083C                                i2l2360 0924  
                              i2l2352 086A                                i2l2344 084A  
                              i2l2370 09FA                                i2l2362 0928  
                              i2l2354 086E                                i2l2346 084C  
                              i2l2380 0A7E                                i2l2372 0A0A  
                              i2l2364 0948                                i2l2348 0854  
                              i2l2356 0912                                i2l2390 0B28  
                              i2l2382 0AA0                                i2l2366 099A  
                              i2l2374 0A1C                                i2l2358 0920  
                              i2l2392 0B48                                i2l2384 0AA2  
                              i2l2376 0A20                                i2l2368 09E6  
                              i2l2386 0ACA                                i2l2378 0A40  
                              i2l2394 0B5C                                i2l2388 0ADC  
                              _STATUS 0FD8                                _STKPTR 0FFC  
                              _adc_go 1E32                     __end_of_SRAMalloc 122A  
                              clear_0 1C5A                                clear_1 1C6C  
                              clear_2 1C78                                isa$std 0001  
                              btemp10 000B                                btemp11 000C  
                              btemp12 000D                                btemp20 0015  
                              btemp13 000E                                btemp21 0016  
                              btemp30 001F                                btemp14 000F  
                              btemp22 0017                                btemp31 0020  
                              btemp15 0010                                btemp23 0018  
                              btemp40 0029                                btemp32 0021  
                              btemp24 0019                                btemp16 0011  
                              btemp41 002A                                btemp33 0022  
                              btemp25 001A                                btemp17 0012  
                              btemp42 002B                                btemp34 0023  
                              btemp26 001B                                btemp18 0013  
                              btemp50 0033                                btemp43 002C  
                              btemp35 0024                                btemp27 001C  
                              btemp19 0014                                btemp51 0034  
                              btemp52 0035                                btemp44 002D  
                              btemp36 0025                                btemp28 001D  
                              btemp53 0036                                btemp45 002E  
                              btemp37 0026                                btemp29 001E  
                              btemp46 002F                                btemp38 0027  
                              btemp54 0037                                btemp47 0030  
                              btemp39 0028                                btemp55 0038  
                              btemp48 0031                                btemp49 0032  
                    __end_of_os_delay 109C                      __end_of_sem_init 1CB2  
                    __end_of_sem_wait 0E4C                      __end_of_sem_post 18CE  
                __end_of_conf_timer_0 1DC8                                ltemp10 0029  
                              ltemp11 002D                                ltemp12 0031  
                              ltemp13 0035                      __end_of_set_port 1E32  
                    __end_of_os_start 1DF6                                lltemp0 0001  
                              lltemp1 0009                                lltemp2 0011  
                              lltemp3 0019                                lltemp4 0021  
                              lltemp5 0029                                lltemp6 0031  
                        __mediumconst 0800                      __end_of_pwm_init 1C14  
                              ttemp10 0029                                ttemp11 002D  
                              ttemp12 0031                                ttemp13 0035  
                              wtemp10 0015                                wtemp11 0017  
                              wtemp20 0029                                wtemp12 0019  
                              wtemp21 002B                                wtemp13 001B  
                              wtemp14 001D                                wtemp22 002D  
                              wtemp23 002F                                wtemp15 001F  
                              wtemp24 0031                                wtemp16 0021  
                              wtemp25 0033                                wtemp17 0023  
                              wtemp26 0035                                wtemp18 0025  
                              wtemp27 0037                                wtemp19 0027  
                          __accesstop 0060               __end_of__initialization 1C7E  
                       ___rparam_used 0001                        _os_create_task 1788  
                      __pcstackCOMRAM 004B                            ___inthi_sp 0663  
                          __pbssBANK0 0060                         __uDynamicHeap 02C5  
              __end_of_os_create_task 183E                            _config_adc 1D04  
               _os_task_time_decrease 195A                            _config_app 1A58  
                             __Hparam 0000                               __Lparam 0000  
                             ___awmod 16CA                          __psmallconst 0800  
                             __pcinit 1C52                               __ramtop 0800  
                             __ptext0 1AC8                               __ptext1 1DE2  
                             __ptext2 1A58                               __ptext3 1E26  
                             __ptext4 1DF6                               __ptext5 1BD0  
                             __ptext6 1E0A                               __ptext7 1B28  
                             __ptext8 1C84                               __ptext9 109C  
             _tarefa_leitura_sensores 19E2                             _T0CONbits 0FD5  
                           _T1CONbits 0FCD                            _readyQueue 00B0  
                   __end_of_read_pipe 15FA                    ISR_TIMER_0@pwm_cnt 0041  
                   __end_of_scheduler 1E26                        __pintcode_body 0802  
                end_of_initialization 1C7E                     __end_of_os_config 1D04  
                             int_func 0802                          _conf_timer_0 1DAE  
                             postdec0 0FED                               postdec1 0FE5  
                             postdec2 0FDD                               postinc0 0FEE  
                             postinc1 0FE6                               postinc2 0FDE  
                           _PORTDbits 0F83                             _SRAMalloc 109C  
                          _mutex_init 1E0A                            _mutex_lock 1E48  
                           _TRISDbits 0F95                    __end_of__SRAMmerge 135E  
                      __end_of_adc_go 1E3E                            _write_pipe 1442  
                 start_initialization 1C52                  __end_of_os_idle_task 1CDC  
                  _velocidade_motores 0039                   __end_of_create_pipe 1B82  
                       _pipe_sensores 0081                           __pbssBIGRAM 00B0  
                         __pbssCOMRAM 0039       __end_of_tarefa_leitura_sensores 1A58  
                     _conf_interrupts 1E52                  __end_of_SRAMInitHeap 195A  
                       ??_ISR_TIMER_0 004B                             __pintcode 0008  
                         __smallconst 0800                             _read_pipe 1524  
                           _scheduler 1E18                           _create_pipe 1B28  
                            _LATDbits 0F8C                              _PIE1bits 0F9D  
                           _os_config 1CDC                              i2u110_40 0888  
                            i2u110_41 0880                              i2u120_40 0A0A  
                            i2u112_40 08AE                              i2u111_48 088A  
                            i2u120_41 0A06                              i2u112_41 08A6  
                            i2u121_40 0A40                              i2u121_41 0A3C  
                            i2u122_40 0AA0                              i2u114_40 08D6  
                            i2u113_48 08B0                              i2u122_41 0A9C  
                            i2u114_41 08CE                              i2u123_40 0B48  
                            i2u123_41 0B44                              i2u116_40 0900  
                            i2u115_48 08D8                              i2u108_40 084A  
                            i2u116_41 08F8                              i2u108_41 0846  
                            i2u109_40 086A                              i2u109_41 0866  
                            i2u118_40 0920                              i2u117_48 0902  
                            i2u118_41 091C                              i2u119_40 0948  
                            i2u119_41 0944                              _PIR1bits 0F9E  
          __end_of_priority_scheduler 16CA                  __end_of_mutex_unlock 1E48  
                          _ADCON0bits 0FC2                   __end_of_ISR_TIMER_0 0B96  
                          _ADCON1bits 0FC1                            _ADCON2bits 0FC0  
             __end_of_conf_interrupts 1E56                          _pipe_bateria 0060  
                            __Hrparam 0000                              __Lrparam 0000  
                  __end_of_config_adc 1D26                   __end_of_set_channel 1E0A  
                  __end_of_config_app 1AC8                              _adc_read 1DC8  
                        _os_idle_task 1CB2                              __ptext10 122A  
                            __ptext11 1D04                              __ptext20 1524  
                            __ptext12 1E32                              __ptext21 0E4C  
                            __ptext13 1DAE                              __ptext30 1D26  
                            __ptext22 1E3E                              __ptext14 1E52  
                            __ptext31 1D48                              __ptext23 183E  
                            __ptext15 18CE                              __ptext32 1D6A  
                            __ptext24 1E48                              __ptext16 1CDC  
                            __ptext33 1D8C                              __ptext25 0B96  
                            __ptext17 1788                              __ptext34 19E2  
                            __ptext26 1E18                              __ptext18 1CB2  
                            __ptext35 1442                              __ptext27 15FA  
                            __ptext19 135E                              __ptext36 1DC8  
                            __ptext28 16CA                              __ptext37 1B82  
                            __ptext29 1C14                              __ptext39 195A  
             _tarefa_controle_central 135E             _pwm_set_duty_cycle_motor1 1D8C  
           _pwm_set_duty_cycle_motor2 1D6A             _pwm_set_duty_cycle_motor3 1D48  
           _pwm_set_duty_cycle_motor4 1D26                              _os_delay 0E4C  
             _tarefa_controle_motores 1C14                              _sem_init 1C84  
                            _sem_wait 0B96                              _sem_post 183E  
                            _set_port 1E26                              _os_start 1DE2  
                            isa$xinst 0000                           _ISR_TIMER_0 0008  
                            _pwm_init 1BD0                          _SRAMInitHeap 18CE  
                          _INTCONbits 0FF2                          _motor_a_duty 0049  
                        _motor_b_duty 0047                          _motor_c_duty 0045  
                        _motor_d_duty 0043                              intlevel1 0000  
                            intlevel2 0000                           _set_channel 1DF6  
                  __end_of_mutex_init 1E18                    __end_of_mutex_lock 1E52  
                       _mutex_motores 00A2                          _mutex_unlock 1E3E  
                  __end_of_write_pipe 1524  
