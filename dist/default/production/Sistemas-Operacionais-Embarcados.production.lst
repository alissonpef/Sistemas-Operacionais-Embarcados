

Microchip MPLAB XC8 Assembler V3.10 build 20250813170317 
                                                                                               Fri Oct 24 16:00:26 2025

Microchip MPLAB XC8 C Compiler v3.10 (Free license) build 20250813170317 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=1
    43                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	dabs	1,0x1,56
    55   000000                     
    56                           ; Generated 17/01/2025 GMT
    57                           ; 
    58                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4550 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000FE0                     bsr             equ	4064
    91   000FE9                     fsr0            equ	4073
    92   000FEA                     fsr0h           equ	4074
    93   000FE9                     fsr0l           equ	4073
    94   000FE1                     fsr1            equ	4065
    95   000FE2                     fsr1h           equ	4066
    96   000FE1                     fsr1l           equ	4065
    97   000FD9                     fsr2            equ	4057
    98   000FDA                     fsr2h           equ	4058
    99   000FD9                     fsr2l           equ	4057
   100   000FEF                     indf0           equ	4079
   101   000FE7                     indf1           equ	4071
   102   000FDF                     indf2           equ	4063
   103   000FF2                     intcon          equ	4082
   104   000000                     nvmcon          equ	0
   105   000FF9                     pcl             equ	4089
   106   000FFA                     pclath          equ	4090
   107   000FFB                     pclatu          equ	4091
   108   000FEB                     plusw0          equ	4075
   109   000FE3                     plusw1          equ	4067
   110   000FDB                     plusw2          equ	4059
   111   000FED                     postdec0        equ	4077
   112   000FE5                     postdec1        equ	4069
   113   000FDD                     postdec2        equ	4061
   114   000FEE                     postinc0        equ	4078
   115   000FE6                     postinc1        equ	4070
   116   000FDE                     postinc2        equ	4062
   117   000FEC                     preinc0         equ	4076
   118   000FE4                     preinc1         equ	4068
   119   000FDC                     preinc2         equ	4060
   120   000FF3                     prod            equ	4083
   121   000FF4                     prodh           equ	4084
   122   000FF3                     prodl           equ	4083
   123   000FD8                     status          equ	4056
   124   000FF5                     tablat          equ	4085
   125   000FF6                     tblptr          equ	4086
   126   000FF7                     tblptrh         equ	4087
   127   000FF6                     tblptrl         equ	4086
   128   000FF8                     tblptru         equ	4088
   129   000FFD                     tosl            equ	4093
   130   000FE8                     wreg            equ	4072
   131   000F62                     SPPDATA         equ	3938	;# 
   132   000F63                     SPPCFG          equ	3939	;# 
   133   000F64                     SPPEPS          equ	3940	;# 
   134   000F65                     SPPCON          equ	3941	;# 
   135   000F66                     UFRM            equ	3942	;# 
   136   000F66                     UFRML           equ	3942	;# 
   137   000F67                     UFRMH           equ	3943	;# 
   138   000F68                     UIR             equ	3944	;# 
   139   000F69                     UIE             equ	3945	;# 
   140   000F6A                     UEIR            equ	3946	;# 
   141   000F6B                     UEIE            equ	3947	;# 
   142   000F6C                     USTAT           equ	3948	;# 
   143   000F6D                     UCON            equ	3949	;# 
   144   000F6E                     UADDR           equ	3950	;# 
   145   000F6F                     UCFG            equ	3951	;# 
   146   000F70                     UEP0            equ	3952	;# 
   147   000F71                     UEP1            equ	3953	;# 
   148   000F72                     UEP2            equ	3954	;# 
   149   000F73                     UEP3            equ	3955	;# 
   150   000F74                     UEP4            equ	3956	;# 
   151   000F75                     UEP5            equ	3957	;# 
   152   000F76                     UEP6            equ	3958	;# 
   153   000F77                     UEP7            equ	3959	;# 
   154   000F78                     UEP8            equ	3960	;# 
   155   000F79                     UEP9            equ	3961	;# 
   156   000F7A                     UEP10           equ	3962	;# 
   157   000F7B                     UEP11           equ	3963	;# 
   158   000F7C                     UEP12           equ	3964	;# 
   159   000F7D                     UEP13           equ	3965	;# 
   160   000F7E                     UEP14           equ	3966	;# 
   161   000F7F                     UEP15           equ	3967	;# 
   162   000F80                     PORTA           equ	3968	;# 
   163   000F81                     PORTB           equ	3969	;# 
   164   000F82                     PORTC           equ	3970	;# 
   165   000F83                     PORTD           equ	3971	;# 
   166   000F84                     PORTE           equ	3972	;# 
   167   000F89                     LATA            equ	3977	;# 
   168   000F8A                     LATB            equ	3978	;# 
   169   000F8B                     LATC            equ	3979	;# 
   170   000F8C                     LATD            equ	3980	;# 
   171   000F8D                     LATE            equ	3981	;# 
   172   000F92                     TRISA           equ	3986	;# 
   173   000F92                     DDRA            equ	3986	;# 
   174   000F93                     TRISB           equ	3987	;# 
   175   000F93                     DDRB            equ	3987	;# 
   176   000F94                     TRISC           equ	3988	;# 
   177   000F94                     DDRC            equ	3988	;# 
   178   000F95                     TRISD           equ	3989	;# 
   179   000F95                     DDRD            equ	3989	;# 
   180   000F96                     TRISE           equ	3990	;# 
   181   000F96                     DDRE            equ	3990	;# 
   182   000F9B                     OSCTUNE         equ	3995	;# 
   183   000F9D                     PIE1            equ	3997	;# 
   184   000F9E                     PIR1            equ	3998	;# 
   185   000F9F                     IPR1            equ	3999	;# 
   186   000FA0                     PIE2            equ	4000	;# 
   187   000FA1                     PIR2            equ	4001	;# 
   188   000FA2                     IPR2            equ	4002	;# 
   189   000FA6                     EECON1          equ	4006	;# 
   190   000FA7                     EECON2          equ	4007	;# 
   191   000FA8                     EEDATA          equ	4008	;# 
   192   000FA9                     EEADR           equ	4009	;# 
   193   000FAB                     RCSTA           equ	4011	;# 
   194   000FAB                     RCSTA1          equ	4011	;# 
   195   000FAC                     TXSTA           equ	4012	;# 
   196   000FAC                     TXSTA1          equ	4012	;# 
   197   000FAD                     TXREG           equ	4013	;# 
   198   000FAD                     TXREG1          equ	4013	;# 
   199   000FAE                     RCREG           equ	4014	;# 
   200   000FAE                     RCREG1          equ	4014	;# 
   201   000FAF                     SPBRG           equ	4015	;# 
   202   000FAF                     SPBRG1          equ	4015	;# 
   203   000FB0                     SPBRGH          equ	4016	;# 
   204   000FB1                     T3CON           equ	4017	;# 
   205   000FB2                     TMR3            equ	4018	;# 
   206   000FB2                     TMR3L           equ	4018	;# 
   207   000FB3                     TMR3H           equ	4019	;# 
   208   000FB4                     CMCON           equ	4020	;# 
   209   000FB5                     CVRCON          equ	4021	;# 
   210   000FB6                     ECCP1AS         equ	4022	;# 
   211   000FB6                     CCP1AS          equ	4022	;# 
   212   000FB7                     ECCP1DEL        equ	4023	;# 
   213   000FB7                     CCP1DEL         equ	4023	;# 
   214   000FB8                     BAUDCON         equ	4024	;# 
   215   000FB8                     BAUDCTL         equ	4024	;# 
   216   000FBA                     CCP2CON         equ	4026	;# 
   217   000FBB                     CCPR2           equ	4027	;# 
   218   000FBB                     CCPR2L          equ	4027	;# 
   219   000FBC                     CCPR2H          equ	4028	;# 
   220   000FBD                     CCP1CON         equ	4029	;# 
   221   000FBD                     ECCP1CON        equ	4029	;# 
   222   000FBE                     CCPR1           equ	4030	;# 
   223   000FBE                     CCPR1L          equ	4030	;# 
   224   000FBF                     CCPR1H          equ	4031	;# 
   225   000FC0                     ADCON2          equ	4032	;# 
   226   000FC1                     ADCON1          equ	4033	;# 
   227   000FC2                     ADCON0          equ	4034	;# 
   228   000FC3                     ADRES           equ	4035	;# 
   229   000FC3                     ADRESL          equ	4035	;# 
   230   000FC4                     ADRESH          equ	4036	;# 
   231   000FC5                     SSPCON2         equ	4037	;# 
   232   000FC6                     SSPCON1         equ	4038	;# 
   233   000FC7                     SSPSTAT         equ	4039	;# 
   234   000FC8                     SSPADD          equ	4040	;# 
   235   000FC9                     SSPBUF          equ	4041	;# 
   236   000FCA                     T2CON           equ	4042	;# 
   237   000FCB                     PR2             equ	4043	;# 
   238   000FCB                     MEMCON          equ	4043	;# 
   239   000FCC                     TMR2            equ	4044	;# 
   240   000FCD                     T1CON           equ	4045	;# 
   241   000FCE                     TMR1            equ	4046	;# 
   242   000FCE                     TMR1L           equ	4046	;# 
   243   000FCF                     TMR1H           equ	4047	;# 
   244   000FD0                     RCON            equ	4048	;# 
   245   000FD1                     WDTCON          equ	4049	;# 
   246   000FD2                     HLVDCON         equ	4050	;# 
   247   000FD2                     LVDCON          equ	4050	;# 
   248   000FD3                     OSCCON          equ	4051	;# 
   249   000FD5                     T0CON           equ	4053	;# 
   250   000FD6                     TMR0            equ	4054	;# 
   251   000FD6                     TMR0L           equ	4054	;# 
   252   000FD7                     TMR0H           equ	4055	;# 
   253   000FD8                     STATUS          equ	4056	;# 
   254   000FD9                     FSR2            equ	4057	;# 
   255   000FD9                     FSR2L           equ	4057	;# 
   256   000FDA                     FSR2H           equ	4058	;# 
   257   000FDB                     PLUSW2          equ	4059	;# 
   258   000FDC                     PREINC2         equ	4060	;# 
   259   000FDD                     POSTDEC2        equ	4061	;# 
   260   000FDE                     POSTINC2        equ	4062	;# 
   261   000FDF                     INDF2           equ	4063	;# 
   262   000FE0                     BSR             equ	4064	;# 
   263   000FE1                     FSR1            equ	4065	;# 
   264   000FE1                     FSR1L           equ	4065	;# 
   265   000FE2                     FSR1H           equ	4066	;# 
   266   000FE3                     PLUSW1          equ	4067	;# 
   267   000FE4                     PREINC1         equ	4068	;# 
   268   000FE5                     POSTDEC1        equ	4069	;# 
   269   000FE6                     POSTINC1        equ	4070	;# 
   270   000FE7                     INDF1           equ	4071	;# 
   271   000FE8                     WREG            equ	4072	;# 
   272   000FE9                     FSR0            equ	4073	;# 
   273   000FE9                     FSR0L           equ	4073	;# 
   274   000FEA                     FSR0H           equ	4074	;# 
   275   000FEB                     PLUSW0          equ	4075	;# 
   276   000FEC                     PREINC0         equ	4076	;# 
   277   000FED                     POSTDEC0        equ	4077	;# 
   278   000FEE                     POSTINC0        equ	4078	;# 
   279   000FEF                     INDF0           equ	4079	;# 
   280   000FF0                     INTCON3         equ	4080	;# 
   281   000FF1                     INTCON2         equ	4081	;# 
   282   000FF2                     INTCON          equ	4082	;# 
   283   000FF3                     PROD            equ	4083	;# 
   284   000FF3                     PRODL           equ	4083	;# 
   285   000FF4                     PRODH           equ	4084	;# 
   286   000FF5                     TABLAT          equ	4085	;# 
   287   000FF6                     TBLPTR          equ	4086	;# 
   288   000FF6                     TBLPTRL         equ	4086	;# 
   289   000FF7                     TBLPTRH         equ	4087	;# 
   290   000FF8                     TBLPTRU         equ	4088	;# 
   291   000FF9                     PCLAT           equ	4089	;# 
   292   000FF9                     PC              equ	4089	;# 
   293   000FF9                     PCL             equ	4089	;# 
   294   000FFA                     PCLATH          equ	4090	;# 
   295   000FFB                     PCLATU          equ	4091	;# 
   296   000FFC                     STKPTR          equ	4092	;# 
   297   000FFD                     TOS             equ	4093	;# 
   298   000FFD                     TOSL            equ	4093	;# 
   299   000FFE                     TOSH            equ	4094	;# 
   300   000FFF                     TOSU            equ	4095	;# 
   301   000F62                     SPPDATA         equ	3938	;# 
   302   000F63                     SPPCFG          equ	3939	;# 
   303   000F64                     SPPEPS          equ	3940	;# 
   304   000F65                     SPPCON          equ	3941	;# 
   305   000F66                     UFRM            equ	3942	;# 
   306   000F66                     UFRML           equ	3942	;# 
   307   000F67                     UFRMH           equ	3943	;# 
   308   000F68                     UIR             equ	3944	;# 
   309   000F69                     UIE             equ	3945	;# 
   310   000F6A                     UEIR            equ	3946	;# 
   311   000F6B                     UEIE            equ	3947	;# 
   312   000F6C                     USTAT           equ	3948	;# 
   313   000F6D                     UCON            equ	3949	;# 
   314   000F6E                     UADDR           equ	3950	;# 
   315   000F6F                     UCFG            equ	3951	;# 
   316   000F70                     UEP0            equ	3952	;# 
   317   000F71                     UEP1            equ	3953	;# 
   318   000F72                     UEP2            equ	3954	;# 
   319   000F73                     UEP3            equ	3955	;# 
   320   000F74                     UEP4            equ	3956	;# 
   321   000F75                     UEP5            equ	3957	;# 
   322   000F76                     UEP6            equ	3958	;# 
   323   000F77                     UEP7            equ	3959	;# 
   324   000F78                     UEP8            equ	3960	;# 
   325   000F79                     UEP9            equ	3961	;# 
   326   000F7A                     UEP10           equ	3962	;# 
   327   000F7B                     UEP11           equ	3963	;# 
   328   000F7C                     UEP12           equ	3964	;# 
   329   000F7D                     UEP13           equ	3965	;# 
   330   000F7E                     UEP14           equ	3966	;# 
   331   000F7F                     UEP15           equ	3967	;# 
   332   000F80                     PORTA           equ	3968	;# 
   333   000F81                     PORTB           equ	3969	;# 
   334   000F82                     PORTC           equ	3970	;# 
   335   000F83                     PORTD           equ	3971	;# 
   336   000F84                     PORTE           equ	3972	;# 
   337   000F89                     LATA            equ	3977	;# 
   338   000F8A                     LATB            equ	3978	;# 
   339   000F8B                     LATC            equ	3979	;# 
   340   000F8C                     LATD            equ	3980	;# 
   341   000F8D                     LATE            equ	3981	;# 
   342   000F92                     TRISA           equ	3986	;# 
   343   000F92                     DDRA            equ	3986	;# 
   344   000F93                     TRISB           equ	3987	;# 
   345   000F93                     DDRB            equ	3987	;# 
   346   000F94                     TRISC           equ	3988	;# 
   347   000F94                     DDRC            equ	3988	;# 
   348   000F95                     TRISD           equ	3989	;# 
   349   000F95                     DDRD            equ	3989	;# 
   350   000F96                     TRISE           equ	3990	;# 
   351   000F96                     DDRE            equ	3990	;# 
   352   000F9B                     OSCTUNE         equ	3995	;# 
   353   000F9D                     PIE1            equ	3997	;# 
   354   000F9E                     PIR1            equ	3998	;# 
   355   000F9F                     IPR1            equ	3999	;# 
   356   000FA0                     PIE2            equ	4000	;# 
   357   000FA1                     PIR2            equ	4001	;# 
   358   000FA2                     IPR2            equ	4002	;# 
   359   000FA6                     EECON1          equ	4006	;# 
   360   000FA7                     EECON2          equ	4007	;# 
   361   000FA8                     EEDATA          equ	4008	;# 
   362   000FA9                     EEADR           equ	4009	;# 
   363   000FAB                     RCSTA           equ	4011	;# 
   364   000FAB                     RCSTA1          equ	4011	;# 
   365   000FAC                     TXSTA           equ	4012	;# 
   366   000FAC                     TXSTA1          equ	4012	;# 
   367   000FAD                     TXREG           equ	4013	;# 
   368   000FAD                     TXREG1          equ	4013	;# 
   369   000FAE                     RCREG           equ	4014	;# 
   370   000FAE                     RCREG1          equ	4014	;# 
   371   000FAF                     SPBRG           equ	4015	;# 
   372   000FAF                     SPBRG1          equ	4015	;# 
   373   000FB0                     SPBRGH          equ	4016	;# 
   374   000FB1                     T3CON           equ	4017	;# 
   375   000FB2                     TMR3            equ	4018	;# 
   376   000FB2                     TMR3L           equ	4018	;# 
   377   000FB3                     TMR3H           equ	4019	;# 
   378   000FB4                     CMCON           equ	4020	;# 
   379   000FB5                     CVRCON          equ	4021	;# 
   380   000FB6                     ECCP1AS         equ	4022	;# 
   381   000FB6                     CCP1AS          equ	4022	;# 
   382   000FB7                     ECCP1DEL        equ	4023	;# 
   383   000FB7                     CCP1DEL         equ	4023	;# 
   384   000FB8                     BAUDCON         equ	4024	;# 
   385   000FB8                     BAUDCTL         equ	4024	;# 
   386   000FBA                     CCP2CON         equ	4026	;# 
   387   000FBB                     CCPR2           equ	4027	;# 
   388   000FBB                     CCPR2L          equ	4027	;# 
   389   000FBC                     CCPR2H          equ	4028	;# 
   390   000FBD                     CCP1CON         equ	4029	;# 
   391   000FBD                     ECCP1CON        equ	4029	;# 
   392   000FBE                     CCPR1           equ	4030	;# 
   393   000FBE                     CCPR1L          equ	4030	;# 
   394   000FBF                     CCPR1H          equ	4031	;# 
   395   000FC0                     ADCON2          equ	4032	;# 
   396   000FC1                     ADCON1          equ	4033	;# 
   397   000FC2                     ADCON0          equ	4034	;# 
   398   000FC3                     ADRES           equ	4035	;# 
   399   000FC3                     ADRESL          equ	4035	;# 
   400   000FC4                     ADRESH          equ	4036	;# 
   401   000FC5                     SSPCON2         equ	4037	;# 
   402   000FC6                     SSPCON1         equ	4038	;# 
   403   000FC7                     SSPSTAT         equ	4039	;# 
   404   000FC8                     SSPADD          equ	4040	;# 
   405   000FC9                     SSPBUF          equ	4041	;# 
   406   000FCA                     T2CON           equ	4042	;# 
   407   000FCB                     PR2             equ	4043	;# 
   408   000FCB                     MEMCON          equ	4043	;# 
   409   000FCC                     TMR2            equ	4044	;# 
   410   000FCD                     T1CON           equ	4045	;# 
   411   000FCE                     TMR1            equ	4046	;# 
   412   000FCE                     TMR1L           equ	4046	;# 
   413   000FCF                     TMR1H           equ	4047	;# 
   414   000FD0                     RCON            equ	4048	;# 
   415   000FD1                     WDTCON          equ	4049	;# 
   416   000FD2                     HLVDCON         equ	4050	;# 
   417   000FD2                     LVDCON          equ	4050	;# 
   418   000FD3                     OSCCON          equ	4051	;# 
   419   000FD5                     T0CON           equ	4053	;# 
   420   000FD6                     TMR0            equ	4054	;# 
   421   000FD6                     TMR0L           equ	4054	;# 
   422   000FD7                     TMR0H           equ	4055	;# 
   423   000FD8                     STATUS          equ	4056	;# 
   424   000FD9                     FSR2            equ	4057	;# 
   425   000FD9                     FSR2L           equ	4057	;# 
   426   000FDA                     FSR2H           equ	4058	;# 
   427   000FDB                     PLUSW2          equ	4059	;# 
   428   000FDC                     PREINC2         equ	4060	;# 
   429   000FDD                     POSTDEC2        equ	4061	;# 
   430   000FDE                     POSTINC2        equ	4062	;# 
   431   000FDF                     INDF2           equ	4063	;# 
   432   000FE0                     BSR             equ	4064	;# 
   433   000FE1                     FSR1            equ	4065	;# 
   434   000FE1                     FSR1L           equ	4065	;# 
   435   000FE2                     FSR1H           equ	4066	;# 
   436   000FE3                     PLUSW1          equ	4067	;# 
   437   000FE4                     PREINC1         equ	4068	;# 
   438   000FE5                     POSTDEC1        equ	4069	;# 
   439   000FE6                     POSTINC1        equ	4070	;# 
   440   000FE7                     INDF1           equ	4071	;# 
   441   000FE8                     WREG            equ	4072	;# 
   442   000FE9                     FSR0            equ	4073	;# 
   443   000FE9                     FSR0L           equ	4073	;# 
   444   000FEA                     FSR0H           equ	4074	;# 
   445   000FEB                     PLUSW0          equ	4075	;# 
   446   000FEC                     PREINC0         equ	4076	;# 
   447   000FED                     POSTDEC0        equ	4077	;# 
   448   000FEE                     POSTINC0        equ	4078	;# 
   449   000FEF                     INDF0           equ	4079	;# 
   450   000FF0                     INTCON3         equ	4080	;# 
   451   000FF1                     INTCON2         equ	4081	;# 
   452   000FF2                     INTCON          equ	4082	;# 
   453   000FF3                     PROD            equ	4083	;# 
   454   000FF3                     PRODL           equ	4083	;# 
   455   000FF4                     PRODH           equ	4084	;# 
   456   000FF5                     TABLAT          equ	4085	;# 
   457   000FF6                     TBLPTR          equ	4086	;# 
   458   000FF6                     TBLPTRL         equ	4086	;# 
   459   000FF7                     TBLPTRH         equ	4087	;# 
   460   000FF8                     TBLPTRU         equ	4088	;# 
   461   000FF9                     PCLAT           equ	4089	;# 
   462   000FF9                     PC              equ	4089	;# 
   463   000FF9                     PCL             equ	4089	;# 
   464   000FFA                     PCLATH          equ	4090	;# 
   465   000FFB                     PCLATU          equ	4091	;# 
   466   000FFC                     STKPTR          equ	4092	;# 
   467   000FFD                     TOS             equ	4093	;# 
   468   000FFD                     TOSL            equ	4093	;# 
   469   000FFE                     TOSH            equ	4094	;# 
   470   000FFF                     TOSU            equ	4095	;# 
   471   000F62                     SPPDATA         equ	3938	;# 
   472   000F63                     SPPCFG          equ	3939	;# 
   473   000F64                     SPPEPS          equ	3940	;# 
   474   000F65                     SPPCON          equ	3941	;# 
   475   000F66                     UFRM            equ	3942	;# 
   476   000F66                     UFRML           equ	3942	;# 
   477   000F67                     UFRMH           equ	3943	;# 
   478   000F68                     UIR             equ	3944	;# 
   479   000F69                     UIE             equ	3945	;# 
   480   000F6A                     UEIR            equ	3946	;# 
   481   000F6B                     UEIE            equ	3947	;# 
   482   000F6C                     USTAT           equ	3948	;# 
   483   000F6D                     UCON            equ	3949	;# 
   484   000F6E                     UADDR           equ	3950	;# 
   485   000F6F                     UCFG            equ	3951	;# 
   486   000F70                     UEP0            equ	3952	;# 
   487   000F71                     UEP1            equ	3953	;# 
   488   000F72                     UEP2            equ	3954	;# 
   489   000F73                     UEP3            equ	3955	;# 
   490   000F74                     UEP4            equ	3956	;# 
   491   000F75                     UEP5            equ	3957	;# 
   492   000F76                     UEP6            equ	3958	;# 
   493   000F77                     UEP7            equ	3959	;# 
   494   000F78                     UEP8            equ	3960	;# 
   495   000F79                     UEP9            equ	3961	;# 
   496   000F7A                     UEP10           equ	3962	;# 
   497   000F7B                     UEP11           equ	3963	;# 
   498   000F7C                     UEP12           equ	3964	;# 
   499   000F7D                     UEP13           equ	3965	;# 
   500   000F7E                     UEP14           equ	3966	;# 
   501   000F7F                     UEP15           equ	3967	;# 
   502   000F80                     PORTA           equ	3968	;# 
   503   000F81                     PORTB           equ	3969	;# 
   504   000F82                     PORTC           equ	3970	;# 
   505   000F83                     PORTD           equ	3971	;# 
   506   000F84                     PORTE           equ	3972	;# 
   507   000F89                     LATA            equ	3977	;# 
   508   000F8A                     LATB            equ	3978	;# 
   509   000F8B                     LATC            equ	3979	;# 
   510   000F8C                     LATD            equ	3980	;# 
   511   000F8D                     LATE            equ	3981	;# 
   512   000F92                     TRISA           equ	3986	;# 
   513   000F92                     DDRA            equ	3986	;# 
   514   000F93                     TRISB           equ	3987	;# 
   515   000F93                     DDRB            equ	3987	;# 
   516   000F94                     TRISC           equ	3988	;# 
   517   000F94                     DDRC            equ	3988	;# 
   518   000F95                     TRISD           equ	3989	;# 
   519   000F95                     DDRD            equ	3989	;# 
   520   000F96                     TRISE           equ	3990	;# 
   521   000F96                     DDRE            equ	3990	;# 
   522   000F9B                     OSCTUNE         equ	3995	;# 
   523   000F9D                     PIE1            equ	3997	;# 
   524   000F9E                     PIR1            equ	3998	;# 
   525   000F9F                     IPR1            equ	3999	;# 
   526   000FA0                     PIE2            equ	4000	;# 
   527   000FA1                     PIR2            equ	4001	;# 
   528   000FA2                     IPR2            equ	4002	;# 
   529   000FA6                     EECON1          equ	4006	;# 
   530   000FA7                     EECON2          equ	4007	;# 
   531   000FA8                     EEDATA          equ	4008	;# 
   532   000FA9                     EEADR           equ	4009	;# 
   533   000FAB                     RCSTA           equ	4011	;# 
   534   000FAB                     RCSTA1          equ	4011	;# 
   535   000FAC                     TXSTA           equ	4012	;# 
   536   000FAC                     TXSTA1          equ	4012	;# 
   537   000FAD                     TXREG           equ	4013	;# 
   538   000FAD                     TXREG1          equ	4013	;# 
   539   000FAE                     RCREG           equ	4014	;# 
   540   000FAE                     RCREG1          equ	4014	;# 
   541   000FAF                     SPBRG           equ	4015	;# 
   542   000FAF                     SPBRG1          equ	4015	;# 
   543   000FB0                     SPBRGH          equ	4016	;# 
   544   000FB1                     T3CON           equ	4017	;# 
   545   000FB2                     TMR3            equ	4018	;# 
   546   000FB2                     TMR3L           equ	4018	;# 
   547   000FB3                     TMR3H           equ	4019	;# 
   548   000FB4                     CMCON           equ	4020	;# 
   549   000FB5                     CVRCON          equ	4021	;# 
   550   000FB6                     ECCP1AS         equ	4022	;# 
   551   000FB6                     CCP1AS          equ	4022	;# 
   552   000FB7                     ECCP1DEL        equ	4023	;# 
   553   000FB7                     CCP1DEL         equ	4023	;# 
   554   000FB8                     BAUDCON         equ	4024	;# 
   555   000FB8                     BAUDCTL         equ	4024	;# 
   556   000FBA                     CCP2CON         equ	4026	;# 
   557   000FBB                     CCPR2           equ	4027	;# 
   558   000FBB                     CCPR2L          equ	4027	;# 
   559   000FBC                     CCPR2H          equ	4028	;# 
   560   000FBD                     CCP1CON         equ	4029	;# 
   561   000FBD                     ECCP1CON        equ	4029	;# 
   562   000FBE                     CCPR1           equ	4030	;# 
   563   000FBE                     CCPR1L          equ	4030	;# 
   564   000FBF                     CCPR1H          equ	4031	;# 
   565   000FC0                     ADCON2          equ	4032	;# 
   566   000FC1                     ADCON1          equ	4033	;# 
   567   000FC2                     ADCON0          equ	4034	;# 
   568   000FC3                     ADRES           equ	4035	;# 
   569   000FC3                     ADRESL          equ	4035	;# 
   570   000FC4                     ADRESH          equ	4036	;# 
   571   000FC5                     SSPCON2         equ	4037	;# 
   572   000FC6                     SSPCON1         equ	4038	;# 
   573   000FC7                     SSPSTAT         equ	4039	;# 
   574   000FC8                     SSPADD          equ	4040	;# 
   575   000FC9                     SSPBUF          equ	4041	;# 
   576   000FCA                     T2CON           equ	4042	;# 
   577   000FCB                     PR2             equ	4043	;# 
   578   000FCB                     MEMCON          equ	4043	;# 
   579   000FCC                     TMR2            equ	4044	;# 
   580   000FCD                     T1CON           equ	4045	;# 
   581   000FCE                     TMR1            equ	4046	;# 
   582   000FCE                     TMR1L           equ	4046	;# 
   583   000FCF                     TMR1H           equ	4047	;# 
   584   000FD0                     RCON            equ	4048	;# 
   585   000FD1                     WDTCON          equ	4049	;# 
   586   000FD2                     HLVDCON         equ	4050	;# 
   587   000FD2                     LVDCON          equ	4050	;# 
   588   000FD3                     OSCCON          equ	4051	;# 
   589   000FD5                     T0CON           equ	4053	;# 
   590   000FD6                     TMR0            equ	4054	;# 
   591   000FD6                     TMR0L           equ	4054	;# 
   592   000FD7                     TMR0H           equ	4055	;# 
   593   000FD8                     STATUS          equ	4056	;# 
   594   000FD9                     FSR2            equ	4057	;# 
   595   000FD9                     FSR2L           equ	4057	;# 
   596   000FDA                     FSR2H           equ	4058	;# 
   597   000FDB                     PLUSW2          equ	4059	;# 
   598   000FDC                     PREINC2         equ	4060	;# 
   599   000FDD                     POSTDEC2        equ	4061	;# 
   600   000FDE                     POSTINC2        equ	4062	;# 
   601   000FDF                     INDF2           equ	4063	;# 
   602   000FE0                     BSR             equ	4064	;# 
   603   000FE1                     FSR1            equ	4065	;# 
   604   000FE1                     FSR1L           equ	4065	;# 
   605   000FE2                     FSR1H           equ	4066	;# 
   606   000FE3                     PLUSW1          equ	4067	;# 
   607   000FE4                     PREINC1         equ	4068	;# 
   608   000FE5                     POSTDEC1        equ	4069	;# 
   609   000FE6                     POSTINC1        equ	4070	;# 
   610   000FE7                     INDF1           equ	4071	;# 
   611   000FE8                     WREG            equ	4072	;# 
   612   000FE9                     FSR0            equ	4073	;# 
   613   000FE9                     FSR0L           equ	4073	;# 
   614   000FEA                     FSR0H           equ	4074	;# 
   615   000FEB                     PLUSW0          equ	4075	;# 
   616   000FEC                     PREINC0         equ	4076	;# 
   617   000FED                     POSTDEC0        equ	4077	;# 
   618   000FEE                     POSTINC0        equ	4078	;# 
   619   000FEF                     INDF0           equ	4079	;# 
   620   000FF0                     INTCON3         equ	4080	;# 
   621   000FF1                     INTCON2         equ	4081	;# 
   622   000FF2                     INTCON          equ	4082	;# 
   623   000FF3                     PROD            equ	4083	;# 
   624   000FF3                     PRODL           equ	4083	;# 
   625   000FF4                     PRODH           equ	4084	;# 
   626   000FF5                     TABLAT          equ	4085	;# 
   627   000FF6                     TBLPTR          equ	4086	;# 
   628   000FF6                     TBLPTRL         equ	4086	;# 
   629   000FF7                     TBLPTRH         equ	4087	;# 
   630   000FF8                     TBLPTRU         equ	4088	;# 
   631   000FF9                     PCLAT           equ	4089	;# 
   632   000FF9                     PC              equ	4089	;# 
   633   000FF9                     PCL             equ	4089	;# 
   634   000FFA                     PCLATH          equ	4090	;# 
   635   000FFB                     PCLATU          equ	4091	;# 
   636   000FFC                     STKPTR          equ	4092	;# 
   637   000FFD                     TOS             equ	4093	;# 
   638   000FFD                     TOSL            equ	4093	;# 
   639   000FFE                     TOSH            equ	4094	;# 
   640   000FFF                     TOSU            equ	4095	;# 
   641   000F62                     SPPDATA         equ	3938	;# 
   642   000F63                     SPPCFG          equ	3939	;# 
   643   000F64                     SPPEPS          equ	3940	;# 
   644   000F65                     SPPCON          equ	3941	;# 
   645   000F66                     UFRM            equ	3942	;# 
   646   000F66                     UFRML           equ	3942	;# 
   647   000F67                     UFRMH           equ	3943	;# 
   648   000F68                     UIR             equ	3944	;# 
   649   000F69                     UIE             equ	3945	;# 
   650   000F6A                     UEIR            equ	3946	;# 
   651   000F6B                     UEIE            equ	3947	;# 
   652   000F6C                     USTAT           equ	3948	;# 
   653   000F6D                     UCON            equ	3949	;# 
   654   000F6E                     UADDR           equ	3950	;# 
   655   000F6F                     UCFG            equ	3951	;# 
   656   000F70                     UEP0            equ	3952	;# 
   657   000F71                     UEP1            equ	3953	;# 
   658   000F72                     UEP2            equ	3954	;# 
   659   000F73                     UEP3            equ	3955	;# 
   660   000F74                     UEP4            equ	3956	;# 
   661   000F75                     UEP5            equ	3957	;# 
   662   000F76                     UEP6            equ	3958	;# 
   663   000F77                     UEP7            equ	3959	;# 
   664   000F78                     UEP8            equ	3960	;# 
   665   000F79                     UEP9            equ	3961	;# 
   666   000F7A                     UEP10           equ	3962	;# 
   667   000F7B                     UEP11           equ	3963	;# 
   668   000F7C                     UEP12           equ	3964	;# 
   669   000F7D                     UEP13           equ	3965	;# 
   670   000F7E                     UEP14           equ	3966	;# 
   671   000F7F                     UEP15           equ	3967	;# 
   672   000F80                     PORTA           equ	3968	;# 
   673   000F81                     PORTB           equ	3969	;# 
   674   000F82                     PORTC           equ	3970	;# 
   675   000F83                     PORTD           equ	3971	;# 
   676   000F84                     PORTE           equ	3972	;# 
   677   000F89                     LATA            equ	3977	;# 
   678   000F8A                     LATB            equ	3978	;# 
   679   000F8B                     LATC            equ	3979	;# 
   680   000F8C                     LATD            equ	3980	;# 
   681   000F8D                     LATE            equ	3981	;# 
   682   000F92                     TRISA           equ	3986	;# 
   683   000F92                     DDRA            equ	3986	;# 
   684   000F93                     TRISB           equ	3987	;# 
   685   000F93                     DDRB            equ	3987	;# 
   686   000F94                     TRISC           equ	3988	;# 
   687   000F94                     DDRC            equ	3988	;# 
   688   000F95                     TRISD           equ	3989	;# 
   689   000F95                     DDRD            equ	3989	;# 
   690   000F96                     TRISE           equ	3990	;# 
   691   000F96                     DDRE            equ	3990	;# 
   692   000F9B                     OSCTUNE         equ	3995	;# 
   693   000F9D                     PIE1            equ	3997	;# 
   694   000F9E                     PIR1            equ	3998	;# 
   695   000F9F                     IPR1            equ	3999	;# 
   696   000FA0                     PIE2            equ	4000	;# 
   697   000FA1                     PIR2            equ	4001	;# 
   698   000FA2                     IPR2            equ	4002	;# 
   699   000FA6                     EECON1          equ	4006	;# 
   700   000FA7                     EECON2          equ	4007	;# 
   701   000FA8                     EEDATA          equ	4008	;# 
   702   000FA9                     EEADR           equ	4009	;# 
   703   000FAB                     RCSTA           equ	4011	;# 
   704   000FAB                     RCSTA1          equ	4011	;# 
   705   000FAC                     TXSTA           equ	4012	;# 
   706   000FAC                     TXSTA1          equ	4012	;# 
   707   000FAD                     TXREG           equ	4013	;# 
   708   000FAD                     TXREG1          equ	4013	;# 
   709   000FAE                     RCREG           equ	4014	;# 
   710   000FAE                     RCREG1          equ	4014	;# 
   711   000FAF                     SPBRG           equ	4015	;# 
   712   000FAF                     SPBRG1          equ	4015	;# 
   713   000FB0                     SPBRGH          equ	4016	;# 
   714   000FB1                     T3CON           equ	4017	;# 
   715   000FB2                     TMR3            equ	4018	;# 
   716   000FB2                     TMR3L           equ	4018	;# 
   717   000FB3                     TMR3H           equ	4019	;# 
   718   000FB4                     CMCON           equ	4020	;# 
   719   000FB5                     CVRCON          equ	4021	;# 
   720   000FB6                     ECCP1AS         equ	4022	;# 
   721   000FB6                     CCP1AS          equ	4022	;# 
   722   000FB7                     ECCP1DEL        equ	4023	;# 
   723   000FB7                     CCP1DEL         equ	4023	;# 
   724   000FB8                     BAUDCON         equ	4024	;# 
   725   000FB8                     BAUDCTL         equ	4024	;# 
   726   000FBA                     CCP2CON         equ	4026	;# 
   727   000FBB                     CCPR2           equ	4027	;# 
   728   000FBB                     CCPR2L          equ	4027	;# 
   729   000FBC                     CCPR2H          equ	4028	;# 
   730   000FBD                     CCP1CON         equ	4029	;# 
   731   000FBD                     ECCP1CON        equ	4029	;# 
   732   000FBE                     CCPR1           equ	4030	;# 
   733   000FBE                     CCPR1L          equ	4030	;# 
   734   000FBF                     CCPR1H          equ	4031	;# 
   735   000FC0                     ADCON2          equ	4032	;# 
   736   000FC1                     ADCON1          equ	4033	;# 
   737   000FC2                     ADCON0          equ	4034	;# 
   738   000FC3                     ADRES           equ	4035	;# 
   739   000FC3                     ADRESL          equ	4035	;# 
   740   000FC4                     ADRESH          equ	4036	;# 
   741   000FC5                     SSPCON2         equ	4037	;# 
   742   000FC6                     SSPCON1         equ	4038	;# 
   743   000FC7                     SSPSTAT         equ	4039	;# 
   744   000FC8                     SSPADD          equ	4040	;# 
   745   000FC9                     SSPBUF          equ	4041	;# 
   746   000FCA                     T2CON           equ	4042	;# 
   747   000FCB                     PR2             equ	4043	;# 
   748   000FCB                     MEMCON          equ	4043	;# 
   749   000FCC                     TMR2            equ	4044	;# 
   750   000FCD                     T1CON           equ	4045	;# 
   751   000FCE                     TMR1            equ	4046	;# 
   752   000FCE                     TMR1L           equ	4046	;# 
   753   000FCF                     TMR1H           equ	4047	;# 
   754   000FD0                     RCON            equ	4048	;# 
   755   000FD1                     WDTCON          equ	4049	;# 
   756   000FD2                     HLVDCON         equ	4050	;# 
   757   000FD2                     LVDCON          equ	4050	;# 
   758   000FD3                     OSCCON          equ	4051	;# 
   759   000FD5                     T0CON           equ	4053	;# 
   760   000FD6                     TMR0            equ	4054	;# 
   761   000FD6                     TMR0L           equ	4054	;# 
   762   000FD7                     TMR0H           equ	4055	;# 
   763   000FD8                     STATUS          equ	4056	;# 
   764   000FD9                     FSR2            equ	4057	;# 
   765   000FD9                     FSR2L           equ	4057	;# 
   766   000FDA                     FSR2H           equ	4058	;# 
   767   000FDB                     PLUSW2          equ	4059	;# 
   768   000FDC                     PREINC2         equ	4060	;# 
   769   000FDD                     POSTDEC2        equ	4061	;# 
   770   000FDE                     POSTINC2        equ	4062	;# 
   771   000FDF                     INDF2           equ	4063	;# 
   772   000FE0                     BSR             equ	4064	;# 
   773   000FE1                     FSR1            equ	4065	;# 
   774   000FE1                     FSR1L           equ	4065	;# 
   775   000FE2                     FSR1H           equ	4066	;# 
   776   000FE3                     PLUSW1          equ	4067	;# 
   777   000FE4                     PREINC1         equ	4068	;# 
   778   000FE5                     POSTDEC1        equ	4069	;# 
   779   000FE6                     POSTINC1        equ	4070	;# 
   780   000FE7                     INDF1           equ	4071	;# 
   781   000FE8                     WREG            equ	4072	;# 
   782   000FE9                     FSR0            equ	4073	;# 
   783   000FE9                     FSR0L           equ	4073	;# 
   784   000FEA                     FSR0H           equ	4074	;# 
   785   000FEB                     PLUSW0          equ	4075	;# 
   786   000FEC                     PREINC0         equ	4076	;# 
   787   000FED                     POSTDEC0        equ	4077	;# 
   788   000FEE                     POSTINC0        equ	4078	;# 
   789   000FEF                     INDF0           equ	4079	;# 
   790   000FF0                     INTCON3         equ	4080	;# 
   791   000FF1                     INTCON2         equ	4081	;# 
   792   000FF2                     INTCON          equ	4082	;# 
   793   000FF3                     PROD            equ	4083	;# 
   794   000FF3                     PRODL           equ	4083	;# 
   795   000FF4                     PRODH           equ	4084	;# 
   796   000FF5                     TABLAT          equ	4085	;# 
   797   000FF6                     TBLPTR          equ	4086	;# 
   798   000FF6                     TBLPTRL         equ	4086	;# 
   799   000FF7                     TBLPTRH         equ	4087	;# 
   800   000FF8                     TBLPTRU         equ	4088	;# 
   801   000FF9                     PCLAT           equ	4089	;# 
   802   000FF9                     PC              equ	4089	;# 
   803   000FF9                     PCL             equ	4089	;# 
   804   000FFA                     PCLATH          equ	4090	;# 
   805   000FFB                     PCLATU          equ	4091	;# 
   806   000FFC                     STKPTR          equ	4092	;# 
   807   000FFD                     TOS             equ	4093	;# 
   808   000FFD                     TOSL            equ	4093	;# 
   809   000FFE                     TOSH            equ	4094	;# 
   810   000FFF                     TOSU            equ	4095	;# 
   811   000F62                     SPPDATA         equ	3938	;# 
   812   000F63                     SPPCFG          equ	3939	;# 
   813   000F64                     SPPEPS          equ	3940	;# 
   814   000F65                     SPPCON          equ	3941	;# 
   815   000F66                     UFRM            equ	3942	;# 
   816   000F66                     UFRML           equ	3942	;# 
   817   000F67                     UFRMH           equ	3943	;# 
   818   000F68                     UIR             equ	3944	;# 
   819   000F69                     UIE             equ	3945	;# 
   820   000F6A                     UEIR            equ	3946	;# 
   821   000F6B                     UEIE            equ	3947	;# 
   822   000F6C                     USTAT           equ	3948	;# 
   823   000F6D                     UCON            equ	3949	;# 
   824   000F6E                     UADDR           equ	3950	;# 
   825   000F6F                     UCFG            equ	3951	;# 
   826   000F70                     UEP0            equ	3952	;# 
   827   000F71                     UEP1            equ	3953	;# 
   828   000F72                     UEP2            equ	3954	;# 
   829   000F73                     UEP3            equ	3955	;# 
   830   000F74                     UEP4            equ	3956	;# 
   831   000F75                     UEP5            equ	3957	;# 
   832   000F76                     UEP6            equ	3958	;# 
   833   000F77                     UEP7            equ	3959	;# 
   834   000F78                     UEP8            equ	3960	;# 
   835   000F79                     UEP9            equ	3961	;# 
   836   000F7A                     UEP10           equ	3962	;# 
   837   000F7B                     UEP11           equ	3963	;# 
   838   000F7C                     UEP12           equ	3964	;# 
   839   000F7D                     UEP13           equ	3965	;# 
   840   000F7E                     UEP14           equ	3966	;# 
   841   000F7F                     UEP15           equ	3967	;# 
   842   000F80                     PORTA           equ	3968	;# 
   843   000F81                     PORTB           equ	3969	;# 
   844   000F82                     PORTC           equ	3970	;# 
   845   000F83                     PORTD           equ	3971	;# 
   846   000F84                     PORTE           equ	3972	;# 
   847   000F89                     LATA            equ	3977	;# 
   848   000F8A                     LATB            equ	3978	;# 
   849   000F8B                     LATC            equ	3979	;# 
   850   000F8C                     LATD            equ	3980	;# 
   851   000F8D                     LATE            equ	3981	;# 
   852   000F92                     TRISA           equ	3986	;# 
   853   000F92                     DDRA            equ	3986	;# 
   854   000F93                     TRISB           equ	3987	;# 
   855   000F93                     DDRB            equ	3987	;# 
   856   000F94                     TRISC           equ	3988	;# 
   857   000F94                     DDRC            equ	3988	;# 
   858   000F95                     TRISD           equ	3989	;# 
   859   000F95                     DDRD            equ	3989	;# 
   860   000F96                     TRISE           equ	3990	;# 
   861   000F96                     DDRE            equ	3990	;# 
   862   000F9B                     OSCTUNE         equ	3995	;# 
   863   000F9D                     PIE1            equ	3997	;# 
   864   000F9E                     PIR1            equ	3998	;# 
   865   000F9F                     IPR1            equ	3999	;# 
   866   000FA0                     PIE2            equ	4000	;# 
   867   000FA1                     PIR2            equ	4001	;# 
   868   000FA2                     IPR2            equ	4002	;# 
   869   000FA6                     EECON1          equ	4006	;# 
   870   000FA7                     EECON2          equ	4007	;# 
   871   000FA8                     EEDATA          equ	4008	;# 
   872   000FA9                     EEADR           equ	4009	;# 
   873   000FAB                     RCSTA           equ	4011	;# 
   874   000FAB                     RCSTA1          equ	4011	;# 
   875   000FAC                     TXSTA           equ	4012	;# 
   876   000FAC                     TXSTA1          equ	4012	;# 
   877   000FAD                     TXREG           equ	4013	;# 
   878   000FAD                     TXREG1          equ	4013	;# 
   879   000FAE                     RCREG           equ	4014	;# 
   880   000FAE                     RCREG1          equ	4014	;# 
   881   000FAF                     SPBRG           equ	4015	;# 
   882   000FAF                     SPBRG1          equ	4015	;# 
   883   000FB0                     SPBRGH          equ	4016	;# 
   884   000FB1                     T3CON           equ	4017	;# 
   885   000FB2                     TMR3            equ	4018	;# 
   886   000FB2                     TMR3L           equ	4018	;# 
   887   000FB3                     TMR3H           equ	4019	;# 
   888   000FB4                     CMCON           equ	4020	;# 
   889   000FB5                     CVRCON          equ	4021	;# 
   890   000FB6                     ECCP1AS         equ	4022	;# 
   891   000FB6                     CCP1AS          equ	4022	;# 
   892   000FB7                     ECCP1DEL        equ	4023	;# 
   893   000FB7                     CCP1DEL         equ	4023	;# 
   894   000FB8                     BAUDCON         equ	4024	;# 
   895   000FB8                     BAUDCTL         equ	4024	;# 
   896   000FBA                     CCP2CON         equ	4026	;# 
   897   000FBB                     CCPR2           equ	4027	;# 
   898   000FBB                     CCPR2L          equ	4027	;# 
   899   000FBC                     CCPR2H          equ	4028	;# 
   900   000FBD                     CCP1CON         equ	4029	;# 
   901   000FBD                     ECCP1CON        equ	4029	;# 
   902   000FBE                     CCPR1           equ	4030	;# 
   903   000FBE                     CCPR1L          equ	4030	;# 
   904   000FBF                     CCPR1H          equ	4031	;# 
   905   000FC0                     ADCON2          equ	4032	;# 
   906   000FC1                     ADCON1          equ	4033	;# 
   907   000FC2                     ADCON0          equ	4034	;# 
   908   000FC3                     ADRES           equ	4035	;# 
   909   000FC3                     ADRESL          equ	4035	;# 
   910   000FC4                     ADRESH          equ	4036	;# 
   911   000FC5                     SSPCON2         equ	4037	;# 
   912   000FC6                     SSPCON1         equ	4038	;# 
   913   000FC7                     SSPSTAT         equ	4039	;# 
   914   000FC8                     SSPADD          equ	4040	;# 
   915   000FC9                     SSPBUF          equ	4041	;# 
   916   000FCA                     T2CON           equ	4042	;# 
   917   000FCB                     PR2             equ	4043	;# 
   918   000FCB                     MEMCON          equ	4043	;# 
   919   000FCC                     TMR2            equ	4044	;# 
   920   000FCD                     T1CON           equ	4045	;# 
   921   000FCE                     TMR1            equ	4046	;# 
   922   000FCE                     TMR1L           equ	4046	;# 
   923   000FCF                     TMR1H           equ	4047	;# 
   924   000FD0                     RCON            equ	4048	;# 
   925   000FD1                     WDTCON          equ	4049	;# 
   926   000FD2                     HLVDCON         equ	4050	;# 
   927   000FD2                     LVDCON          equ	4050	;# 
   928   000FD3                     OSCCON          equ	4051	;# 
   929   000FD5                     T0CON           equ	4053	;# 
   930   000FD6                     TMR0            equ	4054	;# 
   931   000FD6                     TMR0L           equ	4054	;# 
   932   000FD7                     TMR0H           equ	4055	;# 
   933   000FD8                     STATUS          equ	4056	;# 
   934   000FD9                     FSR2            equ	4057	;# 
   935   000FD9                     FSR2L           equ	4057	;# 
   936   000FDA                     FSR2H           equ	4058	;# 
   937   000FDB                     PLUSW2          equ	4059	;# 
   938   000FDC                     PREINC2         equ	4060	;# 
   939   000FDD                     POSTDEC2        equ	4061	;# 
   940   000FDE                     POSTINC2        equ	4062	;# 
   941   000FDF                     INDF2           equ	4063	;# 
   942   000FE0                     BSR             equ	4064	;# 
   943   000FE1                     FSR1            equ	4065	;# 
   944   000FE1                     FSR1L           equ	4065	;# 
   945   000FE2                     FSR1H           equ	4066	;# 
   946   000FE3                     PLUSW1          equ	4067	;# 
   947   000FE4                     PREINC1         equ	4068	;# 
   948   000FE5                     POSTDEC1        equ	4069	;# 
   949   000FE6                     POSTINC1        equ	4070	;# 
   950   000FE7                     INDF1           equ	4071	;# 
   951   000FE8                     WREG            equ	4072	;# 
   952   000FE9                     FSR0            equ	4073	;# 
   953   000FE9                     FSR0L           equ	4073	;# 
   954   000FEA                     FSR0H           equ	4074	;# 
   955   000FEB                     PLUSW0          equ	4075	;# 
   956   000FEC                     PREINC0         equ	4076	;# 
   957   000FED                     POSTDEC0        equ	4077	;# 
   958   000FEE                     POSTINC0        equ	4078	;# 
   959   000FEF                     INDF0           equ	4079	;# 
   960   000FF0                     INTCON3         equ	4080	;# 
   961   000FF1                     INTCON2         equ	4081	;# 
   962   000FF2                     INTCON          equ	4082	;# 
   963   000FF3                     PROD            equ	4083	;# 
   964   000FF3                     PRODL           equ	4083	;# 
   965   000FF4                     PRODH           equ	4084	;# 
   966   000FF5                     TABLAT          equ	4085	;# 
   967   000FF6                     TBLPTR          equ	4086	;# 
   968   000FF6                     TBLPTRL         equ	4086	;# 
   969   000FF7                     TBLPTRH         equ	4087	;# 
   970   000FF8                     TBLPTRU         equ	4088	;# 
   971   000FF9                     PCLAT           equ	4089	;# 
   972   000FF9                     PC              equ	4089	;# 
   973   000FF9                     PCL             equ	4089	;# 
   974   000FFA                     PCLATH          equ	4090	;# 
   975   000FFB                     PCLATU          equ	4091	;# 
   976   000FFC                     STKPTR          equ	4092	;# 
   977   000FFD                     TOS             equ	4093	;# 
   978   000FFD                     TOSL            equ	4093	;# 
   979   000FFE                     TOSH            equ	4094	;# 
   980   000FFF                     TOSU            equ	4095	;# 
   981   000F62                     SPPDATA         equ	3938	;# 
   982   000F63                     SPPCFG          equ	3939	;# 
   983   000F64                     SPPEPS          equ	3940	;# 
   984   000F65                     SPPCON          equ	3941	;# 
   985   000F66                     UFRM            equ	3942	;# 
   986   000F66                     UFRML           equ	3942	;# 
   987   000F67                     UFRMH           equ	3943	;# 
   988   000F68                     UIR             equ	3944	;# 
   989   000F69                     UIE             equ	3945	;# 
   990   000F6A                     UEIR            equ	3946	;# 
   991   000F6B                     UEIE            equ	3947	;# 
   992   000F6C                     USTAT           equ	3948	;# 
   993   000F6D                     UCON            equ	3949	;# 
   994   000F6E                     UADDR           equ	3950	;# 
   995   000F6F                     UCFG            equ	3951	;# 
   996   000F70                     UEP0            equ	3952	;# 
   997   000F71                     UEP1            equ	3953	;# 
   998   000F72                     UEP2            equ	3954	;# 
   999   000F73                     UEP3            equ	3955	;# 
  1000   000F74                     UEP4            equ	3956	;# 
  1001   000F75                     UEP5            equ	3957	;# 
  1002   000F76                     UEP6            equ	3958	;# 
  1003   000F77                     UEP7            equ	3959	;# 
  1004   000F78                     UEP8            equ	3960	;# 
  1005   000F79                     UEP9            equ	3961	;# 
  1006   000F7A                     UEP10           equ	3962	;# 
  1007   000F7B                     UEP11           equ	3963	;# 
  1008   000F7C                     UEP12           equ	3964	;# 
  1009   000F7D                     UEP13           equ	3965	;# 
  1010   000F7E                     UEP14           equ	3966	;# 
  1011   000F7F                     UEP15           equ	3967	;# 
  1012   000F80                     PORTA           equ	3968	;# 
  1013   000F81                     PORTB           equ	3969	;# 
  1014   000F82                     PORTC           equ	3970	;# 
  1015   000F83                     PORTD           equ	3971	;# 
  1016   000F84                     PORTE           equ	3972	;# 
  1017   000F89                     LATA            equ	3977	;# 
  1018   000F8A                     LATB            equ	3978	;# 
  1019   000F8B                     LATC            equ	3979	;# 
  1020   000F8C                     LATD            equ	3980	;# 
  1021   000F8D                     LATE            equ	3981	;# 
  1022   000F92                     TRISA           equ	3986	;# 
  1023   000F92                     DDRA            equ	3986	;# 
  1024   000F93                     TRISB           equ	3987	;# 
  1025   000F93                     DDRB            equ	3987	;# 
  1026   000F94                     TRISC           equ	3988	;# 
  1027   000F94                     DDRC            equ	3988	;# 
  1028   000F95                     TRISD           equ	3989	;# 
  1029   000F95                     DDRD            equ	3989	;# 
  1030   000F96                     TRISE           equ	3990	;# 
  1031   000F96                     DDRE            equ	3990	;# 
  1032   000F9B                     OSCTUNE         equ	3995	;# 
  1033   000F9D                     PIE1            equ	3997	;# 
  1034   000F9E                     PIR1            equ	3998	;# 
  1035   000F9F                     IPR1            equ	3999	;# 
  1036   000FA0                     PIE2            equ	4000	;# 
  1037   000FA1                     PIR2            equ	4001	;# 
  1038   000FA2                     IPR2            equ	4002	;# 
  1039   000FA6                     EECON1          equ	4006	;# 
  1040   000FA7                     EECON2          equ	4007	;# 
  1041   000FA8                     EEDATA          equ	4008	;# 
  1042   000FA9                     EEADR           equ	4009	;# 
  1043   000FAB                     RCSTA           equ	4011	;# 
  1044   000FAB                     RCSTA1          equ	4011	;# 
  1045   000FAC                     TXSTA           equ	4012	;# 
  1046   000FAC                     TXSTA1          equ	4012	;# 
  1047   000FAD                     TXREG           equ	4013	;# 
  1048   000FAD                     TXREG1          equ	4013	;# 
  1049   000FAE                     RCREG           equ	4014	;# 
  1050   000FAE                     RCREG1          equ	4014	;# 
  1051   000FAF                     SPBRG           equ	4015	;# 
  1052   000FAF                     SPBRG1          equ	4015	;# 
  1053   000FB0                     SPBRGH          equ	4016	;# 
  1054   000FB1                     T3CON           equ	4017	;# 
  1055   000FB2                     TMR3            equ	4018	;# 
  1056   000FB2                     TMR3L           equ	4018	;# 
  1057   000FB3                     TMR3H           equ	4019	;# 
  1058   000FB4                     CMCON           equ	4020	;# 
  1059   000FB5                     CVRCON          equ	4021	;# 
  1060   000FB6                     ECCP1AS         equ	4022	;# 
  1061   000FB6                     CCP1AS          equ	4022	;# 
  1062   000FB7                     ECCP1DEL        equ	4023	;# 
  1063   000FB7                     CCP1DEL         equ	4023	;# 
  1064   000FB8                     BAUDCON         equ	4024	;# 
  1065   000FB8                     BAUDCTL         equ	4024	;# 
  1066   000FBA                     CCP2CON         equ	4026	;# 
  1067   000FBB                     CCPR2           equ	4027	;# 
  1068   000FBB                     CCPR2L          equ	4027	;# 
  1069   000FBC                     CCPR2H          equ	4028	;# 
  1070   000FBD                     CCP1CON         equ	4029	;# 
  1071   000FBD                     ECCP1CON        equ	4029	;# 
  1072   000FBE                     CCPR1           equ	4030	;# 
  1073   000FBE                     CCPR1L          equ	4030	;# 
  1074   000FBF                     CCPR1H          equ	4031	;# 
  1075   000FC0                     ADCON2          equ	4032	;# 
  1076   000FC1                     ADCON1          equ	4033	;# 
  1077   000FC2                     ADCON0          equ	4034	;# 
  1078   000FC3                     ADRES           equ	4035	;# 
  1079   000FC3                     ADRESL          equ	4035	;# 
  1080   000FC4                     ADRESH          equ	4036	;# 
  1081   000FC5                     SSPCON2         equ	4037	;# 
  1082   000FC6                     SSPCON1         equ	4038	;# 
  1083   000FC7                     SSPSTAT         equ	4039	;# 
  1084   000FC8                     SSPADD          equ	4040	;# 
  1085   000FC9                     SSPBUF          equ	4041	;# 
  1086   000FCA                     T2CON           equ	4042	;# 
  1087   000FCB                     PR2             equ	4043	;# 
  1088   000FCB                     MEMCON          equ	4043	;# 
  1089   000FCC                     TMR2            equ	4044	;# 
  1090   000FCD                     T1CON           equ	4045	;# 
  1091   000FCE                     TMR1            equ	4046	;# 
  1092   000FCE                     TMR1L           equ	4046	;# 
  1093   000FCF                     TMR1H           equ	4047	;# 
  1094   000FD0                     RCON            equ	4048	;# 
  1095   000FD1                     WDTCON          equ	4049	;# 
  1096   000FD2                     HLVDCON         equ	4050	;# 
  1097   000FD2                     LVDCON          equ	4050	;# 
  1098   000FD3                     OSCCON          equ	4051	;# 
  1099   000FD5                     T0CON           equ	4053	;# 
  1100   000FD6                     TMR0            equ	4054	;# 
  1101   000FD6                     TMR0L           equ	4054	;# 
  1102   000FD7                     TMR0H           equ	4055	;# 
  1103   000FD8                     STATUS          equ	4056	;# 
  1104   000FD9                     FSR2            equ	4057	;# 
  1105   000FD9                     FSR2L           equ	4057	;# 
  1106   000FDA                     FSR2H           equ	4058	;# 
  1107   000FDB                     PLUSW2          equ	4059	;# 
  1108   000FDC                     PREINC2         equ	4060	;# 
  1109   000FDD                     POSTDEC2        equ	4061	;# 
  1110   000FDE                     POSTINC2        equ	4062	;# 
  1111   000FDF                     INDF2           equ	4063	;# 
  1112   000FE0                     BSR             equ	4064	;# 
  1113   000FE1                     FSR1            equ	4065	;# 
  1114   000FE1                     FSR1L           equ	4065	;# 
  1115   000FE2                     FSR1H           equ	4066	;# 
  1116   000FE3                     PLUSW1          equ	4067	;# 
  1117   000FE4                     PREINC1         equ	4068	;# 
  1118   000FE5                     POSTDEC1        equ	4069	;# 
  1119   000FE6                     POSTINC1        equ	4070	;# 
  1120   000FE7                     INDF1           equ	4071	;# 
  1121   000FE8                     WREG            equ	4072	;# 
  1122   000FE9                     FSR0            equ	4073	;# 
  1123   000FE9                     FSR0L           equ	4073	;# 
  1124   000FEA                     FSR0H           equ	4074	;# 
  1125   000FEB                     PLUSW0          equ	4075	;# 
  1126   000FEC                     PREINC0         equ	4076	;# 
  1127   000FED                     POSTDEC0        equ	4077	;# 
  1128   000FEE                     POSTINC0        equ	4078	;# 
  1129   000FEF                     INDF0           equ	4079	;# 
  1130   000FF0                     INTCON3         equ	4080	;# 
  1131   000FF1                     INTCON2         equ	4081	;# 
  1132   000FF2                     INTCON          equ	4082	;# 
  1133   000FF3                     PROD            equ	4083	;# 
  1134   000FF3                     PRODL           equ	4083	;# 
  1135   000FF4                     PRODH           equ	4084	;# 
  1136   000FF5                     TABLAT          equ	4085	;# 
  1137   000FF6                     TBLPTR          equ	4086	;# 
  1138   000FF6                     TBLPTRL         equ	4086	;# 
  1139   000FF7                     TBLPTRH         equ	4087	;# 
  1140   000FF8                     TBLPTRU         equ	4088	;# 
  1141   000FF9                     PCLAT           equ	4089	;# 
  1142   000FF9                     PC              equ	4089	;# 
  1143   000FF9                     PCL             equ	4089	;# 
  1144   000FFA                     PCLATH          equ	4090	;# 
  1145   000FFB                     PCLATU          equ	4091	;# 
  1146   000FFC                     STKPTR          equ	4092	;# 
  1147   000FFD                     TOS             equ	4093	;# 
  1148   000FFD                     TOSL            equ	4093	;# 
  1149   000FFE                     TOSH            equ	4094	;# 
  1150   000FFF                     TOSU            equ	4095	;# 
  1151   000F62                     SPPDATA         equ	3938	;# 
  1152   000F63                     SPPCFG          equ	3939	;# 
  1153   000F64                     SPPEPS          equ	3940	;# 
  1154   000F65                     SPPCON          equ	3941	;# 
  1155   000F66                     UFRM            equ	3942	;# 
  1156   000F66                     UFRML           equ	3942	;# 
  1157   000F67                     UFRMH           equ	3943	;# 
  1158   000F68                     UIR             equ	3944	;# 
  1159   000F69                     UIE             equ	3945	;# 
  1160   000F6A                     UEIR            equ	3946	;# 
  1161   000F6B                     UEIE            equ	3947	;# 
  1162   000F6C                     USTAT           equ	3948	;# 
  1163   000F6D                     UCON            equ	3949	;# 
  1164   000F6E                     UADDR           equ	3950	;# 
  1165   000F6F                     UCFG            equ	3951	;# 
  1166   000F70                     UEP0            equ	3952	;# 
  1167   000F71                     UEP1            equ	3953	;# 
  1168   000F72                     UEP2            equ	3954	;# 
  1169   000F73                     UEP3            equ	3955	;# 
  1170   000F74                     UEP4            equ	3956	;# 
  1171   000F75                     UEP5            equ	3957	;# 
  1172   000F76                     UEP6            equ	3958	;# 
  1173   000F77                     UEP7            equ	3959	;# 
  1174   000F78                     UEP8            equ	3960	;# 
  1175   000F79                     UEP9            equ	3961	;# 
  1176   000F7A                     UEP10           equ	3962	;# 
  1177   000F7B                     UEP11           equ	3963	;# 
  1178   000F7C                     UEP12           equ	3964	;# 
  1179   000F7D                     UEP13           equ	3965	;# 
  1180   000F7E                     UEP14           equ	3966	;# 
  1181   000F7F                     UEP15           equ	3967	;# 
  1182   000F80                     PORTA           equ	3968	;# 
  1183   000F81                     PORTB           equ	3969	;# 
  1184   000F82                     PORTC           equ	3970	;# 
  1185   000F83                     PORTD           equ	3971	;# 
  1186   000F84                     PORTE           equ	3972	;# 
  1187   000F89                     LATA            equ	3977	;# 
  1188   000F8A                     LATB            equ	3978	;# 
  1189   000F8B                     LATC            equ	3979	;# 
  1190   000F8C                     LATD            equ	3980	;# 
  1191   000F8D                     LATE            equ	3981	;# 
  1192   000F92                     TRISA           equ	3986	;# 
  1193   000F92                     DDRA            equ	3986	;# 
  1194   000F93                     TRISB           equ	3987	;# 
  1195   000F93                     DDRB            equ	3987	;# 
  1196   000F94                     TRISC           equ	3988	;# 
  1197   000F94                     DDRC            equ	3988	;# 
  1198   000F95                     TRISD           equ	3989	;# 
  1199   000F95                     DDRD            equ	3989	;# 
  1200   000F96                     TRISE           equ	3990	;# 
  1201   000F96                     DDRE            equ	3990	;# 
  1202   000F9B                     OSCTUNE         equ	3995	;# 
  1203   000F9D                     PIE1            equ	3997	;# 
  1204   000F9E                     PIR1            equ	3998	;# 
  1205   000F9F                     IPR1            equ	3999	;# 
  1206   000FA0                     PIE2            equ	4000	;# 
  1207   000FA1                     PIR2            equ	4001	;# 
  1208   000FA2                     IPR2            equ	4002	;# 
  1209   000FA6                     EECON1          equ	4006	;# 
  1210   000FA7                     EECON2          equ	4007	;# 
  1211   000FA8                     EEDATA          equ	4008	;# 
  1212   000FA9                     EEADR           equ	4009	;# 
  1213   000FAB                     RCSTA           equ	4011	;# 
  1214   000FAB                     RCSTA1          equ	4011	;# 
  1215   000FAC                     TXSTA           equ	4012	;# 
  1216   000FAC                     TXSTA1          equ	4012	;# 
  1217   000FAD                     TXREG           equ	4013	;# 
  1218   000FAD                     TXREG1          equ	4013	;# 
  1219   000FAE                     RCREG           equ	4014	;# 
  1220   000FAE                     RCREG1          equ	4014	;# 
  1221   000FAF                     SPBRG           equ	4015	;# 
  1222   000FAF                     SPBRG1          equ	4015	;# 
  1223   000FB0                     SPBRGH          equ	4016	;# 
  1224   000FB1                     T3CON           equ	4017	;# 
  1225   000FB2                     TMR3            equ	4018	;# 
  1226   000FB2                     TMR3L           equ	4018	;# 
  1227   000FB3                     TMR3H           equ	4019	;# 
  1228   000FB4                     CMCON           equ	4020	;# 
  1229   000FB5                     CVRCON          equ	4021	;# 
  1230   000FB6                     ECCP1AS         equ	4022	;# 
  1231   000FB6                     CCP1AS          equ	4022	;# 
  1232   000FB7                     ECCP1DEL        equ	4023	;# 
  1233   000FB7                     CCP1DEL         equ	4023	;# 
  1234   000FB8                     BAUDCON         equ	4024	;# 
  1235   000FB8                     BAUDCTL         equ	4024	;# 
  1236   000FBA                     CCP2CON         equ	4026	;# 
  1237   000FBB                     CCPR2           equ	4027	;# 
  1238   000FBB                     CCPR2L          equ	4027	;# 
  1239   000FBC                     CCPR2H          equ	4028	;# 
  1240   000FBD                     CCP1CON         equ	4029	;# 
  1241   000FBD                     ECCP1CON        equ	4029	;# 
  1242   000FBE                     CCPR1           equ	4030	;# 
  1243   000FBE                     CCPR1L          equ	4030	;# 
  1244   000FBF                     CCPR1H          equ	4031	;# 
  1245   000FC0                     ADCON2          equ	4032	;# 
  1246   000FC1                     ADCON1          equ	4033	;# 
  1247   000FC2                     ADCON0          equ	4034	;# 
  1248   000FC3                     ADRES           equ	4035	;# 
  1249   000FC3                     ADRESL          equ	4035	;# 
  1250   000FC4                     ADRESH          equ	4036	;# 
  1251   000FC5                     SSPCON2         equ	4037	;# 
  1252   000FC6                     SSPCON1         equ	4038	;# 
  1253   000FC7                     SSPSTAT         equ	4039	;# 
  1254   000FC8                     SSPADD          equ	4040	;# 
  1255   000FC9                     SSPBUF          equ	4041	;# 
  1256   000FCA                     T2CON           equ	4042	;# 
  1257   000FCB                     PR2             equ	4043	;# 
  1258   000FCB                     MEMCON          equ	4043	;# 
  1259   000FCC                     TMR2            equ	4044	;# 
  1260   000FCD                     T1CON           equ	4045	;# 
  1261   000FCE                     TMR1            equ	4046	;# 
  1262   000FCE                     TMR1L           equ	4046	;# 
  1263   000FCF                     TMR1H           equ	4047	;# 
  1264   000FD0                     RCON            equ	4048	;# 
  1265   000FD1                     WDTCON          equ	4049	;# 
  1266   000FD2                     HLVDCON         equ	4050	;# 
  1267   000FD2                     LVDCON          equ	4050	;# 
  1268   000FD3                     OSCCON          equ	4051	;# 
  1269   000FD5                     T0CON           equ	4053	;# 
  1270   000FD6                     TMR0            equ	4054	;# 
  1271   000FD6                     TMR0L           equ	4054	;# 
  1272   000FD7                     TMR0H           equ	4055	;# 
  1273   000FD8                     STATUS          equ	4056	;# 
  1274   000FD9                     FSR2            equ	4057	;# 
  1275   000FD9                     FSR2L           equ	4057	;# 
  1276   000FDA                     FSR2H           equ	4058	;# 
  1277   000FDB                     PLUSW2          equ	4059	;# 
  1278   000FDC                     PREINC2         equ	4060	;# 
  1279   000FDD                     POSTDEC2        equ	4061	;# 
  1280   000FDE                     POSTINC2        equ	4062	;# 
  1281   000FDF                     INDF2           equ	4063	;# 
  1282   000FE0                     BSR             equ	4064	;# 
  1283   000FE1                     FSR1            equ	4065	;# 
  1284   000FE1                     FSR1L           equ	4065	;# 
  1285   000FE2                     FSR1H           equ	4066	;# 
  1286   000FE3                     PLUSW1          equ	4067	;# 
  1287   000FE4                     PREINC1         equ	4068	;# 
  1288   000FE5                     POSTDEC1        equ	4069	;# 
  1289   000FE6                     POSTINC1        equ	4070	;# 
  1290   000FE7                     INDF1           equ	4071	;# 
  1291   000FE8                     WREG            equ	4072	;# 
  1292   000FE9                     FSR0            equ	4073	;# 
  1293   000FE9                     FSR0L           equ	4073	;# 
  1294   000FEA                     FSR0H           equ	4074	;# 
  1295   000FEB                     PLUSW0          equ	4075	;# 
  1296   000FEC                     PREINC0         equ	4076	;# 
  1297   000FED                     POSTDEC0        equ	4077	;# 
  1298   000FEE                     POSTINC0        equ	4078	;# 
  1299   000FEF                     INDF0           equ	4079	;# 
  1300   000FF0                     INTCON3         equ	4080	;# 
  1301   000FF1                     INTCON2         equ	4081	;# 
  1302   000FF2                     INTCON          equ	4082	;# 
  1303   000FF3                     PROD            equ	4083	;# 
  1304   000FF3                     PRODL           equ	4083	;# 
  1305   000FF4                     PRODH           equ	4084	;# 
  1306   000FF5                     TABLAT          equ	4085	;# 
  1307   000FF6                     TBLPTR          equ	4086	;# 
  1308   000FF6                     TBLPTRL         equ	4086	;# 
  1309   000FF7                     TBLPTRH         equ	4087	;# 
  1310   000FF8                     TBLPTRU         equ	4088	;# 
  1311   000FF9                     PCLAT           equ	4089	;# 
  1312   000FF9                     PC              equ	4089	;# 
  1313   000FF9                     PCL             equ	4089	;# 
  1314   000FFA                     PCLATH          equ	4090	;# 
  1315   000FFB                     PCLATU          equ	4091	;# 
  1316   000FFC                     STKPTR          equ	4092	;# 
  1317   000FFD                     TOS             equ	4093	;# 
  1318   000FFD                     TOSL            equ	4093	;# 
  1319   000FFE                     TOSH            equ	4094	;# 
  1320   000FFF                     TOSU            equ	4095	;# 
  1321   000F62                     SPPDATA         equ	3938	;# 
  1322   000F63                     SPPCFG          equ	3939	;# 
  1323   000F64                     SPPEPS          equ	3940	;# 
  1324   000F65                     SPPCON          equ	3941	;# 
  1325   000F66                     UFRM            equ	3942	;# 
  1326   000F66                     UFRML           equ	3942	;# 
  1327   000F67                     UFRMH           equ	3943	;# 
  1328   000F68                     UIR             equ	3944	;# 
  1329   000F69                     UIE             equ	3945	;# 
  1330   000F6A                     UEIR            equ	3946	;# 
  1331   000F6B                     UEIE            equ	3947	;# 
  1332   000F6C                     USTAT           equ	3948	;# 
  1333   000F6D                     UCON            equ	3949	;# 
  1334   000F6E                     UADDR           equ	3950	;# 
  1335   000F6F                     UCFG            equ	3951	;# 
  1336   000F70                     UEP0            equ	3952	;# 
  1337   000F71                     UEP1            equ	3953	;# 
  1338   000F72                     UEP2            equ	3954	;# 
  1339   000F73                     UEP3            equ	3955	;# 
  1340   000F74                     UEP4            equ	3956	;# 
  1341   000F75                     UEP5            equ	3957	;# 
  1342   000F76                     UEP6            equ	3958	;# 
  1343   000F77                     UEP7            equ	3959	;# 
  1344   000F78                     UEP8            equ	3960	;# 
  1345   000F79                     UEP9            equ	3961	;# 
  1346   000F7A                     UEP10           equ	3962	;# 
  1347   000F7B                     UEP11           equ	3963	;# 
  1348   000F7C                     UEP12           equ	3964	;# 
  1349   000F7D                     UEP13           equ	3965	;# 
  1350   000F7E                     UEP14           equ	3966	;# 
  1351   000F7F                     UEP15           equ	3967	;# 
  1352   000F80                     PORTA           equ	3968	;# 
  1353   000F81                     PORTB           equ	3969	;# 
  1354   000F82                     PORTC           equ	3970	;# 
  1355   000F83                     PORTD           equ	3971	;# 
  1356   000F84                     PORTE           equ	3972	;# 
  1357   000F89                     LATA            equ	3977	;# 
  1358   000F8A                     LATB            equ	3978	;# 
  1359   000F8B                     LATC            equ	3979	;# 
  1360   000F8C                     LATD            equ	3980	;# 
  1361   000F8D                     LATE            equ	3981	;# 
  1362   000F92                     TRISA           equ	3986	;# 
  1363   000F92                     DDRA            equ	3986	;# 
  1364   000F93                     TRISB           equ	3987	;# 
  1365   000F93                     DDRB            equ	3987	;# 
  1366   000F94                     TRISC           equ	3988	;# 
  1367   000F94                     DDRC            equ	3988	;# 
  1368   000F95                     TRISD           equ	3989	;# 
  1369   000F95                     DDRD            equ	3989	;# 
  1370   000F96                     TRISE           equ	3990	;# 
  1371   000F96                     DDRE            equ	3990	;# 
  1372   000F9B                     OSCTUNE         equ	3995	;# 
  1373   000F9D                     PIE1            equ	3997	;# 
  1374   000F9E                     PIR1            equ	3998	;# 
  1375   000F9F                     IPR1            equ	3999	;# 
  1376   000FA0                     PIE2            equ	4000	;# 
  1377   000FA1                     PIR2            equ	4001	;# 
  1378   000FA2                     IPR2            equ	4002	;# 
  1379   000FA6                     EECON1          equ	4006	;# 
  1380   000FA7                     EECON2          equ	4007	;# 
  1381   000FA8                     EEDATA          equ	4008	;# 
  1382   000FA9                     EEADR           equ	4009	;# 
  1383   000FAB                     RCSTA           equ	4011	;# 
  1384   000FAB                     RCSTA1          equ	4011	;# 
  1385   000FAC                     TXSTA           equ	4012	;# 
  1386   000FAC                     TXSTA1          equ	4012	;# 
  1387   000FAD                     TXREG           equ	4013	;# 
  1388   000FAD                     TXREG1          equ	4013	;# 
  1389   000FAE                     RCREG           equ	4014	;# 
  1390   000FAE                     RCREG1          equ	4014	;# 
  1391   000FAF                     SPBRG           equ	4015	;# 
  1392   000FAF                     SPBRG1          equ	4015	;# 
  1393   000FB0                     SPBRGH          equ	4016	;# 
  1394   000FB1                     T3CON           equ	4017	;# 
  1395   000FB2                     TMR3            equ	4018	;# 
  1396   000FB2                     TMR3L           equ	4018	;# 
  1397   000FB3                     TMR3H           equ	4019	;# 
  1398   000FB4                     CMCON           equ	4020	;# 
  1399   000FB5                     CVRCON          equ	4021	;# 
  1400   000FB6                     ECCP1AS         equ	4022	;# 
  1401   000FB6                     CCP1AS          equ	4022	;# 
  1402   000FB7                     ECCP1DEL        equ	4023	;# 
  1403   000FB7                     CCP1DEL         equ	4023	;# 
  1404   000FB8                     BAUDCON         equ	4024	;# 
  1405   000FB8                     BAUDCTL         equ	4024	;# 
  1406   000FBA                     CCP2CON         equ	4026	;# 
  1407   000FBB                     CCPR2           equ	4027	;# 
  1408   000FBB                     CCPR2L          equ	4027	;# 
  1409   000FBC                     CCPR2H          equ	4028	;# 
  1410   000FBD                     CCP1CON         equ	4029	;# 
  1411   000FBD                     ECCP1CON        equ	4029	;# 
  1412   000FBE                     CCPR1           equ	4030	;# 
  1413   000FBE                     CCPR1L          equ	4030	;# 
  1414   000FBF                     CCPR1H          equ	4031	;# 
  1415   000FC0                     ADCON2          equ	4032	;# 
  1416   000FC1                     ADCON1          equ	4033	;# 
  1417   000FC2                     ADCON0          equ	4034	;# 
  1418   000FC3                     ADRES           equ	4035	;# 
  1419   000FC3                     ADRESL          equ	4035	;# 
  1420   000FC4                     ADRESH          equ	4036	;# 
  1421   000FC5                     SSPCON2         equ	4037	;# 
  1422   000FC6                     SSPCON1         equ	4038	;# 
  1423   000FC7                     SSPSTAT         equ	4039	;# 
  1424   000FC8                     SSPADD          equ	4040	;# 
  1425   000FC9                     SSPBUF          equ	4041	;# 
  1426   000FCA                     T2CON           equ	4042	;# 
  1427   000FCB                     PR2             equ	4043	;# 
  1428   000FCB                     MEMCON          equ	4043	;# 
  1429   000FCC                     TMR2            equ	4044	;# 
  1430   000FCD                     T1CON           equ	4045	;# 
  1431   000FCE                     TMR1            equ	4046	;# 
  1432   000FCE                     TMR1L           equ	4046	;# 
  1433   000FCF                     TMR1H           equ	4047	;# 
  1434   000FD0                     RCON            equ	4048	;# 
  1435   000FD1                     WDTCON          equ	4049	;# 
  1436   000FD2                     HLVDCON         equ	4050	;# 
  1437   000FD2                     LVDCON          equ	4050	;# 
  1438   000FD3                     OSCCON          equ	4051	;# 
  1439   000FD5                     T0CON           equ	4053	;# 
  1440   000FD6                     TMR0            equ	4054	;# 
  1441   000FD6                     TMR0L           equ	4054	;# 
  1442   000FD7                     TMR0H           equ	4055	;# 
  1443   000FD8                     STATUS          equ	4056	;# 
  1444   000FD9                     FSR2            equ	4057	;# 
  1445   000FD9                     FSR2L           equ	4057	;# 
  1446   000FDA                     FSR2H           equ	4058	;# 
  1447   000FDB                     PLUSW2          equ	4059	;# 
  1448   000FDC                     PREINC2         equ	4060	;# 
  1449   000FDD                     POSTDEC2        equ	4061	;# 
  1450   000FDE                     POSTINC2        equ	4062	;# 
  1451   000FDF                     INDF2           equ	4063	;# 
  1452   000FE0                     BSR             equ	4064	;# 
  1453   000FE1                     FSR1            equ	4065	;# 
  1454   000FE1                     FSR1L           equ	4065	;# 
  1455   000FE2                     FSR1H           equ	4066	;# 
  1456   000FE3                     PLUSW1          equ	4067	;# 
  1457   000FE4                     PREINC1         equ	4068	;# 
  1458   000FE5                     POSTDEC1        equ	4069	;# 
  1459   000FE6                     POSTINC1        equ	4070	;# 
  1460   000FE7                     INDF1           equ	4071	;# 
  1461   000FE8                     WREG            equ	4072	;# 
  1462   000FE9                     FSR0            equ	4073	;# 
  1463   000FE9                     FSR0L           equ	4073	;# 
  1464   000FEA                     FSR0H           equ	4074	;# 
  1465   000FEB                     PLUSW0          equ	4075	;# 
  1466   000FEC                     PREINC0         equ	4076	;# 
  1467   000FED                     POSTDEC0        equ	4077	;# 
  1468   000FEE                     POSTINC0        equ	4078	;# 
  1469   000FEF                     INDF0           equ	4079	;# 
  1470   000FF0                     INTCON3         equ	4080	;# 
  1471   000FF1                     INTCON2         equ	4081	;# 
  1472   000FF2                     INTCON          equ	4082	;# 
  1473   000FF3                     PROD            equ	4083	;# 
  1474   000FF3                     PRODL           equ	4083	;# 
  1475   000FF4                     PRODH           equ	4084	;# 
  1476   000FF5                     TABLAT          equ	4085	;# 
  1477   000FF6                     TBLPTR          equ	4086	;# 
  1478   000FF6                     TBLPTRL         equ	4086	;# 
  1479   000FF7                     TBLPTRH         equ	4087	;# 
  1480   000FF8                     TBLPTRU         equ	4088	;# 
  1481   000FF9                     PCLAT           equ	4089	;# 
  1482   000FF9                     PC              equ	4089	;# 
  1483   000FF9                     PCL             equ	4089	;# 
  1484   000FFA                     PCLATH          equ	4090	;# 
  1485   000FFB                     PCLATU          equ	4091	;# 
  1486   000FFC                     STKPTR          equ	4092	;# 
  1487   000FFD                     TOS             equ	4093	;# 
  1488   000FFD                     TOSL            equ	4093	;# 
  1489   000FFE                     TOSH            equ	4094	;# 
  1490   000FFF                     TOSU            equ	4095	;# 
  1491   000F62                     SPPDATA         equ	3938	;# 
  1492   000F63                     SPPCFG          equ	3939	;# 
  1493   000F64                     SPPEPS          equ	3940	;# 
  1494   000F65                     SPPCON          equ	3941	;# 
  1495   000F66                     UFRM            equ	3942	;# 
  1496   000F66                     UFRML           equ	3942	;# 
  1497   000F67                     UFRMH           equ	3943	;# 
  1498   000F68                     UIR             equ	3944	;# 
  1499   000F69                     UIE             equ	3945	;# 
  1500   000F6A                     UEIR            equ	3946	;# 
  1501   000F6B                     UEIE            equ	3947	;# 
  1502   000F6C                     USTAT           equ	3948	;# 
  1503   000F6D                     UCON            equ	3949	;# 
  1504   000F6E                     UADDR           equ	3950	;# 
  1505   000F6F                     UCFG            equ	3951	;# 
  1506   000F70                     UEP0            equ	3952	;# 
  1507   000F71                     UEP1            equ	3953	;# 
  1508   000F72                     UEP2            equ	3954	;# 
  1509   000F73                     UEP3            equ	3955	;# 
  1510   000F74                     UEP4            equ	3956	;# 
  1511   000F75                     UEP5            equ	3957	;# 
  1512   000F76                     UEP6            equ	3958	;# 
  1513   000F77                     UEP7            equ	3959	;# 
  1514   000F78                     UEP8            equ	3960	;# 
  1515   000F79                     UEP9            equ	3961	;# 
  1516   000F7A                     UEP10           equ	3962	;# 
  1517   000F7B                     UEP11           equ	3963	;# 
  1518   000F7C                     UEP12           equ	3964	;# 
  1519   000F7D                     UEP13           equ	3965	;# 
  1520   000F7E                     UEP14           equ	3966	;# 
  1521   000F7F                     UEP15           equ	3967	;# 
  1522   000F80                     PORTA           equ	3968	;# 
  1523   000F81                     PORTB           equ	3969	;# 
  1524   000F82                     PORTC           equ	3970	;# 
  1525   000F83                     PORTD           equ	3971	;# 
  1526   000F84                     PORTE           equ	3972	;# 
  1527   000F89                     LATA            equ	3977	;# 
  1528   000F8A                     LATB            equ	3978	;# 
  1529   000F8B                     LATC            equ	3979	;# 
  1530   000F8C                     LATD            equ	3980	;# 
  1531   000F8D                     LATE            equ	3981	;# 
  1532   000F92                     TRISA           equ	3986	;# 
  1533   000F92                     DDRA            equ	3986	;# 
  1534   000F93                     TRISB           equ	3987	;# 
  1535   000F93                     DDRB            equ	3987	;# 
  1536   000F94                     TRISC           equ	3988	;# 
  1537   000F94                     DDRC            equ	3988	;# 
  1538   000F95                     TRISD           equ	3989	;# 
  1539   000F95                     DDRD            equ	3989	;# 
  1540   000F96                     TRISE           equ	3990	;# 
  1541   000F96                     DDRE            equ	3990	;# 
  1542   000F9B                     OSCTUNE         equ	3995	;# 
  1543   000F9D                     PIE1            equ	3997	;# 
  1544   000F9E                     PIR1            equ	3998	;# 
  1545   000F9F                     IPR1            equ	3999	;# 
  1546   000FA0                     PIE2            equ	4000	;# 
  1547   000FA1                     PIR2            equ	4001	;# 
  1548   000FA2                     IPR2            equ	4002	;# 
  1549   000FA6                     EECON1          equ	4006	;# 
  1550   000FA7                     EECON2          equ	4007	;# 
  1551   000FA8                     EEDATA          equ	4008	;# 
  1552   000FA9                     EEADR           equ	4009	;# 
  1553   000FAB                     RCSTA           equ	4011	;# 
  1554   000FAB                     RCSTA1          equ	4011	;# 
  1555   000FAC                     TXSTA           equ	4012	;# 
  1556   000FAC                     TXSTA1          equ	4012	;# 
  1557   000FAD                     TXREG           equ	4013	;# 
  1558   000FAD                     TXREG1          equ	4013	;# 
  1559   000FAE                     RCREG           equ	4014	;# 
  1560   000FAE                     RCREG1          equ	4014	;# 
  1561   000FAF                     SPBRG           equ	4015	;# 
  1562   000FAF                     SPBRG1          equ	4015	;# 
  1563   000FB0                     SPBRGH          equ	4016	;# 
  1564   000FB1                     T3CON           equ	4017	;# 
  1565   000FB2                     TMR3            equ	4018	;# 
  1566   000FB2                     TMR3L           equ	4018	;# 
  1567   000FB3                     TMR3H           equ	4019	;# 
  1568   000FB4                     CMCON           equ	4020	;# 
  1569   000FB5                     CVRCON          equ	4021	;# 
  1570   000FB6                     ECCP1AS         equ	4022	;# 
  1571   000FB6                     CCP1AS          equ	4022	;# 
  1572   000FB7                     ECCP1DEL        equ	4023	;# 
  1573   000FB7                     CCP1DEL         equ	4023	;# 
  1574   000FB8                     BAUDCON         equ	4024	;# 
  1575   000FB8                     BAUDCTL         equ	4024	;# 
  1576   000FBA                     CCP2CON         equ	4026	;# 
  1577   000FBB                     CCPR2           equ	4027	;# 
  1578   000FBB                     CCPR2L          equ	4027	;# 
  1579   000FBC                     CCPR2H          equ	4028	;# 
  1580   000FBD                     CCP1CON         equ	4029	;# 
  1581   000FBD                     ECCP1CON        equ	4029	;# 
  1582   000FBE                     CCPR1           equ	4030	;# 
  1583   000FBE                     CCPR1L          equ	4030	;# 
  1584   000FBF                     CCPR1H          equ	4031	;# 
  1585   000FC0                     ADCON2          equ	4032	;# 
  1586   000FC1                     ADCON1          equ	4033	;# 
  1587   000FC2                     ADCON0          equ	4034	;# 
  1588   000FC3                     ADRES           equ	4035	;# 
  1589   000FC3                     ADRESL          equ	4035	;# 
  1590   000FC4                     ADRESH          equ	4036	;# 
  1591   000FC5                     SSPCON2         equ	4037	;# 
  1592   000FC6                     SSPCON1         equ	4038	;# 
  1593   000FC7                     SSPSTAT         equ	4039	;# 
  1594   000FC8                     SSPADD          equ	4040	;# 
  1595   000FC9                     SSPBUF          equ	4041	;# 
  1596   000FCA                     T2CON           equ	4042	;# 
  1597   000FCB                     PR2             equ	4043	;# 
  1598   000FCB                     MEMCON          equ	4043	;# 
  1599   000FCC                     TMR2            equ	4044	;# 
  1600   000FCD                     T1CON           equ	4045	;# 
  1601   000FCE                     TMR1            equ	4046	;# 
  1602   000FCE                     TMR1L           equ	4046	;# 
  1603   000FCF                     TMR1H           equ	4047	;# 
  1604   000FD0                     RCON            equ	4048	;# 
  1605   000FD1                     WDTCON          equ	4049	;# 
  1606   000FD2                     HLVDCON         equ	4050	;# 
  1607   000FD2                     LVDCON          equ	4050	;# 
  1608   000FD3                     OSCCON          equ	4051	;# 
  1609   000FD5                     T0CON           equ	4053	;# 
  1610   000FD6                     TMR0            equ	4054	;# 
  1611   000FD6                     TMR0L           equ	4054	;# 
  1612   000FD7                     TMR0H           equ	4055	;# 
  1613   000FD8                     STATUS          equ	4056	;# 
  1614   000FD9                     FSR2            equ	4057	;# 
  1615   000FD9                     FSR2L           equ	4057	;# 
  1616   000FDA                     FSR2H           equ	4058	;# 
  1617   000FDB                     PLUSW2          equ	4059	;# 
  1618   000FDC                     PREINC2         equ	4060	;# 
  1619   000FDD                     POSTDEC2        equ	4061	;# 
  1620   000FDE                     POSTINC2        equ	4062	;# 
  1621   000FDF                     INDF2           equ	4063	;# 
  1622   000FE0                     BSR             equ	4064	;# 
  1623   000FE1                     FSR1            equ	4065	;# 
  1624   000FE1                     FSR1L           equ	4065	;# 
  1625   000FE2                     FSR1H           equ	4066	;# 
  1626   000FE3                     PLUSW1          equ	4067	;# 
  1627   000FE4                     PREINC1         equ	4068	;# 
  1628   000FE5                     POSTDEC1        equ	4069	;# 
  1629   000FE6                     POSTINC1        equ	4070	;# 
  1630   000FE7                     INDF1           equ	4071	;# 
  1631   000FE8                     WREG            equ	4072	;# 
  1632   000FE9                     FSR0            equ	4073	;# 
  1633   000FE9                     FSR0L           equ	4073	;# 
  1634   000FEA                     FSR0H           equ	4074	;# 
  1635   000FEB                     PLUSW0          equ	4075	;# 
  1636   000FEC                     PREINC0         equ	4076	;# 
  1637   000FED                     POSTDEC0        equ	4077	;# 
  1638   000FEE                     POSTINC0        equ	4078	;# 
  1639   000FEF                     INDF0           equ	4079	;# 
  1640   000FF0                     INTCON3         equ	4080	;# 
  1641   000FF1                     INTCON2         equ	4081	;# 
  1642   000FF2                     INTCON          equ	4082	;# 
  1643   000FF3                     PROD            equ	4083	;# 
  1644   000FF3                     PRODL           equ	4083	;# 
  1645   000FF4                     PRODH           equ	4084	;# 
  1646   000FF5                     TABLAT          equ	4085	;# 
  1647   000FF6                     TBLPTR          equ	4086	;# 
  1648   000FF6                     TBLPTRL         equ	4086	;# 
  1649   000FF7                     TBLPTRH         equ	4087	;# 
  1650   000FF8                     TBLPTRU         equ	4088	;# 
  1651   000FF9                     PCLAT           equ	4089	;# 
  1652   000FF9                     PC              equ	4089	;# 
  1653   000FF9                     PCL             equ	4089	;# 
  1654   000FFA                     PCLATH          equ	4090	;# 
  1655   000FFB                     PCLATU          equ	4091	;# 
  1656   000FFC                     STKPTR          equ	4092	;# 
  1657   000FFD                     TOS             equ	4093	;# 
  1658   000FFD                     TOSL            equ	4093	;# 
  1659   000FFE                     TOSH            equ	4094	;# 
  1660   000FFF                     TOSU            equ	4095	;# 
  1661                           
  1662                           ; _pSegA loaded to wtemp22
  1663                           ; _pSegA loaded to wtemp22
  1664                           ; _pSegA loaded to wtemp22
  1665                           ; _pSegA loaded to wtemp22
  1666                           ; _pSegA loaded to wtemp22
  1667                           ; _pSegA loaded to wtemp22
  1668                           ; _pSegA loaded to wtemp22
  1669                           ; _pSegA loaded to wtemp22
  1670                           ; _pSegA loaded to wtemp22
  1671                           ; _pSegA loaded to wtemp22
  1672                           ; _pSegA loaded to wtemp22
  1673                           ; _pSegA loaded to wtemp22
  1674                           ; _pSegA loaded to wtemp22
  1675                           ; _pSegA loaded to wtemp22
  1676                           ; _pSegB loaded to wtemp2
  1677                           ; _pSegB loaded to wtemp2
  1678                           ; _pSegB loaded to wtemp2
  1679                           ; _pSegB loaded to wtemp2
  1680                           ; _pSegB loaded to wtemp2
  1681                           ; _pSegB loaded to wtemp2
  1682                           ; _pSegB loaded to wtemp2
  1683                           ; _pSegB loaded to wtemp2
  1684                           ; _pSegB loaded to wtemp2
  1685                           ; _pSegB loaded to wtemp2
  1686                           ; _pSegB loaded to wtemp2
  1687                           ; _pSegB loaded to wtemp2
  1688                           ; _pSegB loaded to wtemp2
  1689                           ; _pSegA loaded to wtemp22
  1690                           ; _pSegA loaded to wtemp22
  1691                           ; _pSegA loaded to wtemp22
  1692                           ; _pSegA loaded to wtemp22
  1693                           ; _pSegA loaded to wtemp22
  1694                           ; _pSegA loaded to wtemp22
  1695                           ; _pSegA loaded to wtemp22
  1696                           ; _pSegA loaded to wtemp22
  1697                           ; _pSegA loaded to wtemp22
  1698                           ; _pSegA loaded to wtemp22
  1699                           ; _pSegA loaded to wtemp22
  1700                           ; _pSegA loaded to wtemp22
  1701                           ; _pSegA loaded to wtemp22
  1702                           ; _pSegA loaded to wtemp22
  1703                           ; _pSegA loaded to wtemp22
  1704                           ; _pSegA loaded to wtemp22
  1705                           ; _pSegA loaded to wtemp22
  1706                           ; _pSegA loaded to wtemp22
  1707                           ; _pSegA loaded to wtemp22
  1708                           ; _pSegA loaded to wtemp22
  1709                           ; _pSegA loaded to wtemp22
  1710                           ; _pSegA loaded to wtemp22
  1711                           ; _pSegA loaded to wtemp22
  1712                           ; _pSegA loaded to wtemp22
  1713                           ; _pSegA loaded to wtemp22
  1714                           ; _pSegA loaded to wtemp22
  1715                           ; _pSegA loaded to wtemp22
  1716                           ; _pSegA loaded to wtemp22
  1717                           ; _pSegA loaded to wtemp22
  1718                           ; _pSegB loaded to wtemp2
  1719                           ; _pSegA loaded to wtemp22
  1720                           ; _pSegB loaded to wtemp2
  1721                           ; _pSegA loaded to wtemp22
  1722                           ; _pSegB loaded to wtemp2
  1723                           ; _pSegA loaded to wtemp22
  1724                           ; _pSegB loaded to wtemp2
  1725                           ; _pSegA loaded to wtemp22
  1726                           ; _pSegB loaded to wtemp2
  1727                           ; _pSegA loaded to wtemp22
  1728                           ; _pSegB loaded to wtemp2
  1729                           ; _pSegA loaded to wtemp22
  1730                           ; _pSegB loaded to wtemp2
  1731                           ; _pSegA loaded to wtemp22
  1732                           ; _pSegB loaded to wtemp2
  1733                           ; _pSegA loaded to wtemp22
  1734                           ; _pSegB loaded to wtemp2
  1735                           ; _pSegA loaded to wtemp22
  1736                           ; _pSegB loaded to wtemp2
  1737                           ; _pSegA loaded to wtemp22
  1738                           ; _pSegB loaded to wtemp2
  1739                           ; _pSegA loaded to wtemp22
  1740                           ; _pSegB loaded to wtemp2
  1741                           ; _pSegA loaded to wtemp22
  1742                           ; _pSegB loaded to wtemp2
  1743                           ; _pSegA loaded to wtemp22
  1744                           ; _pSegB loaded to wtemp2
  1745                           ; _pSegA loaded to wtemp22
  1746                           ; _pSegB loaded to wtemp2
  1747                           ; _pSegA loaded to wtemp22
  1748                           ; _pSegB loaded to wtemp2
  1749                           ; _pSegA loaded to wtemp22
  1750                           ; _pSegB loaded to wtemp2
  1751                           ; _pSegA loaded to wtemp22
  1752                           ; _pSegB loaded to wtemp2
  1753                           ; _pSegA loaded to wtemp22
  1754                           ; _pSegB loaded to wtemp2
  1755                           ; _pSegA loaded to wtemp22
  1756                           ; _pSegB loaded to wtemp2
  1757                           ; _pSegA loaded to wtemp22
  1758                           ; _pSegB loaded to wtemp2
  1759                           ; _pSegA loaded to wtemp22
  1760                           ; _pSegB loaded to wtemp2
  1761                           ; _pSegA loaded to wtemp22
  1762                           ; _pSegB loaded to wtemp2
  1763                           ; _pSegA loaded to wtemp22
  1764                           ; _pSegB loaded to wtemp2
  1765                           ; _pSegA loaded to wtemp22
  1766                           ; _pSegB loaded to wtemp2
  1767                           ; _pSegA loaded to wtemp22
  1768                           ; _pSegB loaded to wtemp2
  1769                           ; _pSegA loaded to wtemp22
  1770                           ; _pSegB loaded to wtemp2
  1771                           ; _pSegA loaded to wtemp22
  1772                           ; _pSegB loaded to wtemp2
  1773                           ; _pSegA loaded to wtemp22
  1774                           ; _pSegB loaded to wtemp2
  1775                           ; _pSegA loaded to wtemp22
  1776                           ; _pSegB loaded to wtemp2
  1777                           ; _pSegA loaded to wtemp22
  1778                           ; _pSegB loaded to wtemp2
  1779                           ; _pSegA loaded to wtemp22
  1780                           ; _pSegB loaded to wtemp2
  1781                           ; _pSegA loaded to wtemp22
  1782                           ; _pSegB loaded to wtemp2
  1783                           ; _pSegA loaded to wtemp22
  1784                           ; _pSegB loaded to wtemp2
  1785                           ; _pSegA loaded to wtemp22
  1786                           ; _pSegB loaded to wtemp2
  1787                           ; _pSegA loaded to wtemp22
  1788                           ; _pSegB loaded to wtemp2
  1789                           ; _pSegA loaded to wtemp22
  1790                           ; _pSegB loaded to wtemp2
  1791                           ; _pSegA loaded to wtemp22
  1792                           ; _pSegB loaded to wtemp2
  1793                           ; _pSegA loaded to wtemp22
  1794                           ; _pSegB loaded to wtemp2
  1795                           ; _pSegA loaded to wtemp22
  1796 ;;_pHeap	offset	0
  1797 ;;_segHeader	offset	2
  1798 ;;_uSegB	offset	0
  1799 ;;_uSegA	offset	1
  1800 ;;_uSum	offset	2
  1801 ;;_pHeap	offset	0
  1802 ;;_new_task	offset	0
  1803 ;;_dados_sensores	offset	0
  1804 ;;_nivel_bateria	offset	4
  1805 ;;_i	offset	0
  1806 ;;_data_buffer	offset	1
  1807 ;;_next_task	offset	0
  1808 ;;_highest_priority	offset	2
  1809 ;;_sign	offset	0
  1810 ;;_dados_sensores	offset	0
  1811 ;;_i	offset	0
  1812 ;;_data_buffer	offset	1
  1813 ;;_nivel_bateria	offset	0
  1814 ;;_next_task	offset	0
  1815 ;;_highest_priority	offset	2
  1816   000FFD                     _TOS            set	4093
  1817   000FC3                     _ADRES          set	4035
  1818   000FCE                     _TMR1           set	4046
  1819   000FD6                     _TMR0           set	4054
  1820   000F9D                     _PIE1bits       set	3997
  1821   000FCD                     _T1CONbits      set	4045
  1822   000FC0                     _ADCON2bits     set	4032
  1823   000FC1                     _ADCON1bits     set	4033
  1824   000FC2                     _ADCON0bits     set	4034
  1825   000F9E                     _PIR1bits       set	3998
  1826   000FD5                     _T0CONbits      set	4053
  1827   000FFC                     _STKPTR         set	4092
  1828   000FE8                     _WREG           set	4072
  1829   000FD8                     _STATUS         set	4056
  1830   000FE0                     _BSR            set	4064
  1831   000FC1                     _ADCON1         set	4033
  1832   000F83                     _PORTDbits      set	3971
  1833   000F8C                     _LATDbits       set	3980
  1834   000F95                     _TRISDbits      set	3989
  1835   000FF2                     _INTCONbits     set	4082
  1836                           
  1837                           ; #config settings
  1838                           
  1839                           	psect	cinit
  1840   001C76                     __pcinit:
  1841                           	callstack 0
  1842   001C76                     start_initialization:
  1843                           	callstack 0
  1844   001C76                     __initialization:
  1845                           	callstack 0
  1846                           
  1847                           ; Clear objects allocated to BIGRAM (1045 bytes)
  1848   001C76  EE00  F0B0         	lfsr	0,__pbssBIGRAM
  1849   001C7A  EE24 F015          	lfsr	2,1045
  1850   001C7E                     clear_0:
  1851   001C7E  6AEE               	clrf	postinc0,c
  1852   001C80  50DD               	movf	postdec2,w,c
  1853   001C82  50D9               	movf	fsr2l,w,c
  1854   001C84  E1FC               	bnz	clear_0
  1855   001C86  50DA               	movf	fsr2h,w,c
  1856   001C88  E1FA               	bnz	clear_0
  1857                           
  1858                           ; Clear objects allocated to BANK0 (80 bytes)
  1859   001C8A  EE00  F060         	lfsr	0,__pbssBANK0
  1860   001C8E  0E50               	movlw	80
  1861   001C90                     clear_1:
  1862   001C90  6AEE               	clrf	postinc0,c
  1863   001C92  06E8               	decf	wreg,f,c
  1864   001C94  E1FD               	bnz	clear_1
  1865                           
  1866                           ; Clear objects allocated to COMRAM (18 bytes)
  1867   001C96  EE00  F039         	lfsr	0,__pbssCOMRAM
  1868   001C9A  0E12               	movlw	18
  1869   001C9C                     clear_2:
  1870   001C9C  6AEE               	clrf	postinc0,c
  1871   001C9E  06E8               	decf	wreg,f,c
  1872   001CA0  E1FD               	bnz	clear_2
  1873   001CA2                     end_of_initialization:
  1874                           	callstack 0
  1875   001CA2                     __end_of__initialization:
  1876                           	callstack 0
  1877   001CA2  0100               	movlb	0
  1878   001CA4  EF7C  F00D         	goto	_main	;jump to C main() function
  1879                           
  1880                           	psect	bssCOMRAM
  1881   000039                     __pbssCOMRAM:
  1882                           	callstack 0
  1883   000039                     _velocidade_motores:
  1884                           	callstack 0
  1885   000039                     	ds	8
  1886   000041                     ISR_TIMER_0@pwm_cnt:
  1887                           	callstack 0
  1888   000041                     	ds	2
  1889   000043                     _motor_d_duty:
  1890                           	callstack 0
  1891   000043                     	ds	2
  1892   000045                     _motor_c_duty:
  1893                           	callstack 0
  1894   000045                     	ds	2
  1895   000047                     _motor_b_duty:
  1896                           	callstack 0
  1897   000047                     	ds	2
  1898   000049                     _motor_a_duty:
  1899                           	callstack 0
  1900   000049                     	ds	2
  1901                           
  1902                           	psect	bssBANK0
  1903   000060                     __pbssBANK0:
  1904                           	callstack 0
  1905   000060                     _pipe_bateria:
  1906                           	callstack 0
  1907   000060                     	ds	33
  1908   000081                     _pipe_sensores:
  1909                           	callstack 0
  1910   000081                     	ds	33
  1911   0000A2                     _mutex_motores:
  1912                           	callstack 0
  1913   0000A2                     	ds	14
  1914                           
  1915                           	psect	bssBIGRAM
  1916   0000B0                     __pbssBIGRAM:
  1917                           	callstack 0
  1918   0000B0                     _readyQueue:
  1919                           	callstack 0
  1920   0000B0                     	ds	533
  1921   0002C5                     __uDynamicHeap:
  1922                           	callstack 0
  1923   0002C5                     	ds	512
  1924                           
  1925                           	psect	cstackCOMRAM
  1926   00004B                     __pcstackCOMRAM:
  1927                           	callstack 0
  1928   00004B                     ??_ISR_TIMER_0:
  1929                           
  1930                           ; 1 bytes @ 0x0
  1931   00004B                     	ds	14
  1932                           
  1933 ;;
  1934 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1935 ;;
  1936 ;; *************** function _main *****************
  1937 ;; Defined at:
  1938 ;;		line 7 in file "main.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  2  [STACK] int 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp6, btemp8, 
      +btemp9, btemp20, btemp21, btemp22, btemp23, btemp28, btemp29, btemp36, btemp37, btemp44, btemp45, btemp54, btemp55, prod
      +l, prodh, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1952 ;;      Params:         0       0       0       0       0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels required when called: 13
  1958 ;; This function calls:
  1959 ;;		_os_config
  1960 ;;		_os_create_task
  1961 ;;		_os_start
  1962 ;; This function is called by:
  1963 ;;		Startup code after reset
  1964 ;; This function uses a reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text0
  1968   001AF8                     __ptext0:
  1969                           	callstack 0
  1970   001AF8                     _main:
  1971                           	callstack 18
  1972   001AF8                     
  1973                           ;main.c: 10:     os_config();
  1974   001AF8  EC80  F00E         	call	_os_config	;wreg free
  1975                           
  1976                           ;main.c: 15:     os_create_task(100, tarefa_controle_central, 5);
  1977                           ;register	btemp20
  1978   001AFC  0E64               	movlw	100
  1979   001AFE  6E15               	movwf	btemp20^0,c
  1980                           
  1981                           ;register	btemp21
  1982   001B00  0E05               	movlw	5
  1983   001B02  6E16               	movwf	btemp21^0,c
  1984                           
  1985                           ;register	wtemp11
  1986   001B04  0E5E               	movlw	low _tarefa_controle_central
  1987   001B06  6E17               	movwf	wtemp11^0,c
  1988   001B08  0E13               	movlw	high _tarefa_controle_central
  1989   001B0A  6E18               	movwf	btemp23^0,c
  1990   001B0C  ECC4  F00B         	call	_os_create_task	;wreg free
  1991                           
  1992                           ;main.c: 18:     os_create_task(101, tarefa_controle_motores, 4);
  1993                           ;register	btemp20
  1994   001B10  0E65               	movlw	101
  1995   001B12  6E15               	movwf	btemp20^0,c
  1996                           
  1997                           ;register	btemp21
  1998   001B14  0E04               	movlw	4
  1999   001B16  6E16               	movwf	btemp21^0,c
  2000                           
  2001                           ;register	wtemp11
  2002   001B18  0E00               	movlw	low _tarefa_controle_motores
  2003   001B1A  6E17               	movwf	wtemp11^0,c
  2004   001B1C  0E1C               	movlw	high _tarefa_controle_motores
  2005   001B1E  6E18               	movwf	btemp23^0,c
  2006   001B20  ECC4  F00B         	call	_os_create_task	;wreg free
  2007                           
  2008                           ;main.c: 21:     os_create_task(102, tarefa_leitura_sensores, 3);
  2009                           ;register	btemp20
  2010   001B24  0E66               	movlw	102
  2011   001B26  6E15               	movwf	btemp20^0,c
  2012                           
  2013                           ;register	btemp21
  2014   001B28  0E03               	movlw	3
  2015   001B2A  6E16               	movwf	btemp21^0,c
  2016                           
  2017                           ;register	wtemp11
  2018   001B2C  0E82               	movlw	low _tarefa_leitura_sensores
  2019   001B2E  6E17               	movwf	wtemp11^0,c
  2020   001B30  0E1A               	movlw	high _tarefa_leitura_sensores
  2021   001B32  6E18               	movwf	btemp23^0,c
  2022   001B34  ECC4  F00B         	call	_os_create_task	;wreg free
  2023                           
  2024                           ;main.c: 24:     os_create_task(103, tarefa_monitoramento_bateria, 2);
  2025                           ;register	btemp20
  2026   001B38  0E67               	movlw	103
  2027   001B3A  6E15               	movwf	btemp20^0,c
  2028                           
  2029                           ;register	btemp21
  2030   001B3C  0E02               	movlw	2
  2031   001B3E  6E16               	movwf	btemp21^0,c
  2032                           
  2033                           ;register	wtemp11
  2034   001B40  0EB2               	movlw	low _tarefa_monitoramento_bateria
  2035   001B42  6E17               	movwf	wtemp11^0,c
  2036   001B44  0E1B               	movlw	high _tarefa_monitoramento_bateria
  2037   001B46  6E18               	movwf	btemp23^0,c
  2038   001B48  ECC4  F00B         	call	_os_create_task	;wreg free
  2039   001B4C                     
  2040                           ;main.c: 29:     os_start();
  2041   001B4C  EC03  F00F         	call	_os_start	;wreg free
  2042   001B50                     l19:
  2043   001B50  EFA8  F00D         	goto	l19
  2044   001B54  EF06  F000         	goto	start
  2045   001B58                     __end_of_main:
  2046                           	callstack 0
  2047                           
  2048 ;; *************** function _os_start *****************
  2049 ;; Defined at:
  2050 ;;		line 26 in file "kernel.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;		None
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1  [STACK] void 
  2057 ;; Registers used:
  2058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp6, btemp8, btemp9, btemp2
      +0, btemp21, btemp28, btemp29, btemp36, btemp37, btemp44, btemp45, btemp54, btemp55, prodl, prodh, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2064 ;;      Params:         0       0       0       0       0       0       0       0       0
  2065 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2067 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2068 ;;Total ram usage:        0 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; Hardware stack levels required when called: 12
  2071 ;; This function calls:
  2072 ;;		_SRAMInitHeap
  2073 ;;		_conf_interrupts
  2074 ;;		_conf_timer_0
  2075 ;;		_config_app
  2076 ;; This function is called by:
  2077 ;;		_main
  2078 ;; This function uses a reentrant model
  2079 ;;
  2080                           
  2081                           	psect	text1
  2082   001E06                     __ptext1:
  2083                           	callstack 0
  2084   001E06                     _os_start:
  2085                           	callstack 18
  2086   001E06                     
  2087                           ;kernel.c: 29:     conf_interrupts();
  2088   001E06  EC3B  F00F         	call	_conf_interrupts	;wreg free
  2089   001E0A                     
  2090                           ;kernel.c: 33:     SRAMInitHeap();
  2091   001E0A  ECB7  F00C         	call	_SRAMInitHeap	;wreg free
  2092   001E0E                     
  2093                           ;kernel.c: 37:     config_app();
  2094   001E0E  EC1F  F00C         	call	_config_app	;wreg free
  2095   001E12                     
  2096                           ;kernel.c: 40:     conf_timer_0();
  2097   001E12  ECE9  F00E         	call	_conf_timer_0	;wreg free
  2098   001E16                     
  2099                           ;kernel.c: 43:     (INTCONbits.GIE = 1);
  2100   001E16  8EF2               	bsf	242,7,c	;volatile
  2101   001E18                     
  2102                           ; _os_start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  2103   001E18  0012               	return		;funcret
  2104   001E1A                     __end_of_os_start:
  2105                           	callstack 0
  2106                           
  2107 ;; *************** function _config_app *****************
  2108 ;; Defined at:
  2109 ;;		line 19 in file "user_app.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1  [STACK] void 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp6, btemp8, btemp9, btemp2
      +8, btemp29, btemp36, btemp37, btemp44, btemp45, btemp54, btemp55, prodl, prodh, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2123 ;;      Params:         0       0       0       0       0       0       0       0       0
  2124 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2126 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2127 ;;Total ram usage:        0 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 11
  2130 ;; This function calls:
  2131 ;;		_adc_go
  2132 ;;		_config_adc
  2133 ;;		_create_pipe
  2134 ;;		_mutex_init
  2135 ;;		_pwm_init
  2136 ;;		_pwm_set_duty_cycle_motor1
  2137 ;;		_pwm_set_duty_cycle_motor2
  2138 ;;		_pwm_set_duty_cycle_motor3
  2139 ;;		_pwm_set_duty_cycle_motor4
  2140 ;;		_set_channel
  2141 ;;		_set_port
  2142 ;; This function is called by:
  2143 ;;		_os_start
  2144 ;; This function uses a reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text2
  2148   00183E                     __ptext2:
  2149                           	callstack 0
  2150   00183E                     _config_app:
  2151                           	callstack 18
  2152   00183E                     
  2153                           ;user_app.c: 23:     ADCON1 = 0x0F;
  2154   00183E  0E0F               	movlw	15
  2155   001840  6EC1               	movwf	193,c	;volatile
  2156   001842                     
  2157                           ;user_app.c: 26:     set_channel(CHANNEL_0);
  2158                           ;register	btemp28
  2159   001842  0E00               	movlw	0
  2160   001844  6E1D               	movwf	btemp28^0,c
  2161   001846  EC0D  F00F         	call	_set_channel	;wreg free
  2162   00184A                     
  2163                           ;user_app.c: 27:     set_port(AN03);
  2164                           ;register	btemp28
  2165   00184A  0E0B               	movlw	11
  2166   00184C  6E1D               	movwf	btemp28^0,c
  2167   00184E  EC25  F00F         	call	_set_port	;wreg free
  2168   001852                     
  2169                           ;user_app.c: 28:     config_adc(TAD12, FOSC4);
  2170                           ;register	btemp28
  2171   001852  0E05               	movlw	5
  2172   001854  6E1D               	movwf	btemp28^0,c
  2173                           
  2174                           ;register	btemp29
  2175   001856  0E04               	movlw	4
  2176   001858  6E1E               	movwf	btemp29^0,c
  2177   00185A  ECD8  F00E         	call	_config_adc	;wreg free
  2178   00185E                     
  2179                           ;user_app.c: 29:     adc_go(1);
  2180                           ;register	wtemp14
  2181   00185E  6A1E               	clrf	btemp29^0,c
  2182   001860  0E01               	movlw	1
  2183   001862  6E1D               	movwf	btemp28^0,c
  2184   001864  EC2B  F00F         	call	_adc_go	;wreg free
  2185   001868                     
  2186                           ;user_app.c: 31:     pwm_init();
  2187   001868  EC1F  F00E         	call	_pwm_init	;wreg free
  2188   00186C                     
  2189                           ;user_app.c: 34:     mutex_init(&mutex_motores);
  2190                           ;register	btemp28
  2191   00186C  0EA2               	movlw	low _mutex_motores
  2192   00186E  6E1D               	movwf	btemp28^0,c
  2193   001870  EC17  F00F         	call	_mutex_init	;wreg free
  2194   001874                     
  2195                           ;user_app.c: 35:     create_pipe(&pipe_sensores, sizeof(sensor_data_t));
  2196                           ;register	btemp28
  2197   001874  0E81               	movlw	low _pipe_sensores
  2198   001876  6E1D               	movwf	btemp28^0,c
  2199                           
  2200                           ;register	btemp29
  2201   001878  0E04               	movlw	4
  2202   00187A  6E1E               	movwf	btemp29^0,c
  2203   00187C  ECAC  F00D         	call	_create_pipe	;wreg free
  2204   001880                     
  2205                           ;user_app.c: 36:     create_pipe(&pipe_bateria, sizeof(int));
  2206                           ;register	btemp28
  2207   001880  0E60               	movlw	low _pipe_bateria
  2208   001882  6E1D               	movwf	btemp28^0,c
  2209                           
  2210                           ;register	btemp29
  2211   001884  0E02               	movlw	2
  2212   001886  6E1E               	movwf	btemp29^0,c
  2213   001888  ECAC  F00D         	call	_create_pipe	;wreg free
  2214   00188C                     
  2215                           ;user_app.c: 39:     velocidade_motores.motor1_speed = 512;
  2216   00188C  0E02               	movlw	2
  2217   00188E  6E3A               	movwf	(_velocidade_motores+1)^0,c
  2218   001890  0E00               	movlw	0
  2219   001892  6E39               	movwf	_velocidade_motores^0,c
  2220   001894                     
  2221                           ;user_app.c: 40:     velocidade_motores.motor2_speed = 512;
  2222   001894  0E02               	movlw	2
  2223   001896  6E3C               	movwf	(_velocidade_motores+3)^0,c
  2224   001898  0E00               	movlw	0
  2225   00189A  6E3B               	movwf	(_velocidade_motores+2)^0,c
  2226   00189C                     
  2227                           ;user_app.c: 41:     velocidade_motores.motor3_speed = 512;
  2228   00189C  0E02               	movlw	2
  2229   00189E  6E3E               	movwf	(_velocidade_motores+5)^0,c
  2230   0018A0  0E00               	movlw	0
  2231   0018A2  6E3D               	movwf	(_velocidade_motores+4)^0,c
  2232   0018A4                     
  2233                           ;user_app.c: 42:     velocidade_motores.motor4_speed = 512;
  2234   0018A4  0E02               	movlw	2
  2235   0018A6  6E40               	movwf	(_velocidade_motores+7)^0,c
  2236   0018A8  0E00               	movlw	0
  2237   0018AA  6E3F               	movwf	(_velocidade_motores+6)^0,c
  2238   0018AC                     
  2239                           ;user_app.c: 45:     pwm_set_duty_cycle_motor1(512);
  2240                           ;register	wtemp14
  2241   0018AC  0E02               	movlw	2
  2242   0018AE  6E1E               	movwf	btemp29^0,c
  2243   0018B0  0E00               	movlw	0
  2244   0018B2  6E1D               	movwf	btemp28^0,c
  2245   0018B4  ECC7  F00E         	call	_pwm_set_duty_cycle_motor1	;wreg free
  2246   0018B8                     
  2247                           ;user_app.c: 46:     pwm_set_duty_cycle_motor2(512);
  2248                           ;register	wtemp14
  2249   0018B8  0E02               	movlw	2
  2250   0018BA  6E1E               	movwf	btemp29^0,c
  2251   0018BC  0E00               	movlw	0
  2252   0018BE  6E1D               	movwf	btemp28^0,c
  2253   0018C0  ECB6  F00E         	call	_pwm_set_duty_cycle_motor2	;wreg free
  2254   0018C4                     
  2255                           ;user_app.c: 47:     pwm_set_duty_cycle_motor3(512);
  2256                           ;register	wtemp14
  2257   0018C4  0E02               	movlw	2
  2258   0018C6  6E1E               	movwf	btemp29^0,c
  2259   0018C8  0E00               	movlw	0
  2260   0018CA  6E1D               	movwf	btemp28^0,c
  2261   0018CC  ECA5  F00E         	call	_pwm_set_duty_cycle_motor3	;wreg free
  2262   0018D0                     
  2263                           ;user_app.c: 48:     pwm_set_duty_cycle_motor4(512);
  2264                           ;register	wtemp14
  2265   0018D0  0E02               	movlw	2
  2266   0018D2  6E1E               	movwf	btemp29^0,c
  2267   0018D4  0E00               	movlw	0
  2268   0018D6  6E1D               	movwf	btemp28^0,c
  2269   0018D8  EC94  F00E         	call	_pwm_set_duty_cycle_motor4	;# 
  2270   0018DC                     
  2271                           ; _config_app: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  2272   0018DC  0012               	return		;funcret
  2273   0018DE                     __end_of_config_app:
  2274                           	callstack 0
  2275                           
  2276 ;; *************** function _set_port *****************
  2277 ;; Defined at:
  2278 ;;		line 12 in file "io.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;  port            1    btemp28  enum E3358
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;		None
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1  [STACK] void 
  2285 ;; Registers used:
  2286 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp28
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2292 ;;      Params:         0       0       0       0       0       0       0       0       0
  2293 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2294 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2295 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2296 ;;Total ram usage:        0 bytes
  2297 ;; Hardware stack levels used: 1
  2298 ;; Hardware stack levels required when called: 8
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_config_app
  2303 ;; This function uses a reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text3
  2307   001E4A                     __ptext3:
  2308                           	callstack 0
  2309   001E4A                     _set_port:
  2310                           	callstack 20
  2311   001E4A                     
  2312                           ;io.c: 12: void set_port(port_conf_t port);io.c: 13: {;io.c: 14:     ADCON1bits.PCFG = p
      +                          ort;
  2313   001E4A  50C1               	movf	193,w,c	;volatile
  2314   001E4C  181D               	xorwf	btemp28^0,w,c
  2315   001E4E  0BF0               	andlw	-16
  2316   001E50  181D               	xorwf	btemp28^0,w,c
  2317   001E52  6EC1               	movwf	193,c	;volatile
  2318   001E54                     
  2319                           ; _set_port: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  2320   001E54  0012               	return		;funcret
  2321   001E56                     __end_of_set_port:
  2322                           	callstack 0
  2323                           
  2324 ;; *************** function _set_channel *****************
  2325 ;; Defined at:
  2326 ;;		line 7 in file "io.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  channel         1    btemp28  enum E3343
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;		None
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1  [STACK] void 
  2333 ;; Registers used:
  2334 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp28, btemp55
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2340 ;;      Params:         0       0       0       0       0       0       0       0       0
  2341 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2343 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2344 ;;Total ram usage:        0 bytes
  2345 ;; Hardware stack levels used: 1
  2346 ;; Hardware stack levels required when called: 8
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_config_app
  2351 ;;		_tarefa_leitura_sensores
  2352 ;;		_tarefa_monitoramento_bateria
  2353 ;; This function uses a reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text4
  2357   001E1A                     __ptext4:
  2358                           	callstack 0
  2359   001E1A                     _set_channel:
  2360                           	callstack 16
  2361   001E1A                     
  2362                           ;io.c: 7: void set_channel(channel_t channel);io.c: 8: {;io.c: 9:     ADCON0bits.CHS = c
      +                          hannel;
  2363   001E1A  C01D F038          	movff	btemp28,btemp55
  2364   001E1E  4638               	rlncf	btemp55^0,f,c
  2365   001E20  4638               	rlncf	btemp55^0,f,c
  2366   001E22  50C2               	movf	194,w,c	;volatile
  2367   001E24  1838               	xorwf	btemp55^0,w,c
  2368   001E26  0BC3               	andlw	-61
  2369   001E28  1838               	xorwf	btemp55^0,w,c
  2370   001E2A  6EC2               	movwf	194,c	;volatile
  2371   001E2C                     
  2372                           ; _set_channel: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2373   001E2C  0012               	return		;funcret
  2374   001E2E                     __end_of_set_channel:
  2375                           	callstack 0
  2376                           
  2377 ;; *************** function _pwm_set_duty_cycle_motor4 *****************
  2378 ;; Defined at:
  2379 ;;		line 102 in file "io.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  duty_cycle      2    wtemp14  unsigned short 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;		None
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1  [STACK] void 
  2386 ;; Registers used:
  2387 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp28, btemp29
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2393 ;;      Params:         0       0       0       0       0       0       0       0       0
  2394 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2396 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2397 ;;Total ram usage:        0 bytes
  2398 ;; Hardware stack levels used: 1
  2399 ;; Hardware stack levels required when called: 8
  2400 ;; This function calls:
  2401 ;;		Nothing
  2402 ;; This function is called by:
  2403 ;;		_config_app
  2404 ;;		_tarefa_controle_motores
  2405 ;; This function uses a reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text5
  2409   001D28                     __ptext5:
  2410                           	callstack 0
  2411   001D28                     _pwm_set_duty_cycle_motor4:
  2412                           	callstack 16
  2413   001D28                     
  2414                           ;io.c: 102: void pwm_set_duty_cycle_motor4(uint16_t duty_cycle);io.c: 103: {;io.c: 104: 
      +                              if (duty_cycle > 1023) duty_cycle = 1023;
  2415   001D28  0E04               	movlw	4
  2416   001D2A  5C1E               	subwf	(btemp28+1)^0,w,c
  2417   001D2C  A0D8               	btfss	status,0,c
  2418   001D2E  EF9B  F00E         	goto	u981
  2419   001D32  EF9D  F00E         	goto	u980
  2420   001D36                     u981:
  2421   001D36  EFA0  F00E         	goto	l2210
  2422   001D3A                     u980:
  2423   001D3A  0E03               	movlw	3
  2424   001D3C  6E1E               	movwf	(btemp28+1)^0,c
  2425   001D3E  681D               	setf	btemp28^0,c
  2426   001D40                     l2210:
  2427                           
  2428                           ;io.c: 105:     motor_d_duty = duty_cycle;
  2429   001D40  C01D F043          	movff	btemp28,_motor_d_duty
  2430   001D44  C01E F044          	movff	btemp28+1,_motor_d_duty+1
  2431   001D48                     
  2432                           ; _pwm_set_duty_cycle_motor4: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 0, argsize = 0, vargsize = 0
  2433   001D48  0012               	return		;funcret
  2434   001D4A                     __end_of_pwm_set_duty_cycle_motor4:
  2435                           	callstack 0
  2436                           
  2437 ;; *************** function _pwm_set_duty_cycle_motor3 *****************
  2438 ;; Defined at:
  2439 ;;		line 95 in file "io.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  duty_cycle      2    wtemp14  unsigned short 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;		None
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1  [STACK] void 
  2446 ;; Registers used:
  2447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp28, btemp29
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2453 ;;      Params:         0       0       0       0       0       0       0       0       0
  2454 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2455 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2456 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2457 ;;Total ram usage:        0 bytes
  2458 ;; Hardware stack levels used: 1
  2459 ;; Hardware stack levels required when called: 8
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_config_app
  2464 ;;		_tarefa_controle_motores
  2465 ;; This function uses a reentrant model
  2466 ;;
  2467                           
  2468                           	psect	text6
  2469   001D4A                     __ptext6:
  2470                           	callstack 0
  2471   001D4A                     _pwm_set_duty_cycle_motor3:
  2472                           	callstack 16
  2473   001D4A                     
  2474                           ;io.c: 95: void pwm_set_duty_cycle_motor3(uint16_t duty_cycle);io.c: 96: {;io.c: 97:    
      +                           if (duty_cycle > 1023) duty_cycle = 1023;
  2475   001D4A  0E04               	movlw	4
  2476   001D4C  5C1E               	subwf	(btemp28+1)^0,w,c
  2477   001D4E  A0D8               	btfss	status,0,c
  2478   001D50  EFAC  F00E         	goto	u971
  2479   001D54  EFAE  F00E         	goto	u970
  2480   001D58                     u971:
  2481   001D58  EFB1  F00E         	goto	l2204
  2482   001D5C                     u970:
  2483   001D5C  0E03               	movlw	3
  2484   001D5E  6E1E               	movwf	(btemp28+1)^0,c
  2485   001D60  681D               	setf	btemp28^0,c
  2486   001D62                     l2204:
  2487                           
  2488                           ;io.c: 98:     motor_c_duty = duty_cycle;
  2489   001D62  C01D F045          	movff	btemp28,_motor_c_duty
  2490   001D66  C01E F046          	movff	btemp28+1,_motor_c_duty+1
  2491   001D6A                     
  2492                           ; _pwm_set_duty_cycle_motor3: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 0, argsize = 0, vargsize = 0
  2493   001D6A  0012               	return		;funcret
  2494   001D6C                     __end_of_pwm_set_duty_cycle_motor3:
  2495                           	callstack 0
  2496                           
  2497 ;; *************** function _pwm_set_duty_cycle_motor2 *****************
  2498 ;; Defined at:
  2499 ;;		line 88 in file "io.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  duty_cycle      2    wtemp14  unsigned short 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;		None
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1  [STACK] void 
  2506 ;; Registers used:
  2507 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp28, btemp29
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2513 ;;      Params:         0       0       0       0       0       0       0       0       0
  2514 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2516 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2517 ;;Total ram usage:        0 bytes
  2518 ;; Hardware stack levels used: 1
  2519 ;; Hardware stack levels required when called: 8
  2520 ;; This function calls:
  2521 ;;		Nothing
  2522 ;; This function is called by:
  2523 ;;		_config_app
  2524 ;;		_tarefa_controle_motores
  2525 ;; This function uses a reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text7
  2529   001D6C                     __ptext7:
  2530                           	callstack 0
  2531   001D6C                     _pwm_set_duty_cycle_motor2:
  2532                           	callstack 16
  2533   001D6C                     
  2534                           ;io.c: 88: void pwm_set_duty_cycle_motor2(uint16_t duty_cycle);io.c: 89: {;io.c: 90:    
      +                           if (duty_cycle > 1023) duty_cycle = 1023;
  2535   001D6C  0E04               	movlw	4
  2536   001D6E  5C1E               	subwf	(btemp28+1)^0,w,c
  2537   001D70  A0D8               	btfss	status,0,c
  2538   001D72  EFBD  F00E         	goto	u961
  2539   001D76  EFBF  F00E         	goto	u960
  2540   001D7A                     u961:
  2541   001D7A  EFC2  F00E         	goto	l2198
  2542   001D7E                     u960:
  2543   001D7E  0E03               	movlw	3
  2544   001D80  6E1E               	movwf	(btemp28+1)^0,c
  2545   001D82  681D               	setf	btemp28^0,c
  2546   001D84                     l2198:
  2547                           
  2548                           ;io.c: 91:     motor_b_duty = duty_cycle;
  2549   001D84  C01D F047          	movff	btemp28,_motor_b_duty
  2550   001D88  C01E F048          	movff	btemp28+1,_motor_b_duty+1
  2551   001D8C                     
  2552                           ; _pwm_set_duty_cycle_motor2: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 0, argsize = 0, vargsize = 0
  2553   001D8C  0012               	return		;funcret
  2554   001D8E                     __end_of_pwm_set_duty_cycle_motor2:
  2555                           	callstack 0
  2556                           
  2557 ;; *************** function _pwm_set_duty_cycle_motor1 *****************
  2558 ;; Defined at:
  2559 ;;		line 81 in file "io.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  duty_cycle      2    wtemp14  unsigned short 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;		None
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1  [STACK] void 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp28, btemp29
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2573 ;;      Params:         0       0       0       0       0       0       0       0       0
  2574 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2575 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2576 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2577 ;;Total ram usage:        0 bytes
  2578 ;; Hardware stack levels used: 1
  2579 ;; Hardware stack levels required when called: 8
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_config_app
  2584 ;;		_tarefa_controle_motores
  2585 ;; This function uses a reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text8
  2589   001D8E                     __ptext8:
  2590                           	callstack 0
  2591   001D8E                     _pwm_set_duty_cycle_motor1:
  2592                           	callstack 16
  2593   001D8E                     
  2594                           ;io.c: 81: void pwm_set_duty_cycle_motor1(uint16_t duty_cycle);io.c: 82: {;io.c: 83:    
      +                           if (duty_cycle > 1023) duty_cycle = 1023;
  2595   001D8E  0E04               	movlw	4
  2596   001D90  5C1E               	subwf	(btemp28+1)^0,w,c
  2597   001D92  A0D8               	btfss	status,0,c
  2598   001D94  EFCE  F00E         	goto	u951
  2599   001D98  EFD0  F00E         	goto	u950
  2600   001D9C                     u951:
  2601   001D9C  EFD3  F00E         	goto	l2192
  2602   001DA0                     u950:
  2603   001DA0  0E03               	movlw	3
  2604   001DA2  6E1E               	movwf	(btemp28+1)^0,c
  2605   001DA4  681D               	setf	btemp28^0,c
  2606   001DA6                     l2192:
  2607                           
  2608                           ;io.c: 84:     motor_a_duty = duty_cycle;
  2609   001DA6  C01D F049          	movff	btemp28,_motor_a_duty
  2610   001DAA  C01E F04A          	movff	btemp28+1,_motor_a_duty+1
  2611   001DAE                     
  2612                           ; _pwm_set_duty_cycle_motor1: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 0, argsize = 0, vargsize = 0
  2613   001DAE  0012               	return		;funcret
  2614   001DB0                     __end_of_pwm_set_duty_cycle_motor1:
  2615                           	callstack 0
  2616                           
  2617 ;; *************** function _pwm_init *****************
  2618 ;; Defined at:
  2619 ;;		line 46 in file "io.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1  [STACK] void 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2633 ;;      Params:         0       0       0       0       0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2636 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels used: 1
  2639 ;; Hardware stack levels required when called: 8
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_config_app
  2644 ;; This function uses a reentrant model
  2645 ;;
  2646                           
  2647                           	psect	text9
  2648   001C3E                     __ptext9:
  2649                           	callstack 0
  2650   001C3E                     _pwm_init:
  2651                           	callstack 20
  2652   001C3E                     
  2653                           ;io.c: 50:     TRISDbits.RD0 = 0;
  2654   001C3E  9095               	bcf	149,0,c	;volatile
  2655                           
  2656                           ;io.c: 51:     TRISDbits.RD1 = 0;
  2657   001C40  9295               	bcf	149,1,c	;volatile
  2658                           
  2659                           ;io.c: 52:     TRISDbits.RD2 = 0;
  2660   001C42  9495               	bcf	149,2,c	;volatile
  2661                           
  2662                           ;io.c: 53:     TRISDbits.RD3 = 0;
  2663   001C44  9695               	bcf	149,3,c	;volatile
  2664                           
  2665                           ;io.c: 56:     LATDbits.LATD0 = 0;
  2666   001C46  908C               	bcf	140,0,c	;volatile
  2667                           
  2668                           ;io.c: 57:     LATDbits.LATD1 = 0;
  2669   001C48  928C               	bcf	140,1,c	;volatile
  2670                           
  2671                           ;io.c: 58:     LATDbits.LATD2 = 0;
  2672   001C4A  948C               	bcf	140,2,c	;volatile
  2673                           
  2674                           ;io.c: 59:     LATDbits.LATD3 = 0;
  2675   001C4C  968C               	bcf	140,3,c	;volatile
  2676                           
  2677                           ;io.c: 62:     motor_a_duty = 0;
  2678   001C4E  6A49               	clrf	_motor_a_duty^0,c
  2679   001C50  6A4A               	clrf	(_motor_a_duty+1)^0,c
  2680                           
  2681                           ;io.c: 63:     motor_b_duty = 0;
  2682   001C52  6A47               	clrf	_motor_b_duty^0,c
  2683   001C54  6A48               	clrf	(_motor_b_duty+1)^0,c
  2684                           
  2685                           ;io.c: 64:     motor_c_duty = 0;
  2686   001C56  6A45               	clrf	_motor_c_duty^0,c
  2687   001C58  6A46               	clrf	(_motor_c_duty+1)^0,c
  2688                           
  2689                           ;io.c: 65:     motor_d_duty = 0;
  2690   001C5A  6A43               	clrf	_motor_d_duty^0,c
  2691   001C5C  6A44               	clrf	(_motor_d_duty+1)^0,c
  2692                           
  2693                           ;io.c: 68:     T1CONbits.TMR1CS = 0;
  2694   001C5E  92CD               	bcf	205,1,c	;volatile
  2695   001C60                     
  2696                           ;io.c: 69:     T1CONbits.T1CKPS = 0b00;
  2697   001C60  0ECF               	movlw	-49
  2698   001C62  16CD               	andwf	205,f,c	;volatile
  2699   001C64                     
  2700                           ;io.c: 70:     T1CONbits.RD16 = 1;
  2701   001C64  8ECD               	bsf	205,7,c	;volatile
  2702                           
  2703                           ;io.c: 71:     TMR1 = 65535 - 500;
  2704   001C66  0EFE               	movlw	254
  2705   001C68  6ECF               	movwf	207,c	;volatile
  2706   001C6A  0E0B               	movlw	11
  2707   001C6C  6ECE               	movwf	206,c	;volatile
  2708   001C6E                     
  2709                           ;io.c: 74:     PIE1bits.TMR1IE = 1;
  2710   001C6E  809D               	bsf	157,0,c	;volatile
  2711   001C70                     
  2712                           ;io.c: 75:     PIR1bits.TMR1IF = 0;
  2713   001C70  909E               	bcf	158,0,c	;volatile
  2714   001C72                     
  2715                           ;io.c: 77:     T1CONbits.TMR1ON = 1;
  2716   001C72  80CD               	bsf	205,0,c	;volatile
  2717   001C74                     
  2718                           ; _pwm_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  2719   001C74  0012               	return		;funcret
  2720   001C76                     __end_of_pwm_init:
  2721                           	callstack 0
  2722                           
  2723 ;; *************** function _mutex_init *****************
  2724 ;; Defined at:
  2725 ;;		line 56 in file "sync.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  m               1    btemp28  PTR struct semaphore
  2728 ;;		 -> mutex_motores(14), 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;		None
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1  [STACK] void 
  2733 ;; Registers used:
  2734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp28, btemp36, btemp37, btemp54, btemp55, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2740 ;;      Params:         0       0       0       0       0       0       0       0       0
  2741 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2743 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2744 ;;Total ram usage:        0 bytes
  2745 ;; Hardware stack levels used: 1
  2746 ;; Hardware stack levels required when called: 9
  2747 ;; This function calls:
  2748 ;;		_sem_init
  2749 ;; This function is called by:
  2750 ;;		_config_app
  2751 ;; This function uses a reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text10
  2755   001E2E                     __ptext10:
  2756                           	callstack 0
  2757   001E2E                     _mutex_init:
  2758                           	callstack 19
  2759   001E2E                     
  2760                           ;sync.c: 56: void mutex_init(mutex_t *m);sync.c: 57: {;sync.c: 58:     sem_init(m, 1);
  2761                           ;register	btemp36
  2762   001E2E  C01D F025          	movff	btemp28,btemp36
  2763                           
  2764                           ;register	btemp37
  2765   001E32  0E01               	movlw	1
  2766   001E34  6E26               	movwf	btemp37^0,c
  2767   001E36  EC54  F00E         	call	_sem_init	;wreg free
  2768   001E3A                     
  2769                           ; _mutex_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  2770   001E3A  0012               	return		;funcret
  2771   001E3C                     __end_of_mutex_init:
  2772                           	callstack 0
  2773                           
  2774 ;; *************** function _create_pipe *****************
  2775 ;; Defined at:
  2776 ;;		line 8 in file "pipe.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;  p               1    btemp28  PTR struct pipe
  2779 ;;		 -> pipe_bateria(33), pipe_sensores(33), 
  2780 ;;  size            1    btemp29  unsigned char 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1  [STACK] void 
  2785 ;; Registers used:
  2786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp6, btemp8, btemp9, btemp2
      +8, btemp29, btemp36, btemp37, btemp44, btemp45, btemp54, btemp55, prodl, prodh, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2792 ;;      Params:         0       0       0       0       0       0       0       0       0
  2793 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2795 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2796 ;;Total ram usage:        0 bytes
  2797 ;; Hardware stack levels used: 1
  2798 ;; Hardware stack levels required when called: 10
  2799 ;; This function calls:
  2800 ;;		_SRAMalloc
  2801 ;;		_sem_init
  2802 ;; This function is called by:
  2803 ;;		_config_app
  2804 ;; This function uses a reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text11
  2808   001B58                     __ptext11:
  2809                           	callstack 0
  2810   001B58                     _create_pipe:
  2811                           	callstack 18
  2812   001B58                     
  2813                           ;pipe.c: 8: void create_pipe(pipe_t *p, uint8_t size);pipe.c: 9: {;pipe.c: 10:     p->pi
      +                          pe_pos_read = 0;
  2814   001B58  501D               	movf	btemp28^0,w,c
  2815   001B5A  6ED9               	movwf	fsr2l,c
  2816   001B5C  6ADA               	clrf	fsr2h,c
  2817   001B5E  6ADF               	clrf	indf2,c
  2818   001B60                     
  2819                           ;pipe.c: 11:     p->pipe_pos_write = 0;
  2820   001B60  501D               	movf	btemp28^0,w,c
  2821   001B62  6ED9               	movwf	fsr2l,c
  2822   001B64  6ADA               	clrf	fsr2h,c
  2823   001B66  0E01               	movlw	1
  2824   001B68  26D9               	addwf	fsr2l,f,c
  2825   001B6A  6ADF               	clrf	indf2,c
  2826   001B6C                     
  2827                           ;pipe.c: 12:     p->pipe_size = size;
  2828   001B6C  501D               	movf	btemp28^0,w,c
  2829   001B6E  6ED9               	movwf	fsr2l,c
  2830   001B70  6ADA               	clrf	fsr2h,c
  2831   001B72  0E04               	movlw	4
  2832   001B74  26D9               	addwf	fsr2l,f,c
  2833   001B76  C01E FFDF          	movff	btemp29,indf2
  2834   001B7A                     
  2835                           ;pipe.c: 13:     p->pipe_data = (char*)SRAMalloc(size);
  2836                           ;register	btemp36
  2837   001B7A  C01E F025          	movff	btemp29,btemp36
  2838   001B7E  EC4E  F008         	call	_SRAMalloc	;wreg free
  2839   001B82  501D               	movf	btemp28^0,w,c
  2840   001B84  6ED9               	movwf	fsr2l,c
  2841   001B86  6ADA               	clrf	fsr2h,c
  2842   001B88  0E02               	movlw	2
  2843   001B8A  26D9               	addwf	fsr2l,f,c
  2844   001B8C  C001 FFDE          	movff	btemp0,postinc2
  2845   001B90  C002 FFDD          	movff	btemp1,postdec2
  2846   001B94                     
  2847                           ;pipe.c: 16:     sem_init(&p->pipe_sem_read, 0);
  2848   001B94  501D               	movf	btemp28^0,w,c
  2849   001B96  0F05               	addlw	5
  2850                           
  2851                           ;register	btemp36
  2852   001B98  6E25               	movwf	btemp36^0,c
  2853                           
  2854                           ;register	btemp37
  2855   001B9A  0E00               	movlw	0
  2856   001B9C  6E26               	movwf	btemp37^0,c
  2857   001B9E  EC54  F00E         	call	_sem_init	;wreg free
  2858   001BA2                     
  2859                           ;pipe.c: 17:     sem_init(&p->pipe_sem_write, size);
  2860   001BA2  501D               	movf	btemp28^0,w,c
  2861   001BA4  0F13               	addlw	19
  2862                           
  2863                           ;register	btemp36
  2864   001BA6  6E25               	movwf	btemp36^0,c
  2865                           
  2866                           ;register	btemp37
  2867   001BA8  C01E F026          	movff	btemp29,btemp37
  2868   001BAC  EC54  F00E         	call	_sem_init	;wreg free
  2869   001BB0                     
  2870                           ; _create_pipe: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2871   001BB0  0012               	return		;funcret
  2872   001BB2                     __end_of_create_pipe:
  2873                           	callstack 0
  2874                           
  2875 ;; *************** function _sem_init *****************
  2876 ;; Defined at:
  2877 ;;		line 9 in file "sync.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  s               1    btemp36  PTR struct semaphore
  2880 ;;		 -> pipe_bateria(33), pipe_sensores(33), mutex_motores(14), 
  2881 ;;  init_value      1    btemp37  unsigned char 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;		None
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1  [STACK] void 
  2886 ;; Registers used:
  2887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp36, btemp37, btemp54, btemp55
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2893 ;;      Params:         0       0       0       0       0       0       0       0       0
  2894 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2896 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2897 ;;Total ram usage:        0 bytes
  2898 ;; Hardware stack levels used: 1
  2899 ;; Hardware stack levels required when called: 8
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_mutex_init
  2904 ;;		_create_pipe
  2905 ;; This function uses a reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text12
  2909   001CA8                     __ptext12:
  2910                           	callstack 0
  2911   001CA8                     _sem_init:
  2912                           	callstack 19
  2913   001CA8                     
  2914                           ;sync.c: 9: void sem_init(sem_t *s, uint8_t init_value);sync.c: 10: {;sync.c: 11:     s-
      +                          >contador = init_value;
  2915   001CA8  5026               	movf	btemp37^0,w,c
  2916   001CAA  6E37               	movwf	btemp54^0,c
  2917   001CAC  6A38               	clrf	btemp55^0,c
  2918   001CAE  5025               	movf	btemp36^0,w,c
  2919   001CB0  6ED9               	movwf	fsr2l,c
  2920   001CB2  6ADA               	clrf	fsr2h,c
  2921   001CB4  C037 FFDE          	movff	btemp54,postinc2
  2922   001CB8  C038 FFDD          	movff	btemp55,postdec2
  2923   001CBC                     
  2924                           ;sync.c: 12:     s->sem_queue_in = 0;
  2925   001CBC  5025               	movf	btemp36^0,w,c
  2926   001CBE  6ED9               	movwf	fsr2l,c
  2927   001CC0  6ADA               	clrf	fsr2h,c
  2928   001CC2  0E0C               	movlw	12
  2929   001CC4  26D9               	addwf	fsr2l,f,c
  2930   001CC6  6ADF               	clrf	indf2,c
  2931   001CC8                     
  2932                           ;sync.c: 13:     s->sem_queue_out = 0;
  2933   001CC8  5025               	movf	btemp36^0,w,c
  2934   001CCA  6ED9               	movwf	fsr2l,c
  2935   001CCC  6ADA               	clrf	fsr2h,c
  2936   001CCE  0E0D               	movlw	13
  2937   001CD0  26D9               	addwf	fsr2l,f,c
  2938   001CD2  6ADF               	clrf	indf2,c
  2939   001CD4                     
  2940                           ; _sem_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  2941   001CD4  0012               	return		;funcret
  2942   001CD6                     __end_of_sem_init:
  2943                           	callstack 0
  2944                           
  2945 ;; *************** function _SRAMalloc *****************
  2946 ;; Defined at:
  2947 ;;		line 12 in file "mem.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  nBytes          1    btemp36  unsigned char 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;  pHeap           2  [STACK] PTR struct _SALLOC
  2952 ;;		 -> _uDynamicHeap(512), 
  2953 ;;  temp            2    wtemp4   PTR struct _SALLOC
  2954 ;;		 -> _uDynamicHeap(512), 
  2955 ;;  segHeader       1  [STACK] struct _SALLOC
  2956 ;;  segLen          1    btemp6   unsigned char 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  2  [STACK] PTR unsigned char 
  2959 ;; Registers used:
  2960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp6, btemp8, btemp9, btemp3
      +6, btemp44, btemp45, btemp54, btemp55, prodl, prodh, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2966 ;;      Params:         0       0       0       0       0       0       0       0       0
  2967 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2968 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2969 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2970 ;;Total ram usage:        0 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 9
  2973 ;; This function calls:
  2974 ;;		__SRAMmerge
  2975 ;; This function is called by:
  2976 ;;		_create_pipe
  2977 ;; This function uses a reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text13
  2981   00109C                     __ptext13:
  2982                           	callstack 0
  2983   00109C                     _SRAMalloc:
  2984                           	callstack 0
  2985                           
  2986                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2987   00109C  52E6               	movf	postinc1,f,c
  2988   00109E  52E6               	movf	postinc1,f,c
  2989   0010A0  52E6               	movf	postinc1,f,c
  2990   0010A2                     
  2991                           ;mem.c: 12: unsigned char * SRAMalloc(unsigned char nBytes);mem.c: 13: {;mem.c: 14:  SAL
      +                          LOC * pHeap;;mem.c: 15:  SALLOC * temp;;mem.c: 16:  SALLOC segHeader;;mem.c: 17:  unsign
      +                          ed char segLen;;mem.c: 20:  if (nBytes > (0x7F - 1)) return (0);
  2992   0010A2  0E7E               	movlw	126
  2993   0010A4  6425               	cpfsgt	btemp36^0,c
  2994   0010A6  EF57  F008         	goto	u691
  2995   0010AA  EF59  F008         	goto	u690
  2996   0010AE                     u691:
  2997   0010AE  EF5F  F008         	goto	l1930
  2998   0010B2                     u690:
  2999   0010B2                     l1926:
  3000   0010B2  0E00               	movlw	0
  3001   0010B4  6E01               	movwf	btemp0^0,c
  3002   0010B6  0E00               	movlw	0
  3003   0010B8  6E02               	movwf	(btemp0+1)^0,c
  3004   0010BA  EF11  F009         	goto	l382
  3005   0010BE                     l1930:
  3006                           
  3007                           ;mem.c: 23:  pHeap = (SALLOC *)_uDynamicHeap;
  3008                           ;stkvar	_pHeap @ sp[(-3)+0]
  3009   0010BE  0E02               	movlw	high __uDynamicHeap
  3010   0010C0  6E01               	movwf	btemp0^0,c
  3011   0010C2  0EFE               	movlw	-2
  3012   0010C4  C001 FFE3          	movff	btemp0,plusw1
  3013   0010C8  0EC5               	movlw	low __uDynamicHeap
  3014   0010CA  6E01               	movwf	btemp0^0,c
  3015   0010CC  0EFD               	movlw	-3
  3016   0010CE  C001 FFE3          	movff	btemp0,plusw1
  3017   0010D2                     l1932:
  3018                           
  3019                           ; _pHeap loaded to wtemp2
  3020                           ;stkvar	_pHeap @ sp[(-3)+0]
  3021                           ;register	wtemp2
  3022   0010D2  0EFD               	movlw	-3
  3023   0010D4  CFE3 F005          	movff	plusw1,btemp4
  3024   0010D8  0F01               	addlw	1
  3025   0010DA  CFE3 F006          	movff	plusw1,btemp5
  3026                           
  3027                           ;mem.c: 26:  {;mem.c: 27:   segHeader = *pHeap;
  3028   0010DE  C005 FFD9          	movff	btemp4,fsr2l
  3029   0010E2  C006 FFDA          	movff	btemp4+1,fsr2h
  3030   0010E6  50DF               	movf	indf2,w,c
  3031   0010E8  6E38               	movwf	btemp55^0,c
  3032                           
  3033                           ;stkvar	_segHeader @ sp[(-3)+2]
  3034   0010EA  0EFF               	movlw	-1
  3035   0010EC  C038 FFE3          	movff	btemp55,plusw1
  3036   0010F0                     
  3037                           ;mem.c: 28:   segLen = segHeader.bits.count - 1;
  3038                           ;stkvar	_segHeader @ sp[(-3)+2]
  3039   0010F0  0EFF               	movlw	255
  3040   0010F2  24E1               	addwf	fsr1l,w,c
  3041   0010F4  6ED9               	movwf	fsr2l,c
  3042   0010F6  0EFF               	movlw	255
  3043   0010F8  20E2               	addwfc	fsr1h,w,c
  3044   0010FA  6EDA               	movwf	fsr2h,c
  3045   0010FC  50DF               	movf	223,w,c
  3046   0010FE  0B7F               	andlw	127
  3047   001100  6E38               	movwf	btemp55^0,c
  3048   001102  0438               	decf	btemp55^0,w,c
  3049   001104  6E07               	movwf	btemp6^0,c
  3050   001106                     
  3051                           ;_pHeap stored from wtemp2
  3052                           ;register	wtemp2
  3053                           ;stkvar	_pHeap @ sp[(-3)+0]
  3054   001106  0EFE               	movlw	-2
  3055   001108  C006 FFE3          	movff	btemp5,plusw1
  3056   00110C  0EFD               	movlw	-3
  3057   00110E  C005 FFE3          	movff	btemp4,plusw1
  3058                           
  3059                           ;mem.c: 31:   if (segHeader.byte == 0) return (0);
  3060                           ;stkvar	_segHeader @ sp[(-3)+2]
  3061   001112  0EFF               	movlw	-1
  3062   001114  50E3               	movf	plusw1,w,c
  3063   001116  A4D8               	btfss	status,2,c
  3064   001118  EF90  F008         	goto	u701
  3065   00111C  EF92  F008         	goto	u700
  3066   001120                     u701:
  3067   001120  EF94  F008         	goto	l1942
  3068   001124                     u700:
  3069   001124  EF59  F008         	goto	l1926
  3070   001128                     l1942:
  3071                           
  3072                           ;mem.c: 34:   if (!(segHeader.bits.alloc))
  3073                           ;stkvar	_segHeader @ sp[(-3)+2]
  3074   001128  0EFF               	movlw	255
  3075   00112A  24E1               	addwf	fsr1l,w,c
  3076   00112C  6ED9               	movwf	fsr2l,c
  3077   00112E  0EFF               	movlw	255
  3078   001130  20E2               	addwfc	fsr1h,w,c
  3079   001132  6EDA               	movwf	fsr2h,c
  3080   001134  BEDF               	btfsc	indf2,7,c
  3081   001136  EF9F  F008         	goto	u711
  3082   00113A  EFA1  F008         	goto	u710
  3083   00113E                     u711:
  3084   00113E  EFBA  F008         	goto	l1948
  3085   001142                     u710:
  3086   001142                     
  3087                           ;mem.c: 35:   {;mem.c: 37:    if (nBytes > segLen)
  3088   001142  5025               	movf	btemp36^0,w,c
  3089   001144  5C07               	subwf	btemp6^0,w,c
  3090   001146  B0D8               	btfsc	status,0,c
  3091   001148  EFA8  F008         	goto	u721
  3092   00114C  EFAA  F008         	goto	u720
  3093   001150                     u721:
  3094   001150  EFCF  F008         	goto	l1950
  3095   001154                     u720:
  3096   001154                     
  3097                           ;mem.c: 38:    {;mem.c: 39:     if (!(_SRAMmerge(pHeap))) pHeap += segHeader.bits.count;
  3098                           ;stkvar	_pHeap @ sp[(-3)+0]
  3099                           ;register	wtemp22
  3100   001154  0EFD               	movlw	-3
  3101   001156  CFE3 F02D          	movff	plusw1,btemp44
  3102   00115A  0F01               	addlw	1
  3103   00115C  CFE3 F02E          	movff	plusw1,btemp45
  3104   001160  EC15  F009         	call	__SRAMmerge	;wreg free
  3105   001164  5001               	movf	btemp0^0,w,c
  3106   001166  A4D8               	btfss	status,2,c
  3107   001168  EFB8  F008         	goto	u731
  3108   00116C  EFBA  F008         	goto	u730
  3109   001170                     u731:
  3110   001170  EF69  F008         	goto	l1932
  3111   001174                     u730:
  3112   001174                     l1948:
  3113                           
  3114                           ;stkvar	_segHeader @ sp[(-3)+2]
  3115   001174  0EFF               	movlw	255
  3116   001176  24E1               	addwf	fsr1l,w,c
  3117   001178  6ED9               	movwf	fsr2l,c
  3118   00117A  0EFF               	movlw	255
  3119   00117C  20E2               	addwfc	fsr1h,w,c
  3120   00117E  6EDA               	movwf	fsr2h,c
  3121   001180  50DF               	movf	223,w,c
  3122   001182  0B7F               	andlw	127
  3123   001184  0D01               	mullw	1
  3124                           
  3125                           ;stkvar	_pHeap @ sp[(-3)+0]
  3126   001186  0EFD               	movlw	253
  3127   001188  24E1               	addwf	fsr1l,w,c
  3128   00118A  6ED9               	movwf	fsr2l,c
  3129   00118C  0EFF               	movlw	255
  3130   00118E  20E2               	addwfc	fsr1h,w,c
  3131   001190  6EDA               	movwf	fsr2h,c
  3132   001192  50F3               	movf	243,w,c
  3133   001194  26DE               	addwf	postinc2,f,c
  3134   001196  50F4               	movf	244,w,c
  3135   001198  22DD               	addwfc	postdec2,f,c
  3136   00119A  EF69  F008         	goto	l1932
  3137   00119E                     l1950:
  3138                           
  3139                           ; _pHeap loaded to wtemp2
  3140                           ;stkvar	_pHeap @ sp[(-3)+0]
  3141                           ;register	wtemp2
  3142   00119E  0EFD               	movlw	-3
  3143   0011A0  CFE3 F005          	movff	plusw1,btemp4
  3144   0011A4  0F01               	addlw	1
  3145   0011A6  CFE3 F006          	movff	plusw1,btemp5
  3146   0011AA  5007               	movf	btemp6^0,w,c
  3147   0011AC  1825               	xorwf	btemp36^0,w,c
  3148   0011AE  A4D8               	btfss	status,2,c
  3149   0011B0  EFDC  F008         	goto	u741
  3150   0011B4  EFDE  F008         	goto	u740
  3151   0011B8                     u741:
  3152   0011B8  EFEB  F008         	goto	l1960
  3153   0011BC                     u740:
  3154   0011BC                     
  3155                           ;mem.c: 43:    {;mem.c: 44:     (*pHeap).bits.alloc = 1;
  3156   0011BC  C005 FFD9          	movff	btemp4,fsr2l
  3157   0011C0  C006 FFDA          	movff	btemp4+1,fsr2h
  3158   0011C4  8EDF               	bsf	indf2,7,c
  3159   0011C6                     
  3160                           ;mem.c: 45:     return ((unsigned char *)(pHeap + 1));
  3161   0011C6  0E01               	movlw	1
  3162   0011C8  2405               	addwf	btemp4^0,w,c
  3163   0011CA  6E01               	movwf	btemp0^0,c
  3164   0011CC  0E00               	movlw	0
  3165   0011CE  2006               	addwfc	(btemp4+1)^0,w,c
  3166   0011D0  6E02               	movwf	btemp1^0,c
  3167   0011D2  EF11  F009         	goto	l382
  3168   0011D6                     l1960:
  3169                           
  3170                           ;mem.c: 49:    {;mem.c: 50:     (*pHeap).byte = nBytes + 0x81;
  3171   0011D6  5025               	movf	btemp36^0,w,c
  3172   0011D8  0F81               	addlw	129
  3173   0011DA  C005 FFD9          	movff	btemp4,fsr2l
  3174   0011DE  C006 FFDA          	movff	btemp4+1,fsr2h
  3175   0011E2  6EDF               	movwf	indf2,c
  3176   0011E4                     
  3177                           ;mem.c: 51:     temp = pHeap + 1;
  3178   0011E4  C005 F037          	movff	btemp4,btemp54
  3179   0011E8  C006 F038          	movff	btemp4+1,btemp55
  3180   0011EC  0E01               	movlw	1
  3181   0011EE  2437               	addwf	btemp54^0,w,c
  3182   0011F0  6E09               	movwf	btemp8^0,c
  3183   0011F2  0E00               	movlw	0
  3184   0011F4  2038               	addwfc	btemp55^0,w,c
  3185   0011F6  6E0A               	movwf	(btemp8+1)^0,c
  3186   0011F8                     
  3187                           ;mem.c: 52:     pHeap += (nBytes + 1);
  3188   0011F8  0E01               	movlw	1
  3189   0011FA  2425               	addwf	btemp36^0,w,c
  3190   0011FC  6E37               	movwf	btemp54^0,c
  3191   0011FE  6A38               	clrf	(btemp54+1)^0,c
  3192   001200  0E00               	movlw	0
  3193   001202  2238               	addwfc	(btemp54+1)^0,f,c
  3194   001204  5037               	movf	btemp54^0,w,c
  3195   001206  2605               	addwf	btemp4^0,f,c
  3196   001208  5038               	movf	btemp55^0,w,c
  3197   00120A  2206               	addwfc	(btemp4+1)^0,f,c
  3198   00120C                     
  3199                           ;mem.c: 53:     (*pHeap).byte = segLen - nBytes;
  3200   00120C  5025               	movf	btemp36^0,w,c
  3201   00120E  5C07               	subwf	btemp6^0,w,c
  3202   001210  C005 FFD9          	movff	btemp4,fsr2l
  3203   001214  C006 FFDA          	movff	btemp4+1,fsr2h
  3204   001218  6EDF               	movwf	indf2,c
  3205   00121A                     
  3206                           ;mem.c: 54:     return ((unsigned char *) temp);
  3207   00121A  C009 F001          	movff	btemp8,btemp0
  3208   00121E  C00A F002          	movff	btemp8+1,btemp1
  3209   001222                     l382:
  3210                           
  3211                           ; _SRAMalloc: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  3212   001222  52E5               	movf	postdec1,f,c
  3213   001224  52E5               	movf	postdec1,f,c
  3214   001226  52E5               	movf	postdec1,f,c
  3215   001228  0012               	return		;funcret
  3216   00122A                     __end_of_SRAMalloc:
  3217                           	callstack 0
  3218                           
  3219 ;; *************** function __SRAMmerge *****************
  3220 ;; Defined at:
  3221 ;;		line 101 in file "mem.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  pSegA           2    wtemp22  PTR struct _SALLOC
  3224 ;;		 -> _uDynamicHeap(512), 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  pSegB           2    wtemp2   PTR struct _SALLOC
  3227 ;;		 -> _uDynamicHeap(512), 
  3228 ;;  uSegB           1  [STACK] struct _SALLOC
  3229 ;;  uSegA           1  [STACK] struct _SALLOC
  3230 ;;  uSum            1  [STACK] struct _SALLOC
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1  [STACK] unsigned char 
  3233 ;; Registers used:
  3234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp4, btemp5, btemp44, btemp45, btemp54, btemp55, pr
      +odl, prodh
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3240 ;;      Params:         0       0       0       0       0       0       0       0       0
  3241 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3243 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3244 ;;Total ram usage:        0 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; Hardware stack levels required when called: 8
  3247 ;; This function calls:
  3248 ;;		Nothing
  3249 ;; This function is called by:
  3250 ;;		_SRAMalloc
  3251 ;; This function uses a reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text14
  3255   00122A                     __ptext14:
  3256                           	callstack 0
  3257   00122A                     __SRAMmerge:
  3258                           	callstack 0
  3259                           
  3260                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3261   00122A  52E6               	movf	postinc1,f,c
  3262   00122C  52E6               	movf	postinc1,f,c
  3263   00122E  52E6               	movf	postinc1,f,c
  3264   001230                     
  3265                           ;mem.c: 101: unsigned char _SRAMmerge(SALLOC * pSegA);mem.c: 102: {;mem.c: 103:  SALLOC 
      +                          * pSegB;;mem.c: 104:  SALLOC uSegA, uSegB, uSum;;mem.c: 106:  pSegB = pSegA + (*pSegA).b
      +                          yte;
  3266   001230  C02D FFD9          	movff	btemp44,fsr2l
  3267   001234  C02E FFDA          	movff	btemp44+1,fsr2h
  3268   001238  50DF               	movf	indf2,w,c
  3269   00123A  6E38               	movwf	btemp55^0,c
  3270   00123C  5038               	movf	btemp55^0,w,c
  3271   00123E  242D               	addwf	btemp44^0,w,c
  3272   001240  6E05               	movwf	btemp4^0,c
  3273   001242  0E00               	movlw	0
  3274   001244  202E               	addwfc	(btemp44+1)^0,w,c
  3275   001246  6E06               	movwf	(btemp4+1)^0,c
  3276   001248                     
  3277                           ;mem.c: 108:  uSegA = *pSegA;
  3278   001248  C02D FFD9          	movff	btemp44,fsr2l
  3279   00124C  C02E FFDA          	movff	btemp44+1,fsr2h
  3280   001250  50DF               	movf	indf2,w,c
  3281   001252  6E38               	movwf	btemp55^0,c
  3282                           
  3283                           ;stkvar	_uSegA @ sp[(-3)+1]
  3284   001254  0EFE               	movlw	-2
  3285   001256  C038 FFE3          	movff	btemp55,plusw1
  3286   00125A                     
  3287                           ;mem.c: 109:  uSegB = *pSegB;
  3288   00125A  C005 FFD9          	movff	btemp4,fsr2l
  3289   00125E  C006 FFDA          	movff	btemp4+1,fsr2h
  3290   001262  50DF               	movf	indf2,w,c
  3291   001264  6E38               	movwf	btemp55^0,c
  3292                           
  3293                           ;stkvar	_uSegB @ sp[(-3)+0]
  3294   001266  0EFD               	movlw	-3
  3295   001268  C038 FFE3          	movff	btemp55,plusw1
  3296   00126C                     
  3297                           ;mem.c: 112:  if (uSegB.byte == 0) return (0);
  3298                           ;stkvar	_uSegB @ sp[(-3)+0]
  3299   00126C  0EFD               	movlw	-3
  3300   00126E  50E3               	movf	plusw1,w,c
  3301   001270  A4D8               	btfss	status,2,c
  3302   001272  EF3D  F009         	goto	u641
  3303   001276  EF3F  F009         	goto	u640
  3304   00127A                     u641:
  3305   00127A  EF43  F009         	goto	l1882
  3306   00127E                     u640:
  3307   00127E                     l1878:
  3308   00127E  0E00               	movlw	0
  3309   001280  6E01               	movwf	btemp0^0,c
  3310   001282  EFAB  F009         	goto	l408
  3311   001286                     l1882:
  3312                           
  3313                           ;mem.c: 113:  if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  3314                           ;stkvar	_uSegA @ sp[(-3)+1]
  3315   001286  0EFE               	movlw	254
  3316   001288  24E1               	addwf	fsr1l,w,c
  3317   00128A  6ED9               	movwf	fsr2l,c
  3318   00128C  0EFF               	movlw	255
  3319   00128E  20E2               	addwfc	fsr1h,w,c
  3320   001290  6EDA               	movwf	fsr2h,c
  3321   001292  BEDF               	btfsc	indf2,7,c
  3322   001294  EF4E  F009         	goto	u651
  3323   001298  EF50  F009         	goto	u650
  3324   00129C                     u651:
  3325   00129C  EF3F  F009         	goto	l1878
  3326   0012A0                     u650:
  3327   0012A0                     
  3328                           ;stkvar	_uSegB @ sp[(-3)+0]
  3329   0012A0  0EFD               	movlw	253
  3330   0012A2  24E1               	addwf	fsr1l,w,c
  3331   0012A4  6ED9               	movwf	fsr2l,c
  3332   0012A6  0EFF               	movlw	255
  3333   0012A8  20E2               	addwfc	fsr1h,w,c
  3334   0012AA  6EDA               	movwf	fsr2h,c
  3335   0012AC  AEDF               	btfss	indf2,7,c
  3336   0012AE  EF5B  F009         	goto	u661
  3337   0012B2  EF5D  F009         	goto	u660
  3338   0012B6                     u661:
  3339   0012B6  EF5F  F009         	goto	l1890
  3340   0012BA                     u660:
  3341   0012BA  EF3F  F009         	goto	l1878
  3342   0012BE                     l1890:
  3343                           
  3344                           ;mem.c: 114:  if (uSegA.bits.count == 0x7F) return (0);
  3345                           ;stkvar	_uSegA @ sp[(-3)+1]
  3346   0012BE  0EFE               	movlw	254
  3347   0012C0  24E1               	addwf	fsr1l,w,c
  3348   0012C2  6ED9               	movwf	fsr2l,c
  3349   0012C4  0EFF               	movlw	255
  3350   0012C6  20E2               	addwfc	fsr1h,w,c
  3351   0012C8  6EDA               	movwf	fsr2h,c
  3352   0012CA  50DF               	movf	223,w,c
  3353   0012CC  0B7F               	andlw	127
  3354   0012CE  0A7F               	xorlw	127
  3355   0012D0  A4D8               	btfss	status,2,c
  3356   0012D2  EF6D  F009         	goto	u671
  3357   0012D6  EF6F  F009         	goto	u670
  3358   0012DA                     u671:
  3359   0012DA  EF71  F009         	goto	l1896
  3360   0012DE                     u670:
  3361   0012DE  EF3F  F009         	goto	l1878
  3362   0012E2                     l1896:
  3363                           
  3364                           ;mem.c: 116:  uSum.byte = uSegA.byte + uSegB.byte;
  3365                           ;stkvar	_uSegB @ sp[(-3)+0]
  3366   0012E2  0EFD               	movlw	-3
  3367   0012E4  CFE3 F038          	movff	plusw1,btemp55
  3368                           
  3369                           ;stkvar	_uSegA @ sp[(-3)+1]
  3370   0012E8  0EFE               	movlw	-2
  3371   0012EA  50E3               	movf	plusw1,w,c
  3372   0012EC  2438               	addwf	btemp55^0,w,c
  3373   0012EE  6E37               	movwf	btemp54^0,c
  3374                           
  3375                           ;stkvar	_uSum @ sp[(-3)+2]
  3376   0012F0  0EFF               	movlw	-1
  3377   0012F2  C037 FFE3          	movff	btemp54,plusw1
  3378   0012F6                     
  3379                           ;mem.c: 119:  if ((uSum.byte) > 0x7F)
  3380                           ;stkvar	_uSum @ sp[(-3)+2]
  3381   0012F6  0EFF               	movlw	-1
  3382   0012F8  CFE3 F001          	movff	plusw1,btemp0
  3383   0012FC  0E7F               	movlw	127
  3384   0012FE  6401               	cpfsgt	btemp0^0,c
  3385   001300  EF84  F009         	goto	u681
  3386   001304  EF86  F009         	goto	u680
  3387   001308                     u681:
  3388   001308  EFA2  F009         	goto	l1914
  3389   00130C                     u680:
  3390   00130C                     
  3391                           ;mem.c: 120:  {;mem.c: 121:   (*pSegA).byte = 0x7F;
  3392   00130C  C02D FFD9          	movff	btemp44,fsr2l
  3393   001310  C02E FFDA          	movff	btemp44+1,fsr2h
  3394   001314  0E7F               	movlw	127
  3395   001316  6EDF               	movwf	indf2,c
  3396   001318                     
  3397                           ;mem.c: 122:   pSegA += 0x7F;
  3398   001318  0E7F               	movlw	127
  3399   00131A  262D               	addwf	btemp44^0,f,c
  3400   00131C  0E00               	movlw	0
  3401   00131E  222E               	addwfc	(btemp44+1)^0,f,c
  3402   001320                     
  3403                           ;mem.c: 123:   pSegB += uSegB.byte;
  3404                           ;stkvar	_uSegB @ sp[(-3)+0]
  3405   001320  0EFD               	movlw	-3
  3406   001322  50E3               	movf	plusw1,w,c
  3407   001324  0D01               	mullw	1
  3408   001326  50F3               	movf	243,w,c
  3409   001328  2605               	addwf	btemp4^0,f,c
  3410   00132A  50F4               	movf	244,w,c
  3411   00132C  2206               	addwfc	(btemp4+1)^0,f,c
  3412   00132E                     
  3413                           ;mem.c: 124:   (*pSegA).byte = pSegB - pSegA;
  3414   00132E  502D               	movf	wtemp22^0,w,c
  3415   001330  5C05               	subwf	wtemp2^0,w,c
  3416   001332  C02D FFD9          	movff	btemp44,fsr2l
  3417   001336  C02E FFDA          	movff	btemp44+1,fsr2h
  3418   00133A  6EDF               	movwf	indf2,c
  3419   00133C                     
  3420                           ;mem.c: 126:   return (0x7F);
  3421   00133C  0E7F               	movlw	127
  3422   00133E  6E01               	movwf	btemp0^0,c
  3423   001340  EFAB  F009         	goto	l408
  3424   001344                     l1914:
  3425                           
  3426                           ;mem.c: 130:  {;mem.c: 131:   return ((*pSegA).byte = uSum.byte);
  3427                           ;stkvar	_uSum @ sp[(-3)+2]
  3428   001344  C02D FFD9          	movff	btemp44,fsr2l
  3429   001348  C02E FFDA          	movff	btemp44+1,fsr2h
  3430   00134C  0EFF               	movlw	-1
  3431   00134E  CFE3 FFDF          	movff	plusw1,indf2
  3432   001352  50DF               	movf	indf2,w,c
  3433   001354  6E01               	movwf	btemp0^0,c
  3434   001356                     l408:
  3435                           
  3436                           ; __SRAMmerge: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3437   001356  52E5               	movf	postdec1,f,c
  3438   001358  52E5               	movf	postdec1,f,c
  3439   00135A  52E5               	movf	postdec1,f,c
  3440   00135C  0012               	return		;funcret
  3441   00135E                     __end_of__SRAMmerge:
  3442                           	callstack 0
  3443                           
  3444 ;; *************** function _config_adc *****************
  3445 ;; Defined at:
  3446 ;;		line 17 in file "io.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  tad             1    btemp28  enum E3374
  3449 ;;  cclk            1    btemp29  enum E3384
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1  [STACK] void 
  3454 ;; Registers used:
  3455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp28, btemp29, btemp55
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3461 ;;      Params:         0       0       0       0       0       0       0       0       0
  3462 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3464 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3465 ;;Total ram usage:        0 bytes
  3466 ;; Hardware stack levels used: 1
  3467 ;; Hardware stack levels required when called: 8
  3468 ;; This function calls:
  3469 ;;		Nothing
  3470 ;; This function is called by:
  3471 ;;		_config_app
  3472 ;; This function uses a reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text15
  3476   001DB0                     __ptext15:
  3477                           	callstack 0
  3478   001DB0                     _config_adc:
  3479                           	callstack 20
  3480   001DB0                     
  3481                           ;io.c: 17: void config_adc(tad_t tad, conversion_clock_t cclk);io.c: 18: {;io.c: 19:    
      +                           ADCON2bits.ACQT = tad;
  3482   001DB0  C01D F038          	movff	btemp28,btemp55
  3483   001DB4  4638               	rlncf	btemp55^0,f,c
  3484   001DB6  4638               	rlncf	btemp55^0,f,c
  3485   001DB8  4638               	rlncf	btemp55^0,f,c
  3486   001DBA  50C0               	movf	192,w,c	;volatile
  3487   001DBC  1838               	xorwf	btemp55^0,w,c
  3488   001DBE  0BC7               	andlw	-57
  3489   001DC0  1838               	xorwf	btemp55^0,w,c
  3490   001DC2  6EC0               	movwf	192,c	;volatile
  3491   001DC4                     
  3492                           ;io.c: 20:     ADCON2bits.ADCS = cclk;
  3493   001DC4  50C0               	movf	192,w,c	;volatile
  3494   001DC6  181E               	xorwf	btemp29^0,w,c
  3495   001DC8  0BF8               	andlw	-8
  3496   001DCA  181E               	xorwf	btemp29^0,w,c
  3497   001DCC  6EC0               	movwf	192,c	;volatile
  3498   001DCE                     
  3499                           ;io.c: 21:     ADCON2bits.ADFM = 1;
  3500   001DCE  8EC0               	bsf	192,7,c	;volatile
  3501   001DD0                     
  3502                           ; _config_adc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3503   001DD0  0012               	return		;funcret
  3504   001DD2                     __end_of_config_adc:
  3505                           	callstack 0
  3506                           
  3507 ;; *************** function _adc_go *****************
  3508 ;; Defined at:
  3509 ;;		line 24 in file "io.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  go_done         2    wtemp14  int 
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;		None
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1  [STACK] void 
  3516 ;; Registers used:
  3517 ;;		wreg, fsr1l, fsr1h, btemp28, btemp29
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3523 ;;      Params:         0       0       0       0       0       0       0       0       0
  3524 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3526 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3527 ;;Total ram usage:        0 bytes
  3528 ;; Hardware stack levels used: 1
  3529 ;; Hardware stack levels required when called: 8
  3530 ;; This function calls:
  3531 ;;		Nothing
  3532 ;; This function is called by:
  3533 ;;		_config_app
  3534 ;; This function uses a reentrant model
  3535 ;;
  3536                           
  3537                           	psect	text16
  3538   001E56                     __ptext16:
  3539                           	callstack 0
  3540   001E56                     _adc_go:
  3541                           	callstack 20
  3542   001E56                     
  3543                           ;io.c: 24: void adc_go(int go_done);io.c: 25: {;io.c: 26:     ADCON0bits.ADON = go_done;
  3544   001E56  B01D               	btfsc	wtemp14^0,0,c
  3545   001E58  D002               	bra	u755
  3546   001E5A  90C2               	bcf	194,0,c	;volatile
  3547   001E5C  D001               	bra	u756
  3548   001E5E                     u755:
  3549   001E5E  80C2               	bsf	194,0,c	;volatile
  3550   001E60                     u756:
  3551   001E60                     
  3552                           ; _adc_go: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsiz
      +                          e = 0, vargsize = 0
  3553   001E60  0012               	return		;funcret
  3554   001E62                     __end_of_adc_go:
  3555                           	callstack 0
  3556                           
  3557 ;; *************** function _conf_timer_0 *****************
  3558 ;; Defined at:
  3559 ;;		line 10 in file "hardware.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;		None
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;		None
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  1  [STACK] void 
  3566 ;; Registers used:
  3567 ;;		wreg, status,2
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3573 ;;      Params:         0       0       0       0       0       0       0       0       0
  3574 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3575 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3576 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3577 ;;Total ram usage:        0 bytes
  3578 ;; Hardware stack levels used: 1
  3579 ;; Hardware stack levels required when called: 8
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_os_start
  3584 ;; This function uses a reentrant model
  3585 ;;
  3586                           
  3587                           	psect	text17
  3588   001DD2                     __ptext17:
  3589                           	callstack 0
  3590   001DD2                     _conf_timer_0:
  3591                           	callstack 21
  3592   001DD2                     
  3593                           ;hardware.c: 13:     T0CONbits.T0CS = 0;
  3594   001DD2  9AD5               	bcf	213,5,c	;volatile
  3595                           
  3596                           ;hardware.c: 14:     T0CONbits.PSA = 0;
  3597   001DD4  96D5               	bcf	213,3,c	;volatile
  3598   001DD6                     
  3599                           ;hardware.c: 15:     T0CONbits.T0PS = 0b110;
  3600   001DD6  50D5               	movf	213,w,c	;volatile
  3601   001DD8  0BF8               	andlw	-8
  3602   001DDA  0906               	iorlw	6
  3603   001DDC  6ED5               	movwf	213,c	;volatile
  3604                           
  3605                           ;hardware.c: 16:     TMR0 = 128;
  3606   001DDE  6AD7               	clrf	215,c	;volatile
  3607   001DE0  0E80               	movlw	128
  3608   001DE2  6ED6               	movwf	214,c	;volatile
  3609   001DE4                     
  3610                           ;hardware.c: 17:     INTCONbits.TMR0IE = 1;
  3611   001DE4  8AF2               	bsf	242,5,c	;volatile
  3612   001DE6                     
  3613                           ;hardware.c: 18:     INTCONbits.TMR0IF = 0;
  3614   001DE6  94F2               	bcf	242,2,c	;volatile
  3615   001DE8                     
  3616                           ;hardware.c: 19:     T0CONbits.TMR0ON = 1;
  3617   001DE8  8ED5               	bsf	213,7,c	;volatile
  3618   001DEA                     
  3619                           ; _conf_timer_0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3620   001DEA  0012               	return		;funcret
  3621   001DEC                     __end_of_conf_timer_0:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function _conf_interrupts *****************
  3625 ;; Defined at:
  3626 ;;		line 22 in file "hardware.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;		None
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1  [STACK] void 
  3633 ;; Registers used:
  3634 ;;		None
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3640 ;;      Params:         0       0       0       0       0       0       0       0       0
  3641 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3643 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3644 ;;Total ram usage:        0 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; Hardware stack levels required when called: 8
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		_os_start
  3651 ;; This function uses a reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text18
  3655   001E76                     __ptext18:
  3656                           	callstack 0
  3657   001E76                     _conf_interrupts:
  3658                           	callstack 21
  3659   001E76                     
  3660                           ;hardware.c: 24:     INTCONbits.PEIE = 1;
  3661   001E76  8CF2               	bsf	242,6,c	;volatile
  3662   001E78                     
  3663                           ; _conf_interrupts: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  3664   001E78  0012               	return		;funcret
  3665   001E7A                     __end_of_conf_interrupts:
  3666                           	callstack 0
  3667                           
  3668 ;; *************** function _SRAMInitHeap *****************
  3669 ;; Defined at:
  3670 ;;		line 73 in file "mem.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  count           2    wtemp2   unsigned int 
  3675 ;;  pHeap           2  [STACK] PTR unsigned char 
  3676 ;;		 -> _uDynamicHeap(512), 
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  1  [STACK] void 
  3679 ;; Registers used:
  3680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp4, btemp5, btemp20, btemp21
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3686 ;;      Params:         0       0       0       0       0       0       0       0       0
  3687 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3688 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3689 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3690 ;;Total ram usage:        0 bytes
  3691 ;; Hardware stack levels used: 1
  3692 ;; Hardware stack levels required when called: 8
  3693 ;; This function calls:
  3694 ;;		Nothing
  3695 ;; This function is called by:
  3696 ;;		_os_start
  3697 ;; This function uses a reentrant model
  3698 ;;
  3699                           
  3700                           	psect	text19
  3701   00196E                     __ptext19:
  3702                           	callstack 0
  3703   00196E                     _SRAMInitHeap:
  3704                           	callstack 0
  3705                           
  3706                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3707   00196E  52E6               	movf	postinc1,f,c
  3708   001970  52E6               	movf	postinc1,f,c
  3709   001972                     
  3710                           ;mem.c: 75:  unsigned char * pHeap;;mem.c: 76:  unsigned int count;;mem.c: 78:  pHeap = 
      +                          _uDynamicHeap;
  3711                           ;stkvar	_pHeap @ sp[(-2)+0]
  3712   001972  0E02               	movlw	high __uDynamicHeap
  3713   001974  6E01               	movwf	btemp0^0,c
  3714   001976  0EFF               	movlw	-1
  3715   001978  C001 FFE3          	movff	btemp0,plusw1
  3716   00197C  0EC5               	movlw	low __uDynamicHeap
  3717   00197E  6E01               	movwf	btemp0^0,c
  3718   001980  0EFE               	movlw	-2
  3719   001982  C001 FFE3          	movff	btemp0,plusw1
  3720   001986                     
  3721                           ;mem.c: 79:  count = (0x200 - 1);
  3722   001986  0E01               	movlw	1
  3723   001988  6E06               	movwf	(btemp4+1)^0,c
  3724   00198A  6805               	setf	btemp4^0,c
  3725   00198C                     l1482:
  3726                           
  3727                           ; _pHeap loaded to wtemp10
  3728                           ;stkvar	_pHeap @ sp[(-2)+0]
  3729                           ;register	wtemp10
  3730   00198C  0EFE               	movlw	-2
  3731   00198E  CFE3 F015          	movff	plusw1,btemp20
  3732   001992  0F01               	addlw	1
  3733   001994  CFE3 F016          	movff	plusw1,btemp21
  3734                           
  3735                           ;mem.c: 82:  {;mem.c: 84:   if (count > 0x7F)
  3736   001998  5006               	movf	(btemp4+1)^0,w,c
  3737   00199A  E109               	bnz	u200
  3738   00199C  0E80               	movlw	128
  3739   00199E  5C05               	subwf	btemp4^0,w,c
  3740   0019A0  A0D8               	btfss	status,0,c
  3741   0019A2  EFD5  F00C         	goto	u201
  3742   0019A6  EFD7  F00C         	goto	u200
  3743   0019AA                     u201:
  3744   0019AA  EFED  F00C         	goto	l1490
  3745   0019AE                     u200:
  3746   0019AE                     
  3747                           ;mem.c: 85:   {;mem.c: 86:    *pHeap = 0x7F;
  3748   0019AE  C015 FFD9          	movff	btemp20,fsr2l
  3749   0019B2  C016 FFDA          	movff	btemp20+1,fsr2h
  3750   0019B6  0E7F               	movlw	127
  3751   0019B8  6EDF               	movwf	indf2,c
  3752   0019BA                     
  3753                           ;mem.c: 87:    pHeap += 0x7F;
  3754   0019BA  0E7F               	movlw	127
  3755   0019BC  2615               	addwf	btemp20^0,f,c
  3756   0019BE  0E00               	movlw	0
  3757   0019C0  2216               	addwfc	(btemp20+1)^0,f,c
  3758                           
  3759                           ;_pHeap stored from wtemp10
  3760                           ;register	wtemp10
  3761                           ;stkvar	_pHeap @ sp[(-2)+0]
  3762   0019C2  0EFF               	movlw	-1
  3763   0019C4  C016 FFE3          	movff	btemp21,plusw1
  3764   0019C8  0EFE               	movlw	-2
  3765   0019CA  C015 FFE3          	movff	btemp20,plusw1
  3766   0019CE                     
  3767                           ;mem.c: 88:    count = count - 0x7F;
  3768   0019CE  0E81               	movlw	129
  3769   0019D0  2605               	addwf	btemp4^0,f,c
  3770   0019D2  0EFF               	movlw	255
  3771   0019D4  2206               	addwfc	(btemp4+1)^0,f,c
  3772                           
  3773                           ;mem.c: 89:   }
  3774   0019D6  EFC6  F00C         	goto	l1482
  3775   0019DA                     l1490:
  3776                           
  3777                           ;mem.c: 92:   {;mem.c: 93:    *pHeap = count;
  3778   0019DA  C015 FFD9          	movff	btemp20,fsr2l
  3779   0019DE  C016 FFDA          	movff	btemp20+1,fsr2h
  3780   0019E2  C005 FFDF          	movff	wtemp2,indf2
  3781   0019E6                     
  3782                           ;mem.c: 94:    *(pHeap + count) = 0;
  3783   0019E6  5005               	movf	btemp4^0,w,c
  3784   0019E8  2415               	addwf	btemp20^0,w,c
  3785   0019EA  6ED9               	movwf	fsr2l,c
  3786   0019EC  5006               	movf	(btemp4+1)^0,w,c
  3787   0019EE  2016               	addwfc	(btemp20+1)^0,w,c
  3788   0019F0  6EDA               	movwf	fsr2h,c
  3789   0019F2  6ADF               	clrf	indf2,c
  3790   0019F4                     
  3791                           ; _SRAMInitHeap: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3792   0019F4  52E5               	movf	postdec1,f,c
  3793   0019F6  52E5               	movf	postdec1,f,c
  3794   0019F8  0012               	return		;funcret
  3795   0019FA                     __end_of_SRAMInitHeap:
  3796                           	callstack 0
  3797                           
  3798 ;; *************** function _os_config *****************
  3799 ;; Defined at:
  3800 ;;		line 13 in file "kernel.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;		None
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;		None
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1  [STACK] void 
  3807 ;; Registers used:
  3808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp20, btemp21, btemp22, btemp23, prodl, prodh
      +, cstack
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3814 ;;      Params:         0       0       0       0       0       0       0       0       0
  3815 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3816 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3817 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3818 ;;Total ram usage:        0 bytes
  3819 ;; Hardware stack levels used: 1
  3820 ;; Hardware stack levels required when called: 9
  3821 ;; This function calls:
  3822 ;;		_os_create_task
  3823 ;; This function is called by:
  3824 ;;		_main
  3825 ;; This function uses a reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text20
  3829   001D00                     __ptext20:
  3830                           	callstack 0
  3831   001D00                     _os_config:
  3832                           	callstack 21
  3833   001D00                     
  3834                           ;kernel.c: 15:     readyQueue.readyQueueSize = 0;
  3835   001D00  0E00               	movlw	0
  3836   001D02  CFE8 F2C2          	movff	wreg,_readyQueue+530
  3837                           
  3838                           ;kernel.c: 16:     readyQueue.taskRunning = 0;
  3839   001D06  0E00               	movlw	0
  3840   001D08  CFE8 F2C3          	movff	wreg,_readyQueue+531
  3841   001D0C  0E00               	movlw	0
  3842   001D0E  CFE8 F2C4          	movff	wreg,_readyQueue+532
  3843   001D12                     
  3844                           ;kernel.c: 19:     os_create_task(0, os_idle_task, 1);
  3845                           ;register	btemp20
  3846   001D12  0E00               	movlw	0
  3847   001D14  6E15               	movwf	btemp20^0,c
  3848                           
  3849                           ;register	btemp21
  3850   001D16  0E01               	movlw	1
  3851   001D18  6E16               	movwf	btemp21^0,c
  3852                           
  3853                           ;register	wtemp11
  3854   001D1A  0ED6               	movlw	low _os_idle_task
  3855   001D1C  6E17               	movwf	wtemp11^0,c
  3856   001D1E  0E1C               	movlw	high _os_idle_task
  3857   001D20  6E18               	movwf	btemp23^0,c
  3858   001D22  ECC4  F00B         	call	_os_create_task	;# 
  3859   001D26                     
  3860                           ; _os_config: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  3861   001D26  0012               	return		;funcret
  3862   001D28                     __end_of_os_config:
  3863                           	callstack 0
  3864                           
  3865 ;; *************** function _os_create_task *****************
  3866 ;; Defined at:
  3867 ;;		line 7 in file "syscall.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  id              1    btemp20  unsigned char 
  3870 ;;  task_f          2    wtemp11  PTR FTN()void 
  3871 ;;		 -> os_idle_task(1), tarefa_monitoramento_bateria(1), tarefa_leitura_sensores(1), tarefa_controle_motores(1), 
  3872 ;;		 -> tarefa_controle_central(1), 
  3873 ;;  prior           1    btemp21  unsigned char 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  new_task      106  [STACK] struct tcb
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1  [STACK] void 
  3878 ;; Registers used:
  3879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp20, btemp21, btemp22, btemp23, prodl, prodh
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3885 ;;      Params:         0       0       0       0       0       0       0       0       0
  3886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3887 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3888 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3889 ;;Total ram usage:        0 bytes
  3890 ;; Hardware stack levels used: 1
  3891 ;; Hardware stack levels required when called: 8
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_main
  3896 ;;		_os_config
  3897 ;; This function uses a reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text21
  3901   001788                     __ptext21:
  3902                           	callstack 0
  3903   001788                     _os_create_task:
  3904                           	callstack 0
  3905                           
  3906                           ; autosize = 106, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 v
      +                          argsize = 0, retsize = 0 argfudge = 0
  3907   001788  0E6A               	movlw	106
  3908   00178A  26E1               	addwf	fsr1l,f,c
  3909   00178C  0E00               	movlw	0
  3910   00178E  22E2               	addwfc	fsr1h,f,c
  3911   001790                     
  3912                           ;syscall.c: 7: void os_create_task(uint8_t id, f_ptr task_f, uint8_t prior);syscall.c: 8
      +                          : {;syscall.c: 9:     tcb_t new_task;;syscall.c: 12:     new_task.task_id = id;
  3913                           ;stkvar	_new_task @ sp[(-106)+0]
  3914   001790  0E96               	movlw	-106
  3915   001792  C015 FFE3          	movff	btemp20,plusw1
  3916   001796                     
  3917                           ;syscall.c: 13:     new_task.task_func = task_f;
  3918                           ;stkvar	_new_task @ sp[(-106)+0]
  3919   001796  0E97               	movlw	151
  3920   001798  24E1               	addwf	fsr1l,w,c
  3921   00179A  6ED9               	movwf	fsr2l,c
  3922   00179C  0EFF               	movlw	255
  3923   00179E  20E2               	addwfc	fsr1h,w,c
  3924   0017A0  6EDA               	movwf	fsr2h,c
  3925   0017A2  C017 FFDE          	movff	btemp22,postinc2
  3926   0017A6  C018 FFDD          	movff	btemp22+1,postdec2
  3927   0017AA                     
  3928                           ;syscall.c: 14:     new_task.task_priority = prior;
  3929                           ;stkvar	_new_task @ sp[(-106)+0]
  3930   0017AA  0E9A               	movlw	154
  3931   0017AC  24E1               	addwf	fsr1l,w,c
  3932   0017AE  6ED9               	movwf	fsr2l,c
  3933   0017B0  0EFF               	movlw	255
  3934   0017B2  20E2               	addwfc	fsr1h,w,c
  3935   0017B4  6EDA               	movwf	fsr2h,c
  3936   0017B6  C016 FFDF          	movff	btemp21,indf2
  3937   0017BA                     
  3938                           ;syscall.c: 15:     new_task.task_state = READY;
  3939                           ;stkvar	_new_task @ sp[(-106)+0]
  3940   0017BA  0E99               	movlw	153
  3941   0017BC  24E1               	addwf	fsr1l,w,c
  3942   0017BE  6ED9               	movwf	fsr2l,c
  3943   0017C0  0EFF               	movlw	255
  3944   0017C2  20E2               	addwfc	fsr1h,w,c
  3945   0017C4  6EDA               	movwf	fsr2h,c
  3946   0017C6  6ADF               	clrf	indf2,c
  3947   0017C8                     
  3948                           ;syscall.c: 18:     new_task.BSR_reg = 0;
  3949                           ;stkvar	_new_task @ sp[(-106)+0]
  3950   0017C8  0E9C               	movlw	156
  3951   0017CA  24E1               	addwf	fsr1l,w,c
  3952   0017CC  6ED9               	movwf	fsr2l,c
  3953   0017CE  0EFF               	movlw	255
  3954   0017D0  20E2               	addwfc	fsr1h,w,c
  3955   0017D2  6EDA               	movwf	fsr2h,c
  3956   0017D4  6ADF               	clrf	indf2,c
  3957   0017D6                     
  3958                           ;syscall.c: 19:     new_task.STATUS_reg = 0;
  3959                           ;stkvar	_new_task @ sp[(-106)+0]
  3960   0017D6  0E9E               	movlw	158
  3961   0017D8  24E1               	addwf	fsr1l,w,c
  3962   0017DA  6ED9               	movwf	fsr2l,c
  3963   0017DC  0EFF               	movlw	255
  3964   0017DE  20E2               	addwfc	fsr1h,w,c
  3965   0017E0  6EDA               	movwf	fsr2h,c
  3966   0017E2  6ADF               	clrf	indf2,c
  3967   0017E4                     
  3968                           ;syscall.c: 20:     new_task.WORK_reg = 0;
  3969                           ;stkvar	_new_task @ sp[(-106)+0]
  3970   0017E4  0E9D               	movlw	157
  3971   0017E6  24E1               	addwf	fsr1l,w,c
  3972   0017E8  6ED9               	movwf	fsr2l,c
  3973   0017EA  0EFF               	movlw	255
  3974   0017EC  20E2               	addwfc	fsr1h,w,c
  3975   0017EE  6EDA               	movwf	fsr2h,c
  3976   0017F0  6ADF               	clrf	indf2,c
  3977   0017F2                     
  3978                           ;syscall.c: 21:     new_task.task_sp = 0;
  3979                           ;stkvar	_new_task @ sp[(-106)+0]
  3980   0017F2  0EFF               	movlw	255
  3981   0017F4  24E1               	addwf	fsr1l,w,c
  3982   0017F6  6ED9               	movwf	fsr2l,c
  3983   0017F8  0EFF               	movlw	255
  3984   0017FA  20E2               	addwfc	fsr1h,w,c
  3985   0017FC  6EDA               	movwf	fsr2h,c
  3986   0017FE  6ADF               	clrf	indf2,c
  3987   001800                     
  3988                           ;syscall.c: 24:     readyQueue.readyQueue[readyQueue.readyQueueSize++] = new_task;
  3989                           ;stkvar	_new_task @ sp[(-106)+0]
  3990   001800  0E96               	movlw	150
  3991   001802  24E1               	addwf	fsr1l,w,c
  3992   001804  6ED9               	movwf	fsr2l,c
  3993   001806  0EFF               	movlw	255
  3994   001808  20E2               	addwfc	fsr1h,w,c
  3995   00180A  6EDA               	movwf	fsr2h,c
  3996   00180C  EE02  F0C2         	lfsr	0,_readyQueue+530
  3997   001810  50EF               	movf	indf0,w,c
  3998   001812  0D6A               	mullw	106
  3999   001814  0EB0               	movlw	low _readyQueue
  4000   001816  24F3               	addwf	243,w,c
  4001   001818  6EE9               	movwf	fsr0l,c
  4002   00181A  0E00               	movlw	high _readyQueue
  4003   00181C  20F4               	addwfc	prodh,w,c
  4004   00181E  6EEA               	movwf	fsr0h,c
  4005   001820  0E69               	movlw	105
  4006   001822                     u191:
  4007   001822  CFDB FFEB          	movff	plusw2,plusw0
  4008   001826  06E8               	decf	wreg,f,c
  4009   001828  E2FC               	bc	u191
  4010   00182A  C2C2  FFE8         	movff	_readyQueue+530,wreg
  4011   00182E  0F01               	addlw	1
  4012   001830  CFE8 F2C2          	movff	wreg,_readyQueue+530
  4013   001834                     
  4014                           ; _os_create_task: autosize = 106, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  4015   001834  0E96               	movlw	150
  4016   001836  26E1               	addwf	fsr1l,f,c
  4017   001838  0EFF               	movlw	255
  4018   00183A  22E2               	addwfc	fsr1h,f,c
  4019   00183C  0012               	return		;funcret
  4020   00183E                     __end_of_os_create_task:
  4021                           	callstack 0
  4022                           
  4023 ;; *************** function _os_idle_task *****************
  4024 ;; Defined at:
  4025 ;;		line 47 in file "kernel.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;		None
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;		None
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1  [STACK] void 
  4032 ;; Registers used:
  4033 ;;		wreg, status,2, status,0, btemp55
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4039 ;;      Params:         0       0       0       0       0       0       0       0       0
  4040 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4042 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4043 ;;Total ram usage:        0 bytes
  4044 ;; Hardware stack levels used: 1
  4045 ;; Hardware stack levels required when called: 3
  4046 ;; This function calls:
  4047 ;;		Nothing
  4048 ;; This function is called by:
  4049 ;;		_os_config
  4050 ;; This function uses a reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text22
  4054   001CD6                     __ptext22:
  4055                           	callstack 0
  4056   001CD6                     _os_idle_task:
  4057                           	callstack 22
  4058   001CD6                     
  4059                           ;kernel.c: 51:     TRISDbits.RD4 = 0;
  4060   001CD6  9895               	bcf	149,4,c	;volatile
  4061   001CD8                     l1770:
  4062                           
  4063                           ;kernel.c: 55:         LATDbits.LATD4 = ~PORTDbits.RD4;
  4064   001CD8  B883               	btfsc	131,4,c	;volatile
  4065   001CDA  EF71  F00E         	goto	u46_21
  4066   001CDE  EF74  F00E         	goto	u46_20
  4067   001CE2                     u46_21:
  4068   001CE2  0E01               	movlw	1
  4069   001CE4  EF75  F00E         	goto	u46_26
  4070   001CE8                     u46_20:
  4071   001CE8  0E00               	movlw	0
  4072   001CEA                     u46_26:
  4073   001CEA  0AFF               	xorlw	255
  4074   001CEC  6E38               	movwf	btemp55^0,c
  4075   001CEE  3A38               	swapf	btemp55^0,f,c
  4076   001CF0  508C               	movf	140,w,c	;volatile
  4077   001CF2  1838               	xorwf	btemp55^0,w,c
  4078   001CF4  0BEF               	andlw	-17
  4079   001CF6  1838               	xorwf	btemp55^0,w,c
  4080   001CF8  6E8C               	movwf	140,c	;volatile
  4081   001CFA  EF6C  F00E         	goto	l1770
  4082                           
  4083                           ; _os_idle_task: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4084   001CFE  0012               	return		;funcret
  4085   001D00                     __end_of_os_idle_task:
  4086                           	callstack 0
  4087                           
  4088 ;; *************** function _tarefa_controle_central *****************
  4089 ;; Defined at:
  4090 ;;		line 55 in file "user_app.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;		None
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  base_speed      2    wtemp2   unsigned short 
  4095 ;;  dados_sensor    4  [STACK] struct .
  4096 ;;  nivel_bateri    2  [STACK] int 
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1  [STACK] void 
  4099 ;; Registers used:
  4100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp12, btemp13
      +, btemp14, btemp15, btemp20, btemp28, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, p
      +rodl, prodh, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4106 ;;      Params:         0       0       0       0       0       0       0       0       0
  4107 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4108 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4109 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4110 ;;Total ram usage:        0 bytes
  4111 ;; Hardware stack levels used: 1
  4112 ;; Hardware stack levels required when called: 7
  4113 ;; This function calls:
  4114 ;;		_mutex_lock
  4115 ;;		_mutex_unlock
  4116 ;;		_os_delay
  4117 ;;		_read_pipe
  4118 ;; This function is called by:
  4119 ;;		_main
  4120 ;; This function uses a reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text23
  4124   00135E                     __ptext23:
  4125                           	callstack 0
  4126   00135E                     _tarefa_controle_central:
  4127                           	callstack 0
  4128                           
  4129                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4130   00135E  0E06               	movlw	6
  4131   001360  26E1               	addwf	fsr1l,f,c
  4132   001362  0E00               	movlw	0
  4133   001364  22E2               	addwfc	fsr1h,f,c
  4134   001366                     l121:
  4135   001366                     
  4136                           ;user_app.c: 62:         read_pipe(&pipe_sensores, &dados_sensores, sizeof(sensor_data_t
      +                          ));
  4137                           ;register	btemp12
  4138   001366  0E81               	movlw	low _pipe_sensores
  4139   001368  6E0D               	movwf	btemp12^0,c
  4140                           
  4141                           ;register	btemp13
  4142   00136A  0E04               	movlw	4
  4143   00136C  6E0E               	movwf	btemp13^0,c
  4144                           
  4145                           ;stkvar	_dados_sensores @ sp[(-6)+0]
  4146   00136E  0EFA               	movlw	250
  4147   001370  24E1               	addwf	fsr1l,w,c
  4148   001372  6E37               	movwf	btemp54^0,c
  4149   001374  0EFF               	movlw	255
  4150   001376  20E2               	addwfc	fsr1h,w,c
  4151   001378  6E38               	movwf	btemp55^0,c
  4152                           
  4153                           ;register	wtemp7
  4154   00137A  C037 F00F          	movff	btemp54,btemp14
  4155   00137E  C038 F010          	movff	btemp55,btemp15
  4156   001382  EC92  F00A         	call	_read_pipe	;wreg free
  4157                           
  4158                           ;user_app.c: 63:         read_pipe(&pipe_bateria, &nivel_bateria, sizeof(int));
  4159                           ;register	btemp12
  4160   001386  0E60               	movlw	low _pipe_bateria
  4161   001388  6E0D               	movwf	btemp12^0,c
  4162                           
  4163                           ;register	btemp13
  4164   00138A  0E02               	movlw	2
  4165   00138C  6E0E               	movwf	btemp13^0,c
  4166                           
  4167                           ;stkvar	_nivel_bateria @ sp[(-6)+4]
  4168   00138E  0EFE               	movlw	254
  4169   001390  24E1               	addwf	fsr1l,w,c
  4170   001392  6E37               	movwf	btemp54^0,c
  4171   001394  0EFF               	movlw	255
  4172   001396  20E2               	addwfc	fsr1h,w,c
  4173   001398  6E38               	movwf	btemp55^0,c
  4174                           
  4175                           ;register	wtemp7
  4176   00139A  C037 F00F          	movff	btemp54,btemp14
  4177   00139E  C038 F010          	movff	btemp55,btemp15
  4178   0013A2  EC92  F00A         	call	_read_pipe	;wreg free
  4179   0013A6                     
  4180                           ;user_app.c: 67:         mutex_lock(&mutex_motores);
  4181                           ;register	btemp12
  4182   0013A6  0EA2               	movlw	low _mutex_motores
  4183   0013A8  6E0D               	movwf	btemp12^0,c
  4184   0013AA  EC36  F00F         	call	_mutex_lock	;wreg free
  4185   0013AE                     
  4186                           ;user_app.c: 70:         if (nivel_bateria < 200) {
  4187                           ;stkvar	_nivel_bateria @ sp[(-6)+4]
  4188   0013AE  0EFF               	movlw	-1
  4189   0013B0  BEE3               	btfsc	plusw1,7,c
  4190   0013B2  EFEA  F009         	goto	u107_20
  4191   0013B6  0EFF               	movlw	-1
  4192   0013B8  50E3               	movf	plusw1,w,c
  4193   0013BA  E10A               	bnz	u107_21
  4194   0013BC  0EFE               	movlw	-2
  4195   0013BE  CFE3 F001          	movff	plusw1,btemp0
  4196   0013C2  0EC8               	movlw	200
  4197   0013C4  5E01               	subwf	btemp0^0,f,c
  4198   0013C6  B0D8               	btfsc	status,0,c
  4199   0013C8  EFE8  F009         	goto	u107_21
  4200   0013CC  EFEA  F009         	goto	u107_20
  4201   0013D0                     u107_21:
  4202   0013D0  EFF8  F009         	goto	l2314
  4203   0013D4                     u107_20:
  4204   0013D4                     
  4205                           ;user_app.c: 72:             velocidade_motores.motor1_speed = 100;
  4206   0013D4  6A3A               	clrf	(_velocidade_motores+1)^0,c
  4207   0013D6  0E64               	movlw	100
  4208   0013D8  6E39               	movwf	_velocidade_motores^0,c
  4209                           
  4210                           ;user_app.c: 73:             velocidade_motores.motor2_speed = 100;
  4211   0013DA  6A3C               	clrf	(_velocidade_motores+3)^0,c
  4212   0013DC  0E64               	movlw	100
  4213   0013DE  6E3B               	movwf	(_velocidade_motores+2)^0,c
  4214                           
  4215                           ;user_app.c: 74:             velocidade_motores.motor3_speed = 100;
  4216   0013E0  6A3E               	clrf	(_velocidade_motores+5)^0,c
  4217   0013E2  0E64               	movlw	100
  4218   0013E4  6E3D               	movwf	(_velocidade_motores+4)^0,c
  4219                           
  4220                           ;user_app.c: 75:             velocidade_motores.motor4_speed = 100;
  4221   0013E6  6A40               	clrf	(_velocidade_motores+7)^0,c
  4222   0013E8  0E64               	movlw	100
  4223   0013EA  6E3F               	movwf	(_velocidade_motores+6)^0,c
  4224                           
  4225                           ;user_app.c: 76:         } else {
  4226   0013EC  EF12  F00A         	goto	l2324
  4227   0013F0                     l2314:
  4228                           
  4229                           ;user_app.c: 78:             uint16_t base_speed = (uint16_t)dados_sensores.acelerometro
      +                          ;
  4230                           ;stkvar	_dados_sensores @ sp[(-6)+0]
  4231   0013F0  0EFC               	movlw	252
  4232   0013F2  24E1               	addwf	fsr1l,w,c
  4233   0013F4  6ED9               	movwf	fsr2l,c
  4234   0013F6  0EFF               	movlw	255
  4235   0013F8  20E2               	addwfc	fsr1h,w,c
  4236   0013FA  6EDA               	movwf	fsr2h,c
  4237   0013FC  CFDE F005          	movff	postinc2,btemp4
  4238   001400  CFDD F006          	movff	postdec2,btemp4+1
  4239   001404                     
  4240                           ;user_app.c: 79:             velocidade_motores.motor1_speed = base_speed;
  4241   001404  C005 F039          	movff	btemp4,_velocidade_motores
  4242   001408  C006 F03A          	movff	btemp4+1,_velocidade_motores+1
  4243   00140C                     
  4244                           ;user_app.c: 80:             velocidade_motores.motor2_speed = base_speed;
  4245   00140C  C005 F03B          	movff	btemp4,_velocidade_motores+2
  4246   001410  C006 F03C          	movff	btemp4+1,_velocidade_motores+3
  4247   001414                     
  4248                           ;user_app.c: 81:             velocidade_motores.motor3_speed = base_speed;
  4249   001414  C005 F03D          	movff	btemp4,_velocidade_motores+4
  4250   001418  C006 F03E          	movff	btemp4+1,_velocidade_motores+5
  4251   00141C                     
  4252                           ;user_app.c: 82:             velocidade_motores.motor4_speed = base_speed;
  4253   00141C  C005 F03F          	movff	btemp4,_velocidade_motores+6
  4254   001420  C006 F040          	movff	btemp4+1,_velocidade_motores+7
  4255   001424                     l2324:
  4256                           
  4257                           ;user_app.c: 86:         mutex_unlock(&mutex_motores);
  4258                           ;register	btemp12
  4259   001424  0EA2               	movlw	low _mutex_motores
  4260   001426  6E0D               	movwf	btemp12^0,c
  4261   001428  EC31  F00F         	call	_mutex_unlock	;wreg free
  4262   00142C                     
  4263                           ;user_app.c: 89:         os_delay(100);
  4264                           ;register	btemp12
  4265   00142C  0E64               	movlw	100
  4266   00142E  6E0D               	movwf	btemp12^0,c
  4267   001430  EC26  F007         	call	_os_delay	;wreg free
  4268   001434  EFB3  F009         	goto	l121
  4269                           
  4270                           ; _tarefa_controle_central: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 0, argsize = 0, vargsize = 0
  4271   001438  0EFA               	movlw	250
  4272   00143A  26E1               	addwf	fsr1l,f,c
  4273   00143C  0EFF               	movlw	255
  4274   00143E  22E2               	addwfc	fsr1h,f,c
  4275   001440  0012               	return		;funcret
  4276   001442                     __end_of_tarefa_controle_central:
  4277                           	callstack 0
  4278                           
  4279 ;; *************** function _read_pipe *****************
  4280 ;; Defined at:
  4281 ;;		line 21 in file "pipe.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  p               1    btemp12  PTR struct pipe
  4284 ;;		 -> pipe_bateria(33), pipe_sensores(33), 
  4285 ;;  buffer          2    wtemp7   PTR void 
  4286 ;;		 -> nivel_bateria(2), dados_sensores(4), 
  4287 ;;  size            1    btemp13  unsigned char 
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;  size            1    btemp13  unsigned char 
  4290 ;;  p               1    btemp12  PTR struct pipe
  4291 ;;		 -> pipe_bateria(33), pipe_sensores(33), 
  4292 ;;  i               1  [STACK] unsigned char 
  4293 ;;  data_buffer     2  [STACK] PTR unsigned char 
  4294 ;;		 -> nivel_bateria(2), dados_sensores(4), 
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1  [STACK] void 
  4297 ;; Registers used:
  4298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp13, btemp1
      +4, btemp15, btemp20, btemp28, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, pr
      +odh, cstack
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4304 ;;      Params:         0       0       0       0       0       0       0       0       0
  4305 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4306 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4307 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4308 ;;Total ram usage:        0 bytes
  4309 ;; Hardware stack levels used: 1
  4310 ;; Hardware stack levels required when called: 4
  4311 ;; This function calls:
  4312 ;;		___awmod
  4313 ;;		_sem_post
  4314 ;;		_sem_wait
  4315 ;; This function is called by:
  4316 ;;		_tarefa_controle_central
  4317 ;; This function uses a reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text24
  4321   001524                     __ptext24:
  4322                           	callstack 0
  4323   001524                     _read_pipe:
  4324                           	callstack 0
  4325                           
  4326                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4327   001524  52E6               	movf	postinc1,f,c
  4328   001526  52E6               	movf	postinc1,f,c
  4329   001528  52E6               	movf	postinc1,f,c
  4330   00152A                     
  4331                           ;pipe.c: 21: void read_pipe(pipe_t *p, void *buffer, uint8_t size);pipe.c: 22: {;pipe.c:
      +                           23:     char *data_buffer = (char*)buffer;
  4332                           ;stkvar	_data_buffer @ sp[(-3)+1]
  4333   00152A  0EFF               	movlw	-1
  4334   00152C  C010 FFE3          	movff	btemp15,plusw1
  4335   001530  0EFE               	movlw	-2
  4336   001532  C00F FFE3          	movff	btemp14,plusw1
  4337   001536                     
  4338                           ;pipe.c: 24:     for (uint8_t i = 0; i < size; i++) {
  4339   001536  6A05               	clrf	btemp4^0,c
  4340   001538  EFF0  F00A         	goto	l2228
  4341   00153C                     l366:
  4342                           
  4343                           ;pipe.c: 25:         (INTCONbits.GIE = 0);
  4344   00153C  9EF2               	bcf	242,7,c	;volatile
  4345                           
  4346                           ;_i stored from btemp4
  4347                           ;register	btemp4
  4348                           ;stkvar	_i @ sp[(-3)+0]
  4349   00153E  0EFD               	movlw	-3
  4350   001540  C005 FFE3          	movff	btemp4,plusw1
  4351   001544                     
  4352                           ;pipe.c: 26:         sem_wait(&p->pipe_sem_read);
  4353   001544  500D               	movf	btemp12^0,w,c
  4354   001546  0F05               	addlw	5
  4355                           
  4356                           ;register	btemp20
  4357   001548  6E15               	movwf	btemp20^0,c
  4358   00154A  ECCB  F005         	call	_sem_wait	;wreg free
  4359   00154E                     
  4360                           ;pipe.c: 27:         data_buffer[i] = p->pipe_data[p->pipe_pos_read];
  4361   00154E  500D               	movf	btemp12^0,w,c
  4362   001550  6ED9               	movwf	fsr2l,c
  4363   001552  6ADA               	clrf	fsr2h,c
  4364   001554  50DF               	movf	indf2,w,c
  4365   001556  6E38               	movwf	btemp55^0,c
  4366   001558  500D               	movf	btemp12^0,w,c
  4367   00155A  6ED9               	movwf	fsr2l,c
  4368   00155C  6ADA               	clrf	fsr2h,c
  4369   00155E  0E02               	movlw	2
  4370   001560  26D9               	addwf	fsr2l,f,c
  4371   001562  CFDE F035          	movff	postinc2,btemp52
  4372   001566  CFDD F036          	movff	postdec2,btemp53
  4373   00156A  5038               	movf	btemp55^0,w,c
  4374   00156C  2435               	addwf	btemp52^0,w,c
  4375   00156E  6ED9               	movwf	fsr2l,c
  4376   001570  0E00               	movlw	0
  4377   001572  2036               	addwfc	btemp53^0,w,c
  4378   001574  6EDA               	movwf	fsr2h,c
  4379                           
  4380                           ;stkvar	_i @ sp[(-3)+0]
  4381   001576  0EFD               	movlw	-3
  4382   001578  CFE3 F038          	movff	plusw1,btemp55
  4383                           
  4384                           ;stkvar	_data_buffer @ sp[(-3)+1]
  4385   00157C  0EFE               	movlw	-2
  4386   00157E  CFE3 F035          	movff	plusw1,btemp52
  4387   001582  0F01               	addlw	1
  4388   001584  CFE3 F036          	movff	plusw1,btemp53
  4389   001588  5038               	movf	btemp55^0,w,c
  4390   00158A  2435               	addwf	btemp52^0,w,c
  4391   00158C  6EE9               	movwf	fsr0l,c
  4392   00158E  0E00               	movlw	0
  4393   001590  2036               	addwfc	btemp53^0,w,c
  4394   001592  6EEA               	movwf	fsr0h,c
  4395   001594  CFDF FFEF          	movff	indf2,indf0
  4396   001598                     
  4397                           ;pipe.c: 28:         p->pipe_pos_read = (p->pipe_pos_read + 1) % p->pipe_size;
  4398   001598  500D               	movf	btemp12^0,w,c
  4399   00159A  6ED9               	movwf	fsr2l,c
  4400   00159C  6ADA               	clrf	fsr2h,c
  4401   00159E  500D               	movf	btemp12^0,w,c
  4402   0015A0  6EE9               	movwf	fsr0l,c
  4403   0015A2  6AEA               	clrf	fsr0h,c
  4404   0015A4  50EF               	movf	indf0,w,c
  4405   0015A6  6E38               	movwf	btemp55^0,c
  4406   0015A8  0E01               	movlw	1
  4407   0015AA  2438               	addwf	btemp55^0,w,c
  4408                           
  4409                           ;register	wtemp14
  4410   0015AC  6E1D               	movwf	btemp28^0,c
  4411   0015AE  6A1E               	clrf	(btemp28+1)^0,c
  4412   0015B0  0E00               	movlw	0
  4413   0015B2  221E               	addwfc	(btemp28+1)^0,f,c
  4414   0015B4  500D               	movf	btemp12^0,w,c
  4415   0015B6  6EE9               	movwf	fsr0l,c
  4416   0015B8  6AEA               	clrf	fsr0h,c
  4417   0015BA  0E04               	movlw	4
  4418   0015BC  26E9               	addwf	fsr0l,f,c
  4419   0015BE  50EF               	movf	indf0,w,c
  4420                           
  4421                           ;register	wtemp15
  4422   0015C0  6E1F               	movwf	btemp30^0,c
  4423   0015C2  6A20               	clrf	btemp31^0,c
  4424   0015C4  EC65  F00B         	call	___awmod	;wreg free
  4425   0015C8  5001               	movf	btemp0^0,w,c
  4426   0015CA  6EDF               	movwf	indf2,c
  4427   0015CC                     
  4428                           ;pipe.c: 29:         sem_post(&p->pipe_sem_write);
  4429   0015CC  500D               	movf	btemp12^0,w,c
  4430   0015CE  0F13               	addlw	19
  4431                           
  4432                           ;register	btemp20
  4433   0015D0  6E15               	movwf	btemp20^0,c
  4434   0015D2  EC6F  F00C         	call	_sem_post	;wreg free
  4435   0015D6                     
  4436                           ;pipe.c: 30:         (INTCONbits.GIE = 1);
  4437   0015D6  8EF2               	bsf	242,7,c	;volatile
  4438   0015D8                     
  4439                           ; _i loaded to btemp4
  4440                           ;stkvar	_i @ sp[(-3)+0]
  4441                           ;register	btemp4
  4442   0015D8  0EFD               	movlw	-3
  4443   0015DA  CFE3 F005          	movff	plusw1,btemp4
  4444                           
  4445                           ;pipe.c: 31:     }
  4446   0015DE  2A05               	incf	btemp4^0,f,c
  4447   0015E0                     l2228:
  4448   0015E0  500E               	movf	btemp13^0,w,c
  4449   0015E2  5C05               	subwf	btemp4^0,w,c
  4450   0015E4  A0D8               	btfss	status,0,c
  4451   0015E6  EFF7  F00A         	goto	u99_21
  4452   0015EA  EFF9  F00A         	goto	u99_20
  4453   0015EE                     u99_21:
  4454   0015EE  EF9E  F00A         	goto	l366
  4455   0015F2                     u99_20:
  4456   0015F2                     
  4457                           ; _read_pipe: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4458   0015F2  52E5               	movf	postdec1,f,c
  4459   0015F4  52E5               	movf	postdec1,f,c
  4460   0015F6  52E5               	movf	postdec1,f,c
  4461   0015F8  0012               	return		;funcret
  4462   0015FA                     __end_of_read_pipe:
  4463                           	callstack 0
  4464                           
  4465 ;; *************** function _os_delay *****************
  4466 ;; Defined at:
  4467 ;;		line 28 in file "syscall.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  time            1    btemp12  unsigned char 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;		None
  4472 ;; Return value:  Size  Location     Type
  4473 ;;                  1  [STACK] void 
  4474 ;; Registers used:
  4475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp50, btemp5
      +1, btemp52, btemp53, btemp54, btemp55, prodl, prodh
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4481 ;;      Params:         0       0       0       0       0       0       0       0       0
  4482 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4484 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4485 ;;Total ram usage:        0 bytes
  4486 ;; Hardware stack levels used: 1
  4487 ;; Hardware stack levels required when called: 5
  4488 ;; This function calls:
  4489 ;;		_scheduler
  4490 ;; This function is called by:
  4491 ;;		_tarefa_controle_central
  4492 ;;		_tarefa_controle_motores
  4493 ;;		_tarefa_leitura_sensores
  4494 ;;		_tarefa_monitoramento_bateria
  4495 ;; This function uses a reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text25
  4499   000E4C                     __ptext25:
  4500                           	callstack 0
  4501   000E4C                     _os_delay:
  4502                           	callstack 19
  4503   000E4C                     
  4504                           ;syscall.c: 28: void os_delay(uint8_t time);syscall.c: 29: {;syscall.c: 30:     (INTCONb
      +                          its.GIE = 0);
  4505   000E4C  9EF2               	bcf	242,7,c	;volatile
  4506   000E4E                     
  4507                           ;syscall.c: 32:     readyQueue.taskRunning->task_time_to_waiting = time;
  4508   000E4E  EE22  F0C3         	lfsr	2,_readyQueue+531
  4509   000E52  EE00 F005          	lfsr	0,5
  4510   000E56  50DE               	movf	postinc2,w,c
  4511   000E58  26E9               	addwf	fsr0l,f,c
  4512   000E5A  50DD               	movf	postdec2,w,c
  4513   000E5C  22EA               	addwfc	fsr0h,f,c
  4514   000E5E  C00D FFEF          	movff	btemp12,indf0
  4515   000E62  EE22  F0C3         	lfsr	2,_readyQueue+531
  4516   000E66  EE00 F003          	lfsr	0,3
  4517   000E6A  50DE               	movf	postinc2,w,c
  4518   000E6C  26E9               	addwf	fsr0l,f,c
  4519   000E6E  50DD               	movf	postdec2,w,c
  4520   000E70  22EA               	addwfc	fsr0h,f,c
  4521   000E72  04EE               	decf	postinc0,w,c
  4522   000E74  A4D8               	btfss	status,2,c
  4523   000E76  EF3F  F007         	goto	u100_21
  4524   000E7A  EF41  F007         	goto	u100_20
  4525   000E7E                     u100_21:
  4526   000E7E  EFAC  F007         	goto	l2250
  4527   000E82                     u100_20:
  4528   000E82  EE22  F0C3         	lfsr	2,_readyQueue+531
  4529   000E86  EE00 F006          	lfsr	0,6
  4530   000E8A  50DE               	movf	postinc2,w,c
  4531   000E8C  26E9               	addwf	fsr0l,f,c
  4532   000E8E  50DD               	movf	postdec2,w,c
  4533   000E90  22EA               	addwfc	fsr0h,f,c
  4534   000E92  CFE0 FFEF          	movff	bsr,indf0	;volatile
  4535   000E96  EE22  F0C3         	lfsr	2,_readyQueue+531
  4536   000E9A  EE00 F008          	lfsr	0,8
  4537   000E9E  50DE               	movf	postinc2,w,c
  4538   000EA0  26E9               	addwf	fsr0l,f,c
  4539   000EA2  50DD               	movf	postdec2,w,c
  4540   000EA4  22EA               	addwfc	fsr0h,f,c
  4541   000EA6  CFD8 FFEF          	movff	status,indf0	;volatile
  4542   000EAA  EE22  F0C3         	lfsr	2,_readyQueue+531
  4543   000EAE  EE00 F007          	lfsr	0,7
  4544   000EB2  50DE               	movf	postinc2,w,c
  4545   000EB4  26E9               	addwf	fsr0l,f,c
  4546   000EB6  50DD               	movf	postdec2,w,c
  4547   000EB8  22EA               	addwfc	fsr0h,f,c
  4548   000EBA  CFE8 FFEF          	movff	wreg,indf0	;volatile
  4549   000EBE  EE22  F0C3         	lfsr	2,_readyQueue+531
  4550   000EC2  EE00 F069          	lfsr	0,105
  4551   000EC6  50DE               	movf	postinc2,w,c
  4552   000EC8  26E9               	addwf	fsr0l,f,c
  4553   000ECA  50DD               	movf	postdec2,w,c
  4554   000ECC  22EA               	addwfc	fsr0h,f,c
  4555   000ECE  6AEF               	clrf	indf0,c
  4556   000ED0  EF9A  F007         	goto	l2246
  4557   000ED4                     l2242:
  4558   000ED4  EE22  F0C3         	lfsr	2,_readyQueue+531
  4559   000ED8  EE00 F069          	lfsr	0,105
  4560   000EDC  50DE               	movf	postinc2,w,c
  4561   000EDE  26E9               	addwf	fsr0l,f,c
  4562   000EE0  50DD               	movf	postdec2,w,c
  4563   000EE2  22EA               	addwfc	fsr0h,f,c
  4564   000EE4  50EF               	movf	indf0,w,c
  4565   000EE6  0D03               	mullw	3
  4566   000EE8  CFF3 F037          	movff	prodl,btemp54
  4567   000EEC  CFF4 F038          	movff	prodh,btemp55
  4568   000EF0  EE22  F0C3         	lfsr	2,_readyQueue+531
  4569   000EF4  CFDE F035          	movff	postinc2,btemp52
  4570   000EF8  CFDD F036          	movff	postdec2,btemp53
  4571   000EFC  5037               	movf	btemp54^0,w,c
  4572   000EFE  2435               	addwf	btemp52^0,w,c
  4573   000F00  6E33               	movwf	btemp50^0,c
  4574   000F02  5038               	movf	btemp55^0,w,c
  4575   000F04  2036               	addwfc	btemp53^0,w,c
  4576   000F06  6E34               	movwf	(btemp50+1)^0,c
  4577   000F08  0E09               	movlw	9
  4578   000F0A  2433               	addwf	btemp50^0,w,c
  4579   000F0C  6ED9               	movwf	fsr2l,c
  4580   000F0E  0E00               	movlw	0
  4581   000F10  2034               	addwfc	btemp51^0,w,c
  4582   000F12  6EDA               	movwf	fsr2h,c
  4583   000F14  CFFD FFDE          	movff	tosl,postinc2	;volatile
  4584   000F18  CFFE FFDE          	movff	tosh,postinc2	;volatile
  4585   000F1C  CFFF FFDE          	movff	tosu,postinc2	;volatile
  4586   000F20  EE22  F0C3         	lfsr	2,_readyQueue+531
  4587   000F24  EE00 F069          	lfsr	0,105
  4588   000F28  50DE               	movf	postinc2,w,c
  4589   000F2A  26E9               	addwf	fsr0l,f,c
  4590   000F2C  50DD               	movf	postdec2,w,c
  4591   000F2E  22EA               	addwfc	fsr0h,f,c
  4592   000F30  2AEF               	incf	indf0,f,c
  4593   000F32  0006               	pop		;# 
  4594   000F34                     l2246:
  4595   000F34  50FC               	movf	252,w,c	;volatile
  4596   000F36  A4D8               	btfss	status,2,c
  4597   000F38  EFA0  F007         	goto	u101_21
  4598   000F3C  EFA2  F007         	goto	u101_20
  4599   000F40                     u101_21:
  4600   000F40  EF6A  F007         	goto	l2242
  4601   000F44                     u101_20:
  4602   000F44  EE22  F0C3         	lfsr	2,_readyQueue+531
  4603   000F48  EE00 F003          	lfsr	0,3
  4604   000F4C  50DE               	movf	postinc2,w,c
  4605   000F4E  26E9               	addwf	fsr0l,f,c
  4606   000F50  50DD               	movf	postdec2,w,c
  4607   000F52  22EA               	addwfc	fsr0h,f,c
  4608   000F54  0E02               	movlw	2
  4609   000F56  6EEF               	movwf	indf0,c
  4610   000F58                     l2250:
  4611                           
  4612                           ;syscall.c: 35:     scheduler();
  4613   000F58  EC1E  F00F         	call	_scheduler	;wreg free
  4614   000F5C  EE22  F0C3         	lfsr	2,_readyQueue+531
  4615   000F60  EE00 F003          	lfsr	0,3
  4616   000F64  50DE               	movf	postinc2,w,c
  4617   000F66  26E9               	addwf	fsr0l,f,c
  4618   000F68  50DD               	movf	postdec2,w,c
  4619   000F6A  22EA               	addwfc	fsr0h,f,c
  4620   000F6C  50EF               	movf	indf0,w,c
  4621   000F6E  A4D8               	btfss	status,2,c
  4622   000F70  EFBC  F007         	goto	u102_21
  4623   000F74  EFBE  F007         	goto	u102_20
  4624   000F78                     u102_21:
  4625   000F78  EF4C  F008         	goto	l2274
  4626   000F7C                     u102_20:
  4627   000F7C  EE22  F0C3         	lfsr	2,_readyQueue+531
  4628   000F80  EE00 F006          	lfsr	0,6
  4629   000F84  50DE               	movf	postinc2,w,c
  4630   000F86  26E9               	addwf	fsr0l,f,c
  4631   000F88  50DD               	movf	postdec2,w,c
  4632   000F8A  22EA               	addwfc	fsr0h,f,c
  4633   000F8C  50EF               	movf	indf0,w,c
  4634   000F8E  6EE0               	movwf	224,c	;volatile
  4635   000F90  EE22  F0C3         	lfsr	2,_readyQueue+531
  4636   000F94  EE00 F008          	lfsr	0,8
  4637   000F98  50DE               	movf	postinc2,w,c
  4638   000F9A  26E9               	addwf	fsr0l,f,c
  4639   000F9C  50DD               	movf	postdec2,w,c
  4640   000F9E  22EA               	addwfc	fsr0h,f,c
  4641   000FA0  50EF               	movf	indf0,w,c
  4642   000FA2  6ED8               	movwf	216,c	;volatile
  4643   000FA4  EE22  F0C3         	lfsr	2,_readyQueue+531
  4644   000FA8  EE00 F007          	lfsr	0,7
  4645   000FAC  50DE               	movf	postinc2,w,c
  4646   000FAE  26E9               	addwf	fsr0l,f,c
  4647   000FB0  50DD               	movf	postdec2,w,c
  4648   000FB2  22EA               	addwfc	fsr0h,f,c
  4649   000FB4  50EF               	movf	indf0,w,c
  4650   000FB6  6E38               	movwf	btemp55^0,c
  4651   000FB8  5038               	movf	btemp55^0,w,c
  4652   000FBA  6AFC               	clrf	252,c	;volatile
  4653   000FBC  EE22  F0C3         	lfsr	2,_readyQueue+531
  4654   000FC0  EE00 F069          	lfsr	0,105
  4655   000FC4  50DE               	movf	postinc2,w,c
  4656   000FC6  26E9               	addwf	fsr0l,f,c
  4657   000FC8  50DD               	movf	postdec2,w,c
  4658   000FCA  22EA               	addwfc	fsr0h,f,c
  4659   000FCC  50EF               	movf	indf0,w,c
  4660   000FCE  A4D8               	btfss	status,2,c
  4661   000FD0  EFEC  F007         	goto	u103_21
  4662   000FD4  EFEE  F007         	goto	u103_20
  4663   000FD8                     u103_21:
  4664   000FD8  EF02  F008         	goto	l176
  4665   000FDC                     u103_20:
  4666   000FDC  0005               	push		;# 
  4667   000FDE  EE22  F0C3         	lfsr	2,_readyQueue+531
  4668   000FE2  EE00 F001          	lfsr	0,1
  4669   000FE6  50DE               	movf	postinc2,w,c
  4670   000FE8  26E9               	addwf	fsr0l,f,c
  4671   000FEA  50DD               	movf	postdec2,w,c
  4672   000FEC  22EA               	addwfc	fsr0h,f,c
  4673   000FEE  CFEE F037          	movff	postinc0,btemp54
  4674   000FF2  CFED F038          	movff	postdec0,btemp55
  4675   000FF6  C037 FFFD          	movff	btemp54,tosl	;volatile
  4676   000FFA  C038 FFFE          	movff	btemp55,tosh	;volatile
  4677   000FFE  6AFF               	clrf	255,c	;volatile
  4678   001000  EF42  F008         	goto	l2272
  4679   001004                     l176:
  4680   001004  0005               	push		;# 
  4681   001006  EE22  F0C3         	lfsr	2,_readyQueue+531
  4682   00100A  EE00 F069          	lfsr	0,105
  4683   00100E  50DE               	movf	postinc2,w,c
  4684   001010  26E9               	addwf	fsr0l,f,c
  4685   001012  50DD               	movf	postdec2,w,c
  4686   001014  22EA               	addwfc	fsr0h,f,c
  4687   001016  06EF               	decf	indf0,f,c
  4688   001018  EE22  F0C3         	lfsr	2,_readyQueue+531
  4689   00101C  EE00 F069          	lfsr	0,105
  4690   001020  50DE               	movf	postinc2,w,c
  4691   001022  26E9               	addwf	fsr0l,f,c
  4692   001024  50DD               	movf	postdec2,w,c
  4693   001026  22EA               	addwfc	fsr0h,f,c
  4694   001028  50EF               	movf	indf0,w,c
  4695   00102A  0D03               	mullw	3
  4696   00102C  CFF3 F037          	movff	prodl,btemp54
  4697   001030  CFF4 F038          	movff	prodh,btemp55
  4698   001034  EE22  F0C3         	lfsr	2,_readyQueue+531
  4699   001038  CFDE F035          	movff	postinc2,btemp52
  4700   00103C  CFDD F036          	movff	postdec2,btemp53
  4701   001040  5037               	movf	btemp54^0,w,c
  4702   001042  2435               	addwf	btemp52^0,w,c
  4703   001044  6E33               	movwf	btemp50^0,c
  4704   001046  5038               	movf	btemp55^0,w,c
  4705   001048  2036               	addwfc	btemp53^0,w,c
  4706   00104A  6E34               	movwf	(btemp50+1)^0,c
  4707   00104C  0E09               	movlw	9
  4708   00104E  2433               	addwf	btemp50^0,w,c
  4709   001050  6ED9               	movwf	fsr2l,c
  4710   001052  0E00               	movlw	0
  4711   001054  2034               	addwfc	btemp51^0,w,c
  4712   001056  6EDA               	movwf	fsr2h,c
  4713   001058  CFDE FFFD          	movff	postinc2,tosl	;volatile
  4714   00105C  CFDE FFFE          	movff	postinc2,tosh	;volatile
  4715   001060  CFDD FFFF          	movff	postdec2,tosu	;volatile
  4716   001064  EE22  F0C3         	lfsr	2,_readyQueue+531
  4717   001068  EE00 F069          	lfsr	0,105
  4718   00106C  50DE               	movf	postinc2,w,c
  4719   00106E  26E9               	addwf	fsr0l,f,c
  4720   001070  50DD               	movf	postdec2,w,c
  4721   001072  22EA               	addwfc	fsr0h,f,c
  4722   001074  50EF               	movf	indf0,w,c
  4723   001076  A4D8               	btfss	status,2,c
  4724   001078  EF40  F008         	goto	u104_21
  4725   00107C  EF42  F008         	goto	u104_20
  4726   001080                     u104_21:
  4727   001080  EF02  F008         	goto	l176
  4728   001084                     u104_20:
  4729   001084                     l2272:
  4730   001084  EE22  F0C3         	lfsr	2,_readyQueue+531
  4731   001088  EE00 F003          	lfsr	0,3
  4732   00108C  50DE               	movf	postinc2,w,c
  4733   00108E  26E9               	addwf	fsr0l,f,c
  4734   001090  50DD               	movf	postdec2,w,c
  4735   001092  22EA               	addwfc	fsr0h,f,c
  4736   001094  0E01               	movlw	1
  4737   001096  6EEF               	movwf	indf0,c
  4738   001098                     l2274:
  4739                           
  4740                           ;syscall.c: 39:     (INTCONbits.GIE = 1);
  4741   001098  8EF2               	bsf	242,7,c	;volatile
  4742   00109A                     
  4743                           ; _os_delay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  4744   00109A  0012               	return		;funcret
  4745   00109C                     __end_of_os_delay:
  4746                           	callstack 0
  4747                           
  4748 ;; *************** function _mutex_unlock *****************
  4749 ;; Defined at:
  4750 ;;		line 68 in file "sync.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;  m               1    btemp12  PTR struct semaphore
  4753 ;;		 -> mutex_motores(14), 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;		None
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  1  [STACK] void 
  4758 ;; Registers used:
  4759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp20, btemp2
      +8, btemp29, btemp30, btemp31, btemp55, prodl, prodh, cstack
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4765 ;;      Params:         0       0       0       0       0       0       0       0       0
  4766 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4768 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4769 ;;Total ram usage:        0 bytes
  4770 ;; Hardware stack levels used: 1
  4771 ;; Hardware stack levels required when called: 5
  4772 ;; This function calls:
  4773 ;;		_sem_post
  4774 ;; This function is called by:
  4775 ;;		_tarefa_controle_central
  4776 ;; This function uses a reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text26
  4780   001E62                     __ptext26:
  4781                           	callstack 0
  4782   001E62                     _mutex_unlock:
  4783                           	callstack 19
  4784   001E62                     
  4785                           ;sync.c: 68: void mutex_unlock(mutex_t *m);sync.c: 69: {;sync.c: 70:     sem_post(m);
  4786                           ;register	btemp20
  4787   001E62  C00D F015          	movff	btemp12,btemp20
  4788   001E66  EC6F  F00C         	call	_sem_post	;wreg free
  4789   001E6A                     
  4790                           ; _mutex_unlock: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4791   001E6A  0012               	return		;funcret
  4792   001E6C                     __end_of_mutex_unlock:
  4793                           	callstack 0
  4794                           
  4795 ;; *************** function _sem_post *****************
  4796 ;; Defined at:
  4797 ;;		line 38 in file "sync.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  s               1    btemp20  PTR struct semaphore
  4800 ;;		 -> pipe_bateria(33), pipe_sensores(33), mutex_motores(14), 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1  [STACK] void 
  4805 ;; Registers used:
  4806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp20, btemp28, btemp2
      +9, btemp30, btemp31, btemp55, prodl, prodh, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4812 ;;      Params:         0       0       0       0       0       0       0       0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4815 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4816 ;;Total ram usage:        0 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; Hardware stack levels required when called: 4
  4819 ;; This function calls:
  4820 ;;		___awmod
  4821 ;; This function is called by:
  4822 ;;		_mutex_unlock
  4823 ;;		_read_pipe
  4824 ;;		_write_pipe
  4825 ;; This function uses a reentrant model
  4826 ;;
  4827                           
  4828                           	psect	text27
  4829   0018DE                     __ptext27:
  4830                           	callstack 0
  4831   0018DE                     _sem_post:
  4832                           	callstack 19
  4833   0018DE                     
  4834                           ;sync.c: 38: void sem_post(sem_t *s);sync.c: 39: {;sync.c: 40:     (INTCONbits.GIE = 0);
  4835   0018DE  9EF2               	bcf	242,7,c	;volatile
  4836   0018E0                     
  4837                           ;sync.c: 42:     s->contador++;
  4838   0018E0  5015               	movf	btemp20^0,w,c
  4839   0018E2  6ED9               	movwf	fsr2l,c
  4840   0018E4  6ADA               	clrf	fsr2h,c
  4841   0018E6  2ADE               	incf	postinc2,f,c
  4842   0018E8  0E00               	movlw	0
  4843   0018EA  22DD               	addwfc	postdec2,f,c
  4844   0018EC                     
  4845                           ;sync.c: 45:     if (s->contador <= 0) {
  4846   0018EC  5015               	movf	btemp20^0,w,c
  4847   0018EE  6ED9               	movwf	fsr2l,c
  4848   0018F0  6ADA               	clrf	fsr2h,c
  4849   0018F2  0E01               	movlw	1
  4850   0018F4  BEDB               	btfsc	plusw2,7,c
  4851   0018F6  EF88  F00C         	goto	u91_20
  4852   0018FA  0E01               	movlw	1
  4853   0018FC  50DB               	movf	plusw2,w,c
  4854   0018FE  E106               	bnz	u91_21
  4855   001900  04DE               	decf	postinc2,w,c
  4856   001902  B0D8               	btfsc	status,0,c
  4857   001904  EF86  F00C         	goto	u91_21
  4858   001908  EF88  F00C         	goto	u91_20
  4859   00190C                     u91_21:
  4860   00190C  EFB5  F00C         	goto	l2162
  4861   001910                     u91_20:
  4862   001910                     
  4863                           ;sync.c: 46:         s->sem_queue[s->sem_queue_out]->task_state = READY;
  4864   001910  5015               	movf	btemp20^0,w,c
  4865   001912  6ED9               	movwf	fsr2l,c
  4866   001914  6ADA               	clrf	fsr2h,c
  4867   001916  0E0D               	movlw	13
  4868   001918  26D9               	addwf	fsr2l,f,c
  4869   00191A  50DF               	movf	indf2,w,c
  4870   00191C  0D02               	mullw	2
  4871   00191E  5015               	movf	btemp20^0,w,c
  4872   001920  24F3               	addwf	243,w,c
  4873   001922  6ED9               	movwf	fsr2l,c
  4874   001924  6ADA               	clrf	fsr2h,c
  4875   001926  0E02               	movlw	2
  4876   001928  26D9               	addwf	fsr2l,f,c
  4877   00192A  EE00 F003          	lfsr	0,3
  4878   00192E  50DE               	movf	postinc2,w,c
  4879   001930  26E9               	addwf	fsr0l,f,c
  4880   001932  50DD               	movf	postdec2,w,c
  4881   001934  22EA               	addwfc	fsr0h,f,c
  4882   001936  6AEF               	clrf	indf0,c
  4883   001938                     
  4884                           ;sync.c: 47:         s->sem_queue_out = (s->sem_queue_out + 1) % 5;
  4885   001938  5015               	movf	btemp20^0,w,c
  4886   00193A  6ED9               	movwf	fsr2l,c
  4887   00193C  6ADA               	clrf	fsr2h,c
  4888   00193E  0E0D               	movlw	13
  4889   001940  26D9               	addwf	fsr2l,f,c
  4890   001942  5015               	movf	btemp20^0,w,c
  4891   001944  6EE9               	movwf	fsr0l,c
  4892   001946  6AEA               	clrf	fsr0h,c
  4893   001948  0E0D               	movlw	13
  4894   00194A  26E9               	addwf	fsr0l,f,c
  4895   00194C  50EF               	movf	indf0,w,c
  4896   00194E  6E38               	movwf	btemp55^0,c
  4897   001950  0E01               	movlw	1
  4898   001952  2438               	addwf	btemp55^0,w,c
  4899                           
  4900                           ;register	wtemp14
  4901   001954  6E1D               	movwf	btemp28^0,c
  4902   001956  6A1E               	clrf	(btemp28+1)^0,c
  4903   001958  0E00               	movlw	0
  4904   00195A  221E               	addwfc	(btemp28+1)^0,f,c
  4905                           
  4906                           ;register	wtemp15
  4907   00195C  6A20               	clrf	btemp31^0,c
  4908   00195E  0E05               	movlw	5
  4909   001960  6E1F               	movwf	btemp30^0,c
  4910   001962  EC65  F00B         	call	___awmod	;wreg free
  4911   001966  5001               	movf	btemp0^0,w,c
  4912   001968  6EDF               	movwf	indf2,c
  4913   00196A                     l2162:
  4914                           
  4915                           ;sync.c: 50:     (INTCONbits.GIE = 1);
  4916   00196A  8EF2               	bsf	242,7,c	;volatile
  4917   00196C                     
  4918                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  4919   00196C  0012               	return		;funcret
  4920   00196E                     __end_of_sem_post:
  4921                           	callstack 0
  4922                           
  4923 ;; *************** function _mutex_lock *****************
  4924 ;; Defined at:
  4925 ;;		line 62 in file "sync.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;  m               1    btemp12  PTR struct semaphore
  4928 ;;		 -> mutex_motores(14), 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;  m               1    btemp12  PTR struct semaphore
  4931 ;;		 -> mutex_motores(14), 
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  1  [STACK] void 
  4934 ;; Registers used:
  4935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp20, btemp2
      +8, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, prodh, cstack
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4941 ;;      Params:         0       0       0       0       0       0       0       0       0
  4942 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4943 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4944 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4945 ;;Total ram usage:        0 bytes
  4946 ;; Hardware stack levels used: 1
  4947 ;; Hardware stack levels required when called: 6
  4948 ;; This function calls:
  4949 ;;		_sem_wait
  4950 ;; This function is called by:
  4951 ;;		_tarefa_controle_central
  4952 ;; This function uses a reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text28
  4956   001E6C                     __ptext28:
  4957                           	callstack 0
  4958   001E6C                     _mutex_lock:
  4959                           	callstack 18
  4960   001E6C                     
  4961                           ;sync.c: 62: void mutex_lock(mutex_t *m);sync.c: 63: {;sync.c: 64:     sem_wait(m);
  4962                           ;register	btemp20
  4963   001E6C  C00D F015          	movff	btemp12,btemp20
  4964   001E70  ECCB  F005         	call	_sem_wait	;wreg free
  4965   001E74                     
  4966                           ; _mutex_lock: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4967   001E74  0012               	return		;funcret
  4968   001E76                     __end_of_mutex_lock:
  4969                           	callstack 0
  4970                           
  4971 ;; *************** function _sem_wait *****************
  4972 ;; Defined at:
  4973 ;;		line 17 in file "sync.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  s               1    btemp20  PTR struct semaphore
  4976 ;;		 -> pipe_bateria(33), pipe_sensores(33), mutex_motores(14), 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;		None
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  1  [STACK] void 
  4981 ;; Registers used:
  4982 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp20, btemp28, btemp2
      +9, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, prodh, cstack
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4988 ;;      Params:         0       0       0       0       0       0       0       0       0
  4989 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4991 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4992 ;;Total ram usage:        0 bytes
  4993 ;; Hardware stack levels used: 1
  4994 ;; Hardware stack levels required when called: 4
  4995 ;; This function calls:
  4996 ;;		___awmod
  4997 ;;		_scheduler
  4998 ;; This function is called by:
  4999 ;;		_mutex_lock
  5000 ;;		_read_pipe
  5001 ;;		_write_pipe
  5002 ;; This function uses a reentrant model
  5003 ;;
  5004                           
  5005                           	psect	text29
  5006   000B96                     __ptext29:
  5007                           	callstack 0
  5008   000B96                     _sem_wait:
  5009                           	callstack 19
  5010   000B96                     
  5011                           ;sync.c: 17: void sem_wait(sem_t *s);sync.c: 18: {;sync.c: 19:     (INTCONbits.GIE = 0);
  5012   000B96  9EF2               	bcf	242,7,c	;volatile
  5013   000B98                     
  5014                           ;sync.c: 21:     s->contador--;
  5015   000B98  5015               	movf	btemp20^0,w,c
  5016   000B9A  6ED9               	movwf	fsr2l,c
  5017   000B9C  6ADA               	clrf	fsr2h,c
  5018   000B9E  06DE               	decf	postinc2,f,c
  5019   000BA0  0E00               	movlw	0
  5020   000BA2  5ADD               	subwfb	postdec2,f,c
  5021   000BA4                     
  5022                           ;sync.c: 23:     if (s->contador < 0) {
  5023   000BA4  5015               	movf	btemp20^0,w,c
  5024   000BA6  6ED9               	movwf	fsr2l,c
  5025   000BA8  6ADA               	clrf	fsr2h,c
  5026   000BAA  0E01               	movlw	1
  5027   000BAC  BEDB               	btfsc	plusw2,7,c
  5028   000BAE  EFDD  F005         	goto	u85_20
  5029   000BB2  EFDB  F005         	goto	u85_21
  5030   000BB6                     u85_21:
  5031   000BB6  EF24  F007         	goto	l2150
  5032   000BBA                     u85_20:
  5033   000BBA                     
  5034                           ;sync.c: 25:         s->sem_queue[s->sem_queue_in] = readyQueue.taskRunning;
  5035   000BBA  EE22  F0C3         	lfsr	2,_readyQueue+531
  5036   000BBE  5015               	movf	btemp20^0,w,c
  5037   000BC0  6EE9               	movwf	fsr0l,c
  5038   000BC2  6AEA               	clrf	fsr0h,c
  5039   000BC4  0E0C               	movlw	12
  5040   000BC6  26E9               	addwf	fsr0l,f,c
  5041   000BC8  50EF               	movf	indf0,w,c
  5042   000BCA  0D02               	mullw	2
  5043   000BCC  5015               	movf	btemp20^0,w,c
  5044   000BCE  24F3               	addwf	243,w,c
  5045   000BD0  6EE9               	movwf	fsr0l,c
  5046   000BD2  6AEA               	clrf	fsr0h,c
  5047   000BD4  0E02               	movlw	2
  5048   000BD6  26E9               	addwf	fsr0l,f,c
  5049   000BD8  CFDE FFEE          	movff	postinc2,postinc0
  5050   000BDC  CFDD FFED          	movff	postdec2,postdec0
  5051   000BE0                     
  5052                           ;sync.c: 26:         s->sem_queue_in = (s->sem_queue_in + 1) % 5;
  5053   000BE0  5015               	movf	btemp20^0,w,c
  5054   000BE2  6ED9               	movwf	fsr2l,c
  5055   000BE4  6ADA               	clrf	fsr2h,c
  5056   000BE6  0E0C               	movlw	12
  5057   000BE8  26D9               	addwf	fsr2l,f,c
  5058   000BEA  5015               	movf	btemp20^0,w,c
  5059   000BEC  6EE9               	movwf	fsr0l,c
  5060   000BEE  6AEA               	clrf	fsr0h,c
  5061   000BF0  0E0C               	movlw	12
  5062   000BF2  26E9               	addwf	fsr0l,f,c
  5063   000BF4  50EF               	movf	indf0,w,c
  5064   000BF6  6E38               	movwf	btemp55^0,c
  5065   000BF8  0E01               	movlw	1
  5066   000BFA  2438               	addwf	btemp55^0,w,c
  5067                           
  5068                           ;register	wtemp14
  5069   000BFC  6E1D               	movwf	btemp28^0,c
  5070   000BFE  6A1E               	clrf	(btemp28+1)^0,c
  5071   000C00  0E00               	movlw	0
  5072   000C02  221E               	addwfc	(btemp28+1)^0,f,c
  5073                           
  5074                           ;register	wtemp15
  5075   000C04  6A20               	clrf	btemp31^0,c
  5076   000C06  0E05               	movlw	5
  5077   000C08  6E1F               	movwf	btemp30^0,c
  5078   000C0A  EC65  F00B         	call	___awmod	;wreg free
  5079   000C0E  5001               	movf	btemp0^0,w,c
  5080   000C10  6EDF               	movwf	indf2,c
  5081   000C12  EE22  F0C3         	lfsr	2,_readyQueue+531
  5082   000C16  EE00 F003          	lfsr	0,3
  5083   000C1A  50DE               	movf	postinc2,w,c
  5084   000C1C  26E9               	addwf	fsr0l,f,c
  5085   000C1E  50DD               	movf	postdec2,w,c
  5086   000C20  22EA               	addwfc	fsr0h,f,c
  5087   000C22  04EE               	decf	postinc0,w,c
  5088   000C24  A4D8               	btfss	status,2,c
  5089   000C26  EF17  F006         	goto	u86_21
  5090   000C2A  EF19  F006         	goto	u86_20
  5091   000C2E                     u86_21:
  5092   000C2E  EF84  F006         	goto	l2126
  5093   000C32                     u86_20:
  5094   000C32  EE22  F0C3         	lfsr	2,_readyQueue+531
  5095   000C36  EE00 F006          	lfsr	0,6
  5096   000C3A  50DE               	movf	postinc2,w,c
  5097   000C3C  26E9               	addwf	fsr0l,f,c
  5098   000C3E  50DD               	movf	postdec2,w,c
  5099   000C40  22EA               	addwfc	fsr0h,f,c
  5100   000C42  CFE0 FFEF          	movff	bsr,indf0	;volatile
  5101   000C46  EE22  F0C3         	lfsr	2,_readyQueue+531
  5102   000C4A  EE00 F008          	lfsr	0,8
  5103   000C4E  50DE               	movf	postinc2,w,c
  5104   000C50  26E9               	addwf	fsr0l,f,c
  5105   000C52  50DD               	movf	postdec2,w,c
  5106   000C54  22EA               	addwfc	fsr0h,f,c
  5107   000C56  CFD8 FFEF          	movff	status,indf0	;volatile
  5108   000C5A  EE22  F0C3         	lfsr	2,_readyQueue+531
  5109   000C5E  EE00 F007          	lfsr	0,7
  5110   000C62  50DE               	movf	postinc2,w,c
  5111   000C64  26E9               	addwf	fsr0l,f,c
  5112   000C66  50DD               	movf	postdec2,w,c
  5113   000C68  22EA               	addwfc	fsr0h,f,c
  5114   000C6A  CFE8 FFEF          	movff	wreg,indf0	;volatile
  5115   000C6E  EE22  F0C3         	lfsr	2,_readyQueue+531
  5116   000C72  EE00 F069          	lfsr	0,105
  5117   000C76  50DE               	movf	postinc2,w,c
  5118   000C78  26E9               	addwf	fsr0l,f,c
  5119   000C7A  50DD               	movf	postdec2,w,c
  5120   000C7C  22EA               	addwfc	fsr0h,f,c
  5121   000C7E  6AEF               	clrf	indf0,c
  5122   000C80  EF72  F006         	goto	l2122
  5123   000C84                     l2118:
  5124   000C84  EE22  F0C3         	lfsr	2,_readyQueue+531
  5125   000C88  EE00 F069          	lfsr	0,105
  5126   000C8C  50DE               	movf	postinc2,w,c
  5127   000C8E  26E9               	addwf	fsr0l,f,c
  5128   000C90  50DD               	movf	postdec2,w,c
  5129   000C92  22EA               	addwfc	fsr0h,f,c
  5130   000C94  50EF               	movf	indf0,w,c
  5131   000C96  0D03               	mullw	3
  5132   000C98  CFF3 F037          	movff	prodl,btemp54
  5133   000C9C  CFF4 F038          	movff	prodh,btemp55
  5134   000CA0  EE22  F0C3         	lfsr	2,_readyQueue+531
  5135   000CA4  CFDE F035          	movff	postinc2,btemp52
  5136   000CA8  CFDD F036          	movff	postdec2,btemp53
  5137   000CAC  5037               	movf	btemp54^0,w,c
  5138   000CAE  2435               	addwf	btemp52^0,w,c
  5139   000CB0  6E33               	movwf	btemp50^0,c
  5140   000CB2  5038               	movf	btemp55^0,w,c
  5141   000CB4  2036               	addwfc	btemp53^0,w,c
  5142   000CB6  6E34               	movwf	(btemp50+1)^0,c
  5143   000CB8  0E09               	movlw	9
  5144   000CBA  2433               	addwf	btemp50^0,w,c
  5145   000CBC  6ED9               	movwf	fsr2l,c
  5146   000CBE  0E00               	movlw	0
  5147   000CC0  2034               	addwfc	btemp51^0,w,c
  5148   000CC2  6EDA               	movwf	fsr2h,c
  5149   000CC4  CFFD FFDE          	movff	tosl,postinc2	;volatile
  5150   000CC8  CFFE FFDE          	movff	tosh,postinc2	;volatile
  5151   000CCC  CFFF FFDE          	movff	tosu,postinc2	;volatile
  5152   000CD0  EE22  F0C3         	lfsr	2,_readyQueue+531
  5153   000CD4  EE00 F069          	lfsr	0,105
  5154   000CD8  50DE               	movf	postinc2,w,c
  5155   000CDA  26E9               	addwf	fsr0l,f,c
  5156   000CDC  50DD               	movf	postdec2,w,c
  5157   000CDE  22EA               	addwfc	fsr0h,f,c
  5158   000CE0  2AEF               	incf	indf0,f,c
  5159   000CE2  0006               	pop		;# 
  5160   000CE4                     l2122:
  5161   000CE4  50FC               	movf	252,w,c	;volatile
  5162   000CE6  A4D8               	btfss	status,2,c
  5163   000CE8  EF78  F006         	goto	u87_21
  5164   000CEC  EF7A  F006         	goto	u87_20
  5165   000CF0                     u87_21:
  5166   000CF0  EF42  F006         	goto	l2118
  5167   000CF4                     u87_20:
  5168   000CF4  EE22  F0C3         	lfsr	2,_readyQueue+531
  5169   000CF8  EE00 F003          	lfsr	0,3
  5170   000CFC  50DE               	movf	postinc2,w,c
  5171   000CFE  26E9               	addwf	fsr0l,f,c
  5172   000D00  50DD               	movf	postdec2,w,c
  5173   000D02  22EA               	addwfc	fsr0h,f,c
  5174   000D04  0E03               	movlw	3
  5175   000D06  6EEF               	movwf	indf0,c
  5176   000D08                     l2126:
  5177                           
  5178                           ;sync.c: 30:         scheduler();
  5179   000D08  EC1E  F00F         	call	_scheduler	;wreg free
  5180   000D0C  EE22  F0C3         	lfsr	2,_readyQueue+531
  5181   000D10  EE00 F003          	lfsr	0,3
  5182   000D14  50DE               	movf	postinc2,w,c
  5183   000D16  26E9               	addwf	fsr0l,f,c
  5184   000D18  50DD               	movf	postdec2,w,c
  5185   000D1A  22EA               	addwfc	fsr0h,f,c
  5186   000D1C  50EF               	movf	indf0,w,c
  5187   000D1E  A4D8               	btfss	status,2,c
  5188   000D20  EF94  F006         	goto	u88_21
  5189   000D24  EF96  F006         	goto	u88_20
  5190   000D28                     u88_21:
  5191   000D28  EF24  F007         	goto	l2150
  5192   000D2C                     u88_20:
  5193   000D2C  EE22  F0C3         	lfsr	2,_readyQueue+531
  5194   000D30  EE00 F006          	lfsr	0,6
  5195   000D34  50DE               	movf	postinc2,w,c
  5196   000D36  26E9               	addwf	fsr0l,f,c
  5197   000D38  50DD               	movf	postdec2,w,c
  5198   000D3A  22EA               	addwfc	fsr0h,f,c
  5199   000D3C  50EF               	movf	indf0,w,c
  5200   000D3E  6EE0               	movwf	224,c	;volatile
  5201   000D40  EE22  F0C3         	lfsr	2,_readyQueue+531
  5202   000D44  EE00 F008          	lfsr	0,8
  5203   000D48  50DE               	movf	postinc2,w,c
  5204   000D4A  26E9               	addwf	fsr0l,f,c
  5205   000D4C  50DD               	movf	postdec2,w,c
  5206   000D4E  22EA               	addwfc	fsr0h,f,c
  5207   000D50  50EF               	movf	indf0,w,c
  5208   000D52  6ED8               	movwf	216,c	;volatile
  5209   000D54  EE22  F0C3         	lfsr	2,_readyQueue+531
  5210   000D58  EE00 F007          	lfsr	0,7
  5211   000D5C  50DE               	movf	postinc2,w,c
  5212   000D5E  26E9               	addwf	fsr0l,f,c
  5213   000D60  50DD               	movf	postdec2,w,c
  5214   000D62  22EA               	addwfc	fsr0h,f,c
  5215   000D64  50EF               	movf	indf0,w,c
  5216   000D66  6E38               	movwf	btemp55^0,c
  5217   000D68  5038               	movf	btemp55^0,w,c
  5218   000D6A  6AFC               	clrf	252,c	;volatile
  5219   000D6C  EE22  F0C3         	lfsr	2,_readyQueue+531
  5220   000D70  EE00 F069          	lfsr	0,105
  5221   000D74  50DE               	movf	postinc2,w,c
  5222   000D76  26E9               	addwf	fsr0l,f,c
  5223   000D78  50DD               	movf	postdec2,w,c
  5224   000D7A  22EA               	addwfc	fsr0h,f,c
  5225   000D7C  50EF               	movf	indf0,w,c
  5226   000D7E  A4D8               	btfss	status,2,c
  5227   000D80  EFC4  F006         	goto	u89_21
  5228   000D84  EFC6  F006         	goto	u89_20
  5229   000D88                     u89_21:
  5230   000D88  EFDA  F006         	goto	l333
  5231   000D8C                     u89_20:
  5232   000D8C  0005               	push		;# 
  5233   000D8E  EE22  F0C3         	lfsr	2,_readyQueue+531
  5234   000D92  EE00 F001          	lfsr	0,1
  5235   000D96  50DE               	movf	postinc2,w,c
  5236   000D98  26E9               	addwf	fsr0l,f,c
  5237   000D9A  50DD               	movf	postdec2,w,c
  5238   000D9C  22EA               	addwfc	fsr0h,f,c
  5239   000D9E  CFEE F037          	movff	postinc0,btemp54
  5240   000DA2  CFED F038          	movff	postdec0,btemp55
  5241   000DA6  C037 FFFD          	movff	btemp54,tosl	;volatile
  5242   000DAA  C038 FFFE          	movff	btemp55,tosh	;volatile
  5243   000DAE  6AFF               	clrf	255,c	;volatile
  5244   000DB0  EF1A  F007         	goto	l2148
  5245   000DB4                     l333:
  5246   000DB4  0005               	push		;# 
  5247   000DB6  EE22  F0C3         	lfsr	2,_readyQueue+531
  5248   000DBA  EE00 F069          	lfsr	0,105
  5249   000DBE  50DE               	movf	postinc2,w,c
  5250   000DC0  26E9               	addwf	fsr0l,f,c
  5251   000DC2  50DD               	movf	postdec2,w,c
  5252   000DC4  22EA               	addwfc	fsr0h,f,c
  5253   000DC6  06EF               	decf	indf0,f,c
  5254   000DC8  EE22  F0C3         	lfsr	2,_readyQueue+531
  5255   000DCC  EE00 F069          	lfsr	0,105
  5256   000DD0  50DE               	movf	postinc2,w,c
  5257   000DD2  26E9               	addwf	fsr0l,f,c
  5258   000DD4  50DD               	movf	postdec2,w,c
  5259   000DD6  22EA               	addwfc	fsr0h,f,c
  5260   000DD8  50EF               	movf	indf0,w,c
  5261   000DDA  0D03               	mullw	3
  5262   000DDC  CFF3 F037          	movff	prodl,btemp54
  5263   000DE0  CFF4 F038          	movff	prodh,btemp55
  5264   000DE4  EE22  F0C3         	lfsr	2,_readyQueue+531
  5265   000DE8  CFDE F035          	movff	postinc2,btemp52
  5266   000DEC  CFDD F036          	movff	postdec2,btemp53
  5267   000DF0  5037               	movf	btemp54^0,w,c
  5268   000DF2  2435               	addwf	btemp52^0,w,c
  5269   000DF4  6E33               	movwf	btemp50^0,c
  5270   000DF6  5038               	movf	btemp55^0,w,c
  5271   000DF8  2036               	addwfc	btemp53^0,w,c
  5272   000DFA  6E34               	movwf	(btemp50+1)^0,c
  5273   000DFC  0E09               	movlw	9
  5274   000DFE  2433               	addwf	btemp50^0,w,c
  5275   000E00  6ED9               	movwf	fsr2l,c
  5276   000E02  0E00               	movlw	0
  5277   000E04  2034               	addwfc	btemp51^0,w,c
  5278   000E06  6EDA               	movwf	fsr2h,c
  5279   000E08  CFDE FFFD          	movff	postinc2,tosl	;volatile
  5280   000E0C  CFDE FFFE          	movff	postinc2,tosh	;volatile
  5281   000E10  CFDD FFFF          	movff	postdec2,tosu	;volatile
  5282   000E14  EE22  F0C3         	lfsr	2,_readyQueue+531
  5283   000E18  EE00 F069          	lfsr	0,105
  5284   000E1C  50DE               	movf	postinc2,w,c
  5285   000E1E  26E9               	addwf	fsr0l,f,c
  5286   000E20  50DD               	movf	postdec2,w,c
  5287   000E22  22EA               	addwfc	fsr0h,f,c
  5288   000E24  50EF               	movf	indf0,w,c
  5289   000E26  A4D8               	btfss	status,2,c
  5290   000E28  EF18  F007         	goto	u90_21
  5291   000E2C  EF1A  F007         	goto	u90_20
  5292   000E30                     u90_21:
  5293   000E30  EFDA  F006         	goto	l333
  5294   000E34                     u90_20:
  5295   000E34                     l2148:
  5296   000E34  EE22  F0C3         	lfsr	2,_readyQueue+531
  5297   000E38  EE00 F003          	lfsr	0,3
  5298   000E3C  50DE               	movf	postinc2,w,c
  5299   000E3E  26E9               	addwf	fsr0l,f,c
  5300   000E40  50DD               	movf	postdec2,w,c
  5301   000E42  22EA               	addwfc	fsr0h,f,c
  5302   000E44  0E01               	movlw	1
  5303   000E46  6EEF               	movwf	indf0,c
  5304   000E48                     l2150:
  5305                           
  5306                           ;sync.c: 34:     (INTCONbits.GIE = 1);
  5307   000E48  8EF2               	bsf	242,7,c	;volatile
  5308   000E4A                     
  5309                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  5310   000E4A  0012               	return		;funcret
  5311   000E4C                     __end_of_sem_wait:
  5312                           	callstack 0
  5313                           
  5314 ;; *************** function _scheduler *****************
  5315 ;; Defined at:
  5316 ;;		line 48 in file "scheduler.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;		None
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;		None
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1  [STACK] void 
  5323 ;; Registers used:
  5324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp54, btemp55, prodl, prodh
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5330 ;;      Params:         0       0       0       0       0       0       0       0       0
  5331 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5333 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5334 ;;Total ram usage:        0 bytes
  5335 ;; Hardware stack levels used: 1
  5336 ;; Hardware stack levels required when called: 3
  5337 ;; This function calls:
  5338 ;;		_priority_scheduler
  5339 ;; This function is called by:
  5340 ;;		_os_delay
  5341 ;;		_ISR_TIMER_0
  5342 ;;		_sem_wait
  5343 ;; This function uses a reentrant model
  5344 ;;
  5345                           
  5346                           	psect	text30
  5347   001E3C                     __ptext30:
  5348                           	callstack 0
  5349   001E3C                     _scheduler:
  5350                           	callstack 16
  5351   001E3C                     
  5352                           ;scheduler.c: 54:         readyQueue.taskRunning = priority_scheduler();
  5353   001E3C  ECFD  F00A         	call	_priority_scheduler	;wreg free
  5354   001E40  C001 F2C3          	movff	btemp0,_readyQueue+531
  5355   001E44  C002 F2C4          	movff	btemp1,_readyQueue+532
  5356   001E48                     
  5357                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5358   001E48  0012               	return		;funcret
  5359   001E4A                     __end_of_scheduler:
  5360                           	callstack 0
  5361                           
  5362 ;; *************** function _priority_scheduler *****************
  5363 ;; Defined at:
  5364 ;;		line 28 in file "scheduler.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;		None
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  i               1    btemp4   unsigned char 
  5369 ;;  next_task       2  [STACK] PTR struct tcb
  5370 ;;		 -> readyQueue$readyQueue(530), readyQueue(533), 
  5371 ;;  highest_prio    1  [STACK] unsigned char 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  2  [STACK] PTR struct tcb
  5374 ;; Registers used:
  5375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp54, btemp55, prodl, prodh
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5381 ;;      Params:         0       0       0       0       0       0       0       0       0
  5382 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5383 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5384 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5385 ;;Total ram usage:        0 bytes
  5386 ;; Hardware stack levels used: 1
  5387 ;; Hardware stack levels required when called: 3
  5388 ;; This function calls:
  5389 ;;		Nothing
  5390 ;; This function is called by:
  5391 ;;		_scheduler
  5392 ;; This function uses a reentrant model
  5393 ;;
  5394                           
  5395                           	psect	text31
  5396   0015FA                     __ptext31:
  5397                           	callstack 0
  5398   0015FA                     _priority_scheduler:
  5399                           	callstack 0
  5400                           
  5401                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5402   0015FA  52E6               	movf	postinc1,f,c
  5403   0015FC  52E6               	movf	postinc1,f,c
  5404   0015FE  52E6               	movf	postinc1,f,c
  5405   001600                     
  5406                           ;scheduler.c: 31:     tcb_t *next_task = &readyQueue.readyQueue[0];
  5407                           ;stkvar	_next_task @ sp[(-3)+0]
  5408   001600  0E00               	movlw	high _readyQueue
  5409   001602  6E01               	movwf	btemp0^0,c
  5410   001604  0EFE               	movlw	-2
  5411   001606  C001 FFE3          	movff	btemp0,plusw1
  5412   00160A  0EB0               	movlw	low _readyQueue
  5413   00160C  6E01               	movwf	btemp0^0,c
  5414   00160E  0EFD               	movlw	-3
  5415   001610  C001 FFE3          	movff	btemp0,plusw1
  5416   001614                     
  5417                           ;scheduler.c: 32:     uint8_t highest_priority = 0;
  5418                           ;stkvar	_highest_priority @ sp[(-3)+2]
  5419   001614  0EFF               	movlw	-1
  5420   001616  6AE3               	clrf	plusw1,c
  5421   001618                     
  5422                           ;scheduler.c: 35:     for (uint8_t i = 1; i < readyQueue.readyQueueSize; i++) {
  5423   001618  0E01               	movlw	1
  5424   00161A  6E05               	movwf	btemp4^0,c
  5425   00161C  EF50  F00B         	goto	l2098
  5426   001620                     l2088:
  5427                           
  5428                           ;scheduler.c: 36:         if (readyQueue.readyQueue[i].task_state == READY) {
  5429   001620  5005               	movf	btemp4^0,w,c
  5430   001622  0D6A               	mullw	106
  5431   001624  0EB3               	movlw	low (_readyQueue+3)
  5432   001626  24F3               	addwf	243,w,c
  5433   001628  6ED9               	movwf	fsr2l,c
  5434   00162A  0E00               	movlw	high (_readyQueue+3)
  5435   00162C  20F4               	addwfc	prodh,w,c
  5436   00162E  6EDA               	movwf	fsr2h,c
  5437   001630  50DF               	movf	indf2,w,c
  5438   001632  A4D8               	btfss	status,2,c
  5439   001634  EF1E  F00B         	goto	u82_21
  5440   001638  EF20  F00B         	goto	u82_20
  5441   00163C                     u82_21:
  5442   00163C  EF4F  F00B         	goto	l2096
  5443   001640                     u82_20:
  5444   001640                     
  5445                           ;scheduler.c: 37:             if (readyQueue.readyQueue[i].task_priority > highest_prior
      +                          ity) {
  5446   001640  5005               	movf	btemp4^0,w,c
  5447   001642  0D6A               	mullw	106
  5448   001644  0EB4               	movlw	low (_readyQueue+4)
  5449   001646  24F3               	addwf	243,w,c
  5450   001648  6ED9               	movwf	fsr2l,c
  5451   00164A  0E00               	movlw	high (_readyQueue+4)
  5452   00164C  20F4               	addwfc	prodh,w,c
  5453   00164E  6EDA               	movwf	fsr2h,c
  5454                           
  5455                           ;stkvar	_highest_priority @ sp[(-3)+2]
  5456   001650  0EFF               	movlw	-1
  5457   001652  CFE3 F001          	movff	plusw1,btemp0
  5458   001656  50DE               	movf	postinc2,w,c
  5459   001658  5C01               	subwf	btemp0^0,w,c
  5460   00165A  B0D8               	btfsc	status,0,c
  5461   00165C  EF32  F00B         	goto	u83_21
  5462   001660  EF34  F00B         	goto	u83_20
  5463   001664                     u83_21:
  5464   001664  EF4F  F00B         	goto	l2096
  5465   001668                     u83_20:
  5466   001668                     
  5467                           ;scheduler.c: 38:                 highest_priority = readyQueue.readyQueue[i].task_prior
      +                          ity;
  5468   001668  5005               	movf	btemp4^0,w,c
  5469   00166A  0D6A               	mullw	106
  5470   00166C  0EB4               	movlw	low (_readyQueue+4)
  5471   00166E  24F3               	addwf	243,w,c
  5472   001670  6ED9               	movwf	fsr2l,c
  5473   001672  0E00               	movlw	high (_readyQueue+4)
  5474   001674  20F4               	addwfc	prodh,w,c
  5475   001676  6EDA               	movwf	fsr2h,c
  5476   001678  50DF               	movf	indf2,w,c
  5477   00167A  6E38               	movwf	btemp55^0,c
  5478                           
  5479                           ;stkvar	_highest_priority @ sp[(-3)+2]
  5480   00167C  0EFF               	movlw	-1
  5481   00167E  C038 FFE3          	movff	btemp55,plusw1
  5482   001682                     
  5483                           ;scheduler.c: 39:                 next_task = &readyQueue.readyQueue[i];
  5484   001682  5005               	movf	btemp4^0,w,c
  5485   001684  0D6A               	mullw	106
  5486   001686  0EB0               	movlw	low _readyQueue
  5487   001688  24F3               	addwf	243,w,c
  5488   00168A  6E37               	movwf	btemp54^0,c
  5489   00168C  0E00               	movlw	high _readyQueue
  5490   00168E  20F4               	addwfc	prodh,w,c
  5491   001690  6E38               	movwf	(btemp54+1)^0,c
  5492                           
  5493                           ;stkvar	_next_task @ sp[(-3)+0]
  5494   001692  0EFE               	movlw	-2
  5495   001694  C038 FFE3          	movff	btemp55,plusw1
  5496   001698  0EFD               	movlw	-3
  5497   00169A  C037 FFE3          	movff	btemp54,plusw1
  5498   00169E                     l2096:
  5499                           
  5500                           ;scheduler.c: 42:     }
  5501   00169E  2A05               	incf	btemp4^0,f,c
  5502   0016A0                     l2098:
  5503   0016A0  EE22  F0C2         	lfsr	2,_readyQueue+530
  5504   0016A4  50DE               	movf	postinc2,w,c
  5505   0016A6  5C05               	subwf	btemp4^0,w,c
  5506   0016A8  A0D8               	btfss	status,0,c
  5507   0016AA  EF59  F00B         	goto	u84_21
  5508   0016AE  EF5B  F00B         	goto	u84_20
  5509   0016B2                     u84_21:
  5510   0016B2  EF10  F00B         	goto	l2088
  5511   0016B6                     u84_20:
  5512   0016B6                     
  5513                           ;scheduler.c: 44:     return next_task;
  5514                           ;stkvar	_next_task @ sp[(-3)+0]
  5515   0016B6  0EFD               	movlw	-3
  5516   0016B8  CFE3 F001          	movff	plusw1,btemp0
  5517   0016BC  0F01               	addlw	1
  5518   0016BE  CFE3 F002          	movff	plusw1,btemp1
  5519   0016C2                     
  5520                           ; _priority_scheduler: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
  5521   0016C2  52E5               	movf	postdec1,f,c
  5522   0016C4  52E5               	movf	postdec1,f,c
  5523   0016C6  52E5               	movf	postdec1,f,c
  5524   0016C8  0012               	return		;funcret
  5525   0016CA                     __end_of_priority_scheduler:
  5526                           	callstack 0
  5527                           
  5528 ;; *************** function ___awmod *****************
  5529 ;; Defined at:
  5530 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\awmod.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  dividend        2    wtemp14  int 
  5533 ;;  divisor         2    wtemp15  int 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  sign            1  [STACK] unsigned char 
  5536 ;;  counter         1    btemp4   unsigned char 
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  2  [STACK] int 
  5539 ;; Registers used:
  5540 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp0, btemp1, btemp4, btemp28, btemp29, btemp30, btemp31
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5546 ;;      Params:         0       0       0       0       0       0       0       0       0
  5547 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5549 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5550 ;;Total ram usage:        0 bytes
  5551 ;; Hardware stack levels used: 1
  5552 ;; Hardware stack levels required when called: 3
  5553 ;; This function calls:
  5554 ;;		Nothing
  5555 ;; This function is called by:
  5556 ;;		_sem_wait
  5557 ;;		_sem_post
  5558 ;;		_read_pipe
  5559 ;;		_write_pipe
  5560 ;; This function uses a reentrant model
  5561 ;;
  5562                           
  5563                           	psect	text32
  5564   0016CA                     __ptext32:
  5565                           	callstack 0
  5566   0016CA                     ___awmod:
  5567                           	callstack 0
  5568                           
  5569                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5570   0016CA  52E6               	movf	postinc1,f,c
  5571   0016CC  6A05               	clrf	btemp4^0,c
  5572   0016CE  BE1E               	btfsc	(btemp28+1)^0,7,c
  5573   0016D0  EF6E  F00B         	goto	u76_20
  5574   0016D4  EF6C  F00B         	goto	u76_21
  5575   0016D8                     u76_21:
  5576   0016D8  EF74  F00B         	goto	l2018
  5577   0016DC                     u76_20:
  5578   0016DC  6C1D               	negf	btemp28^0,c
  5579   0016DE  1E1E               	comf	(btemp28+1)^0,f,c
  5580   0016E0  B0D8               	btfsc	status,0,c
  5581   0016E2  2A1E               	incf	(btemp28+1)^0,f,c
  5582   0016E4  0E01               	movlw	1
  5583   0016E6  6E05               	movwf	btemp4^0,c
  5584   0016E8                     l2018:
  5585   0016E8  BE20               	btfsc	(btemp30+1)^0,7,c
  5586   0016EA  EF7B  F00B         	goto	u77_20
  5587   0016EE  EF79  F00B         	goto	u77_21
  5588   0016F2                     u77_21:
  5589   0016F2  EF7F  F00B         	goto	l2022
  5590   0016F6                     u77_20:
  5591   0016F6  6C1F               	negf	btemp30^0,c
  5592   0016F8  1E20               	comf	(btemp30+1)^0,f,c
  5593   0016FA  B0D8               	btfsc	status,0,c
  5594   0016FC  2A20               	incf	(btemp30+1)^0,f,c
  5595   0016FE                     l2022:
  5596                           
  5597                           ;_sign stored from btemp4
  5598                           ;register	btemp4
  5599                           ;stkvar	_sign @ sp[(-1)+0]
  5600   0016FE  0EFF               	movlw	-1
  5601   001700  C005 FFE3          	movff	btemp4,plusw1
  5602   001704  501F               	movf	btemp30^0,w,c
  5603   001706  1020               	iorwf	(btemp30+1)^0,w,c
  5604   001708  B4D8               	btfsc	status,2,c
  5605   00170A  EF89  F00B         	goto	u78_21
  5606   00170E  EF8B  F00B         	goto	u78_20
  5607   001712                     u78_21:
  5608   001712  EFAF  F00B         	goto	l2040
  5609   001716                     u78_20:
  5610   001716  0E01               	movlw	1
  5611   001718  6E05               	movwf	btemp4^0,c
  5612   00171A  EF93  F00B         	goto	l2030
  5613   00171E                     l2026:
  5614   00171E  90D8               	bcf	status,0,c
  5615   001720  361F               	rlcf	btemp30^0,f,c
  5616   001722  3620               	rlcf	btemp31^0,f,c
  5617   001724  2A05               	incf	btemp4^0,f,c
  5618   001726                     l2030:
  5619   001726  AE20               	btfss	(btemp30+1)^0,7,c
  5620   001728  EF98  F00B         	goto	u79_21
  5621   00172C  EF9A  F00B         	goto	u79_20
  5622   001730                     u79_21:
  5623   001730  EF8F  F00B         	goto	l2026
  5624   001734                     u79_20:
  5625   001734                     l2032:
  5626   001734  501F               	movf	btemp30^0,w,c
  5627   001736  5C1D               	subwf	btemp28^0,w,c
  5628   001738  5020               	movf	(btemp30+1)^0,w,c
  5629   00173A  581E               	subwfb	(btemp28+1)^0,w,c
  5630   00173C  A0D8               	btfss	status,0,c
  5631   00173E  EFA3  F00B         	goto	u80_21
  5632   001742  EFA5  F00B         	goto	u80_20
  5633   001746                     u80_21:
  5634   001746  EFA9  F00B         	goto	l2036
  5635   00174A                     u80_20:
  5636   00174A  501F               	movf	btemp30^0,w,c
  5637   00174C  5E1D               	subwf	btemp28^0,f,c
  5638   00174E  5020               	movf	(btemp30+1)^0,w,c
  5639   001750  5A1E               	subwfb	(btemp28+1)^0,f,c
  5640   001752                     l2036:
  5641   001752  90D8               	bcf	status,0,c
  5642   001754  3220               	rrcf	btemp31^0,f,c
  5643   001756  321F               	rrcf	btemp30^0,f,c
  5644   001758  2E05               	decfsz	btemp4^0,f,c
  5645   00175A  EF9A  F00B         	goto	l2032
  5646   00175E                     l2040:
  5647                           
  5648                           ; _sign loaded to btemp4
  5649                           ;stkvar	_sign @ sp[(-1)+0]
  5650                           ;register	btemp4
  5651   00175E  0EFF               	movlw	-1
  5652   001760  CFE3 F005          	movff	plusw1,btemp4
  5653   001764  5005               	movf	btemp4^0,w,c
  5654   001766  B4D8               	btfsc	status,2,c
  5655   001768  EFB8  F00B         	goto	u81_21
  5656   00176C  EFBA  F00B         	goto	u81_20
  5657   001770                     u81_21:
  5658   001770  EFBE  F00B         	goto	l2044
  5659   001774                     u81_20:
  5660   001774  6C1D               	negf	btemp28^0,c
  5661   001776  1E1E               	comf	(btemp28+1)^0,f,c
  5662   001778  B0D8               	btfsc	status,0,c
  5663   00177A  2A1E               	incf	(btemp28+1)^0,f,c
  5664   00177C                     l2044:
  5665   00177C  C01D F001          	movff	btemp28,btemp0
  5666   001780  C01E F002          	movff	btemp28+1,btemp1
  5667   001784                     
  5668                           ; ___awmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  5669   001784  52E5               	movf	postdec1,f,c
  5670   001786  0012               	return		;funcret
  5671   001788                     __end_of___awmod:
  5672                           	callstack 0
  5673                           
  5674 ;; *************** function _tarefa_controle_motores *****************
  5675 ;; Defined at:
  5676 ;;		line 94 in file "user_app.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;		None
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;		None
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  1  [STACK] void 
  5683 ;; Registers used:
  5684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp28, btemp2
      +9, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, prodh, cstack
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5690 ;;      Params:         0       0       0       0       0       0       0       0       0
  5691 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5692 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5693 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5694 ;;Total ram usage:        0 bytes
  5695 ;; Hardware stack levels used: 1
  5696 ;; Hardware stack levels required when called: 6
  5697 ;; This function calls:
  5698 ;;		_os_delay
  5699 ;;		_pwm_set_duty_cycle_motor1
  5700 ;;		_pwm_set_duty_cycle_motor2
  5701 ;;		_pwm_set_duty_cycle_motor3
  5702 ;;		_pwm_set_duty_cycle_motor4
  5703 ;; This function is called by:
  5704 ;;		_main
  5705 ;; This function uses a reentrant model
  5706 ;;
  5707                           
  5708                           	psect	text33
  5709   001C00                     __ptext33:
  5710                           	callstack 0
  5711   001C00                     _tarefa_controle_motores:
  5712                           	callstack 19
  5713   001C00                     l129:
  5714   001C00                     
  5715                           ;user_app.c: 99:         pwm_set_duty_cycle_motor1(velocidade_motores.motor1_speed);
  5716                           ;register	wtemp14
  5717   001C00  C039  F01D         	movff	_velocidade_motores,btemp28
  5718   001C04  C03A  F01E         	movff	_velocidade_motores+1,btemp29
  5719   001C08  ECC7  F00E         	call	_pwm_set_duty_cycle_motor1	;wreg free
  5720                           
  5721                           ;user_app.c: 100:         pwm_set_duty_cycle_motor2(velocidade_motores.motor2_speed);
  5722                           ;register	wtemp14
  5723   001C0C  C03B  F01D         	movff	_velocidade_motores+2,btemp28
  5724   001C10  C03C  F01E         	movff	_velocidade_motores+3,btemp29
  5725   001C14  ECB6  F00E         	call	_pwm_set_duty_cycle_motor2	;wreg free
  5726                           
  5727                           ;user_app.c: 101:         pwm_set_duty_cycle_motor3(velocidade_motores.motor3_speed);
  5728                           ;register	wtemp14
  5729   001C18  C03D  F01D         	movff	_velocidade_motores+4,btemp28
  5730   001C1C  C03E  F01E         	movff	_velocidade_motores+5,btemp29
  5731   001C20  ECA5  F00E         	call	_pwm_set_duty_cycle_motor3	;wreg free
  5732                           
  5733                           ;user_app.c: 102:         pwm_set_duty_cycle_motor4(velocidade_motores.motor4_speed);
  5734                           ;register	wtemp14
  5735   001C24  C03F  F01D         	movff	_velocidade_motores+6,btemp28
  5736   001C28  C040  F01E         	movff	_velocidade_motores+7,btemp29
  5737   001C2C  EC94  F00E         	call	_pwm_set_duty_cycle_motor4	;wreg free
  5738   001C30                     
  5739                           ;user_app.c: 104:         os_delay(100);
  5740                           ;register	btemp12
  5741   001C30  0E64               	movlw	100
  5742   001C32  6E0D               	movwf	btemp12^0,c
  5743   001C34  EC26  F007         	call	_os_delay	;wreg free
  5744   001C38  EF00  F00E         	goto	l129
  5745                           
  5746                           ; _tarefa_controle_motores: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 0, argsize = 0, vargsize = 0
  5747   001C3C  0012               	return		;funcret
  5748   001C3E                     __end_of_tarefa_controle_motores:
  5749                           	callstack 0
  5750                           
  5751 ;; *************** function _tarefa_leitura_sensores *****************
  5752 ;; Defined at:
  5753 ;;		line 109 in file "user_app.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;		None
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;  dados_sensor    4  [STACK] struct .
  5758 ;; Return value:  Size  Location     Type
  5759 ;;                  1  [STACK] void 
  5760 ;; Registers used:
  5761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp13, btemp1
      +4, btemp15, btemp20, btemp28, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, pr
      +odh, cstack
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5767 ;;      Params:         0       0       0       0       0       0       0       0       0
  5768 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5770 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5771 ;;Total ram usage:        0 bytes
  5772 ;; Hardware stack levels used: 1
  5773 ;; Hardware stack levels required when called: 6
  5774 ;; This function calls:
  5775 ;;		_adc_read
  5776 ;;		_os_delay
  5777 ;;		_set_channel
  5778 ;;		_write_pipe
  5779 ;; This function is called by:
  5780 ;;		_main
  5781 ;; This function uses a reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text34
  5785   001A82                     __ptext34:
  5786                           	callstack 0
  5787   001A82                     _tarefa_leitura_sensores:
  5788                           	callstack 0
  5789                           
  5790                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5791   001A82  52E6               	movf	postinc1,f,c
  5792   001A84  52E6               	movf	postinc1,f,c
  5793   001A86  52E6               	movf	postinc1,f,c
  5794   001A88  52E6               	movf	postinc1,f,c
  5795   001A8A                     l135:
  5796   001A8A                     
  5797                           ;user_app.c: 114:         set_channel(CHANNEL_0);
  5798                           ;register	btemp28
  5799   001A8A  0E00               	movlw	0
  5800   001A8C  6E1D               	movwf	btemp28^0,c
  5801   001A8E  EC0D  F00F         	call	_set_channel	;wreg free
  5802   001A92                     
  5803                           ;user_app.c: 115:         dados_sensores.giroscopio = adc_read();
  5804   001A92  ECF6  F00E         	call	_adc_read	;wreg free
  5805                           
  5806                           ;stkvar	_dados_sensores @ sp[(-4)+0]
  5807   001A96  0EFC               	movlw	-4
  5808   001A98  C001 FFE3          	movff	btemp0,plusw1
  5809   001A9C  0F01               	addlw	1
  5810   001A9E  C002 FFE3          	movff	btemp1,plusw1
  5811   001AA2                     
  5812                           ;user_app.c: 117:         set_channel(CHANNEL_1);
  5813                           ;register	btemp28
  5814   001AA2  0E01               	movlw	1
  5815   001AA4  6E1D               	movwf	btemp28^0,c
  5816   001AA6  EC0D  F00F         	call	_set_channel	;wreg free
  5817   001AAA                     
  5818                           ;user_app.c: 118:         dados_sensores.acelerometro = adc_read();
  5819   001AAA  ECF6  F00E         	call	_adc_read	;wreg free
  5820                           
  5821                           ;stkvar	_dados_sensores @ sp[(-4)+0]
  5822   001AAE  0EFE               	movlw	254
  5823   001AB0  24E1               	addwf	fsr1l,w,c
  5824   001AB2  6ED9               	movwf	fsr2l,c
  5825   001AB4  0EFF               	movlw	255
  5826   001AB6  20E2               	addwfc	fsr1h,w,c
  5827   001AB8  6EDA               	movwf	fsr2h,c
  5828   001ABA  C001 FFDE          	movff	btemp0,postinc2
  5829   001ABE  C002 FFDD          	movff	btemp1,postdec2
  5830   001AC2                     
  5831                           ;user_app.c: 121:         write_pipe(&pipe_sensores, &dados_sensores, sizeof(sensor_data
      +                          _t));
  5832                           ;register	btemp12
  5833   001AC2  0E81               	movlw	low _pipe_sensores
  5834   001AC4  6E0D               	movwf	btemp12^0,c
  5835                           
  5836                           ;register	btemp13
  5837   001AC6  0E04               	movlw	4
  5838   001AC8  6E0E               	movwf	btemp13^0,c
  5839                           
  5840                           ;stkvar	_dados_sensores @ sp[(-4)+0]
  5841   001ACA  0EFC               	movlw	252
  5842   001ACC  24E1               	addwf	fsr1l,w,c
  5843   001ACE  6E37               	movwf	btemp54^0,c
  5844   001AD0  0EFF               	movlw	255
  5845   001AD2  20E2               	addwfc	fsr1h,w,c
  5846   001AD4  6E38               	movwf	btemp55^0,c
  5847                           
  5848                           ;register	wtemp7
  5849   001AD6  C037 F00F          	movff	btemp54,btemp14
  5850   001ADA  C038 F010          	movff	btemp55,btemp15
  5851   001ADE  EC21  F00A         	call	_write_pipe	;wreg free
  5852   001AE2                     
  5853                           ;user_app.c: 123:         os_delay(150);
  5854                           ;register	btemp12
  5855   001AE2  0E96               	movlw	150
  5856   001AE4  6E0D               	movwf	btemp12^0,c
  5857   001AE6  EC26  F007         	call	_os_delay	;wreg free
  5858   001AEA  EF45  F00D         	goto	l135
  5859                           
  5860                           ; _tarefa_leitura_sensores: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 0, argsize = 0, vargsize = 0
  5861   001AEE  52E5               	movf	postdec1,f,c
  5862   001AF0  52E5               	movf	postdec1,f,c
  5863   001AF2  52E5               	movf	postdec1,f,c
  5864   001AF4  52E5               	movf	postdec1,f,c
  5865   001AF6  0012               	return		;funcret
  5866   001AF8                     __end_of_tarefa_leitura_sensores:
  5867                           	callstack 0
  5868                           
  5869 ;; *************** function _write_pipe *****************
  5870 ;; Defined at:
  5871 ;;		line 35 in file "pipe.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;  p               1    btemp12  PTR struct pipe
  5874 ;;		 -> pipe_bateria(33), pipe_sensores(33), 
  5875 ;;  buffer          2    wtemp7   PTR void 
  5876 ;;		 -> nivel_bateria(2), dados_sensores(4), 
  5877 ;;  size            1    btemp13  unsigned char 
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;  size            1    btemp13  unsigned char 
  5880 ;;  p               1    btemp12  PTR struct pipe
  5881 ;;		 -> pipe_bateria(33), pipe_sensores(33), 
  5882 ;;  i               1  [STACK] unsigned char 
  5883 ;;  data_buffer     2  [STACK] PTR unsigned char 
  5884 ;;		 -> nivel_bateria(2), dados_sensores(4), 
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  1  [STACK] void 
  5887 ;; Registers used:
  5888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp13, btemp1
      +4, btemp15, btemp20, btemp28, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, pr
      +odh, cstack
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5894 ;;      Params:         0       0       0       0       0       0       0       0       0
  5895 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5897 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5898 ;;Total ram usage:        0 bytes
  5899 ;; Hardware stack levels used: 1
  5900 ;; Hardware stack levels required when called: 5
  5901 ;; This function calls:
  5902 ;;		___awmod
  5903 ;;		_sem_post
  5904 ;;		_sem_wait
  5905 ;; This function is called by:
  5906 ;;		_tarefa_leitura_sensores
  5907 ;;		_tarefa_monitoramento_bateria
  5908 ;; This function uses a reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text35
  5912   001442                     __ptext35:
  5913                           	callstack 0
  5914   001442                     _write_pipe:
  5915                           	callstack 0
  5916                           
  5917                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5918   001442  52E6               	movf	postinc1,f,c
  5919   001444  52E6               	movf	postinc1,f,c
  5920   001446  52E6               	movf	postinc1,f,c
  5921   001448                     
  5922                           ;pipe.c: 35: void write_pipe(pipe_t *p, void *buffer, uint8_t size);pipe.c: 36: {;pipe.c
      +                          : 37:     char *data_buffer = (char*)buffer;
  5923                           ;stkvar	_data_buffer @ sp[(-3)+1]
  5924   001448  0EFF               	movlw	-1
  5925   00144A  C010 FFE3          	movff	btemp15,plusw1
  5926   00144E  0EFE               	movlw	-2
  5927   001450  C00F FFE3          	movff	btemp14,plusw1
  5928   001454                     
  5929                           ;pipe.c: 38:     for (uint8_t i = 0; i < size; i++) {
  5930   001454  6A05               	clrf	btemp4^0,c
  5931   001456  EF85  F00A         	goto	l2298
  5932   00145A                     l372:
  5933                           
  5934                           ;pipe.c: 39:         (INTCONbits.GIE = 0);
  5935   00145A  9EF2               	bcf	242,7,c	;volatile
  5936                           
  5937                           ;_i stored from btemp4
  5938                           ;register	btemp4
  5939                           ;stkvar	_i @ sp[(-3)+0]
  5940   00145C  0EFD               	movlw	-3
  5941   00145E  C005 FFE3          	movff	btemp4,plusw1
  5942   001462                     
  5943                           ;pipe.c: 40:         sem_wait(&p->pipe_sem_write);
  5944   001462  500D               	movf	btemp12^0,w,c
  5945   001464  0F13               	addlw	19
  5946                           
  5947                           ;register	btemp20
  5948   001466  6E15               	movwf	btemp20^0,c
  5949   001468  ECCB  F005         	call	_sem_wait	;wreg free
  5950   00146C                     
  5951                           ;pipe.c: 41:         p->pipe_data[p->pipe_pos_write] = data_buffer[i];
  5952                           ;stkvar	_i @ sp[(-3)+0]
  5953   00146C  0EFD               	movlw	-3
  5954   00146E  CFE3 F038          	movff	plusw1,btemp55
  5955                           
  5956                           ;stkvar	_data_buffer @ sp[(-3)+1]
  5957   001472  0EFE               	movlw	-2
  5958   001474  CFE3 F035          	movff	plusw1,btemp52
  5959   001478  0F01               	addlw	1
  5960   00147A  CFE3 F036          	movff	plusw1,btemp53
  5961   00147E  5038               	movf	btemp55^0,w,c
  5962   001480  2435               	addwf	btemp52^0,w,c
  5963   001482  6ED9               	movwf	fsr2l,c
  5964   001484  0E00               	movlw	0
  5965   001486  2036               	addwfc	btemp53^0,w,c
  5966   001488  6EDA               	movwf	fsr2h,c
  5967   00148A  500D               	movf	btemp12^0,w,c
  5968   00148C  6EE9               	movwf	fsr0l,c
  5969   00148E  6AEA               	clrf	fsr0h,c
  5970   001490  0E01               	movlw	1
  5971   001492  26E9               	addwf	fsr0l,f,c
  5972   001494  50EF               	movf	indf0,w,c
  5973   001496  6E38               	movwf	btemp55^0,c
  5974   001498  500D               	movf	btemp12^0,w,c
  5975   00149A  6EE9               	movwf	fsr0l,c
  5976   00149C  6AEA               	clrf	fsr0h,c
  5977   00149E  0E02               	movlw	2
  5978   0014A0  26E9               	addwf	fsr0l,f,c
  5979   0014A2  CFEE F035          	movff	postinc0,btemp52
  5980   0014A6  CFED F036          	movff	postdec0,btemp53
  5981   0014AA  5038               	movf	btemp55^0,w,c
  5982   0014AC  2435               	addwf	btemp52^0,w,c
  5983   0014AE  6EE9               	movwf	fsr0l,c
  5984   0014B0  0E00               	movlw	0
  5985   0014B2  2036               	addwfc	btemp53^0,w,c
  5986   0014B4  6EEA               	movwf	fsr0h,c
  5987   0014B6  CFDF FFEF          	movff	indf2,indf0
  5988   0014BA                     
  5989                           ;pipe.c: 42:         p->pipe_pos_write = (p->pipe_pos_write + 1) % p->pipe_size;
  5990   0014BA  500D               	movf	btemp12^0,w,c
  5991   0014BC  6ED9               	movwf	fsr2l,c
  5992   0014BE  6ADA               	clrf	fsr2h,c
  5993   0014C0  0E01               	movlw	1
  5994   0014C2  26D9               	addwf	fsr2l,f,c
  5995   0014C4  500D               	movf	btemp12^0,w,c
  5996   0014C6  6EE9               	movwf	fsr0l,c
  5997   0014C8  6AEA               	clrf	fsr0h,c
  5998   0014CA  0E01               	movlw	1
  5999   0014CC  26E9               	addwf	fsr0l,f,c
  6000   0014CE  50EF               	movf	indf0,w,c
  6001   0014D0  6E38               	movwf	btemp55^0,c
  6002   0014D2  0E01               	movlw	1
  6003   0014D4  2438               	addwf	btemp55^0,w,c
  6004                           
  6005                           ;register	wtemp14
  6006   0014D6  6E1D               	movwf	btemp28^0,c
  6007   0014D8  6A1E               	clrf	(btemp28+1)^0,c
  6008   0014DA  0E00               	movlw	0
  6009   0014DC  221E               	addwfc	(btemp28+1)^0,f,c
  6010   0014DE  500D               	movf	btemp12^0,w,c
  6011   0014E0  6EE9               	movwf	fsr0l,c
  6012   0014E2  6AEA               	clrf	fsr0h,c
  6013   0014E4  0E04               	movlw	4
  6014   0014E6  26E9               	addwf	fsr0l,f,c
  6015   0014E8  50EF               	movf	indf0,w,c
  6016                           
  6017                           ;register	wtemp15
  6018   0014EA  6E1F               	movwf	btemp30^0,c
  6019   0014EC  6A20               	clrf	btemp31^0,c
  6020   0014EE  EC65  F00B         	call	___awmod	;wreg free
  6021   0014F2  5001               	movf	btemp0^0,w,c
  6022   0014F4  6EDF               	movwf	indf2,c
  6023   0014F6                     
  6024                           ;pipe.c: 43:         sem_post(&p->pipe_sem_read);
  6025   0014F6  500D               	movf	btemp12^0,w,c
  6026   0014F8  0F05               	addlw	5
  6027                           
  6028                           ;register	btemp20
  6029   0014FA  6E15               	movwf	btemp20^0,c
  6030   0014FC  EC6F  F00C         	call	_sem_post	;wreg free
  6031   001500                     
  6032                           ;pipe.c: 44:         (INTCONbits.GIE = 1);
  6033   001500  8EF2               	bsf	242,7,c	;volatile
  6034   001502                     
  6035                           ; _i loaded to btemp4
  6036                           ;stkvar	_i @ sp[(-3)+0]
  6037                           ;register	btemp4
  6038   001502  0EFD               	movlw	-3
  6039   001504  CFE3 F005          	movff	plusw1,btemp4
  6040                           
  6041                           ;pipe.c: 45:     }
  6042   001508  2A05               	incf	btemp4^0,f,c
  6043   00150A                     l2298:
  6044   00150A  500E               	movf	btemp13^0,w,c
  6045   00150C  5C05               	subwf	btemp4^0,w,c
  6046   00150E  A0D8               	btfss	status,0,c
  6047   001510  EF8C  F00A         	goto	u106_21
  6048   001514  EF8E  F00A         	goto	u106_20
  6049   001518                     u106_21:
  6050   001518  EF2D  F00A         	goto	l372
  6051   00151C                     u106_20:
  6052   00151C                     
  6053                           ; _write_pipe: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6054   00151C  52E5               	movf	postdec1,f,c
  6055   00151E  52E5               	movf	postdec1,f,c
  6056   001520  52E5               	movf	postdec1,f,c
  6057   001522  0012               	return		;funcret
  6058   001524                     __end_of_write_pipe:
  6059                           	callstack 0
  6060                           
  6061 ;; *************** function _adc_read *****************
  6062 ;; Defined at:
  6063 ;;		line 29 in file "io.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;		None
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;		None
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  2  [STACK] int 
  6070 ;; Registers used:
  6071 ;;		btemp0, btemp1
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6077 ;;      Params:         0       0       0       0       0       0       0       0       0
  6078 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6080 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6081 ;;Total ram usage:        0 bytes
  6082 ;; Hardware stack levels used: 1
  6083 ;; Hardware stack levels required when called: 3
  6084 ;; This function calls:
  6085 ;;		Nothing
  6086 ;; This function is called by:
  6087 ;;		_tarefa_leitura_sensores
  6088 ;;		_tarefa_monitoramento_bateria
  6089 ;; This function uses a reentrant model
  6090 ;;
  6091                           
  6092                           	psect	text36
  6093   001DEC                     __ptext36:
  6094                           	callstack 0
  6095   001DEC                     _adc_read:
  6096                           	callstack 21
  6097   001DEC                     
  6098                           ;io.c: 31:     ADCON0bits.GO = 1;
  6099   001DEC  82C2               	bsf	194,1,c	;volatile
  6100   001DEE                     l457:
  6101   001DEE  B2C2               	btfsc	194,1,c	;volatile
  6102   001DF0  EFFC  F00E         	goto	u105_21
  6103   001DF4  EFFE  F00E         	goto	u105_20
  6104   001DF8                     u105_21:
  6105   001DF8  EFF7  F00E         	goto	l457
  6106   001DFC                     u105_20:
  6107   001DFC                     
  6108                           ;io.c: 33:     return ADRES;
  6109   001DFC  CFC3 F001          	movff	4035,btemp0	;volatile
  6110   001E00  CFC4 F002          	movff	4036,btemp1	;volatile
  6111   001E04                     
  6112                           ; _adc_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  6113   001E04  0012               	return		;funcret
  6114   001E06                     __end_of_adc_read:
  6115                           	callstack 0
  6116                           
  6117 ;; *************** function _tarefa_monitoramento_bateria *****************
  6118 ;; Defined at:
  6119 ;;		line 128 in file "user_app.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;		None
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;  nivel_bateri    2  [STACK] int 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  1  [STACK] void 
  6126 ;; Registers used:
  6127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp13, btemp1
      +4, btemp15, btemp20, btemp28, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, pr
      +odh, cstack
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6133 ;;      Params:         0       0       0       0       0       0       0       0       0
  6134 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6135 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6136 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6137 ;;Total ram usage:        0 bytes
  6138 ;; Hardware stack levels used: 1
  6139 ;; Hardware stack levels required when called: 6
  6140 ;; This function calls:
  6141 ;;		_adc_read
  6142 ;;		_os_delay
  6143 ;;		_set_channel
  6144 ;;		_write_pipe
  6145 ;; This function is called by:
  6146 ;;		_main
  6147 ;; This function uses a reentrant model
  6148 ;;
  6149                           
  6150                           	psect	text37
  6151   001BB2                     __ptext37:
  6152                           	callstack 0
  6153   001BB2                     _tarefa_monitoramento_bateria:
  6154                           	callstack 0
  6155                           
  6156                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6157   001BB2  52E6               	movf	postinc1,f,c
  6158   001BB4  52E6               	movf	postinc1,f,c
  6159   001BB6                     l141:
  6160   001BB6                     
  6161                           ;user_app.c: 133:         set_channel(CHANNEL_2);
  6162                           ;register	btemp28
  6163   001BB6  0E02               	movlw	2
  6164   001BB8  6E1D               	movwf	btemp28^0,c
  6165   001BBA  EC0D  F00F         	call	_set_channel	;wreg free
  6166   001BBE                     
  6167                           ;user_app.c: 134:         nivel_bateria = adc_read();
  6168   001BBE  ECF6  F00E         	call	_adc_read	;wreg free
  6169                           
  6170                           ;stkvar	_nivel_bateria @ sp[(-2)+0]
  6171   001BC2  0EFE               	movlw	-2
  6172   001BC4  C001 FFE3          	movff	btemp0,plusw1
  6173   001BC8  0F01               	addlw	1
  6174   001BCA  C002 FFE3          	movff	btemp1,plusw1
  6175   001BCE                     
  6176                           ;user_app.c: 137:         write_pipe(&pipe_bateria, &nivel_bateria, sizeof(int));
  6177                           ;register	btemp12
  6178   001BCE  0E60               	movlw	low _pipe_bateria
  6179   001BD0  6E0D               	movwf	btemp12^0,c
  6180                           
  6181                           ;register	btemp13
  6182   001BD2  0E02               	movlw	2
  6183   001BD4  6E0E               	movwf	btemp13^0,c
  6184                           
  6185                           ;stkvar	_nivel_bateria @ sp[(-2)+0]
  6186   001BD6  0EFE               	movlw	254
  6187   001BD8  24E1               	addwf	fsr1l,w,c
  6188   001BDA  6E37               	movwf	btemp54^0,c
  6189   001BDC  0EFF               	movlw	255
  6190   001BDE  20E2               	addwfc	fsr1h,w,c
  6191   001BE0  6E38               	movwf	btemp55^0,c
  6192                           
  6193                           ;register	wtemp7
  6194   001BE2  C037 F00F          	movff	btemp54,btemp14
  6195   001BE6  C038 F010          	movff	btemp55,btemp15
  6196   001BEA  EC21  F00A         	call	_write_pipe	;wreg free
  6197   001BEE                     
  6198                           ;user_app.c: 140:         os_delay(250);
  6199                           ;register	btemp12
  6200   001BEE  0EFA               	movlw	250
  6201   001BF0  6E0D               	movwf	btemp12^0,c
  6202   001BF2  EC26  F007         	call	_os_delay	;wreg free
  6203   001BF6  EFDB  F00D         	goto	l141
  6204                           
  6205                           ; _tarefa_monitoramento_bateria: autosize = 2, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
  6206   001BFA  52E5               	movf	postdec1,f,c
  6207   001BFC  52E5               	movf	postdec1,f,c
  6208   001BFE  0012               	return		;funcret
  6209   001C00                     __end_of_tarefa_monitoramento_bateria:
  6210                           	callstack 0
  6211                           
  6212 ;; *************** function _ISR_TIMER_0 *****************
  6213 ;; Defined at:
  6214 ;;		line 28 in file "hardware.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;		None
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;		None
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  1    wreg      void 
  6221 ;; Registers used:
  6222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp54, btemp55, prodl,
      + prodh
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6228 ;;      Params:         0       0       0       0       0       0       0       0       0
  6229 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6230 ;;      Temps:         14       0       0       0       0       0       0       0       0
  6231 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6232 ;;Total ram usage:       14 bytes
  6233 ;; Hardware stack levels used: 1
  6234 ;; Hardware stack levels required when called: 2
  6235 ;; This function calls:
  6236 ;;		_os_task_time_decrease
  6237 ;;		_scheduler
  6238 ;; This function is called by:
  6239 ;;		Interrupt level 2
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           	psect	intcode
  6244   000008                     __pintcode:
  6245                           	callstack 0
  6246   000008                     _ISR_TIMER_0:
  6247                           	callstack 18
  6248                           
  6249                           ;incstack = 0
  6250   000008  ED01  F004         	call	int_func,f	;refresh shadow registers
  6251                           
  6252                           	psect	intcode_body
  6253   000802                     __pintcode_body:
  6254                           	callstack 18
  6255   000802                     int_func:
  6256                           	callstack 18
  6257   000802  0006               	pop		; remove dummy address from shadow register refresh
  6258   000804  CFE9 F051          	movff	fsr0l,??_ISR_TIMER_0+6
  6259   000808  CFEA F052          	movff	fsr0h,??_ISR_TIMER_0+7
  6260   00080C  CFE1 F053          	movff	fsr1l,??_ISR_TIMER_0+8
  6261   000810  CFE2 F054          	movff	fsr1h,??_ISR_TIMER_0+9
  6262   000814  CFD9 F055          	movff	fsr2l,??_ISR_TIMER_0+10
  6263   000818  CFDA F056          	movff	fsr2h,??_ISR_TIMER_0+11
  6264   00081C  CFF3 F057          	movff	prodl,??_ISR_TIMER_0+12
  6265   000820  CFF4 F058          	movff	prodh,??_ISR_TIMER_0+13
  6266   000824  EE16  F063         	lfsr	1,___inthi_sp
  6267   000828  C001 FFE6          	movff	btemp0,postinc1
  6268   00082C  C002 FFE6          	movff	btemp1,postinc1
  6269   000830  C005 FFE6          	movff	btemp4,postinc1
  6270   000834  C037 FFE6          	movff	btemp54,postinc1
  6271   000838  C038 FFE6          	movff	btemp55,postinc1
  6272   00083C                     
  6273                           ;hardware.c: 32:     if (PIR1bits.TMR1IF == 1) {
  6274   00083C  A09E               	btfss	158,0,c	;volatile
  6275   00083E  EF23  F004         	goto	i2u108_41
  6276   000842  EF25  F004         	goto	i2u108_40
  6277   000846                     i2u108_41:
  6278   000846  EF89  F004         	goto	i2l2366
  6279   00084A                     i2u108_40:
  6280   00084A                     
  6281                           ;hardware.c: 33:         PIR1bits.TMR1IF = 0;
  6282   00084A  909E               	bcf	158,0,c	;volatile
  6283   00084C                     
  6284                           ;hardware.c: 34:         TMR1 = 65535 - 500;
  6285   00084C  0EFE               	movlw	254
  6286   00084E  6ECF               	movwf	207,c	;volatile
  6287   000850  0E0B               	movlw	11
  6288   000852  6ECE               	movwf	206,c	;volatile
  6289   000854                     
  6290                           ;hardware.c: 36:         static uint16_t pwm_cnt = 0;;hardware.c: 37:         pwm_cnt++;
  6291   000854  4A41               	infsnz	ISR_TIMER_0@pwm_cnt^0,f,c
  6292   000856  2A42               	incf	(ISR_TIMER_0@pwm_cnt+1)^0,f,c
  6293   000858                     
  6294                           ;hardware.c: 38:         if (pwm_cnt >= 1024) pwm_cnt = 0;
  6295   000858  0E04               	movlw	4
  6296   00085A  5C42               	subwf	(ISR_TIMER_0@pwm_cnt+1)^0,w,c
  6297   00085C  A0D8               	btfss	status,0,c
  6298   00085E  EF33  F004         	goto	i2u109_41
  6299   000862  EF35  F004         	goto	i2u109_40
  6300   000866                     i2u109_41:
  6301   000866  EF37  F004         	goto	i2l2364
  6302   00086A                     i2u109_40:
  6303   00086A  6A41               	clrf	ISR_TIMER_0@pwm_cnt^0,c
  6304   00086C  6A42               	clrf	(ISR_TIMER_0@pwm_cnt+1)^0,c
  6305   00086E                     i2l2364:
  6306                           
  6307                           ;hardware.c: 41:         LATDbits.LATD0 = (pwm_cnt < motor_a_duty) ? 1 : 0;
  6308   00086E  5049               	movf	_motor_a_duty^0,w,c
  6309   000870  5C41               	subwf	ISR_TIMER_0@pwm_cnt^0,w,c
  6310   000872  504A               	movf	(_motor_a_duty+1)^0,w,c
  6311   000874  5842               	subwfb	(ISR_TIMER_0@pwm_cnt+1)^0,w,c
  6312   000876  A0D8               	btfss	status,0,c
  6313   000878  EF40  F004         	goto	i2u110_41
  6314   00087C  EF44  F004         	goto	i2u110_40
  6315   000880                     i2u110_41:
  6316   000880  6A4B               	clrf	??_ISR_TIMER_0^0,c
  6317   000882  2A4B               	incf	??_ISR_TIMER_0^0,f,c
  6318   000884  EF45  F004         	goto	i2u111_48
  6319   000888                     i2u110_40:
  6320   000888  6A4B               	clrf	??_ISR_TIMER_0^0,c
  6321   00088A                     i2u111_48:
  6322   00088A  508C               	movf	140,w,c	;volatile
  6323   00088C  184B               	xorwf	??_ISR_TIMER_0^0,w,c
  6324   00088E  0BFE               	andlw	-2
  6325   000890  184B               	xorwf	??_ISR_TIMER_0^0,w,c
  6326   000892  6E8C               	movwf	140,c	;volatile
  6327                           
  6328                           ;hardware.c: 42:         LATDbits.LATD1 = (pwm_cnt < motor_b_duty) ? 1 : 0;
  6329   000894  5047               	movf	_motor_b_duty^0,w,c
  6330   000896  5C41               	subwf	ISR_TIMER_0@pwm_cnt^0,w,c
  6331   000898  5048               	movf	(_motor_b_duty+1)^0,w,c
  6332   00089A  5842               	subwfb	(ISR_TIMER_0@pwm_cnt+1)^0,w,c
  6333   00089C  A0D8               	btfss	status,0,c
  6334   00089E  EF53  F004         	goto	i2u112_41
  6335   0008A2  EF57  F004         	goto	i2u112_40
  6336   0008A6                     i2u112_41:
  6337   0008A6  6A4B               	clrf	??_ISR_TIMER_0^0,c
  6338   0008A8  2A4B               	incf	??_ISR_TIMER_0^0,f,c
  6339   0008AA  EF58  F004         	goto	i2u113_48
  6340   0008AE                     i2u112_40:
  6341   0008AE  6A4B               	clrf	??_ISR_TIMER_0^0,c
  6342   0008B0                     i2u113_48:
  6343   0008B0  464B               	rlncf	??_ISR_TIMER_0^0,f,c
  6344   0008B2  508C               	movf	140,w,c	;volatile
  6345   0008B4  184B               	xorwf	??_ISR_TIMER_0^0,w,c
  6346   0008B6  0BFD               	andlw	-3
  6347   0008B8  184B               	xorwf	??_ISR_TIMER_0^0,w,c
  6348   0008BA  6E8C               	movwf	140,c	;volatile
  6349                           
  6350                           ;hardware.c: 43:         LATDbits.LATD2 = (pwm_cnt < motor_c_duty) ? 1 : 0;
  6351   0008BC  5045               	movf	_motor_c_duty^0,w,c
  6352   0008BE  5C41               	subwf	ISR_TIMER_0@pwm_cnt^0,w,c
  6353   0008C0  5046               	movf	(_motor_c_duty+1)^0,w,c
  6354   0008C2  5842               	subwfb	(ISR_TIMER_0@pwm_cnt+1)^0,w,c
  6355   0008C4  A0D8               	btfss	status,0,c
  6356   0008C6  EF67  F004         	goto	i2u114_41
  6357   0008CA  EF6B  F004         	goto	i2u114_40
  6358   0008CE                     i2u114_41:
  6359   0008CE  6A4B               	clrf	??_ISR_TIMER_0^0,c
  6360   0008D0  2A4B               	incf	??_ISR_TIMER_0^0,f,c
  6361   0008D2  EF6C  F004         	goto	i2u115_48
  6362   0008D6                     i2u114_40:
  6363   0008D6  6A4B               	clrf	??_ISR_TIMER_0^0,c
  6364   0008D8                     i2u115_48:
  6365   0008D8  464B               	rlncf	??_ISR_TIMER_0^0,f,c
  6366   0008DA  464B               	rlncf	??_ISR_TIMER_0^0,f,c
  6367   0008DC  508C               	movf	140,w,c	;volatile
  6368   0008DE  184B               	xorwf	??_ISR_TIMER_0^0,w,c
  6369   0008E0  0BFB               	andlw	-5
  6370   0008E2  184B               	xorwf	??_ISR_TIMER_0^0,w,c
  6371   0008E4  6E8C               	movwf	140,c	;volatile
  6372                           
  6373                           ;hardware.c: 44:         LATDbits.LATD3 = (pwm_cnt < motor_d_duty) ? 1 : 0;
  6374   0008E6  5043               	movf	_motor_d_duty^0,w,c
  6375   0008E8  5C41               	subwf	ISR_TIMER_0@pwm_cnt^0,w,c
  6376   0008EA  5044               	movf	(_motor_d_duty+1)^0,w,c
  6377   0008EC  5842               	subwfb	(ISR_TIMER_0@pwm_cnt+1)^0,w,c
  6378   0008EE  A0D8               	btfss	status,0,c
  6379   0008F0  EF7C  F004         	goto	i2u116_41
  6380   0008F4  EF80  F004         	goto	i2u116_40
  6381   0008F8                     i2u116_41:
  6382   0008F8  6A4B               	clrf	??_ISR_TIMER_0^0,c
  6383   0008FA  2A4B               	incf	??_ISR_TIMER_0^0,f,c
  6384   0008FC  EF81  F004         	goto	i2u117_48
  6385   000900                     i2u116_40:
  6386   000900  6A4B               	clrf	??_ISR_TIMER_0^0,c
  6387   000902                     i2u117_48:
  6388   000902  464B               	rlncf	??_ISR_TIMER_0^0,f,c
  6389   000904  464B               	rlncf	??_ISR_TIMER_0^0,f,c
  6390   000906  464B               	rlncf	??_ISR_TIMER_0^0,f,c
  6391   000908  508C               	movf	140,w,c	;volatile
  6392   00090A  184B               	xorwf	??_ISR_TIMER_0^0,w,c
  6393   00090C  0BF7               	andlw	-9
  6394   00090E  184B               	xorwf	??_ISR_TIMER_0^0,w,c
  6395   000910  6E8C               	movwf	140,c	;volatile
  6396   000912                     i2l2366:
  6397                           
  6398                           ;hardware.c: 48:     if (INTCONbits.TMR0IF == 1) {
  6399   000912  A4F2               	btfss	242,2,c	;volatile
  6400   000914  EF8E  F004         	goto	i2u118_41
  6401   000918  EF90  F004         	goto	i2u118_40
  6402   00091C                     i2u118_41:
  6403   00091C  EFAF  F005         	goto	i2l300
  6404   000920                     i2u118_40:
  6405   000920                     
  6406                           ;hardware.c: 49:         INTCONbits.TMR0IF = 0;
  6407   000920  94F2               	bcf	242,2,c	;volatile
  6408                           
  6409                           ;hardware.c: 51:         (INTCONbits.GIE = 0);
  6410   000922  9EF2               	bcf	242,7,c	;volatile
  6411   000924                     
  6412                           ;hardware.c: 53:         os_task_time_decrease();
  6413   000924  ECFD  F00C         	call	_os_task_time_decrease	;wreg free
  6414   000928  EE22  F0C3         	lfsr	2,_readyQueue+531
  6415   00092C  EE00 F003          	lfsr	0,3
  6416   000930  50DE               	movf	postinc2,w,c
  6417   000932  26E9               	addwf	fsr0l,f,c
  6418   000934  50DD               	movf	postdec2,w,c
  6419   000936  22EA               	addwfc	fsr0h,f,c
  6420   000938  04EE               	decf	postinc0,w,c
  6421   00093A  A4D8               	btfss	status,2,c
  6422   00093C  EFA2  F004         	goto	i2u119_41
  6423   000940  EFA4  F004         	goto	i2u119_40
  6424   000944                     i2u119_41:
  6425   000944  EF0E  F005         	goto	i2l2384
  6426   000948                     i2u119_40:
  6427   000948  EE22  F0C3         	lfsr	2,_readyQueue+531
  6428   00094C  EE00 F006          	lfsr	0,6
  6429   000950  50DE               	movf	postinc2,w,c
  6430   000952  26E9               	addwf	fsr0l,f,c
  6431   000954  50DD               	movf	postdec2,w,c
  6432   000956  22EA               	addwfc	fsr0h,f,c
  6433   000958  CFE0 FFEF          	movff	bsr,indf0	;volatile
  6434   00095C  EE22  F0C3         	lfsr	2,_readyQueue+531
  6435   000960  EE00 F008          	lfsr	0,8
  6436   000964  50DE               	movf	postinc2,w,c
  6437   000966  26E9               	addwf	fsr0l,f,c
  6438   000968  50DD               	movf	postdec2,w,c
  6439   00096A  22EA               	addwfc	fsr0h,f,c
  6440   00096C  CFD8 FFEF          	movff	status,indf0	;volatile
  6441   000970  EE22  F0C3         	lfsr	2,_readyQueue+531
  6442   000974  EE00 F007          	lfsr	0,7
  6443   000978  50DE               	movf	postinc2,w,c
  6444   00097A  26E9               	addwf	fsr0l,f,c
  6445   00097C  50DD               	movf	postdec2,w,c
  6446   00097E  22EA               	addwfc	fsr0h,f,c
  6447   000980  CFE8 FFEF          	movff	wreg,indf0	;volatile
  6448   000984  EE22  F0C3         	lfsr	2,_readyQueue+531
  6449   000988  EE00 F069          	lfsr	0,105
  6450   00098C  50DE               	movf	postinc2,w,c
  6451   00098E  26E9               	addwf	fsr0l,f,c
  6452   000990  50DD               	movf	postdec2,w,c
  6453   000992  22EA               	addwfc	fsr0h,f,c
  6454   000994  6AEF               	clrf	indf0,c
  6455   000996  EFFD  F004         	goto	i2l2380
  6456   00099A                     i2l2376:
  6457   00099A  EE22  F0C3         	lfsr	2,_readyQueue+531
  6458   00099E  EE00 F069          	lfsr	0,105
  6459   0009A2  50DE               	movf	postinc2,w,c
  6460   0009A4  26E9               	addwf	fsr0l,f,c
  6461   0009A6  50DD               	movf	postdec2,w,c
  6462   0009A8  22EA               	addwfc	fsr0h,f,c
  6463   0009AA  50EF               	movf	indf0,w,c
  6464   0009AC  0D03               	mullw	3
  6465   0009AE  CFF3 F04B          	movff	prodl,??_ISR_TIMER_0
  6466   0009B2  CFF4 F04C          	movff	prodh,??_ISR_TIMER_0+1
  6467   0009B6  EE22  F0C3         	lfsr	2,_readyQueue+531
  6468   0009BA  CFDE F04D          	movff	postinc2,??_ISR_TIMER_0+2
  6469   0009BE  CFDD F04E          	movff	postdec2,??_ISR_TIMER_0+3
  6470   0009C2  504B               	movf	??_ISR_TIMER_0^0,w,c
  6471   0009C4  244D               	addwf	(??_ISR_TIMER_0+2)^0,w,c
  6472   0009C6  6E4F               	movwf	(??_ISR_TIMER_0+4)^0,c
  6473   0009C8  504C               	movf	(??_ISR_TIMER_0+1)^0,w,c
  6474   0009CA  204E               	addwfc	(??_ISR_TIMER_0+3)^0,w,c
  6475   0009CC  6E50               	movwf	(??_ISR_TIMER_0+5)^0,c
  6476   0009CE  0E09               	movlw	9
  6477   0009D0  244F               	addwf	(??_ISR_TIMER_0+4)^0,w,c
  6478   0009D2  6ED9               	movwf	fsr2l,c
  6479   0009D4  0E00               	movlw	0
  6480   0009D6  2050               	addwfc	(??_ISR_TIMER_0+5)^0,w,c
  6481   0009D8  6EDA               	movwf	fsr2h,c
  6482   0009DA  CFFD FFDE          	movff	tosl,postinc2	;volatile
  6483   0009DE  CFFE FFDE          	movff	tosh,postinc2	;volatile
  6484   0009E2  CFFF FFDE          	movff	tosu,postinc2	;volatile
  6485   0009E6  EE22  F0C3         	lfsr	2,_readyQueue+531
  6486   0009EA  EE00 F069          	lfsr	0,105
  6487   0009EE  50DE               	movf	postinc2,w,c
  6488   0009F0  26E9               	addwf	fsr0l,f,c
  6489   0009F2  50DD               	movf	postdec2,w,c
  6490   0009F4  22EA               	addwfc	fsr0h,f,c
  6491   0009F6  2AEF               	incf	indf0,f,c
  6492   0009F8  0006               	pop		;# 
  6493   0009FA                     i2l2380:
  6494   0009FA  50FC               	movf	252,w,c	;volatile
  6495   0009FC  A4D8               	btfss	status,2,c
  6496   0009FE  EF03  F005         	goto	i2u120_41
  6497   000A02  EF05  F005         	goto	i2u120_40
  6498   000A06                     i2u120_41:
  6499   000A06  EFCD  F004         	goto	i2l2376
  6500   000A0A                     i2u120_40:
  6501   000A0A  EE22  F0C3         	lfsr	2,_readyQueue+531
  6502   000A0E  EE00 F003          	lfsr	0,3
  6503   000A12  50DE               	movf	postinc2,w,c
  6504   000A14  26E9               	addwf	fsr0l,f,c
  6505   000A16  50DD               	movf	postdec2,w,c
  6506   000A18  22EA               	addwfc	fsr0h,f,c
  6507   000A1A  6AEF               	clrf	indf0,c
  6508   000A1C                     i2l2384:
  6509                           
  6510                           ;hardware.c: 56:         scheduler();
  6511   000A1C  EC1E  F00F         	call	_scheduler	;wreg free
  6512   000A20  EE22  F0C3         	lfsr	2,_readyQueue+531
  6513   000A24  EE00 F003          	lfsr	0,3
  6514   000A28  50DE               	movf	postinc2,w,c
  6515   000A2A  26E9               	addwf	fsr0l,f,c
  6516   000A2C  50DD               	movf	postdec2,w,c
  6517   000A2E  22EA               	addwfc	fsr0h,f,c
  6518   000A30  50EF               	movf	indf0,w,c
  6519   000A32  A4D8               	btfss	status,2,c
  6520   000A34  EF1E  F005         	goto	i2u121_41
  6521   000A38  EF20  F005         	goto	i2u121_40
  6522   000A3C                     i2u121_41:
  6523   000A3C  EFAE  F005         	goto	i2l2404
  6524   000A40                     i2u121_40:
  6525   000A40  EE22  F0C3         	lfsr	2,_readyQueue+531
  6526   000A44  EE00 F006          	lfsr	0,6
  6527   000A48  50DE               	movf	postinc2,w,c
  6528   000A4A  26E9               	addwf	fsr0l,f,c
  6529   000A4C  50DD               	movf	postdec2,w,c
  6530   000A4E  22EA               	addwfc	fsr0h,f,c
  6531   000A50  50EF               	movf	indf0,w,c
  6532   000A52  6EE0               	movwf	224,c	;volatile
  6533   000A54  EE22  F0C3         	lfsr	2,_readyQueue+531
  6534   000A58  EE00 F008          	lfsr	0,8
  6535   000A5C  50DE               	movf	postinc2,w,c
  6536   000A5E  26E9               	addwf	fsr0l,f,c
  6537   000A60  50DD               	movf	postdec2,w,c
  6538   000A62  22EA               	addwfc	fsr0h,f,c
  6539   000A64  50EF               	movf	indf0,w,c
  6540   000A66  6ED8               	movwf	216,c	;volatile
  6541   000A68  EE22  F0C3         	lfsr	2,_readyQueue+531
  6542   000A6C  EE00 F007          	lfsr	0,7
  6543   000A70  50DE               	movf	postinc2,w,c
  6544   000A72  26E9               	addwf	fsr0l,f,c
  6545   000A74  50DD               	movf	postdec2,w,c
  6546   000A76  22EA               	addwfc	fsr0h,f,c
  6547   000A78  50EF               	movf	indf0,w,c
  6548   000A7A  6E4B               	movwf	??_ISR_TIMER_0^0,c
  6549   000A7C  504B               	movf	??_ISR_TIMER_0^0,w,c
  6550   000A7E  6AFC               	clrf	252,c	;volatile
  6551   000A80  EE22  F0C3         	lfsr	2,_readyQueue+531
  6552   000A84  EE00 F069          	lfsr	0,105
  6553   000A88  50DE               	movf	postinc2,w,c
  6554   000A8A  26E9               	addwf	fsr0l,f,c
  6555   000A8C  50DD               	movf	postdec2,w,c
  6556   000A8E  22EA               	addwfc	fsr0h,f,c
  6557   000A90  50EF               	movf	indf0,w,c
  6558   000A92  A4D8               	btfss	status,2,c
  6559   000A94  EF4E  F005         	goto	i2u122_41
  6560   000A98  EF50  F005         	goto	i2u122_40
  6561   000A9C                     i2u122_41:
  6562   000A9C  EF64  F005         	goto	i2l297
  6563   000AA0                     i2u122_40:
  6564   000AA0  0005               	push		;# 
  6565   000AA2  EE22  F0C3         	lfsr	2,_readyQueue+531
  6566   000AA6  EE00 F001          	lfsr	0,1
  6567   000AAA  50DE               	movf	postinc2,w,c
  6568   000AAC  26E9               	addwf	fsr0l,f,c
  6569   000AAE  50DD               	movf	postdec2,w,c
  6570   000AB0  22EA               	addwfc	fsr0h,f,c
  6571   000AB2  CFEE F04B          	movff	postinc0,??_ISR_TIMER_0
  6572   000AB6  CFED F04C          	movff	postdec0,??_ISR_TIMER_0+1
  6573   000ABA  C04B  FFFD         	movff	??_ISR_TIMER_0,tosl	;volatile
  6574   000ABE  C04C  FFFE         	movff	??_ISR_TIMER_0+1,tosh	;volatile
  6575   000AC2  6AFF               	clrf	255,c	;volatile
  6576   000AC4  EFA4  F005         	goto	i2l2402
  6577   000AC8                     i2l297:
  6578   000AC8  0005               	push		;# 
  6579   000ACA  EE22  F0C3         	lfsr	2,_readyQueue+531
  6580   000ACE  EE00 F069          	lfsr	0,105
  6581   000AD2  50DE               	movf	postinc2,w,c
  6582   000AD4  26E9               	addwf	fsr0l,f,c
  6583   000AD6  50DD               	movf	postdec2,w,c
  6584   000AD8  22EA               	addwfc	fsr0h,f,c
  6585   000ADA  06EF               	decf	indf0,f,c
  6586   000ADC  EE22  F0C3         	lfsr	2,_readyQueue+531
  6587   000AE0  EE00 F069          	lfsr	0,105
  6588   000AE4  50DE               	movf	postinc2,w,c
  6589   000AE6  26E9               	addwf	fsr0l,f,c
  6590   000AE8  50DD               	movf	postdec2,w,c
  6591   000AEA  22EA               	addwfc	fsr0h,f,c
  6592   000AEC  50EF               	movf	indf0,w,c
  6593   000AEE  0D03               	mullw	3
  6594   000AF0  CFF3 F04B          	movff	prodl,??_ISR_TIMER_0
  6595   000AF4  CFF4 F04C          	movff	prodh,??_ISR_TIMER_0+1
  6596   000AF8  EE22  F0C3         	lfsr	2,_readyQueue+531
  6597   000AFC  CFDE F04D          	movff	postinc2,??_ISR_TIMER_0+2
  6598   000B00  CFDD F04E          	movff	postdec2,??_ISR_TIMER_0+3
  6599   000B04  504B               	movf	??_ISR_TIMER_0^0,w,c
  6600   000B06  244D               	addwf	(??_ISR_TIMER_0+2)^0,w,c
  6601   000B08  6E4F               	movwf	(??_ISR_TIMER_0+4)^0,c
  6602   000B0A  504C               	movf	(??_ISR_TIMER_0+1)^0,w,c
  6603   000B0C  204E               	addwfc	(??_ISR_TIMER_0+3)^0,w,c
  6604   000B0E  6E50               	movwf	(??_ISR_TIMER_0+5)^0,c
  6605   000B10  0E09               	movlw	9
  6606   000B12  244F               	addwf	(??_ISR_TIMER_0+4)^0,w,c
  6607   000B14  6ED9               	movwf	fsr2l,c
  6608   000B16  0E00               	movlw	0
  6609   000B18  2050               	addwfc	(??_ISR_TIMER_0+5)^0,w,c
  6610   000B1A  6EDA               	movwf	fsr2h,c
  6611   000B1C  CFDE FFFD          	movff	postinc2,tosl	;volatile
  6612   000B20  CFDE FFFE          	movff	postinc2,tosh	;volatile
  6613   000B24  CFDD FFFF          	movff	postdec2,tosu	;volatile
  6614   000B28  EE22  F0C3         	lfsr	2,_readyQueue+531
  6615   000B2C  EE00 F069          	lfsr	0,105
  6616   000B30  50DE               	movf	postinc2,w,c
  6617   000B32  26E9               	addwf	fsr0l,f,c
  6618   000B34  50DD               	movf	postdec2,w,c
  6619   000B36  22EA               	addwfc	fsr0h,f,c
  6620   000B38  50EF               	movf	indf0,w,c
  6621   000B3A  A4D8               	btfss	status,2,c
  6622   000B3C  EFA2  F005         	goto	i2u123_41
  6623   000B40  EFA4  F005         	goto	i2u123_40
  6624   000B44                     i2u123_41:
  6625   000B44  EF64  F005         	goto	i2l297
  6626   000B48                     i2u123_40:
  6627   000B48                     i2l2402:
  6628   000B48  EE22  F0C3         	lfsr	2,_readyQueue+531
  6629   000B4C  EE00 F003          	lfsr	0,3
  6630   000B50  50DE               	movf	postinc2,w,c
  6631   000B52  26E9               	addwf	fsr0l,f,c
  6632   000B54  50DD               	movf	postdec2,w,c
  6633   000B56  22EA               	addwfc	fsr0h,f,c
  6634   000B58  0E01               	movlw	1
  6635   000B5A  6EEF               	movwf	indf0,c
  6636   000B5C                     i2l2404:
  6637                           
  6638                           ;hardware.c: 59:         (INTCONbits.GIE = 1);
  6639   000B5C  8EF2               	bsf	242,7,c	;volatile
  6640   000B5E                     i2l300:
  6641   000B5E  52E5               	movf	postdec1,f,c
  6642   000B60  CFE5 F038          	movff	postdec1,btemp55
  6643   000B64  CFE5 F037          	movff	postdec1,btemp54
  6644   000B68  CFE5 F005          	movff	postdec1,btemp4
  6645   000B6C  CFE5 F002          	movff	postdec1,btemp1
  6646   000B70  CFE5 F001          	movff	postdec1,btemp0
  6647   000B74  C058  FFF4         	movff	??_ISR_TIMER_0+13,prodh
  6648   000B78  C057  FFF3         	movff	??_ISR_TIMER_0+12,prodl
  6649   000B7C  C056  FFDA         	movff	??_ISR_TIMER_0+11,fsr2h
  6650   000B80  C055  FFD9         	movff	??_ISR_TIMER_0+10,fsr2l
  6651   000B84  C054  FFE2         	movff	??_ISR_TIMER_0+9,fsr1h
  6652   000B88  C053  FFE1         	movff	??_ISR_TIMER_0+8,fsr1l
  6653   000B8C  C052  FFEA         	movff	??_ISR_TIMER_0+7,fsr0h
  6654   000B90  C051  FFE9         	movff	??_ISR_TIMER_0+6,fsr0l
  6655   000B94  0011               	retfie		f
  6656   000B96                     __end_of_ISR_TIMER_0:
  6657                           	callstack 0
  6658                           
  6659 ;; *************** function _os_task_time_decrease *****************
  6660 ;; Defined at:
  6661 ;;		line 70 in file "kernel.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;		None
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;  i               1    btemp4   unsigned char 
  6666 ;; Return value:  Size  Location     Type
  6667 ;;                  1  [STACK] void 
  6668 ;; Registers used:
  6669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp4, prodl, prodh
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6675 ;;      Params:         0       0       0       0       0       0       0       0       0
  6676 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6677 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6678 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6679 ;;Total ram usage:        0 bytes
  6680 ;; Hardware stack levels used: 1
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_ISR_TIMER_0
  6685 ;; This function uses a reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text39
  6689   0019FA                     __ptext39:
  6690                           	callstack 0
  6691   0019FA                     _os_task_time_decrease:
  6692                           	callstack 19
  6693   0019FA                     
  6694                           ;kernel.c: 73:     for (uint8_t i = 1; i < readyQueue.readyQueueSize; i++) {
  6695   0019FA  0E01               	movlw	1
  6696   0019FC  6E05               	movwf	btemp4^0,c
  6697   0019FE  EF35  F00D         	goto	l2184
  6698   001A02                     l2176:
  6699                           
  6700                           ;kernel.c: 74:         if (readyQueue.readyQueue[i].task_state == WAITING) {
  6701   001A02  5005               	movf	btemp4^0,w,c
  6702   001A04  0D6A               	mullw	106
  6703   001A06  0EB3               	movlw	low (_readyQueue+3)
  6704   001A08  24F3               	addwf	243,w,c
  6705   001A0A  6ED9               	movwf	fsr2l,c
  6706   001A0C  0E00               	movlw	high (_readyQueue+3)
  6707   001A0E  20F4               	addwfc	prodh,w,c
  6708   001A10  6EDA               	movwf	fsr2h,c
  6709   001A12  0E02               	movlw	2
  6710   001A14  18DE               	xorwf	postinc2,w,c
  6711   001A16  A4D8               	btfss	status,2,c
  6712   001A18  EF10  F00D         	goto	u92_41
  6713   001A1C  EF12  F00D         	goto	u92_40
  6714   001A20                     u92_41:
  6715   001A20  EF34  F00D         	goto	l2182
  6716   001A24                     u92_40:
  6717   001A24                     
  6718                           ;kernel.c: 75:             readyQueue.readyQueue[i].task_time_to_waiting--;
  6719   001A24  5005               	movf	btemp4^0,w,c
  6720   001A26  0D6A               	mullw	106
  6721   001A28  0EB5               	movlw	low (_readyQueue+5)
  6722   001A2A  24F3               	addwf	243,w,c
  6723   001A2C  6ED9               	movwf	fsr2l,c
  6724   001A2E  0E00               	movlw	high (_readyQueue+5)
  6725   001A30  20F4               	addwfc	prodh,w,c
  6726   001A32  6EDA               	movwf	fsr2h,c
  6727   001A34  06DF               	decf	indf2,f,c
  6728                           
  6729                           ;kernel.c: 76:             if (readyQueue.readyQueue[i].task_time_to_waiting == 0) {
  6730   001A36  5005               	movf	btemp4^0,w,c
  6731   001A38  0D6A               	mullw	106
  6732   001A3A  0EB5               	movlw	low (_readyQueue+5)
  6733   001A3C  24F3               	addwf	243,w,c
  6734   001A3E  6ED9               	movwf	fsr2l,c
  6735   001A40  0E00               	movlw	high (_readyQueue+5)
  6736   001A42  20F4               	addwfc	prodh,w,c
  6737   001A44  6EDA               	movwf	fsr2h,c
  6738   001A46  50DF               	movf	indf2,w,c
  6739   001A48  A4D8               	btfss	status,2,c
  6740   001A4A  EF29  F00D         	goto	u93_41
  6741   001A4E  EF2B  F00D         	goto	u93_40
  6742   001A52                     u93_41:
  6743   001A52  EF34  F00D         	goto	l2182
  6744   001A56                     u93_40:
  6745   001A56                     
  6746                           ;kernel.c: 78:                 readyQueue.readyQueue[i].task_state = READY;
  6747   001A56  5005               	movf	btemp4^0,w,c
  6748   001A58  0D6A               	mullw	106
  6749   001A5A  0EB3               	movlw	low (_readyQueue+3)
  6750   001A5C  24F3               	addwf	243,w,c
  6751   001A5E  6ED9               	movwf	fsr2l,c
  6752   001A60  0E00               	movlw	high (_readyQueue+3)
  6753   001A62  20F4               	addwfc	prodh,w,c
  6754   001A64  6EDA               	movwf	fsr2h,c
  6755   001A66  6ADF               	clrf	indf2,c
  6756   001A68                     l2182:
  6757                           
  6758                           ;kernel.c: 81:     }
  6759   001A68  2A05               	incf	btemp4^0,f,c
  6760   001A6A                     l2184:
  6761   001A6A  EE22  F0C2         	lfsr	2,_readyQueue+530
  6762   001A6E  50DE               	movf	postinc2,w,c
  6763   001A70  5C05               	subwf	btemp4^0,w,c
  6764   001A72  A0D8               	btfss	status,0,c
  6765   001A74  EF3E  F00D         	goto	u94_41
  6766   001A78  EF40  F00D         	goto	u94_40
  6767   001A7C                     u94_41:
  6768   001A7C  EF01  F00D         	goto	l2176
  6769   001A80                     u94_40:
  6770   001A80                     
  6771                           ; _os_task_time_decrease: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 0, argsize = 0, vargsize = 0
  6772   001A80  0012               	return		;funcret
  6773   001A82                     __end_of_os_task_time_decrease:
  6774                           	callstack 0
  6775                           
  6776                           	psect	smallconst
  6777   000800                     __psmallconst:
  6778                           	callstack 0
  6779   000800  00                 	db	0
  6780   000801  00                 	db	0	; dummy byte at the end
  6781   000800                     __smallconst    set	__psmallconst
  6782   000800                     __mediumconst   set	__psmallconst
  6783   000000                     __activetblptr  equ	0
  6784                           
  6785                           	psect	rparam
  6786   000001                     ___rparam_used  equ	1
  6787   000000                     ___param_bank   equ	0
  6788   000000                     __Lparam        equ	__Lrparam
  6789   000000                     __Hparam        equ	__Hrparam
  6790   000001                     btemp           set	1	;btemp
  6791   000001                     btemp0          set	1
  6792   000002                     btemp1          set	2
  6793   000003                     btemp2          set	3
  6794   000004                     btemp3          set	4
  6795   000005                     btemp4          set	5
  6796   000006                     btemp5          set	6
  6797   000007                     btemp6          set	7
  6798   000008                     btemp7          set	8
  6799   000009                     btemp8          set	9
  6800   00000A                     btemp9          set	10
  6801   00000B                     btemp10         set	11
  6802   00000C                     btemp11         set	12
  6803   00000D                     btemp12         set	13
  6804   00000E                     btemp13         set	14
  6805   00000F                     btemp14         set	15
  6806   000010                     btemp15         set	16
  6807   000011                     btemp16         set	17
  6808   000012                     btemp17         set	18
  6809   000013                     btemp18         set	19
  6810   000014                     btemp19         set	20
  6811   000015                     btemp20         set	21
  6812   000016                     btemp21         set	22
  6813   000017                     btemp22         set	23
  6814   000018                     btemp23         set	24
  6815   000019                     btemp24         set	25
  6816   00001A                     btemp25         set	26
  6817   00001B                     btemp26         set	27
  6818   00001C                     btemp27         set	28
  6819   00001D                     btemp28         set	29
  6820   00001E                     btemp29         set	30
  6821   00001F                     btemp30         set	31
  6822   000020                     btemp31         set	32
  6823   000021                     btemp32         set	33
  6824   000022                     btemp33         set	34
  6825   000023                     btemp34         set	35
  6826   000024                     btemp35         set	36
  6827   000025                     btemp36         set	37
  6828   000026                     btemp37         set	38
  6829   000027                     btemp38         set	39
  6830   000028                     btemp39         set	40
  6831   000029                     btemp40         set	41
  6832   00002A                     btemp41         set	42
  6833   00002B                     btemp42         set	43
  6834   00002C                     btemp43         set	44
  6835   00002D                     btemp44         set	45
  6836   00002E                     btemp45         set	46
  6837   00002F                     btemp46         set	47
  6838   000030                     btemp47         set	48
  6839   000031                     btemp48         set	49
  6840   000032                     btemp49         set	50
  6841   000033                     btemp50         set	51
  6842   000034                     btemp51         set	52
  6843   000035                     btemp52         set	53
  6844   000036                     btemp53         set	54
  6845   000037                     btemp54         set	55
  6846   000038                     btemp55         set	56
  6847   000001                     wtemp0          set	1
  6848   000003                     wtemp1          set	3
  6849   000005                     wtemp2          set	5
  6850   000007                     wtemp3          set	7
  6851   000009                     wtemp4          set	9
  6852   00000B                     wtemp5          set	11
  6853   00000D                     wtemp6          set	13
  6854   00000F                     wtemp7          set	15
  6855   000011                     wtemp8          set	17
  6856   000013                     wtemp9          set	19
  6857   000015                     wtemp10         set	21
  6858   000017                     wtemp11         set	23
  6859   000019                     wtemp12         set	25
  6860   00001B                     wtemp13         set	27
  6861   00001D                     wtemp14         set	29
  6862   00001F                     wtemp15         set	31
  6863   000021                     wtemp16         set	33
  6864   000023                     wtemp17         set	35
  6865   000025                     wtemp18         set	37
  6866   000027                     wtemp19         set	39
  6867   000029                     wtemp20         set	41
  6868   00002B                     wtemp21         set	43
  6869   00002D                     wtemp22         set	45
  6870   00002F                     wtemp23         set	47
  6871   000031                     wtemp24         set	49
  6872   000033                     wtemp25         set	51
  6873   000035                     wtemp26         set	53
  6874   000037                     wtemp27         set	55
  6875   000001                     ttemp0          set	1
  6876   000005                     ttemp1          set	5
  6877   000009                     ttemp2          set	9
  6878   00000D                     ttemp3          set	13
  6879   000011                     ttemp4          set	17
  6880   000015                     ttemp5          set	21
  6881   000019                     ttemp6          set	25
  6882   00001D                     ttemp7          set	29
  6883   000021                     ttemp8          set	33
  6884   000025                     ttemp9          set	37
  6885   000029                     ttemp10         set	41
  6886   00002D                     ttemp11         set	45
  6887   000031                     ttemp12         set	49
  6888   000035                     ttemp13         set	53
  6889   000001                     ltemp0          set	1
  6890   000005                     ltemp1          set	5
  6891   000009                     ltemp2          set	9
  6892   00000D                     ltemp3          set	13
  6893   000011                     ltemp4          set	17
  6894   000015                     ltemp5          set	21
  6895   000019                     ltemp6          set	25
  6896   00001D                     ltemp7          set	29
  6897   000021                     ltemp8          set	33
  6898   000025                     ltemp9          set	37
  6899   000029                     ltemp10         set	41
  6900   00002D                     ltemp11         set	45
  6901   000031                     ltemp12         set	49
  6902   000035                     ltemp13         set	53
  6903   000001                     lltemp0         set	1
  6904   000009                     lltemp1         set	9
  6905   000011                     lltemp2         set	17
  6906   000019                     lltemp3         set	25
  6907   000021                     lltemp4         set	33
  6908   000029                     lltemp5         set	41
  6909   000031                     lltemp6         set	49
  6910                           tosu	equ	0xFFF
  6911                           tosh	equ	0xFFE
  6912                           tosl	equ	0xFFD
  6913                           stkptr	equ	0xFFC
  6914                           pclatu	equ	0xFFB
  6915                           pclath	equ	0xFFA
  6916                           pcl	equ	0xFF9
  6917                           tblptru	equ	0xFF8
  6918                           tblptrh	equ	0xFF7
  6919                           tblptrl	equ	0xFF6
  6920                           tablat	equ	0xFF5
  6921                           prodh	equ	0xFF4
  6922                           prodl	equ	0xFF3
  6923                           indf0	equ	0xFEF
  6924                           postinc0	equ	0xFEE
  6925                           postdec0	equ	0xFED
  6926                           preinc0	equ	0xFEC
  6927                           plusw0	equ	0xFEB
  6928                           fsr0h	equ	0xFEA
  6929                           fsr0l	equ	0xFE9
  6930                           wreg	equ	0xFE8
  6931                           indf1	equ	0xFE7
  6932                           postinc1	equ	0xFE6
  6933                           postdec1	equ	0xFE5
  6934                           preinc1	equ	0xFE4
  6935                           plusw1	equ	0xFE3
  6936                           fsr1h	equ	0xFE2
  6937                           fsr1l	equ	0xFE1
  6938                           bsr	equ	0xFE0
  6939                           indf2	equ	0xFDF
  6940                           postinc2	equ	0xFDE
  6941                           postdec2	equ	0xFDD
  6942                           preinc2	equ	0xFDC
  6943                           plusw2	equ	0xFDB
  6944                           fsr2h	equ	0xFDA
  6945                           fsr2l	equ	0xFD9
  6946                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1143
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           39     14      32
    BANK0           160      0      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    buffer	PTR void  size(2) Largest target is 4
		 -> dados_sensores(STACK[4]), nivel_bateria(STACK[2]), 

    buffer	PTR void  size(2) Largest target is 4
		 -> dados_sensores(STACK[4]), nivel_bateria(STACK[2]), 

    data_buffer	PTR unsigned char  size(2) Largest target is 4
		 -> dados_sensores(STACK[4]), nivel_bateria(STACK[2]), 

    data_buffer	PTR unsigned char  size(2) Largest target is 4
		 -> dados_sensores(STACK[4]), nivel_bateria(STACK[2]), 

    m	PTR struct semaphore size(1) Largest target is 14
		 -> mutex_motores(BANK0[14]), 

    m	PTR struct semaphore size(1) Largest target is 14
		 -> mutex_motores(BANK0[14]), 

    m	PTR struct semaphore size(1) Largest target is 14
		 -> mutex_motores(BANK0[14]), 

    m$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    m$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    m$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    mutex_motores$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    mutex_motores$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    new_task$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    next_task	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 

    next_task$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    p	PTR struct pipe size(1) Largest target is 33
		 -> pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    p	PTR struct pipe size(1) Largest target is 33
		 -> pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    p	PTR struct pipe size(1) Largest target is 33
		 -> pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    p$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pipe_bateria$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_bateria$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_bateria$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_bateria$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_bateria$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    pipe_sensores$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_sensores$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_sensores$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_sensores$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_sensores$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    pSegA	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pSegB	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    readyQueue$readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    readyQueue$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), NULL(NULL[0]), 

    readyQueue$taskRunning$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    s	PTR struct semaphore size(1) Largest target is 33
		 -> mutex_motores(BANK0[14]), pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    s	PTR struct semaphore size(1) Largest target is 33
		 -> mutex_motores(BANK0[14]), pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    s	PTR struct semaphore size(1) Largest target is 33
		 -> mutex_motores(BANK0[14]), pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    s$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    s$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    S354semaphore$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    S359pipe$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    S67tcb$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    S78f_aptos$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    sp__priority_scheduler	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 

    sp__priority_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    sp__rr_scheduler	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    task_f	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    temp	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _tarefa_controle_central in COMRAM

    None.

Critical Paths under _tarefa_controle_motores in COMRAM

    None.

Critical Paths under _tarefa_leitura_sensores in COMRAM

    None.

Critical Paths under _tarefa_monitoramento_bateria in COMRAM

    None.

Critical Paths under _tarefa_controle_central in COMRAM

    None.

Critical Paths under _tarefa_controle_motores in COMRAM

    None.

Critical Paths under _tarefa_leitura_sensores in COMRAM

    None.

Critical Paths under _tarefa_monitoramento_bateria in COMRAM

    None.

Critical Paths under _ISR_TIMER_0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _tarefa_controle_central in BANK0

    None.

Critical Paths under _tarefa_controle_motores in BANK0

    None.

Critical Paths under _tarefa_leitura_sensores in BANK0

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK0

    None.

Critical Paths under _tarefa_controle_central in BANK0

    None.

Critical Paths under _tarefa_controle_motores in BANK0

    None.

Critical Paths under _tarefa_leitura_sensores in BANK0

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK0

    None.

Critical Paths under _ISR_TIMER_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _tarefa_controle_central in BANK1

    None.

Critical Paths under _tarefa_controle_motores in BANK1

    None.

Critical Paths under _tarefa_leitura_sensores in BANK1

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK1

    None.

Critical Paths under _tarefa_controle_central in BANK1

    None.

Critical Paths under _tarefa_controle_motores in BANK1

    None.

Critical Paths under _tarefa_leitura_sensores in BANK1

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK1

    None.

Critical Paths under _ISR_TIMER_0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _tarefa_controle_central in BANK2

    None.

Critical Paths under _tarefa_controle_motores in BANK2

    None.

Critical Paths under _tarefa_leitura_sensores in BANK2

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK2

    None.

Critical Paths under _tarefa_controle_central in BANK2

    None.

Critical Paths under _tarefa_controle_motores in BANK2

    None.

Critical Paths under _tarefa_leitura_sensores in BANK2

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK2

    None.

Critical Paths under _ISR_TIMER_0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _tarefa_controle_central in BANK3

    None.

Critical Paths under _tarefa_controle_motores in BANK3

    None.

Critical Paths under _tarefa_leitura_sensores in BANK3

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK3

    None.

Critical Paths under _tarefa_controle_central in BANK3

    None.

Critical Paths under _tarefa_controle_motores in BANK3

    None.

Critical Paths under _tarefa_leitura_sensores in BANK3

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK3

    None.

Critical Paths under _ISR_TIMER_0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _tarefa_controle_central in BANK4

    None.

Critical Paths under _tarefa_controle_motores in BANK4

    None.

Critical Paths under _tarefa_leitura_sensores in BANK4

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK4

    None.

Critical Paths under _tarefa_controle_central in BANK4

    None.

Critical Paths under _tarefa_controle_motores in BANK4

    None.

Critical Paths under _tarefa_leitura_sensores in BANK4

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK4

    None.

Critical Paths under _ISR_TIMER_0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _tarefa_controle_central in BANK5

    None.

Critical Paths under _tarefa_controle_motores in BANK5

    None.

Critical Paths under _tarefa_leitura_sensores in BANK5

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK5

    None.

Critical Paths under _tarefa_controle_central in BANK5

    None.

Critical Paths under _tarefa_controle_motores in BANK5

    None.

Critical Paths under _tarefa_leitura_sensores in BANK5

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK5

    None.

Critical Paths under _ISR_TIMER_0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _tarefa_controle_central in BANK6

    None.

Critical Paths under _tarefa_controle_motores in BANK6

    None.

Critical Paths under _tarefa_leitura_sensores in BANK6

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK6

    None.

Critical Paths under _tarefa_controle_central in BANK6

    None.

Critical Paths under _tarefa_controle_motores in BANK6

    None.

Critical Paths under _tarefa_leitura_sensores in BANK6

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK6

    None.

Critical Paths under _ISR_TIMER_0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _tarefa_controle_central in BANK7

    None.

Critical Paths under _tarefa_controle_motores in BANK7

    None.

Critical Paths under _tarefa_leitura_sensores in BANK7

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK7

    None.

Critical Paths under _tarefa_controle_central in BANK7

    None.

Critical Paths under _tarefa_controle_motores in BANK7

    None.

Critical Paths under _tarefa_leitura_sensores in BANK7

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK7

    None.

Critical Paths under _ISR_TIMER_0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1999
                          _os_config
                     _os_create_task
                           _os_start
 ---------------------------------------------------------------------------------
 (1) _os_start                                             0     0      0    1669
                       _SRAMInitHeap
                    _conf_interrupts
                       _conf_timer_0
                         _config_app
 ---------------------------------------------------------------------------------
 (2) _config_app                                           0     0      0    1579
                             _adc_go
                         _config_adc
                        _create_pipe
                         _mutex_init
                           _pwm_init
          _pwm_set_duty_cycle_motor1
          _pwm_set_duty_cycle_motor2
          _pwm_set_duty_cycle_motor3
          _pwm_set_duty_cycle_motor4
                        _set_channel
                           _set_port
 ---------------------------------------------------------------------------------
 (3) _set_port                                             0     0      0      22
 ---------------------------------------------------------------------------------
 (7) _set_channel                                          0     0      0      22
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor4                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor3                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor2                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor1                            0     0      0      45
 ---------------------------------------------------------------------------------
 (3) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mutex_init                                           0     0      0     110
                           _sem_init
 ---------------------------------------------------------------------------------
 (3) _create_pipe                                          0     0      0    1179
                          _SRAMalloc
                           _sem_init
 ---------------------------------------------------------------------------------
 (4) _sem_init                                             0     0      0      88
 ---------------------------------------------------------------------------------
 (4) _SRAMalloc                                            6     6      0     893
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (5) __SRAMmerge                                           5     5      0     402
 ---------------------------------------------------------------------------------
 (3) _config_adc                                           0     0      0      44
 ---------------------------------------------------------------------------------
 (3) _adc_go                                               0     0      0      22
 ---------------------------------------------------------------------------------
 (2) _conf_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0      90
 ---------------------------------------------------------------------------------
 (1) _os_config                                            0     0      0     165
                     _os_create_task
 ---------------------------------------------------------------------------------
 (2) _os_create_task                                     106   106      0     165
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _os_idle_task                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _os_idle_task                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_controle_central                              8     8      0    3066
                         _mutex_lock
                       _mutex_unlock
                           _os_delay
                          _read_pipe
 ---------------------------------------------------------------------------------
 (7) _read_pipe                                            5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         0     0      0     450
                           _sem_post
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           1     1      0     617
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_controle_motores                              0     0      0     362
                           _os_delay
          _pwm_set_duty_cycle_motor1
          _pwm_set_duty_cycle_motor2
          _pwm_set_duty_cycle_motor3
          _pwm_set_duty_cycle_motor4
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor4                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor3                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor2                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor1                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_leitura_sensores                              4     4      0    1887
                           _adc_read
                           _os_delay
                        _set_channel
                         _write_pipe
 ---------------------------------------------------------------------------------
 (7) _write_pipe                                           5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (7) _set_channel                                          0     0      0      22
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (7) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_monitoramento_bateria                         2     2      0    1863
                           _adc_read
                           _os_delay
                        _set_channel
                         _write_pipe
 ---------------------------------------------------------------------------------
 (7) _write_pipe                                           5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (7) _set_channel                                          0     0      0      22
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (7) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_controle_central                              8     8      0    3066
                         _mutex_lock
                       _mutex_unlock
                           _os_delay
                          _read_pipe
 ---------------------------------------------------------------------------------
 (7) _read_pipe                                            5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         0     0      0     450
                           _sem_post
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           1     1      0     617
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_controle_motores                              0     0      0     362
                           _os_delay
          _pwm_set_duty_cycle_motor1
          _pwm_set_duty_cycle_motor2
          _pwm_set_duty_cycle_motor3
          _pwm_set_duty_cycle_motor4
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor4                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor3                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor2                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle_motor1                            0     0      0      45
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_leitura_sensores                              4     4      0    1887
                           _adc_read
                           _os_delay
                        _set_channel
                         _write_pipe
 ---------------------------------------------------------------------------------
 (7) _write_pipe                                           5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (7) _set_channel                                          0     0      0      22
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (7) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_monitoramento_bateria                         2     2      0    1863
                           _adc_read
                           _os_delay
                        _set_channel
                         _write_pipe
 ---------------------------------------------------------------------------------
 (7) _write_pipe                                           5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (7) _set_channel                                          0     0      0      22
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (7) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR_TIMER_0                                        14    14      0     272
                                              0 COMRAM    14    14      0
              _os_task_time_decrease
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (12) _os_task_time_decrease                               1     1      0     112
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _os_config
     _os_create_task
   _os_create_task
   _os_start
     _SRAMInitHeap
     _conf_interrupts
     _conf_timer_0
     _config_app
       _adc_go
       _config_adc
       _create_pipe
         _SRAMalloc
           __SRAMmerge
         _sem_init
       _mutex_init
         _sem_init
       _pwm_init
       _pwm_set_duty_cycle_motor1
       _pwm_set_duty_cycle_motor2
       _pwm_set_duty_cycle_motor3
       _pwm_set_duty_cycle_motor4
       _set_channel
       _set_port

 _os_idle_task (ROOT)

 _os_idle_task (ROOT)

 _tarefa_controle_central (ROOT)
   _mutex_lock
     _sem_wait
       ___awmod
       _scheduler
         _priority_scheduler
   _mutex_unlock
     _sem_post
       ___awmod
   _os_delay
     _scheduler
   _read_pipe
     ___awmod
     _sem_post
     _sem_wait

 _tarefa_controle_motores (ROOT)
   _os_delay
     _scheduler
       _priority_scheduler
   _pwm_set_duty_cycle_motor1
   _pwm_set_duty_cycle_motor2
   _pwm_set_duty_cycle_motor3
   _pwm_set_duty_cycle_motor4

 _tarefa_leitura_sensores (ROOT)
   _adc_read
   _os_delay
     _scheduler
       _priority_scheduler
   _set_channel
   _write_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler

 _tarefa_monitoramento_bateria (ROOT)
   _adc_read
   _os_delay
     _scheduler
       _priority_scheduler
   _set_channel
   _write_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler

 _tarefa_controle_central (ROOT)
   _mutex_lock
     _sem_wait
       ___awmod
       _scheduler
         _priority_scheduler
   _mutex_unlock
     _sem_post
       ___awmod
   _os_delay
     _scheduler
   _read_pipe
     ___awmod
     _sem_post
     _sem_wait

 _tarefa_controle_motores (ROOT)
   _os_delay
     _scheduler
       _priority_scheduler
   _pwm_set_duty_cycle_motor1
   _pwm_set_duty_cycle_motor2
   _pwm_set_duty_cycle_motor3
   _pwm_set_duty_cycle_motor4

 _tarefa_leitura_sensores (ROOT)
   _adc_read
   _os_delay
     _scheduler
       _priority_scheduler
   _set_channel
   _write_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler

 _tarefa_monitoramento_bateria (ROOT)
   _adc_read
   _os_delay
     _scheduler
       _priority_scheduler
   _set_channel
   _write_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler

 _ISR_TIMER_0 (ROOT)
   _os_task_time_decrease
   _scheduler
     _priority_scheduler

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0    1045     51.1%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      80     50.0%
BITBIGSFRh          61      0       0      0.0%
BITBIGSFRlh         53      0       0      0.0%
BITCOMRAM           39      0       0      0.0%
COMRAM              39     14      32     82.1%
BITBIGSFRlll        35      0       0      0.0%
BITBIGSFRllh         8      0       0      0.0%
STACK                0      0     142      0.0%
DATA                 0      0    1299      0.0%


Microchip Technology PIC18 Macro Assembler V3.10 build 20250813170317 
Symbol Table                                                                                   Fri Oct 24 16:00:26 2025

                                  l20 1B50                                    l50 1E18  
                                  l19 1B50                                    l71 1A80  
                                  l47 1D26                                   l121 1366  
                                 l141 1BB6                                   l118 18DC  
                                 l135 1A8A                                   l232 16C2  
                                 l129 1C00                                   l402 19F4  
                                 l235 1E48                                   l163 1834  
                                 l340 196C                                   l333 0DB4  
                                 l319 1CD4                                   l343 1E3A  
                                 l336 0E4A                                   l176 1004  
                                 l408 1356                                   l346 1E74  
                                 l274 1DEA                                   l362 1BB0  
                                 l179 109A                                   l451 1DD0  
                                 l460 1E04                                   l372 145A  
                                 l349 1E6A                                   l277 1E78  
                                 l445 1E2C                                   l374 151C  
                                 l366 153C                                   l454 1E60  
                                 l382 1222                                   l368 15F2  
                                 l448 1E54                                   l457 1DEE  
                                 l473 1C74                                   l481 1D8C  
                                 l477 1DAE                                   l485 1D6A  
                                 l489 1D48                                   l849 1784  
                                 _BSR 0FE0         __end_of_os_task_time_decrease 1A82  
                                 u200 19AE                                   u201 19AA  
                                 u191 1822                                   u700 1124  
                                 u701 1120                                   u710 1142  
                                 u711 113E                                   u640 127E  
                                 u720 1154                                   u641 127A  
                                 u721 1150                                   u650 12A0  
                                 u730 1174                                   u651 129C  
                                 u731 1170                                   u660 12BA  
                                 u740 11BC                                   u661 12B6  
                                 u741 11B8                                   u670 12DE  
                                 u671 12DA                                   u680 130C  
                                 u681 1308                                   u690 10B2  
                                 u755 1E5E                                   u691 10AE  
                                 u756 1E60                                   u950 1DA0  
                                 u951 1D9C                                   u960 1D7E  
                                 u961 1D7A                                   u970 1D5C  
                                 u971 1D58                                   u980 1D3A  
                                 u981 1D36                                   _TOS 0FFD  
                                 prod 0FF3                                   wreg 0FE8  
                  _priority_scheduler 15FA                                  l2000 1B60  
                                l2010 16CC                                  l2002 1B6C  
                                l2020 16F6                                  l2012 16CE  
                                l2100 16B6                                  l2004 1B7A  
                                l2030 1726                                  l2022 16FE  
                                l2014 16DC                                  l2110 0BBA  
                                l2006 1B94                                  l2032 1734  
                                l2024 1716                                  l2040 175E  
                                l2016 16E4                                  l2120 0CD0  
                                l2112 0BE0                                  l2104 0B96  
                                l2008 1BA2                                  l2200 1D4A  
                                l2042 1774                                  l2034 174A  
                                l2026 171E                                  l2018 16E8  
                                l2130 0D2C                                  l2122 0CE4  
                                l2114 0C12                                  l2106 0B98  
                                l2202 1D5C                                  l2210 1D40  
                                l2050 1842                                  l2044 177C  
                                l2036 1752                                  l2028 1724  
                                l2300 1E3C                                  l2140 0D8E  
                                l2132 0D54                                  l2124 0CF4  
                                l2116 0C32                                  l2108 0BA4  
                                l2220 1598                                  l2212 152A  
                                l2204 1D62                                  l2060 186C  
                                l2052 184A                                  l2038 1758  
                                l2142 0DB6                                  l2134 0D6A  
                                l2118 0C84                                  l2126 0D08  
                                l2150 0E48                                  l2230 1E6C  
                                l2222 15CC                                  l2214 1536  
                                l2310 13AE                                  l2206 1D28  
                                l2070 189C                                  l2062 1874  
                                l2054 1852                                  l2302 1AF8  
                                l2144 0DC8                                  l2136 0D6C  
                                l2128 0D0C                                  l2160 1938  
                                l2152 18DE                                  l2232 1E62  
                                l2240 0E82                                  l2224 15D6  
                                l2216 1544                                  l2320 1414  
                                l2312 13D4                                  l2208 1D3A  
                                l2080 18D0                                  l2072 18A4  
                                l2064 1880                                  l2056 185E  
                                l2048 183E                                  l2304 1B4C  
                                l2330 1C30                                  l2090 1640  
                                l2082 1600                                  l2146 0E14  
                                l2138 0D8C                                  l2162 196A  
                                l2154 18E0                                  l2242 0ED4  
                                l2250 0F58                                  l2234 0E4C  
                                l2226 15D8                                  l2218 154E  
                                l2322 141C                                  l2314 13F0  
                                l2306 1366                                  l1530 1DD2  
                                l2074 18AC                                  l2066 188C  
                                l2058 1868                                  l2170 1E12  
                                l2180 1A56                                  l2340 1AC2  
                                l2332 1A8A                                  l2092 1668  
                                l2084 1614                                  l2148 0E34  
                                l2156 18EC                                  l2260 0FBC  
                                l2252 0F5C                                  l2244 0F20  
                                l2236 0E4E                                  l2228 15E0  
                                l2316 1404                                  l2324 1424  
                                l2308 13A6                                  l1460 17AA  
                                l1532 1DD6                                  l2076 18B8  
                                l2068 1894                                  l2172 1E16  
                                l2164 1E06                                  l2182 1A68  
                                l2174 19FA                                  l2350 1BEE  
                                l2342 1AE2                                  l2334 1A92  
                                l2094 1682                                  l2086 1618  
                                l2158 1910                                  l2270 1064  
                                l2262 0FDC                                  l2254 0F7C  
                                l2246 0F34                                  l2238 0E62  
                                l2326 142C                                  l2318 140C  
                                l1470 17F2                                  l1462 17BA  
                                l1622 1D00                                  l1534 1DE4  
                                l2190 1DA0                                  l2078 18C4  
                                l2166 1E0A                                  l2176 1A02  
                                l2184 1A6A                                  l2344 1BB6  
                                l2336 1AA2                                  l2328 1C00  
                                l2096 169E                                  l2088 1620  
                                l2272 1084                                  l2264 0FDE  
                                l2256 0FA4                                  l2248 0F44  
                                l1472 1800                                  l1464 17C8  
                                l1456 1790                                  l1624 1D12  
                                l1480 1986                                  l1536 1DE6  
                                l2192 1DA6                                  l2168 1E0E  
                                l2178 1A24                                  l2346 1BBE  
                                l2290 14BA                                  l2282 1448  
                                l2338 1AAA                                  l2098 16A0  
                                l2266 1006                                  l2258 0FBA  
                                l2274 1098                                  l1474 182A  
                                l1466 17D6                                  l1458 1796  
                                l1490 19DA                                  l1482 198C  
                                l1538 1DE8                                  l2194 1D6C  
                                l2186 1E1A                                  l2348 1BCE  
                                l2276 1DEC                                  l2292 14F6  
                                l2284 1454                                  l2268 1018  
                                l1468 17E4                                  l1492 19E6  
                                l1484 19AE                                  l1476 1E76  
                                l1900 130C                                  l2188 1D8E  
                                l2196 1D7E                                  l2278 1DFC  
                                l2294 1500                                  l2286 1462  
                                l1486 19BA                                  l1478 1972  
                                l1902 1318                                  l2198 1D84  
                                l2296 1502                                  l2288 146C  
                                l1488 19CE                                  l1904 1320  
                                l1920 1CBC                                  l2298 150A  
                                l1770 1CD8                                  l1906 132E  
                                l1914 1344                                  l1930 10BE  
                                l1922 1CC8                                  l1908 133C  
                                l1932 10D2                                  l1924 10A2  
                                l1870 1230                                  l1950 119E  
                                l1942 1128                                  l1934 10F0  
                                l1926 10B2                                  l1918 1CA8  
                                l1768 1CD6                                  l1872 1248  
                                l1952 11BC                                  l1960 11D6  
                                l1944 1142                                  l1936 1106  
                                l1890 12BE                                  l1882 1286  
                                l1874 125A                                  l1962 11E4  
                                l1954 11C6                                  l1946 1154  
                                l1980 1DCE                                  l1884 12A0  
                                l1876 126C                                  l1964 11F8  
                                l1948 1174                                  l1982 1E56  
                                l1878 127E                                  l1966 120C  
                                l1990 1C6E                                  l1974 1E4A  
                                l1976 1DB0                                  l1896 12E2  
                                l1968 121A                                  l1992 1C70  
                                l1984 1C3E                                  l1978 1DC4  
                                l1898 12F6                                  l1994 1C72  
                                l1986 1C60                                  l1996 1E2E  
                                l1988 1C64                                  l1998 1B58  
                                _TMR0 0FD6                                  _TMR1 0FCE  
                                _WREG 0FE8                                  _main 1AF8  
                                fsr0h 0FEA                                  fsr1h 0FE2  
                                indf0 0FEF                                  fsr2h 0FDA  
                                fsr0l 0FE9                                  indf2 0FDF  
                                fsr1l 0FE1                                  fsr2l 0FD9  
                                btemp 0001                                  prodh 0FF4  
                                prodl 0FF3                                  start 000C  
     __end_of_tarefa_controle_central 1442  __end_of_tarefa_monitoramento_bateria 1C00  
        _tarefa_monitoramento_bateria 1BB2                          ___param_bank 0000  
     __end_of_tarefa_controle_motores 1C3E                                 _ADRES 0FC3  
                     __end_of___awmod 1788                                 i2l300 0B5E  
                               i2l297 0AC8                                 u46_20 1CE8  
                               u46_21 1CE2                                 u46_26 1CEA  
                               u80_20 174A                                 u80_21 1746  
                               u81_20 1774                                 u81_21 1770  
                               u82_20 1640                                 u90_20 0E34  
                               u82_21 163C                                 u90_21 0E30  
                               u83_20 1668                                 u91_20 1910  
                               u83_21 1664                                 u91_21 190C  
                               u76_20 16DC                                 u84_20 16B6  
                               u76_21 16D8                                 u84_21 16B2  
                               u92_40 1A24                                 u92_41 1A20  
                               u77_20 16F6                                 u85_20 0BBA  
                               u77_21 16F2                                 u85_21 0BB6  
                               u93_40 1A56                                 u93_41 1A52  
                               u78_20 1716                                 u86_20 0C32  
                               u78_21 1712                                 u86_21 0C2E  
                               u94_40 1A80                                 u94_41 1A7C  
                               u79_20 1734                                 u87_20 0CF4  
                               u79_21 1730                                 u87_21 0CF0  
                               u88_20 0D2C                                 u88_21 0D28  
                               u89_20 0D8C                                 u89_21 0D88  
                               u99_20 15F2                                 u99_21 15EE  
                          __SRAMmerge 122A                                 btemp0 0001  
                               btemp1 0002                                 btemp2 0003  
                               btemp3 0004                                 btemp4 0005  
                               btemp5 0006                                 btemp6 0007  
                               btemp7 0008                                 btemp8 0009  
                               btemp9 000A                                 ltemp0 0001  
                               ltemp1 0005                                 ltemp2 0009  
                               ltemp3 000D                                 ltemp4 0011  
                               ltemp5 0015                                 ltemp6 0019  
                               ltemp7 001D                                 ltemp8 0021  
                               ltemp9 0025                                 plusw0 0FEB  
                               plusw1 0FE3                                 plusw2 0FDB  
                               ttemp0 0001                                 ttemp1 0005  
                               ttemp2 0009                                 ttemp3 000D  
                               ttemp4 0011                                 ttemp5 0015  
                               ttemp6 0019                                 ttemp7 001D  
                               ttemp8 0021                                 ttemp9 0025  
                               status 0FD8                                 wtemp0 0001  
                               wtemp1 0003                                 wtemp2 0005  
                               wtemp3 0007                                 wtemp4 0009  
                               wtemp5 000B                                 wtemp6 000D  
                               wtemp7 000F                                 wtemp8 0011  
                               wtemp9 0013                       __initialization 1C76  
                        ?_ISR_TIMER_0 004B                          __end_of_main 1B58  
   __end_of_pwm_set_duty_cycle_motor1 1DB0     __end_of_pwm_set_duty_cycle_motor2 1D8E  
   __end_of_pwm_set_duty_cycle_motor3 1D6C     __end_of_pwm_set_duty_cycle_motor4 1D4A  
                       __activetblptr 0000                                _ADCON1 0FC1  
                    __end_of_adc_read 1E06                                u100_20 0E82  
                              u100_21 0E7E                                u101_20 0F44  
                              u101_21 0F40                                u102_20 0F7C  
                              u102_21 0F78                                u103_20 0FDC  
                              u103_21 0FD8                                u104_20 1084  
                              u104_21 1080                                u105_20 1DFC  
                              u105_21 1DF8                                u106_20 151C  
                              u106_21 1518                                u107_20 13D4  
                              u107_21 13D0                                i2l2400 0B28  
                              i2l2402 0B48                                i2l2404 0B5C  
                              i2l2360 0858                                i2l2352 083C  
                              i2l2370 0924                                i2l2362 086A  
                              i2l2354 084A                                i2l2380 09FA  
                              i2l2372 0928                                i2l2364 086E  
                              i2l2356 084C                                i2l2390 0A7E  
                              i2l2382 0A0A                                i2l2374 0948  
                              i2l2358 0854                                i2l2366 0912  
                              i2l2392 0AA0                                i2l2376 099A  
                              i2l2384 0A1C                                i2l2368 0920  
                              i2l2394 0AA2                                i2l2386 0A20  
                              i2l2378 09E6                                i2l2396 0ACA  
                              i2l2388 0A40                                i2l2398 0ADC  
                              _STATUS 0FD8                                _STKPTR 0FFC  
                              _adc_go 1E56                     __end_of_SRAMalloc 122A  
                              clear_0 1C7E                                clear_1 1C90  
                              clear_2 1C9C                                isa$std 0001  
                              btemp10 000B                                btemp11 000C  
                              btemp12 000D                                btemp20 0015  
                              btemp13 000E                                btemp21 0016  
                              btemp30 001F                                btemp14 000F  
                              btemp22 0017                                btemp31 0020  
                              btemp15 0010                                btemp23 0018  
                              btemp40 0029                                btemp32 0021  
                              btemp24 0019                                btemp16 0011  
                              btemp41 002A                                btemp33 0022  
                              btemp25 001A                                btemp17 0012  
                              btemp42 002B                                btemp34 0023  
                              btemp26 001B                                btemp18 0013  
                              btemp50 0033                                btemp43 002C  
                              btemp35 0024                                btemp27 001C  
                              btemp19 0014                                btemp51 0034  
                              btemp52 0035                                btemp44 002D  
                              btemp36 0025                                btemp28 001D  
                              btemp53 0036                                btemp45 002E  
                              btemp37 0026                                btemp29 001E  
                              btemp46 002F                                btemp38 0027  
                              btemp54 0037                                btemp47 0030  
                              btemp39 0028                                btemp55 0038  
                              btemp48 0031                                btemp49 0032  
                    __end_of_os_delay 109C                      __end_of_sem_init 1CD6  
                    __end_of_sem_wait 0E4C                      __end_of_sem_post 196E  
                __end_of_conf_timer_0 1DEC                                ltemp10 0029  
                              ltemp11 002D                                ltemp12 0031  
                              ltemp13 0035                      __end_of_set_port 1E56  
                    __end_of_os_start 1E1A                                lltemp0 0001  
                              lltemp1 0009                                lltemp2 0011  
                              lltemp3 0019                                lltemp4 0021  
                              lltemp5 0029                                lltemp6 0031  
                        __mediumconst 0800                      __end_of_pwm_init 1C76  
                              ttemp10 0029                                ttemp11 002D  
                              ttemp12 0031                                ttemp13 0035  
                              wtemp10 0015                                wtemp11 0017  
                              wtemp20 0029                                wtemp12 0019  
                              wtemp21 002B                                wtemp13 001B  
                              wtemp14 001D                                wtemp22 002D  
                              wtemp23 002F                                wtemp15 001F  
                              wtemp24 0031                                wtemp16 0021  
                              wtemp25 0033                                wtemp17 0023  
                              wtemp26 0035                                wtemp18 0025  
                              wtemp27 0037                                wtemp19 0027  
                          __accesstop 0060               __end_of__initialization 1CA2  
                       ___rparam_used 0001                        _os_create_task 1788  
                      __pcstackCOMRAM 004B                            ___inthi_sp 0663  
                          __pbssBANK0 0060                         __uDynamicHeap 02C5  
              __end_of_os_create_task 183E                            _config_adc 1DB0  
               _os_task_time_decrease 19FA                            _config_app 183E  
                             __Hparam 0000                               __Lparam 0000  
                             ___awmod 16CA                          __psmallconst 0800  
                             __pcinit 1C76                               __ramtop 0800  
                             __ptext0 1AF8                               __ptext1 1E06  
                             __ptext2 183E                               __ptext3 1E4A  
                             __ptext4 1E1A                               __ptext5 1D28  
                             __ptext6 1D4A                               __ptext7 1D6C  
                             __ptext8 1D8E                               __ptext9 1C3E  
             _tarefa_leitura_sensores 1A82                             _T0CONbits 0FD5  
                           _T1CONbits 0FCD                            _readyQueue 00B0  
                   __end_of_read_pipe 15FA                    ISR_TIMER_0@pwm_cnt 0041  
                   __end_of_scheduler 1E4A                        __pintcode_body 0802  
                end_of_initialization 1CA2                     __end_of_os_config 1D28  
                             int_func 0802                          _conf_timer_0 1DD2  
                             postdec0 0FED                               postdec1 0FE5  
                             postdec2 0FDD                               postinc0 0FEE  
                             postinc1 0FE6                               postinc2 0FDE  
                           _PORTDbits 0F83                             _SRAMalloc 109C  
                          _mutex_init 1E2E                            _mutex_lock 1E6C  
                           _TRISDbits 0F95                    __end_of__SRAMmerge 135E  
                      __end_of_adc_go 1E62                            _write_pipe 1442  
                 start_initialization 1C76                  __end_of_os_idle_task 1D00  
                  _velocidade_motores 0039                   __end_of_create_pipe 1BB2  
                       _pipe_sensores 0081                           __pbssBIGRAM 00B0  
                         __pbssCOMRAM 0039       __end_of_tarefa_leitura_sensores 1AF8  
                     _conf_interrupts 1E76                  __end_of_SRAMInitHeap 19FA  
                       ??_ISR_TIMER_0 004B                             __pintcode 0008  
                         __smallconst 0800                             _read_pipe 1524  
                           _scheduler 1E3C                           _create_pipe 1B58  
                            _LATDbits 0F8C                              _PIE1bits 0F9D  
                           _os_config 1D00                              i2u110_40 0888  
                            i2u110_41 0880                              i2u120_40 0A0A  
                            i2u112_40 08AE                              i2u111_48 088A  
                            i2u120_41 0A06                              i2u112_41 08A6  
                            i2u121_40 0A40                              i2u121_41 0A3C  
                            i2u122_40 0AA0                              i2u114_40 08D6  
                            i2u113_48 08B0                              i2u122_41 0A9C  
                            i2u114_41 08CE                              i2u123_40 0B48  
                            i2u123_41 0B44                              i2u116_40 0900  
                            i2u115_48 08D8                              i2u108_40 084A  
                            i2u116_41 08F8                              i2u108_41 0846  
                            i2u109_40 086A                              i2u109_41 0866  
                            i2u118_40 0920                              i2u117_48 0902  
                            i2u118_41 091C                              i2u119_40 0948  
                            i2u119_41 0944                              _PIR1bits 0F9E  
          __end_of_priority_scheduler 16CA                  __end_of_mutex_unlock 1E6C  
                          _ADCON0bits 0FC2                   __end_of_ISR_TIMER_0 0B96  
                          _ADCON1bits 0FC1                            _ADCON2bits 0FC0  
             __end_of_conf_interrupts 1E7A                          _pipe_bateria 0060  
                            __Hrparam 0000                              __Lrparam 0000  
                  __end_of_config_adc 1DD2                   __end_of_set_channel 1E2E  
                  __end_of_config_app 18DE                              _adc_read 1DEC  
                        _os_idle_task 1CD6                              __ptext10 1E2E  
                            __ptext11 1B58                              __ptext20 1D00  
                            __ptext12 1CA8                              __ptext21 1788  
                            __ptext13 109C                              __ptext30 1E3C  
                            __ptext22 1CD6                              __ptext14 122A  
                            __ptext31 15FA                              __ptext23 135E  
                            __ptext15 1DB0                              __ptext32 16CA  
                            __ptext24 1524                              __ptext16 1E56  
                            __ptext33 1C00                              __ptext25 0E4C  
                            __ptext17 1DD2                              __ptext34 1A82  
                            __ptext26 1E62                              __ptext18 1E76  
                            __ptext35 1442                              __ptext27 18DE  
                            __ptext19 196E                              __ptext36 1DEC  
                            __ptext28 1E6C                              __ptext37 1BB2  
                            __ptext29 0B96                              __ptext39 19FA  
             _tarefa_controle_central 135E             _pwm_set_duty_cycle_motor1 1D8E  
           _pwm_set_duty_cycle_motor2 1D6C             _pwm_set_duty_cycle_motor3 1D4A  
           _pwm_set_duty_cycle_motor4 1D28                              _os_delay 0E4C  
             _tarefa_controle_motores 1C00                              _sem_init 1CA8  
                            _sem_wait 0B96                              _sem_post 18DE  
                            _set_port 1E4A                              _os_start 1E06  
                            isa$xinst 0000                           _ISR_TIMER_0 0008  
                            _pwm_init 1C3E                          _SRAMInitHeap 196E  
                          _INTCONbits 0FF2                          _motor_a_duty 0049  
                        _motor_b_duty 0047                          _motor_c_duty 0045  
                        _motor_d_duty 0043                              intlevel1 0000  
                            intlevel2 0000                           _set_channel 1E1A  
                  __end_of_mutex_init 1E3C                    __end_of_mutex_lock 1E76  
                       _mutex_motores 00A2                          _mutex_unlock 1E62  
                  __end_of_write_pipe 1524  
