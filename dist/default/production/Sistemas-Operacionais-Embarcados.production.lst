

Microchip MPLAB XC8 Assembler V3.10 build 20250813170317 
                                                                                               Wed Oct  8 15:54:40 2025

Microchip MPLAB XC8 C Compiler v3.10 (Free license) build 20250813170317 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=1
    39                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	dabs	1,0x1,56
    52   000000                     
    53                           ; Generated 17/01/2025 GMT
    54                           ; 
    55                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F4550 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87   000FE0                     bsr             equ	4064
    88   000FE9                     fsr0            equ	4073
    89   000FEA                     fsr0h           equ	4074
    90   000FE9                     fsr0l           equ	4073
    91   000FE1                     fsr1            equ	4065
    92   000FE2                     fsr1h           equ	4066
    93   000FE1                     fsr1l           equ	4065
    94   000FD9                     fsr2            equ	4057
    95   000FDA                     fsr2h           equ	4058
    96   000FD9                     fsr2l           equ	4057
    97   000FEF                     indf0           equ	4079
    98   000FE7                     indf1           equ	4071
    99   000FDF                     indf2           equ	4063
   100   000FF2                     intcon          equ	4082
   101   000000                     nvmcon          equ	0
   102   000FF9                     pcl             equ	4089
   103   000FFA                     pclath          equ	4090
   104   000FFB                     pclatu          equ	4091
   105   000FEB                     plusw0          equ	4075
   106   000FE3                     plusw1          equ	4067
   107   000FDB                     plusw2          equ	4059
   108   000FED                     postdec0        equ	4077
   109   000FE5                     postdec1        equ	4069
   110   000FDD                     postdec2        equ	4061
   111   000FEE                     postinc0        equ	4078
   112   000FE6                     postinc1        equ	4070
   113   000FDE                     postinc2        equ	4062
   114   000FEC                     preinc0         equ	4076
   115   000FE4                     preinc1         equ	4068
   116   000FDC                     preinc2         equ	4060
   117   000FF3                     prod            equ	4083
   118   000FF4                     prodh           equ	4084
   119   000FF3                     prodl           equ	4083
   120   000FD8                     status          equ	4056
   121   000FF5                     tablat          equ	4085
   122   000FF6                     tblptr          equ	4086
   123   000FF7                     tblptrh         equ	4087
   124   000FF6                     tblptrl         equ	4086
   125   000FF8                     tblptru         equ	4088
   126   000FFD                     tosl            equ	4093
   127   000FE8                     wreg            equ	4072
   128   000F62                     SPPDATA         equ	3938	;# 
   129   000F63                     SPPCFG          equ	3939	;# 
   130   000F64                     SPPEPS          equ	3940	;# 
   131   000F65                     SPPCON          equ	3941	;# 
   132   000F66                     UFRM            equ	3942	;# 
   133   000F66                     UFRML           equ	3942	;# 
   134   000F67                     UFRMH           equ	3943	;# 
   135   000F68                     UIR             equ	3944	;# 
   136   000F69                     UIE             equ	3945	;# 
   137   000F6A                     UEIR            equ	3946	;# 
   138   000F6B                     UEIE            equ	3947	;# 
   139   000F6C                     USTAT           equ	3948	;# 
   140   000F6D                     UCON            equ	3949	;# 
   141   000F6E                     UADDR           equ	3950	;# 
   142   000F6F                     UCFG            equ	3951	;# 
   143   000F70                     UEP0            equ	3952	;# 
   144   000F71                     UEP1            equ	3953	;# 
   145   000F72                     UEP2            equ	3954	;# 
   146   000F73                     UEP3            equ	3955	;# 
   147   000F74                     UEP4            equ	3956	;# 
   148   000F75                     UEP5            equ	3957	;# 
   149   000F76                     UEP6            equ	3958	;# 
   150   000F77                     UEP7            equ	3959	;# 
   151   000F78                     UEP8            equ	3960	;# 
   152   000F79                     UEP9            equ	3961	;# 
   153   000F7A                     UEP10           equ	3962	;# 
   154   000F7B                     UEP11           equ	3963	;# 
   155   000F7C                     UEP12           equ	3964	;# 
   156   000F7D                     UEP13           equ	3965	;# 
   157   000F7E                     UEP14           equ	3966	;# 
   158   000F7F                     UEP15           equ	3967	;# 
   159   000F80                     PORTA           equ	3968	;# 
   160   000F81                     PORTB           equ	3969	;# 
   161   000F82                     PORTC           equ	3970	;# 
   162   000F83                     PORTD           equ	3971	;# 
   163   000F84                     PORTE           equ	3972	;# 
   164   000F89                     LATA            equ	3977	;# 
   165   000F8A                     LATB            equ	3978	;# 
   166   000F8B                     LATC            equ	3979	;# 
   167   000F8C                     LATD            equ	3980	;# 
   168   000F8D                     LATE            equ	3981	;# 
   169   000F92                     TRISA           equ	3986	;# 
   170   000F92                     DDRA            equ	3986	;# 
   171   000F93                     TRISB           equ	3987	;# 
   172   000F93                     DDRB            equ	3987	;# 
   173   000F94                     TRISC           equ	3988	;# 
   174   000F94                     DDRC            equ	3988	;# 
   175   000F95                     TRISD           equ	3989	;# 
   176   000F95                     DDRD            equ	3989	;# 
   177   000F96                     TRISE           equ	3990	;# 
   178   000F96                     DDRE            equ	3990	;# 
   179   000F9B                     OSCTUNE         equ	3995	;# 
   180   000F9D                     PIE1            equ	3997	;# 
   181   000F9E                     PIR1            equ	3998	;# 
   182   000F9F                     IPR1            equ	3999	;# 
   183   000FA0                     PIE2            equ	4000	;# 
   184   000FA1                     PIR2            equ	4001	;# 
   185   000FA2                     IPR2            equ	4002	;# 
   186   000FA6                     EECON1          equ	4006	;# 
   187   000FA7                     EECON2          equ	4007	;# 
   188   000FA8                     EEDATA          equ	4008	;# 
   189   000FA9                     EEADR           equ	4009	;# 
   190   000FAB                     RCSTA           equ	4011	;# 
   191   000FAB                     RCSTA1          equ	4011	;# 
   192   000FAC                     TXSTA           equ	4012	;# 
   193   000FAC                     TXSTA1          equ	4012	;# 
   194   000FAD                     TXREG           equ	4013	;# 
   195   000FAD                     TXREG1          equ	4013	;# 
   196   000FAE                     RCREG           equ	4014	;# 
   197   000FAE                     RCREG1          equ	4014	;# 
   198   000FAF                     SPBRG           equ	4015	;# 
   199   000FAF                     SPBRG1          equ	4015	;# 
   200   000FB0                     SPBRGH          equ	4016	;# 
   201   000FB1                     T3CON           equ	4017	;# 
   202   000FB2                     TMR3            equ	4018	;# 
   203   000FB2                     TMR3L           equ	4018	;# 
   204   000FB3                     TMR3H           equ	4019	;# 
   205   000FB4                     CMCON           equ	4020	;# 
   206   000FB5                     CVRCON          equ	4021	;# 
   207   000FB6                     ECCP1AS         equ	4022	;# 
   208   000FB6                     CCP1AS          equ	4022	;# 
   209   000FB7                     ECCP1DEL        equ	4023	;# 
   210   000FB7                     CCP1DEL         equ	4023	;# 
   211   000FB8                     BAUDCON         equ	4024	;# 
   212   000FB8                     BAUDCTL         equ	4024	;# 
   213   000FBA                     CCP2CON         equ	4026	;# 
   214   000FBB                     CCPR2           equ	4027	;# 
   215   000FBB                     CCPR2L          equ	4027	;# 
   216   000FBC                     CCPR2H          equ	4028	;# 
   217   000FBD                     CCP1CON         equ	4029	;# 
   218   000FBD                     ECCP1CON        equ	4029	;# 
   219   000FBE                     CCPR1           equ	4030	;# 
   220   000FBE                     CCPR1L          equ	4030	;# 
   221   000FBF                     CCPR1H          equ	4031	;# 
   222   000FC0                     ADCON2          equ	4032	;# 
   223   000FC1                     ADCON1          equ	4033	;# 
   224   000FC2                     ADCON0          equ	4034	;# 
   225   000FC3                     ADRES           equ	4035	;# 
   226   000FC3                     ADRESL          equ	4035	;# 
   227   000FC4                     ADRESH          equ	4036	;# 
   228   000FC5                     SSPCON2         equ	4037	;# 
   229   000FC6                     SSPCON1         equ	4038	;# 
   230   000FC7                     SSPSTAT         equ	4039	;# 
   231   000FC8                     SSPADD          equ	4040	;# 
   232   000FC9                     SSPBUF          equ	4041	;# 
   233   000FCA                     T2CON           equ	4042	;# 
   234   000FCB                     PR2             equ	4043	;# 
   235   000FCB                     MEMCON          equ	4043	;# 
   236   000FCC                     TMR2            equ	4044	;# 
   237   000FCD                     T1CON           equ	4045	;# 
   238   000FCE                     TMR1            equ	4046	;# 
   239   000FCE                     TMR1L           equ	4046	;# 
   240   000FCF                     TMR1H           equ	4047	;# 
   241   000FD0                     RCON            equ	4048	;# 
   242   000FD1                     WDTCON          equ	4049	;# 
   243   000FD2                     HLVDCON         equ	4050	;# 
   244   000FD2                     LVDCON          equ	4050	;# 
   245   000FD3                     OSCCON          equ	4051	;# 
   246   000FD5                     T0CON           equ	4053	;# 
   247   000FD6                     TMR0            equ	4054	;# 
   248   000FD6                     TMR0L           equ	4054	;# 
   249   000FD7                     TMR0H           equ	4055	;# 
   250   000FD8                     STATUS          equ	4056	;# 
   251   000FD9                     FSR2            equ	4057	;# 
   252   000FD9                     FSR2L           equ	4057	;# 
   253   000FDA                     FSR2H           equ	4058	;# 
   254   000FDB                     PLUSW2          equ	4059	;# 
   255   000FDC                     PREINC2         equ	4060	;# 
   256   000FDD                     POSTDEC2        equ	4061	;# 
   257   000FDE                     POSTINC2        equ	4062	;# 
   258   000FDF                     INDF2           equ	4063	;# 
   259   000FE0                     BSR             equ	4064	;# 
   260   000FE1                     FSR1            equ	4065	;# 
   261   000FE1                     FSR1L           equ	4065	;# 
   262   000FE2                     FSR1H           equ	4066	;# 
   263   000FE3                     PLUSW1          equ	4067	;# 
   264   000FE4                     PREINC1         equ	4068	;# 
   265   000FE5                     POSTDEC1        equ	4069	;# 
   266   000FE6                     POSTINC1        equ	4070	;# 
   267   000FE7                     INDF1           equ	4071	;# 
   268   000FE8                     WREG            equ	4072	;# 
   269   000FE9                     FSR0            equ	4073	;# 
   270   000FE9                     FSR0L           equ	4073	;# 
   271   000FEA                     FSR0H           equ	4074	;# 
   272   000FEB                     PLUSW0          equ	4075	;# 
   273   000FEC                     PREINC0         equ	4076	;# 
   274   000FED                     POSTDEC0        equ	4077	;# 
   275   000FEE                     POSTINC0        equ	4078	;# 
   276   000FEF                     INDF0           equ	4079	;# 
   277   000FF0                     INTCON3         equ	4080	;# 
   278   000FF1                     INTCON2         equ	4081	;# 
   279   000FF2                     INTCON          equ	4082	;# 
   280   000FF3                     PROD            equ	4083	;# 
   281   000FF3                     PRODL           equ	4083	;# 
   282   000FF4                     PRODH           equ	4084	;# 
   283   000FF5                     TABLAT          equ	4085	;# 
   284   000FF6                     TBLPTR          equ	4086	;# 
   285   000FF6                     TBLPTRL         equ	4086	;# 
   286   000FF7                     TBLPTRH         equ	4087	;# 
   287   000FF8                     TBLPTRU         equ	4088	;# 
   288   000FF9                     PCLAT           equ	4089	;# 
   289   000FF9                     PC              equ	4089	;# 
   290   000FF9                     PCL             equ	4089	;# 
   291   000FFA                     PCLATH          equ	4090	;# 
   292   000FFB                     PCLATU          equ	4091	;# 
   293   000FFC                     STKPTR          equ	4092	;# 
   294   000FFD                     TOS             equ	4093	;# 
   295   000FFD                     TOSL            equ	4093	;# 
   296   000FFE                     TOSH            equ	4094	;# 
   297   000FFF                     TOSU            equ	4095	;# 
   298   000F62                     SPPDATA         equ	3938	;# 
   299   000F63                     SPPCFG          equ	3939	;# 
   300   000F64                     SPPEPS          equ	3940	;# 
   301   000F65                     SPPCON          equ	3941	;# 
   302   000F66                     UFRM            equ	3942	;# 
   303   000F66                     UFRML           equ	3942	;# 
   304   000F67                     UFRMH           equ	3943	;# 
   305   000F68                     UIR             equ	3944	;# 
   306   000F69                     UIE             equ	3945	;# 
   307   000F6A                     UEIR            equ	3946	;# 
   308   000F6B                     UEIE            equ	3947	;# 
   309   000F6C                     USTAT           equ	3948	;# 
   310   000F6D                     UCON            equ	3949	;# 
   311   000F6E                     UADDR           equ	3950	;# 
   312   000F6F                     UCFG            equ	3951	;# 
   313   000F70                     UEP0            equ	3952	;# 
   314   000F71                     UEP1            equ	3953	;# 
   315   000F72                     UEP2            equ	3954	;# 
   316   000F73                     UEP3            equ	3955	;# 
   317   000F74                     UEP4            equ	3956	;# 
   318   000F75                     UEP5            equ	3957	;# 
   319   000F76                     UEP6            equ	3958	;# 
   320   000F77                     UEP7            equ	3959	;# 
   321   000F78                     UEP8            equ	3960	;# 
   322   000F79                     UEP9            equ	3961	;# 
   323   000F7A                     UEP10           equ	3962	;# 
   324   000F7B                     UEP11           equ	3963	;# 
   325   000F7C                     UEP12           equ	3964	;# 
   326   000F7D                     UEP13           equ	3965	;# 
   327   000F7E                     UEP14           equ	3966	;# 
   328   000F7F                     UEP15           equ	3967	;# 
   329   000F80                     PORTA           equ	3968	;# 
   330   000F81                     PORTB           equ	3969	;# 
   331   000F82                     PORTC           equ	3970	;# 
   332   000F83                     PORTD           equ	3971	;# 
   333   000F84                     PORTE           equ	3972	;# 
   334   000F89                     LATA            equ	3977	;# 
   335   000F8A                     LATB            equ	3978	;# 
   336   000F8B                     LATC            equ	3979	;# 
   337   000F8C                     LATD            equ	3980	;# 
   338   000F8D                     LATE            equ	3981	;# 
   339   000F92                     TRISA           equ	3986	;# 
   340   000F92                     DDRA            equ	3986	;# 
   341   000F93                     TRISB           equ	3987	;# 
   342   000F93                     DDRB            equ	3987	;# 
   343   000F94                     TRISC           equ	3988	;# 
   344   000F94                     DDRC            equ	3988	;# 
   345   000F95                     TRISD           equ	3989	;# 
   346   000F95                     DDRD            equ	3989	;# 
   347   000F96                     TRISE           equ	3990	;# 
   348   000F96                     DDRE            equ	3990	;# 
   349   000F9B                     OSCTUNE         equ	3995	;# 
   350   000F9D                     PIE1            equ	3997	;# 
   351   000F9E                     PIR1            equ	3998	;# 
   352   000F9F                     IPR1            equ	3999	;# 
   353   000FA0                     PIE2            equ	4000	;# 
   354   000FA1                     PIR2            equ	4001	;# 
   355   000FA2                     IPR2            equ	4002	;# 
   356   000FA6                     EECON1          equ	4006	;# 
   357   000FA7                     EECON2          equ	4007	;# 
   358   000FA8                     EEDATA          equ	4008	;# 
   359   000FA9                     EEADR           equ	4009	;# 
   360   000FAB                     RCSTA           equ	4011	;# 
   361   000FAB                     RCSTA1          equ	4011	;# 
   362   000FAC                     TXSTA           equ	4012	;# 
   363   000FAC                     TXSTA1          equ	4012	;# 
   364   000FAD                     TXREG           equ	4013	;# 
   365   000FAD                     TXREG1          equ	4013	;# 
   366   000FAE                     RCREG           equ	4014	;# 
   367   000FAE                     RCREG1          equ	4014	;# 
   368   000FAF                     SPBRG           equ	4015	;# 
   369   000FAF                     SPBRG1          equ	4015	;# 
   370   000FB0                     SPBRGH          equ	4016	;# 
   371   000FB1                     T3CON           equ	4017	;# 
   372   000FB2                     TMR3            equ	4018	;# 
   373   000FB2                     TMR3L           equ	4018	;# 
   374   000FB3                     TMR3H           equ	4019	;# 
   375   000FB4                     CMCON           equ	4020	;# 
   376   000FB5                     CVRCON          equ	4021	;# 
   377   000FB6                     ECCP1AS         equ	4022	;# 
   378   000FB6                     CCP1AS          equ	4022	;# 
   379   000FB7                     ECCP1DEL        equ	4023	;# 
   380   000FB7                     CCP1DEL         equ	4023	;# 
   381   000FB8                     BAUDCON         equ	4024	;# 
   382   000FB8                     BAUDCTL         equ	4024	;# 
   383   000FBA                     CCP2CON         equ	4026	;# 
   384   000FBB                     CCPR2           equ	4027	;# 
   385   000FBB                     CCPR2L          equ	4027	;# 
   386   000FBC                     CCPR2H          equ	4028	;# 
   387   000FBD                     CCP1CON         equ	4029	;# 
   388   000FBD                     ECCP1CON        equ	4029	;# 
   389   000FBE                     CCPR1           equ	4030	;# 
   390   000FBE                     CCPR1L          equ	4030	;# 
   391   000FBF                     CCPR1H          equ	4031	;# 
   392   000FC0                     ADCON2          equ	4032	;# 
   393   000FC1                     ADCON1          equ	4033	;# 
   394   000FC2                     ADCON0          equ	4034	;# 
   395   000FC3                     ADRES           equ	4035	;# 
   396   000FC3                     ADRESL          equ	4035	;# 
   397   000FC4                     ADRESH          equ	4036	;# 
   398   000FC5                     SSPCON2         equ	4037	;# 
   399   000FC6                     SSPCON1         equ	4038	;# 
   400   000FC7                     SSPSTAT         equ	4039	;# 
   401   000FC8                     SSPADD          equ	4040	;# 
   402   000FC9                     SSPBUF          equ	4041	;# 
   403   000FCA                     T2CON           equ	4042	;# 
   404   000FCB                     PR2             equ	4043	;# 
   405   000FCB                     MEMCON          equ	4043	;# 
   406   000FCC                     TMR2            equ	4044	;# 
   407   000FCD                     T1CON           equ	4045	;# 
   408   000FCE                     TMR1            equ	4046	;# 
   409   000FCE                     TMR1L           equ	4046	;# 
   410   000FCF                     TMR1H           equ	4047	;# 
   411   000FD0                     RCON            equ	4048	;# 
   412   000FD1                     WDTCON          equ	4049	;# 
   413   000FD2                     HLVDCON         equ	4050	;# 
   414   000FD2                     LVDCON          equ	4050	;# 
   415   000FD3                     OSCCON          equ	4051	;# 
   416   000FD5                     T0CON           equ	4053	;# 
   417   000FD6                     TMR0            equ	4054	;# 
   418   000FD6                     TMR0L           equ	4054	;# 
   419   000FD7                     TMR0H           equ	4055	;# 
   420   000FD8                     STATUS          equ	4056	;# 
   421   000FD9                     FSR2            equ	4057	;# 
   422   000FD9                     FSR2L           equ	4057	;# 
   423   000FDA                     FSR2H           equ	4058	;# 
   424   000FDB                     PLUSW2          equ	4059	;# 
   425   000FDC                     PREINC2         equ	4060	;# 
   426   000FDD                     POSTDEC2        equ	4061	;# 
   427   000FDE                     POSTINC2        equ	4062	;# 
   428   000FDF                     INDF2           equ	4063	;# 
   429   000FE0                     BSR             equ	4064	;# 
   430   000FE1                     FSR1            equ	4065	;# 
   431   000FE1                     FSR1L           equ	4065	;# 
   432   000FE2                     FSR1H           equ	4066	;# 
   433   000FE3                     PLUSW1          equ	4067	;# 
   434   000FE4                     PREINC1         equ	4068	;# 
   435   000FE5                     POSTDEC1        equ	4069	;# 
   436   000FE6                     POSTINC1        equ	4070	;# 
   437   000FE7                     INDF1           equ	4071	;# 
   438   000FE8                     WREG            equ	4072	;# 
   439   000FE9                     FSR0            equ	4073	;# 
   440   000FE9                     FSR0L           equ	4073	;# 
   441   000FEA                     FSR0H           equ	4074	;# 
   442   000FEB                     PLUSW0          equ	4075	;# 
   443   000FEC                     PREINC0         equ	4076	;# 
   444   000FED                     POSTDEC0        equ	4077	;# 
   445   000FEE                     POSTINC0        equ	4078	;# 
   446   000FEF                     INDF0           equ	4079	;# 
   447   000FF0                     INTCON3         equ	4080	;# 
   448   000FF1                     INTCON2         equ	4081	;# 
   449   000FF2                     INTCON          equ	4082	;# 
   450   000FF3                     PROD            equ	4083	;# 
   451   000FF3                     PRODL           equ	4083	;# 
   452   000FF4                     PRODH           equ	4084	;# 
   453   000FF5                     TABLAT          equ	4085	;# 
   454   000FF6                     TBLPTR          equ	4086	;# 
   455   000FF6                     TBLPTRL         equ	4086	;# 
   456   000FF7                     TBLPTRH         equ	4087	;# 
   457   000FF8                     TBLPTRU         equ	4088	;# 
   458   000FF9                     PCLAT           equ	4089	;# 
   459   000FF9                     PC              equ	4089	;# 
   460   000FF9                     PCL             equ	4089	;# 
   461   000FFA                     PCLATH          equ	4090	;# 
   462   000FFB                     PCLATU          equ	4091	;# 
   463   000FFC                     STKPTR          equ	4092	;# 
   464   000FFD                     TOS             equ	4093	;# 
   465   000FFD                     TOSL            equ	4093	;# 
   466   000FFE                     TOSH            equ	4094	;# 
   467   000FFF                     TOSU            equ	4095	;# 
   468   000F62                     SPPDATA         equ	3938	;# 
   469   000F63                     SPPCFG          equ	3939	;# 
   470   000F64                     SPPEPS          equ	3940	;# 
   471   000F65                     SPPCON          equ	3941	;# 
   472   000F66                     UFRM            equ	3942	;# 
   473   000F66                     UFRML           equ	3942	;# 
   474   000F67                     UFRMH           equ	3943	;# 
   475   000F68                     UIR             equ	3944	;# 
   476   000F69                     UIE             equ	3945	;# 
   477   000F6A                     UEIR            equ	3946	;# 
   478   000F6B                     UEIE            equ	3947	;# 
   479   000F6C                     USTAT           equ	3948	;# 
   480   000F6D                     UCON            equ	3949	;# 
   481   000F6E                     UADDR           equ	3950	;# 
   482   000F6F                     UCFG            equ	3951	;# 
   483   000F70                     UEP0            equ	3952	;# 
   484   000F71                     UEP1            equ	3953	;# 
   485   000F72                     UEP2            equ	3954	;# 
   486   000F73                     UEP3            equ	3955	;# 
   487   000F74                     UEP4            equ	3956	;# 
   488   000F75                     UEP5            equ	3957	;# 
   489   000F76                     UEP6            equ	3958	;# 
   490   000F77                     UEP7            equ	3959	;# 
   491   000F78                     UEP8            equ	3960	;# 
   492   000F79                     UEP9            equ	3961	;# 
   493   000F7A                     UEP10           equ	3962	;# 
   494   000F7B                     UEP11           equ	3963	;# 
   495   000F7C                     UEP12           equ	3964	;# 
   496   000F7D                     UEP13           equ	3965	;# 
   497   000F7E                     UEP14           equ	3966	;# 
   498   000F7F                     UEP15           equ	3967	;# 
   499   000F80                     PORTA           equ	3968	;# 
   500   000F81                     PORTB           equ	3969	;# 
   501   000F82                     PORTC           equ	3970	;# 
   502   000F83                     PORTD           equ	3971	;# 
   503   000F84                     PORTE           equ	3972	;# 
   504   000F89                     LATA            equ	3977	;# 
   505   000F8A                     LATB            equ	3978	;# 
   506   000F8B                     LATC            equ	3979	;# 
   507   000F8C                     LATD            equ	3980	;# 
   508   000F8D                     LATE            equ	3981	;# 
   509   000F92                     TRISA           equ	3986	;# 
   510   000F92                     DDRA            equ	3986	;# 
   511   000F93                     TRISB           equ	3987	;# 
   512   000F93                     DDRB            equ	3987	;# 
   513   000F94                     TRISC           equ	3988	;# 
   514   000F94                     DDRC            equ	3988	;# 
   515   000F95                     TRISD           equ	3989	;# 
   516   000F95                     DDRD            equ	3989	;# 
   517   000F96                     TRISE           equ	3990	;# 
   518   000F96                     DDRE            equ	3990	;# 
   519   000F9B                     OSCTUNE         equ	3995	;# 
   520   000F9D                     PIE1            equ	3997	;# 
   521   000F9E                     PIR1            equ	3998	;# 
   522   000F9F                     IPR1            equ	3999	;# 
   523   000FA0                     PIE2            equ	4000	;# 
   524   000FA1                     PIR2            equ	4001	;# 
   525   000FA2                     IPR2            equ	4002	;# 
   526   000FA6                     EECON1          equ	4006	;# 
   527   000FA7                     EECON2          equ	4007	;# 
   528   000FA8                     EEDATA          equ	4008	;# 
   529   000FA9                     EEADR           equ	4009	;# 
   530   000FAB                     RCSTA           equ	4011	;# 
   531   000FAB                     RCSTA1          equ	4011	;# 
   532   000FAC                     TXSTA           equ	4012	;# 
   533   000FAC                     TXSTA1          equ	4012	;# 
   534   000FAD                     TXREG           equ	4013	;# 
   535   000FAD                     TXREG1          equ	4013	;# 
   536   000FAE                     RCREG           equ	4014	;# 
   537   000FAE                     RCREG1          equ	4014	;# 
   538   000FAF                     SPBRG           equ	4015	;# 
   539   000FAF                     SPBRG1          equ	4015	;# 
   540   000FB0                     SPBRGH          equ	4016	;# 
   541   000FB1                     T3CON           equ	4017	;# 
   542   000FB2                     TMR3            equ	4018	;# 
   543   000FB2                     TMR3L           equ	4018	;# 
   544   000FB3                     TMR3H           equ	4019	;# 
   545   000FB4                     CMCON           equ	4020	;# 
   546   000FB5                     CVRCON          equ	4021	;# 
   547   000FB6                     ECCP1AS         equ	4022	;# 
   548   000FB6                     CCP1AS          equ	4022	;# 
   549   000FB7                     ECCP1DEL        equ	4023	;# 
   550   000FB7                     CCP1DEL         equ	4023	;# 
   551   000FB8                     BAUDCON         equ	4024	;# 
   552   000FB8                     BAUDCTL         equ	4024	;# 
   553   000FBA                     CCP2CON         equ	4026	;# 
   554   000FBB                     CCPR2           equ	4027	;# 
   555   000FBB                     CCPR2L          equ	4027	;# 
   556   000FBC                     CCPR2H          equ	4028	;# 
   557   000FBD                     CCP1CON         equ	4029	;# 
   558   000FBD                     ECCP1CON        equ	4029	;# 
   559   000FBE                     CCPR1           equ	4030	;# 
   560   000FBE                     CCPR1L          equ	4030	;# 
   561   000FBF                     CCPR1H          equ	4031	;# 
   562   000FC0                     ADCON2          equ	4032	;# 
   563   000FC1                     ADCON1          equ	4033	;# 
   564   000FC2                     ADCON0          equ	4034	;# 
   565   000FC3                     ADRES           equ	4035	;# 
   566   000FC3                     ADRESL          equ	4035	;# 
   567   000FC4                     ADRESH          equ	4036	;# 
   568   000FC5                     SSPCON2         equ	4037	;# 
   569   000FC6                     SSPCON1         equ	4038	;# 
   570   000FC7                     SSPSTAT         equ	4039	;# 
   571   000FC8                     SSPADD          equ	4040	;# 
   572   000FC9                     SSPBUF          equ	4041	;# 
   573   000FCA                     T2CON           equ	4042	;# 
   574   000FCB                     PR2             equ	4043	;# 
   575   000FCB                     MEMCON          equ	4043	;# 
   576   000FCC                     TMR2            equ	4044	;# 
   577   000FCD                     T1CON           equ	4045	;# 
   578   000FCE                     TMR1            equ	4046	;# 
   579   000FCE                     TMR1L           equ	4046	;# 
   580   000FCF                     TMR1H           equ	4047	;# 
   581   000FD0                     RCON            equ	4048	;# 
   582   000FD1                     WDTCON          equ	4049	;# 
   583   000FD2                     HLVDCON         equ	4050	;# 
   584   000FD2                     LVDCON          equ	4050	;# 
   585   000FD3                     OSCCON          equ	4051	;# 
   586   000FD5                     T0CON           equ	4053	;# 
   587   000FD6                     TMR0            equ	4054	;# 
   588   000FD6                     TMR0L           equ	4054	;# 
   589   000FD7                     TMR0H           equ	4055	;# 
   590   000FD8                     STATUS          equ	4056	;# 
   591   000FD9                     FSR2            equ	4057	;# 
   592   000FD9                     FSR2L           equ	4057	;# 
   593   000FDA                     FSR2H           equ	4058	;# 
   594   000FDB                     PLUSW2          equ	4059	;# 
   595   000FDC                     PREINC2         equ	4060	;# 
   596   000FDD                     POSTDEC2        equ	4061	;# 
   597   000FDE                     POSTINC2        equ	4062	;# 
   598   000FDF                     INDF2           equ	4063	;# 
   599   000FE0                     BSR             equ	4064	;# 
   600   000FE1                     FSR1            equ	4065	;# 
   601   000FE1                     FSR1L           equ	4065	;# 
   602   000FE2                     FSR1H           equ	4066	;# 
   603   000FE3                     PLUSW1          equ	4067	;# 
   604   000FE4                     PREINC1         equ	4068	;# 
   605   000FE5                     POSTDEC1        equ	4069	;# 
   606   000FE6                     POSTINC1        equ	4070	;# 
   607   000FE7                     INDF1           equ	4071	;# 
   608   000FE8                     WREG            equ	4072	;# 
   609   000FE9                     FSR0            equ	4073	;# 
   610   000FE9                     FSR0L           equ	4073	;# 
   611   000FEA                     FSR0H           equ	4074	;# 
   612   000FEB                     PLUSW0          equ	4075	;# 
   613   000FEC                     PREINC0         equ	4076	;# 
   614   000FED                     POSTDEC0        equ	4077	;# 
   615   000FEE                     POSTINC0        equ	4078	;# 
   616   000FEF                     INDF0           equ	4079	;# 
   617   000FF0                     INTCON3         equ	4080	;# 
   618   000FF1                     INTCON2         equ	4081	;# 
   619   000FF2                     INTCON          equ	4082	;# 
   620   000FF3                     PROD            equ	4083	;# 
   621   000FF3                     PRODL           equ	4083	;# 
   622   000FF4                     PRODH           equ	4084	;# 
   623   000FF5                     TABLAT          equ	4085	;# 
   624   000FF6                     TBLPTR          equ	4086	;# 
   625   000FF6                     TBLPTRL         equ	4086	;# 
   626   000FF7                     TBLPTRH         equ	4087	;# 
   627   000FF8                     TBLPTRU         equ	4088	;# 
   628   000FF9                     PCLAT           equ	4089	;# 
   629   000FF9                     PC              equ	4089	;# 
   630   000FF9                     PCL             equ	4089	;# 
   631   000FFA                     PCLATH          equ	4090	;# 
   632   000FFB                     PCLATU          equ	4091	;# 
   633   000FFC                     STKPTR          equ	4092	;# 
   634   000FFD                     TOS             equ	4093	;# 
   635   000FFD                     TOSL            equ	4093	;# 
   636   000FFE                     TOSH            equ	4094	;# 
   637   000FFF                     TOSU            equ	4095	;# 
   638   000F62                     SPPDATA         equ	3938	;# 
   639   000F63                     SPPCFG          equ	3939	;# 
   640   000F64                     SPPEPS          equ	3940	;# 
   641   000F65                     SPPCON          equ	3941	;# 
   642   000F66                     UFRM            equ	3942	;# 
   643   000F66                     UFRML           equ	3942	;# 
   644   000F67                     UFRMH           equ	3943	;# 
   645   000F68                     UIR             equ	3944	;# 
   646   000F69                     UIE             equ	3945	;# 
   647   000F6A                     UEIR            equ	3946	;# 
   648   000F6B                     UEIE            equ	3947	;# 
   649   000F6C                     USTAT           equ	3948	;# 
   650   000F6D                     UCON            equ	3949	;# 
   651   000F6E                     UADDR           equ	3950	;# 
   652   000F6F                     UCFG            equ	3951	;# 
   653   000F70                     UEP0            equ	3952	;# 
   654   000F71                     UEP1            equ	3953	;# 
   655   000F72                     UEP2            equ	3954	;# 
   656   000F73                     UEP3            equ	3955	;# 
   657   000F74                     UEP4            equ	3956	;# 
   658   000F75                     UEP5            equ	3957	;# 
   659   000F76                     UEP6            equ	3958	;# 
   660   000F77                     UEP7            equ	3959	;# 
   661   000F78                     UEP8            equ	3960	;# 
   662   000F79                     UEP9            equ	3961	;# 
   663   000F7A                     UEP10           equ	3962	;# 
   664   000F7B                     UEP11           equ	3963	;# 
   665   000F7C                     UEP12           equ	3964	;# 
   666   000F7D                     UEP13           equ	3965	;# 
   667   000F7E                     UEP14           equ	3966	;# 
   668   000F7F                     UEP15           equ	3967	;# 
   669   000F80                     PORTA           equ	3968	;# 
   670   000F81                     PORTB           equ	3969	;# 
   671   000F82                     PORTC           equ	3970	;# 
   672   000F83                     PORTD           equ	3971	;# 
   673   000F84                     PORTE           equ	3972	;# 
   674   000F89                     LATA            equ	3977	;# 
   675   000F8A                     LATB            equ	3978	;# 
   676   000F8B                     LATC            equ	3979	;# 
   677   000F8C                     LATD            equ	3980	;# 
   678   000F8D                     LATE            equ	3981	;# 
   679   000F92                     TRISA           equ	3986	;# 
   680   000F92                     DDRA            equ	3986	;# 
   681   000F93                     TRISB           equ	3987	;# 
   682   000F93                     DDRB            equ	3987	;# 
   683   000F94                     TRISC           equ	3988	;# 
   684   000F94                     DDRC            equ	3988	;# 
   685   000F95                     TRISD           equ	3989	;# 
   686   000F95                     DDRD            equ	3989	;# 
   687   000F96                     TRISE           equ	3990	;# 
   688   000F96                     DDRE            equ	3990	;# 
   689   000F9B                     OSCTUNE         equ	3995	;# 
   690   000F9D                     PIE1            equ	3997	;# 
   691   000F9E                     PIR1            equ	3998	;# 
   692   000F9F                     IPR1            equ	3999	;# 
   693   000FA0                     PIE2            equ	4000	;# 
   694   000FA1                     PIR2            equ	4001	;# 
   695   000FA2                     IPR2            equ	4002	;# 
   696   000FA6                     EECON1          equ	4006	;# 
   697   000FA7                     EECON2          equ	4007	;# 
   698   000FA8                     EEDATA          equ	4008	;# 
   699   000FA9                     EEADR           equ	4009	;# 
   700   000FAB                     RCSTA           equ	4011	;# 
   701   000FAB                     RCSTA1          equ	4011	;# 
   702   000FAC                     TXSTA           equ	4012	;# 
   703   000FAC                     TXSTA1          equ	4012	;# 
   704   000FAD                     TXREG           equ	4013	;# 
   705   000FAD                     TXREG1          equ	4013	;# 
   706   000FAE                     RCREG           equ	4014	;# 
   707   000FAE                     RCREG1          equ	4014	;# 
   708   000FAF                     SPBRG           equ	4015	;# 
   709   000FAF                     SPBRG1          equ	4015	;# 
   710   000FB0                     SPBRGH          equ	4016	;# 
   711   000FB1                     T3CON           equ	4017	;# 
   712   000FB2                     TMR3            equ	4018	;# 
   713   000FB2                     TMR3L           equ	4018	;# 
   714   000FB3                     TMR3H           equ	4019	;# 
   715   000FB4                     CMCON           equ	4020	;# 
   716   000FB5                     CVRCON          equ	4021	;# 
   717   000FB6                     ECCP1AS         equ	4022	;# 
   718   000FB6                     CCP1AS          equ	4022	;# 
   719   000FB7                     ECCP1DEL        equ	4023	;# 
   720   000FB7                     CCP1DEL         equ	4023	;# 
   721   000FB8                     BAUDCON         equ	4024	;# 
   722   000FB8                     BAUDCTL         equ	4024	;# 
   723   000FBA                     CCP2CON         equ	4026	;# 
   724   000FBB                     CCPR2           equ	4027	;# 
   725   000FBB                     CCPR2L          equ	4027	;# 
   726   000FBC                     CCPR2H          equ	4028	;# 
   727   000FBD                     CCP1CON         equ	4029	;# 
   728   000FBD                     ECCP1CON        equ	4029	;# 
   729   000FBE                     CCPR1           equ	4030	;# 
   730   000FBE                     CCPR1L          equ	4030	;# 
   731   000FBF                     CCPR1H          equ	4031	;# 
   732   000FC0                     ADCON2          equ	4032	;# 
   733   000FC1                     ADCON1          equ	4033	;# 
   734   000FC2                     ADCON0          equ	4034	;# 
   735   000FC3                     ADRES           equ	4035	;# 
   736   000FC3                     ADRESL          equ	4035	;# 
   737   000FC4                     ADRESH          equ	4036	;# 
   738   000FC5                     SSPCON2         equ	4037	;# 
   739   000FC6                     SSPCON1         equ	4038	;# 
   740   000FC7                     SSPSTAT         equ	4039	;# 
   741   000FC8                     SSPADD          equ	4040	;# 
   742   000FC9                     SSPBUF          equ	4041	;# 
   743   000FCA                     T2CON           equ	4042	;# 
   744   000FCB                     PR2             equ	4043	;# 
   745   000FCB                     MEMCON          equ	4043	;# 
   746   000FCC                     TMR2            equ	4044	;# 
   747   000FCD                     T1CON           equ	4045	;# 
   748   000FCE                     TMR1            equ	4046	;# 
   749   000FCE                     TMR1L           equ	4046	;# 
   750   000FCF                     TMR1H           equ	4047	;# 
   751   000FD0                     RCON            equ	4048	;# 
   752   000FD1                     WDTCON          equ	4049	;# 
   753   000FD2                     HLVDCON         equ	4050	;# 
   754   000FD2                     LVDCON          equ	4050	;# 
   755   000FD3                     OSCCON          equ	4051	;# 
   756   000FD5                     T0CON           equ	4053	;# 
   757   000FD6                     TMR0            equ	4054	;# 
   758   000FD6                     TMR0L           equ	4054	;# 
   759   000FD7                     TMR0H           equ	4055	;# 
   760   000FD8                     STATUS          equ	4056	;# 
   761   000FD9                     FSR2            equ	4057	;# 
   762   000FD9                     FSR2L           equ	4057	;# 
   763   000FDA                     FSR2H           equ	4058	;# 
   764   000FDB                     PLUSW2          equ	4059	;# 
   765   000FDC                     PREINC2         equ	4060	;# 
   766   000FDD                     POSTDEC2        equ	4061	;# 
   767   000FDE                     POSTINC2        equ	4062	;# 
   768   000FDF                     INDF2           equ	4063	;# 
   769   000FE0                     BSR             equ	4064	;# 
   770   000FE1                     FSR1            equ	4065	;# 
   771   000FE1                     FSR1L           equ	4065	;# 
   772   000FE2                     FSR1H           equ	4066	;# 
   773   000FE3                     PLUSW1          equ	4067	;# 
   774   000FE4                     PREINC1         equ	4068	;# 
   775   000FE5                     POSTDEC1        equ	4069	;# 
   776   000FE6                     POSTINC1        equ	4070	;# 
   777   000FE7                     INDF1           equ	4071	;# 
   778   000FE8                     WREG            equ	4072	;# 
   779   000FE9                     FSR0            equ	4073	;# 
   780   000FE9                     FSR0L           equ	4073	;# 
   781   000FEA                     FSR0H           equ	4074	;# 
   782   000FEB                     PLUSW0          equ	4075	;# 
   783   000FEC                     PREINC0         equ	4076	;# 
   784   000FED                     POSTDEC0        equ	4077	;# 
   785   000FEE                     POSTINC0        equ	4078	;# 
   786   000FEF                     INDF0           equ	4079	;# 
   787   000FF0                     INTCON3         equ	4080	;# 
   788   000FF1                     INTCON2         equ	4081	;# 
   789   000FF2                     INTCON          equ	4082	;# 
   790   000FF3                     PROD            equ	4083	;# 
   791   000FF3                     PRODL           equ	4083	;# 
   792   000FF4                     PRODH           equ	4084	;# 
   793   000FF5                     TABLAT          equ	4085	;# 
   794   000FF6                     TBLPTR          equ	4086	;# 
   795   000FF6                     TBLPTRL         equ	4086	;# 
   796   000FF7                     TBLPTRH         equ	4087	;# 
   797   000FF8                     TBLPTRU         equ	4088	;# 
   798   000FF9                     PCLAT           equ	4089	;# 
   799   000FF9                     PC              equ	4089	;# 
   800   000FF9                     PCL             equ	4089	;# 
   801   000FFA                     PCLATH          equ	4090	;# 
   802   000FFB                     PCLATU          equ	4091	;# 
   803   000FFC                     STKPTR          equ	4092	;# 
   804   000FFD                     TOS             equ	4093	;# 
   805   000FFD                     TOSL            equ	4093	;# 
   806   000FFE                     TOSH            equ	4094	;# 
   807   000FFF                     TOSU            equ	4095	;# 
   808   000F62                     SPPDATA         equ	3938	;# 
   809   000F63                     SPPCFG          equ	3939	;# 
   810   000F64                     SPPEPS          equ	3940	;# 
   811   000F65                     SPPCON          equ	3941	;# 
   812   000F66                     UFRM            equ	3942	;# 
   813   000F66                     UFRML           equ	3942	;# 
   814   000F67                     UFRMH           equ	3943	;# 
   815   000F68                     UIR             equ	3944	;# 
   816   000F69                     UIE             equ	3945	;# 
   817   000F6A                     UEIR            equ	3946	;# 
   818   000F6B                     UEIE            equ	3947	;# 
   819   000F6C                     USTAT           equ	3948	;# 
   820   000F6D                     UCON            equ	3949	;# 
   821   000F6E                     UADDR           equ	3950	;# 
   822   000F6F                     UCFG            equ	3951	;# 
   823   000F70                     UEP0            equ	3952	;# 
   824   000F71                     UEP1            equ	3953	;# 
   825   000F72                     UEP2            equ	3954	;# 
   826   000F73                     UEP3            equ	3955	;# 
   827   000F74                     UEP4            equ	3956	;# 
   828   000F75                     UEP5            equ	3957	;# 
   829   000F76                     UEP6            equ	3958	;# 
   830   000F77                     UEP7            equ	3959	;# 
   831   000F78                     UEP8            equ	3960	;# 
   832   000F79                     UEP9            equ	3961	;# 
   833   000F7A                     UEP10           equ	3962	;# 
   834   000F7B                     UEP11           equ	3963	;# 
   835   000F7C                     UEP12           equ	3964	;# 
   836   000F7D                     UEP13           equ	3965	;# 
   837   000F7E                     UEP14           equ	3966	;# 
   838   000F7F                     UEP15           equ	3967	;# 
   839   000F80                     PORTA           equ	3968	;# 
   840   000F81                     PORTB           equ	3969	;# 
   841   000F82                     PORTC           equ	3970	;# 
   842   000F83                     PORTD           equ	3971	;# 
   843   000F84                     PORTE           equ	3972	;# 
   844   000F89                     LATA            equ	3977	;# 
   845   000F8A                     LATB            equ	3978	;# 
   846   000F8B                     LATC            equ	3979	;# 
   847   000F8C                     LATD            equ	3980	;# 
   848   000F8D                     LATE            equ	3981	;# 
   849   000F92                     TRISA           equ	3986	;# 
   850   000F92                     DDRA            equ	3986	;# 
   851   000F93                     TRISB           equ	3987	;# 
   852   000F93                     DDRB            equ	3987	;# 
   853   000F94                     TRISC           equ	3988	;# 
   854   000F94                     DDRC            equ	3988	;# 
   855   000F95                     TRISD           equ	3989	;# 
   856   000F95                     DDRD            equ	3989	;# 
   857   000F96                     TRISE           equ	3990	;# 
   858   000F96                     DDRE            equ	3990	;# 
   859   000F9B                     OSCTUNE         equ	3995	;# 
   860   000F9D                     PIE1            equ	3997	;# 
   861   000F9E                     PIR1            equ	3998	;# 
   862   000F9F                     IPR1            equ	3999	;# 
   863   000FA0                     PIE2            equ	4000	;# 
   864   000FA1                     PIR2            equ	4001	;# 
   865   000FA2                     IPR2            equ	4002	;# 
   866   000FA6                     EECON1          equ	4006	;# 
   867   000FA7                     EECON2          equ	4007	;# 
   868   000FA8                     EEDATA          equ	4008	;# 
   869   000FA9                     EEADR           equ	4009	;# 
   870   000FAB                     RCSTA           equ	4011	;# 
   871   000FAB                     RCSTA1          equ	4011	;# 
   872   000FAC                     TXSTA           equ	4012	;# 
   873   000FAC                     TXSTA1          equ	4012	;# 
   874   000FAD                     TXREG           equ	4013	;# 
   875   000FAD                     TXREG1          equ	4013	;# 
   876   000FAE                     RCREG           equ	4014	;# 
   877   000FAE                     RCREG1          equ	4014	;# 
   878   000FAF                     SPBRG           equ	4015	;# 
   879   000FAF                     SPBRG1          equ	4015	;# 
   880   000FB0                     SPBRGH          equ	4016	;# 
   881   000FB1                     T3CON           equ	4017	;# 
   882   000FB2                     TMR3            equ	4018	;# 
   883   000FB2                     TMR3L           equ	4018	;# 
   884   000FB3                     TMR3H           equ	4019	;# 
   885   000FB4                     CMCON           equ	4020	;# 
   886   000FB5                     CVRCON          equ	4021	;# 
   887   000FB6                     ECCP1AS         equ	4022	;# 
   888   000FB6                     CCP1AS          equ	4022	;# 
   889   000FB7                     ECCP1DEL        equ	4023	;# 
   890   000FB7                     CCP1DEL         equ	4023	;# 
   891   000FB8                     BAUDCON         equ	4024	;# 
   892   000FB8                     BAUDCTL         equ	4024	;# 
   893   000FBA                     CCP2CON         equ	4026	;# 
   894   000FBB                     CCPR2           equ	4027	;# 
   895   000FBB                     CCPR2L          equ	4027	;# 
   896   000FBC                     CCPR2H          equ	4028	;# 
   897   000FBD                     CCP1CON         equ	4029	;# 
   898   000FBD                     ECCP1CON        equ	4029	;# 
   899   000FBE                     CCPR1           equ	4030	;# 
   900   000FBE                     CCPR1L          equ	4030	;# 
   901   000FBF                     CCPR1H          equ	4031	;# 
   902   000FC0                     ADCON2          equ	4032	;# 
   903   000FC1                     ADCON1          equ	4033	;# 
   904   000FC2                     ADCON0          equ	4034	;# 
   905   000FC3                     ADRES           equ	4035	;# 
   906   000FC3                     ADRESL          equ	4035	;# 
   907   000FC4                     ADRESH          equ	4036	;# 
   908   000FC5                     SSPCON2         equ	4037	;# 
   909   000FC6                     SSPCON1         equ	4038	;# 
   910   000FC7                     SSPSTAT         equ	4039	;# 
   911   000FC8                     SSPADD          equ	4040	;# 
   912   000FC9                     SSPBUF          equ	4041	;# 
   913   000FCA                     T2CON           equ	4042	;# 
   914   000FCB                     PR2             equ	4043	;# 
   915   000FCB                     MEMCON          equ	4043	;# 
   916   000FCC                     TMR2            equ	4044	;# 
   917   000FCD                     T1CON           equ	4045	;# 
   918   000FCE                     TMR1            equ	4046	;# 
   919   000FCE                     TMR1L           equ	4046	;# 
   920   000FCF                     TMR1H           equ	4047	;# 
   921   000FD0                     RCON            equ	4048	;# 
   922   000FD1                     WDTCON          equ	4049	;# 
   923   000FD2                     HLVDCON         equ	4050	;# 
   924   000FD2                     LVDCON          equ	4050	;# 
   925   000FD3                     OSCCON          equ	4051	;# 
   926   000FD5                     T0CON           equ	4053	;# 
   927   000FD6                     TMR0            equ	4054	;# 
   928   000FD6                     TMR0L           equ	4054	;# 
   929   000FD7                     TMR0H           equ	4055	;# 
   930   000FD8                     STATUS          equ	4056	;# 
   931   000FD9                     FSR2            equ	4057	;# 
   932   000FD9                     FSR2L           equ	4057	;# 
   933   000FDA                     FSR2H           equ	4058	;# 
   934   000FDB                     PLUSW2          equ	4059	;# 
   935   000FDC                     PREINC2         equ	4060	;# 
   936   000FDD                     POSTDEC2        equ	4061	;# 
   937   000FDE                     POSTINC2        equ	4062	;# 
   938   000FDF                     INDF2           equ	4063	;# 
   939   000FE0                     BSR             equ	4064	;# 
   940   000FE1                     FSR1            equ	4065	;# 
   941   000FE1                     FSR1L           equ	4065	;# 
   942   000FE2                     FSR1H           equ	4066	;# 
   943   000FE3                     PLUSW1          equ	4067	;# 
   944   000FE4                     PREINC1         equ	4068	;# 
   945   000FE5                     POSTDEC1        equ	4069	;# 
   946   000FE6                     POSTINC1        equ	4070	;# 
   947   000FE7                     INDF1           equ	4071	;# 
   948   000FE8                     WREG            equ	4072	;# 
   949   000FE9                     FSR0            equ	4073	;# 
   950   000FE9                     FSR0L           equ	4073	;# 
   951   000FEA                     FSR0H           equ	4074	;# 
   952   000FEB                     PLUSW0          equ	4075	;# 
   953   000FEC                     PREINC0         equ	4076	;# 
   954   000FED                     POSTDEC0        equ	4077	;# 
   955   000FEE                     POSTINC0        equ	4078	;# 
   956   000FEF                     INDF0           equ	4079	;# 
   957   000FF0                     INTCON3         equ	4080	;# 
   958   000FF1                     INTCON2         equ	4081	;# 
   959   000FF2                     INTCON          equ	4082	;# 
   960   000FF3                     PROD            equ	4083	;# 
   961   000FF3                     PRODL           equ	4083	;# 
   962   000FF4                     PRODH           equ	4084	;# 
   963   000FF5                     TABLAT          equ	4085	;# 
   964   000FF6                     TBLPTR          equ	4086	;# 
   965   000FF6                     TBLPTRL         equ	4086	;# 
   966   000FF7                     TBLPTRH         equ	4087	;# 
   967   000FF8                     TBLPTRU         equ	4088	;# 
   968   000FF9                     PCLAT           equ	4089	;# 
   969   000FF9                     PC              equ	4089	;# 
   970   000FF9                     PCL             equ	4089	;# 
   971   000FFA                     PCLATH          equ	4090	;# 
   972   000FFB                     PCLATU          equ	4091	;# 
   973   000FFC                     STKPTR          equ	4092	;# 
   974   000FFD                     TOS             equ	4093	;# 
   975   000FFD                     TOSL            equ	4093	;# 
   976   000FFE                     TOSH            equ	4094	;# 
   977   000FFF                     TOSU            equ	4095	;# 
   978   000F62                     SPPDATA         equ	3938	;# 
   979   000F63                     SPPCFG          equ	3939	;# 
   980   000F64                     SPPEPS          equ	3940	;# 
   981   000F65                     SPPCON          equ	3941	;# 
   982   000F66                     UFRM            equ	3942	;# 
   983   000F66                     UFRML           equ	3942	;# 
   984   000F67                     UFRMH           equ	3943	;# 
   985   000F68                     UIR             equ	3944	;# 
   986   000F69                     UIE             equ	3945	;# 
   987   000F6A                     UEIR            equ	3946	;# 
   988   000F6B                     UEIE            equ	3947	;# 
   989   000F6C                     USTAT           equ	3948	;# 
   990   000F6D                     UCON            equ	3949	;# 
   991   000F6E                     UADDR           equ	3950	;# 
   992   000F6F                     UCFG            equ	3951	;# 
   993   000F70                     UEP0            equ	3952	;# 
   994   000F71                     UEP1            equ	3953	;# 
   995   000F72                     UEP2            equ	3954	;# 
   996   000F73                     UEP3            equ	3955	;# 
   997   000F74                     UEP4            equ	3956	;# 
   998   000F75                     UEP5            equ	3957	;# 
   999   000F76                     UEP6            equ	3958	;# 
  1000   000F77                     UEP7            equ	3959	;# 
  1001   000F78                     UEP8            equ	3960	;# 
  1002   000F79                     UEP9            equ	3961	;# 
  1003   000F7A                     UEP10           equ	3962	;# 
  1004   000F7B                     UEP11           equ	3963	;# 
  1005   000F7C                     UEP12           equ	3964	;# 
  1006   000F7D                     UEP13           equ	3965	;# 
  1007   000F7E                     UEP14           equ	3966	;# 
  1008   000F7F                     UEP15           equ	3967	;# 
  1009   000F80                     PORTA           equ	3968	;# 
  1010   000F81                     PORTB           equ	3969	;# 
  1011   000F82                     PORTC           equ	3970	;# 
  1012   000F83                     PORTD           equ	3971	;# 
  1013   000F84                     PORTE           equ	3972	;# 
  1014   000F89                     LATA            equ	3977	;# 
  1015   000F8A                     LATB            equ	3978	;# 
  1016   000F8B                     LATC            equ	3979	;# 
  1017   000F8C                     LATD            equ	3980	;# 
  1018   000F8D                     LATE            equ	3981	;# 
  1019   000F92                     TRISA           equ	3986	;# 
  1020   000F92                     DDRA            equ	3986	;# 
  1021   000F93                     TRISB           equ	3987	;# 
  1022   000F93                     DDRB            equ	3987	;# 
  1023   000F94                     TRISC           equ	3988	;# 
  1024   000F94                     DDRC            equ	3988	;# 
  1025   000F95                     TRISD           equ	3989	;# 
  1026   000F95                     DDRD            equ	3989	;# 
  1027   000F96                     TRISE           equ	3990	;# 
  1028   000F96                     DDRE            equ	3990	;# 
  1029   000F9B                     OSCTUNE         equ	3995	;# 
  1030   000F9D                     PIE1            equ	3997	;# 
  1031   000F9E                     PIR1            equ	3998	;# 
  1032   000F9F                     IPR1            equ	3999	;# 
  1033   000FA0                     PIE2            equ	4000	;# 
  1034   000FA1                     PIR2            equ	4001	;# 
  1035   000FA2                     IPR2            equ	4002	;# 
  1036   000FA6                     EECON1          equ	4006	;# 
  1037   000FA7                     EECON2          equ	4007	;# 
  1038   000FA8                     EEDATA          equ	4008	;# 
  1039   000FA9                     EEADR           equ	4009	;# 
  1040   000FAB                     RCSTA           equ	4011	;# 
  1041   000FAB                     RCSTA1          equ	4011	;# 
  1042   000FAC                     TXSTA           equ	4012	;# 
  1043   000FAC                     TXSTA1          equ	4012	;# 
  1044   000FAD                     TXREG           equ	4013	;# 
  1045   000FAD                     TXREG1          equ	4013	;# 
  1046   000FAE                     RCREG           equ	4014	;# 
  1047   000FAE                     RCREG1          equ	4014	;# 
  1048   000FAF                     SPBRG           equ	4015	;# 
  1049   000FAF                     SPBRG1          equ	4015	;# 
  1050   000FB0                     SPBRGH          equ	4016	;# 
  1051   000FB1                     T3CON           equ	4017	;# 
  1052   000FB2                     TMR3            equ	4018	;# 
  1053   000FB2                     TMR3L           equ	4018	;# 
  1054   000FB3                     TMR3H           equ	4019	;# 
  1055   000FB4                     CMCON           equ	4020	;# 
  1056   000FB5                     CVRCON          equ	4021	;# 
  1057   000FB6                     ECCP1AS         equ	4022	;# 
  1058   000FB6                     CCP1AS          equ	4022	;# 
  1059   000FB7                     ECCP1DEL        equ	4023	;# 
  1060   000FB7                     CCP1DEL         equ	4023	;# 
  1061   000FB8                     BAUDCON         equ	4024	;# 
  1062   000FB8                     BAUDCTL         equ	4024	;# 
  1063   000FBA                     CCP2CON         equ	4026	;# 
  1064   000FBB                     CCPR2           equ	4027	;# 
  1065   000FBB                     CCPR2L          equ	4027	;# 
  1066   000FBC                     CCPR2H          equ	4028	;# 
  1067   000FBD                     CCP1CON         equ	4029	;# 
  1068   000FBD                     ECCP1CON        equ	4029	;# 
  1069   000FBE                     CCPR1           equ	4030	;# 
  1070   000FBE                     CCPR1L          equ	4030	;# 
  1071   000FBF                     CCPR1H          equ	4031	;# 
  1072   000FC0                     ADCON2          equ	4032	;# 
  1073   000FC1                     ADCON1          equ	4033	;# 
  1074   000FC2                     ADCON0          equ	4034	;# 
  1075   000FC3                     ADRES           equ	4035	;# 
  1076   000FC3                     ADRESL          equ	4035	;# 
  1077   000FC4                     ADRESH          equ	4036	;# 
  1078   000FC5                     SSPCON2         equ	4037	;# 
  1079   000FC6                     SSPCON1         equ	4038	;# 
  1080   000FC7                     SSPSTAT         equ	4039	;# 
  1081   000FC8                     SSPADD          equ	4040	;# 
  1082   000FC9                     SSPBUF          equ	4041	;# 
  1083   000FCA                     T2CON           equ	4042	;# 
  1084   000FCB                     PR2             equ	4043	;# 
  1085   000FCB                     MEMCON          equ	4043	;# 
  1086   000FCC                     TMR2            equ	4044	;# 
  1087   000FCD                     T1CON           equ	4045	;# 
  1088   000FCE                     TMR1            equ	4046	;# 
  1089   000FCE                     TMR1L           equ	4046	;# 
  1090   000FCF                     TMR1H           equ	4047	;# 
  1091   000FD0                     RCON            equ	4048	;# 
  1092   000FD1                     WDTCON          equ	4049	;# 
  1093   000FD2                     HLVDCON         equ	4050	;# 
  1094   000FD2                     LVDCON          equ	4050	;# 
  1095   000FD3                     OSCCON          equ	4051	;# 
  1096   000FD5                     T0CON           equ	4053	;# 
  1097   000FD6                     TMR0            equ	4054	;# 
  1098   000FD6                     TMR0L           equ	4054	;# 
  1099   000FD7                     TMR0H           equ	4055	;# 
  1100   000FD8                     STATUS          equ	4056	;# 
  1101   000FD9                     FSR2            equ	4057	;# 
  1102   000FD9                     FSR2L           equ	4057	;# 
  1103   000FDA                     FSR2H           equ	4058	;# 
  1104   000FDB                     PLUSW2          equ	4059	;# 
  1105   000FDC                     PREINC2         equ	4060	;# 
  1106   000FDD                     POSTDEC2        equ	4061	;# 
  1107   000FDE                     POSTINC2        equ	4062	;# 
  1108   000FDF                     INDF2           equ	4063	;# 
  1109   000FE0                     BSR             equ	4064	;# 
  1110   000FE1                     FSR1            equ	4065	;# 
  1111   000FE1                     FSR1L           equ	4065	;# 
  1112   000FE2                     FSR1H           equ	4066	;# 
  1113   000FE3                     PLUSW1          equ	4067	;# 
  1114   000FE4                     PREINC1         equ	4068	;# 
  1115   000FE5                     POSTDEC1        equ	4069	;# 
  1116   000FE6                     POSTINC1        equ	4070	;# 
  1117   000FE7                     INDF1           equ	4071	;# 
  1118   000FE8                     WREG            equ	4072	;# 
  1119   000FE9                     FSR0            equ	4073	;# 
  1120   000FE9                     FSR0L           equ	4073	;# 
  1121   000FEA                     FSR0H           equ	4074	;# 
  1122   000FEB                     PLUSW0          equ	4075	;# 
  1123   000FEC                     PREINC0         equ	4076	;# 
  1124   000FED                     POSTDEC0        equ	4077	;# 
  1125   000FEE                     POSTINC0        equ	4078	;# 
  1126   000FEF                     INDF0           equ	4079	;# 
  1127   000FF0                     INTCON3         equ	4080	;# 
  1128   000FF1                     INTCON2         equ	4081	;# 
  1129   000FF2                     INTCON          equ	4082	;# 
  1130   000FF3                     PROD            equ	4083	;# 
  1131   000FF3                     PRODL           equ	4083	;# 
  1132   000FF4                     PRODH           equ	4084	;# 
  1133   000FF5                     TABLAT          equ	4085	;# 
  1134   000FF6                     TBLPTR          equ	4086	;# 
  1135   000FF6                     TBLPTRL         equ	4086	;# 
  1136   000FF7                     TBLPTRH         equ	4087	;# 
  1137   000FF8                     TBLPTRU         equ	4088	;# 
  1138   000FF9                     PCLAT           equ	4089	;# 
  1139   000FF9                     PC              equ	4089	;# 
  1140   000FF9                     PCL             equ	4089	;# 
  1141   000FFA                     PCLATH          equ	4090	;# 
  1142   000FFB                     PCLATU          equ	4091	;# 
  1143   000FFC                     STKPTR          equ	4092	;# 
  1144   000FFD                     TOS             equ	4093	;# 
  1145   000FFD                     TOSL            equ	4093	;# 
  1146   000FFE                     TOSH            equ	4094	;# 
  1147   000FFF                     TOSU            equ	4095	;# 
  1148   000F62                     SPPDATA         equ	3938	;# 
  1149   000F63                     SPPCFG          equ	3939	;# 
  1150   000F64                     SPPEPS          equ	3940	;# 
  1151   000F65                     SPPCON          equ	3941	;# 
  1152   000F66                     UFRM            equ	3942	;# 
  1153   000F66                     UFRML           equ	3942	;# 
  1154   000F67                     UFRMH           equ	3943	;# 
  1155   000F68                     UIR             equ	3944	;# 
  1156   000F69                     UIE             equ	3945	;# 
  1157   000F6A                     UEIR            equ	3946	;# 
  1158   000F6B                     UEIE            equ	3947	;# 
  1159   000F6C                     USTAT           equ	3948	;# 
  1160   000F6D                     UCON            equ	3949	;# 
  1161   000F6E                     UADDR           equ	3950	;# 
  1162   000F6F                     UCFG            equ	3951	;# 
  1163   000F70                     UEP0            equ	3952	;# 
  1164   000F71                     UEP1            equ	3953	;# 
  1165   000F72                     UEP2            equ	3954	;# 
  1166   000F73                     UEP3            equ	3955	;# 
  1167   000F74                     UEP4            equ	3956	;# 
  1168   000F75                     UEP5            equ	3957	;# 
  1169   000F76                     UEP6            equ	3958	;# 
  1170   000F77                     UEP7            equ	3959	;# 
  1171   000F78                     UEP8            equ	3960	;# 
  1172   000F79                     UEP9            equ	3961	;# 
  1173   000F7A                     UEP10           equ	3962	;# 
  1174   000F7B                     UEP11           equ	3963	;# 
  1175   000F7C                     UEP12           equ	3964	;# 
  1176   000F7D                     UEP13           equ	3965	;# 
  1177   000F7E                     UEP14           equ	3966	;# 
  1178   000F7F                     UEP15           equ	3967	;# 
  1179   000F80                     PORTA           equ	3968	;# 
  1180   000F81                     PORTB           equ	3969	;# 
  1181   000F82                     PORTC           equ	3970	;# 
  1182   000F83                     PORTD           equ	3971	;# 
  1183   000F84                     PORTE           equ	3972	;# 
  1184   000F89                     LATA            equ	3977	;# 
  1185   000F8A                     LATB            equ	3978	;# 
  1186   000F8B                     LATC            equ	3979	;# 
  1187   000F8C                     LATD            equ	3980	;# 
  1188   000F8D                     LATE            equ	3981	;# 
  1189   000F92                     TRISA           equ	3986	;# 
  1190   000F92                     DDRA            equ	3986	;# 
  1191   000F93                     TRISB           equ	3987	;# 
  1192   000F93                     DDRB            equ	3987	;# 
  1193   000F94                     TRISC           equ	3988	;# 
  1194   000F94                     DDRC            equ	3988	;# 
  1195   000F95                     TRISD           equ	3989	;# 
  1196   000F95                     DDRD            equ	3989	;# 
  1197   000F96                     TRISE           equ	3990	;# 
  1198   000F96                     DDRE            equ	3990	;# 
  1199   000F9B                     OSCTUNE         equ	3995	;# 
  1200   000F9D                     PIE1            equ	3997	;# 
  1201   000F9E                     PIR1            equ	3998	;# 
  1202   000F9F                     IPR1            equ	3999	;# 
  1203   000FA0                     PIE2            equ	4000	;# 
  1204   000FA1                     PIR2            equ	4001	;# 
  1205   000FA2                     IPR2            equ	4002	;# 
  1206   000FA6                     EECON1          equ	4006	;# 
  1207   000FA7                     EECON2          equ	4007	;# 
  1208   000FA8                     EEDATA          equ	4008	;# 
  1209   000FA9                     EEADR           equ	4009	;# 
  1210   000FAB                     RCSTA           equ	4011	;# 
  1211   000FAB                     RCSTA1          equ	4011	;# 
  1212   000FAC                     TXSTA           equ	4012	;# 
  1213   000FAC                     TXSTA1          equ	4012	;# 
  1214   000FAD                     TXREG           equ	4013	;# 
  1215   000FAD                     TXREG1          equ	4013	;# 
  1216   000FAE                     RCREG           equ	4014	;# 
  1217   000FAE                     RCREG1          equ	4014	;# 
  1218   000FAF                     SPBRG           equ	4015	;# 
  1219   000FAF                     SPBRG1          equ	4015	;# 
  1220   000FB0                     SPBRGH          equ	4016	;# 
  1221   000FB1                     T3CON           equ	4017	;# 
  1222   000FB2                     TMR3            equ	4018	;# 
  1223   000FB2                     TMR3L           equ	4018	;# 
  1224   000FB3                     TMR3H           equ	4019	;# 
  1225   000FB4                     CMCON           equ	4020	;# 
  1226   000FB5                     CVRCON          equ	4021	;# 
  1227   000FB6                     ECCP1AS         equ	4022	;# 
  1228   000FB6                     CCP1AS          equ	4022	;# 
  1229   000FB7                     ECCP1DEL        equ	4023	;# 
  1230   000FB7                     CCP1DEL         equ	4023	;# 
  1231   000FB8                     BAUDCON         equ	4024	;# 
  1232   000FB8                     BAUDCTL         equ	4024	;# 
  1233   000FBA                     CCP2CON         equ	4026	;# 
  1234   000FBB                     CCPR2           equ	4027	;# 
  1235   000FBB                     CCPR2L          equ	4027	;# 
  1236   000FBC                     CCPR2H          equ	4028	;# 
  1237   000FBD                     CCP1CON         equ	4029	;# 
  1238   000FBD                     ECCP1CON        equ	4029	;# 
  1239   000FBE                     CCPR1           equ	4030	;# 
  1240   000FBE                     CCPR1L          equ	4030	;# 
  1241   000FBF                     CCPR1H          equ	4031	;# 
  1242   000FC0                     ADCON2          equ	4032	;# 
  1243   000FC1                     ADCON1          equ	4033	;# 
  1244   000FC2                     ADCON0          equ	4034	;# 
  1245   000FC3                     ADRES           equ	4035	;# 
  1246   000FC3                     ADRESL          equ	4035	;# 
  1247   000FC4                     ADRESH          equ	4036	;# 
  1248   000FC5                     SSPCON2         equ	4037	;# 
  1249   000FC6                     SSPCON1         equ	4038	;# 
  1250   000FC7                     SSPSTAT         equ	4039	;# 
  1251   000FC8                     SSPADD          equ	4040	;# 
  1252   000FC9                     SSPBUF          equ	4041	;# 
  1253   000FCA                     T2CON           equ	4042	;# 
  1254   000FCB                     PR2             equ	4043	;# 
  1255   000FCB                     MEMCON          equ	4043	;# 
  1256   000FCC                     TMR2            equ	4044	;# 
  1257   000FCD                     T1CON           equ	4045	;# 
  1258   000FCE                     TMR1            equ	4046	;# 
  1259   000FCE                     TMR1L           equ	4046	;# 
  1260   000FCF                     TMR1H           equ	4047	;# 
  1261   000FD0                     RCON            equ	4048	;# 
  1262   000FD1                     WDTCON          equ	4049	;# 
  1263   000FD2                     HLVDCON         equ	4050	;# 
  1264   000FD2                     LVDCON          equ	4050	;# 
  1265   000FD3                     OSCCON          equ	4051	;# 
  1266   000FD5                     T0CON           equ	4053	;# 
  1267   000FD6                     TMR0            equ	4054	;# 
  1268   000FD6                     TMR0L           equ	4054	;# 
  1269   000FD7                     TMR0H           equ	4055	;# 
  1270   000FD8                     STATUS          equ	4056	;# 
  1271   000FD9                     FSR2            equ	4057	;# 
  1272   000FD9                     FSR2L           equ	4057	;# 
  1273   000FDA                     FSR2H           equ	4058	;# 
  1274   000FDB                     PLUSW2          equ	4059	;# 
  1275   000FDC                     PREINC2         equ	4060	;# 
  1276   000FDD                     POSTDEC2        equ	4061	;# 
  1277   000FDE                     POSTINC2        equ	4062	;# 
  1278   000FDF                     INDF2           equ	4063	;# 
  1279   000FE0                     BSR             equ	4064	;# 
  1280   000FE1                     FSR1            equ	4065	;# 
  1281   000FE1                     FSR1L           equ	4065	;# 
  1282   000FE2                     FSR1H           equ	4066	;# 
  1283   000FE3                     PLUSW1          equ	4067	;# 
  1284   000FE4                     PREINC1         equ	4068	;# 
  1285   000FE5                     POSTDEC1        equ	4069	;# 
  1286   000FE6                     POSTINC1        equ	4070	;# 
  1287   000FE7                     INDF1           equ	4071	;# 
  1288   000FE8                     WREG            equ	4072	;# 
  1289   000FE9                     FSR0            equ	4073	;# 
  1290   000FE9                     FSR0L           equ	4073	;# 
  1291   000FEA                     FSR0H           equ	4074	;# 
  1292   000FEB                     PLUSW0          equ	4075	;# 
  1293   000FEC                     PREINC0         equ	4076	;# 
  1294   000FED                     POSTDEC0        equ	4077	;# 
  1295   000FEE                     POSTINC0        equ	4078	;# 
  1296   000FEF                     INDF0           equ	4079	;# 
  1297   000FF0                     INTCON3         equ	4080	;# 
  1298   000FF1                     INTCON2         equ	4081	;# 
  1299   000FF2                     INTCON          equ	4082	;# 
  1300   000FF3                     PROD            equ	4083	;# 
  1301   000FF3                     PRODL           equ	4083	;# 
  1302   000FF4                     PRODH           equ	4084	;# 
  1303   000FF5                     TABLAT          equ	4085	;# 
  1304   000FF6                     TBLPTR          equ	4086	;# 
  1305   000FF6                     TBLPTRL         equ	4086	;# 
  1306   000FF7                     TBLPTRH         equ	4087	;# 
  1307   000FF8                     TBLPTRU         equ	4088	;# 
  1308   000FF9                     PCLAT           equ	4089	;# 
  1309   000FF9                     PC              equ	4089	;# 
  1310   000FF9                     PCL             equ	4089	;# 
  1311   000FFA                     PCLATH          equ	4090	;# 
  1312   000FFB                     PCLATU          equ	4091	;# 
  1313   000FFC                     STKPTR          equ	4092	;# 
  1314   000FFD                     TOS             equ	4093	;# 
  1315   000FFD                     TOSL            equ	4093	;# 
  1316   000FFE                     TOSH            equ	4094	;# 
  1317   000FFF                     TOSU            equ	4095	;# 
  1318   000F62                     SPPDATA         equ	3938	;# 
  1319   000F63                     SPPCFG          equ	3939	;# 
  1320   000F64                     SPPEPS          equ	3940	;# 
  1321   000F65                     SPPCON          equ	3941	;# 
  1322   000F66                     UFRM            equ	3942	;# 
  1323   000F66                     UFRML           equ	3942	;# 
  1324   000F67                     UFRMH           equ	3943	;# 
  1325   000F68                     UIR             equ	3944	;# 
  1326   000F69                     UIE             equ	3945	;# 
  1327   000F6A                     UEIR            equ	3946	;# 
  1328   000F6B                     UEIE            equ	3947	;# 
  1329   000F6C                     USTAT           equ	3948	;# 
  1330   000F6D                     UCON            equ	3949	;# 
  1331   000F6E                     UADDR           equ	3950	;# 
  1332   000F6F                     UCFG            equ	3951	;# 
  1333   000F70                     UEP0            equ	3952	;# 
  1334   000F71                     UEP1            equ	3953	;# 
  1335   000F72                     UEP2            equ	3954	;# 
  1336   000F73                     UEP3            equ	3955	;# 
  1337   000F74                     UEP4            equ	3956	;# 
  1338   000F75                     UEP5            equ	3957	;# 
  1339   000F76                     UEP6            equ	3958	;# 
  1340   000F77                     UEP7            equ	3959	;# 
  1341   000F78                     UEP8            equ	3960	;# 
  1342   000F79                     UEP9            equ	3961	;# 
  1343   000F7A                     UEP10           equ	3962	;# 
  1344   000F7B                     UEP11           equ	3963	;# 
  1345   000F7C                     UEP12           equ	3964	;# 
  1346   000F7D                     UEP13           equ	3965	;# 
  1347   000F7E                     UEP14           equ	3966	;# 
  1348   000F7F                     UEP15           equ	3967	;# 
  1349   000F80                     PORTA           equ	3968	;# 
  1350   000F81                     PORTB           equ	3969	;# 
  1351   000F82                     PORTC           equ	3970	;# 
  1352   000F83                     PORTD           equ	3971	;# 
  1353   000F84                     PORTE           equ	3972	;# 
  1354   000F89                     LATA            equ	3977	;# 
  1355   000F8A                     LATB            equ	3978	;# 
  1356   000F8B                     LATC            equ	3979	;# 
  1357   000F8C                     LATD            equ	3980	;# 
  1358   000F8D                     LATE            equ	3981	;# 
  1359   000F92                     TRISA           equ	3986	;# 
  1360   000F92                     DDRA            equ	3986	;# 
  1361   000F93                     TRISB           equ	3987	;# 
  1362   000F93                     DDRB            equ	3987	;# 
  1363   000F94                     TRISC           equ	3988	;# 
  1364   000F94                     DDRC            equ	3988	;# 
  1365   000F95                     TRISD           equ	3989	;# 
  1366   000F95                     DDRD            equ	3989	;# 
  1367   000F96                     TRISE           equ	3990	;# 
  1368   000F96                     DDRE            equ	3990	;# 
  1369   000F9B                     OSCTUNE         equ	3995	;# 
  1370   000F9D                     PIE1            equ	3997	;# 
  1371   000F9E                     PIR1            equ	3998	;# 
  1372   000F9F                     IPR1            equ	3999	;# 
  1373   000FA0                     PIE2            equ	4000	;# 
  1374   000FA1                     PIR2            equ	4001	;# 
  1375   000FA2                     IPR2            equ	4002	;# 
  1376   000FA6                     EECON1          equ	4006	;# 
  1377   000FA7                     EECON2          equ	4007	;# 
  1378   000FA8                     EEDATA          equ	4008	;# 
  1379   000FA9                     EEADR           equ	4009	;# 
  1380   000FAB                     RCSTA           equ	4011	;# 
  1381   000FAB                     RCSTA1          equ	4011	;# 
  1382   000FAC                     TXSTA           equ	4012	;# 
  1383   000FAC                     TXSTA1          equ	4012	;# 
  1384   000FAD                     TXREG           equ	4013	;# 
  1385   000FAD                     TXREG1          equ	4013	;# 
  1386   000FAE                     RCREG           equ	4014	;# 
  1387   000FAE                     RCREG1          equ	4014	;# 
  1388   000FAF                     SPBRG           equ	4015	;# 
  1389   000FAF                     SPBRG1          equ	4015	;# 
  1390   000FB0                     SPBRGH          equ	4016	;# 
  1391   000FB1                     T3CON           equ	4017	;# 
  1392   000FB2                     TMR3            equ	4018	;# 
  1393   000FB2                     TMR3L           equ	4018	;# 
  1394   000FB3                     TMR3H           equ	4019	;# 
  1395   000FB4                     CMCON           equ	4020	;# 
  1396   000FB5                     CVRCON          equ	4021	;# 
  1397   000FB6                     ECCP1AS         equ	4022	;# 
  1398   000FB6                     CCP1AS          equ	4022	;# 
  1399   000FB7                     ECCP1DEL        equ	4023	;# 
  1400   000FB7                     CCP1DEL         equ	4023	;# 
  1401   000FB8                     BAUDCON         equ	4024	;# 
  1402   000FB8                     BAUDCTL         equ	4024	;# 
  1403   000FBA                     CCP2CON         equ	4026	;# 
  1404   000FBB                     CCPR2           equ	4027	;# 
  1405   000FBB                     CCPR2L          equ	4027	;# 
  1406   000FBC                     CCPR2H          equ	4028	;# 
  1407   000FBD                     CCP1CON         equ	4029	;# 
  1408   000FBD                     ECCP1CON        equ	4029	;# 
  1409   000FBE                     CCPR1           equ	4030	;# 
  1410   000FBE                     CCPR1L          equ	4030	;# 
  1411   000FBF                     CCPR1H          equ	4031	;# 
  1412   000FC0                     ADCON2          equ	4032	;# 
  1413   000FC1                     ADCON1          equ	4033	;# 
  1414   000FC2                     ADCON0          equ	4034	;# 
  1415   000FC3                     ADRES           equ	4035	;# 
  1416   000FC3                     ADRESL          equ	4035	;# 
  1417   000FC4                     ADRESH          equ	4036	;# 
  1418   000FC5                     SSPCON2         equ	4037	;# 
  1419   000FC6                     SSPCON1         equ	4038	;# 
  1420   000FC7                     SSPSTAT         equ	4039	;# 
  1421   000FC8                     SSPADD          equ	4040	;# 
  1422   000FC9                     SSPBUF          equ	4041	;# 
  1423   000FCA                     T2CON           equ	4042	;# 
  1424   000FCB                     PR2             equ	4043	;# 
  1425   000FCB                     MEMCON          equ	4043	;# 
  1426   000FCC                     TMR2            equ	4044	;# 
  1427   000FCD                     T1CON           equ	4045	;# 
  1428   000FCE                     TMR1            equ	4046	;# 
  1429   000FCE                     TMR1L           equ	4046	;# 
  1430   000FCF                     TMR1H           equ	4047	;# 
  1431   000FD0                     RCON            equ	4048	;# 
  1432   000FD1                     WDTCON          equ	4049	;# 
  1433   000FD2                     HLVDCON         equ	4050	;# 
  1434   000FD2                     LVDCON          equ	4050	;# 
  1435   000FD3                     OSCCON          equ	4051	;# 
  1436   000FD5                     T0CON           equ	4053	;# 
  1437   000FD6                     TMR0            equ	4054	;# 
  1438   000FD6                     TMR0L           equ	4054	;# 
  1439   000FD7                     TMR0H           equ	4055	;# 
  1440   000FD8                     STATUS          equ	4056	;# 
  1441   000FD9                     FSR2            equ	4057	;# 
  1442   000FD9                     FSR2L           equ	4057	;# 
  1443   000FDA                     FSR2H           equ	4058	;# 
  1444   000FDB                     PLUSW2          equ	4059	;# 
  1445   000FDC                     PREINC2         equ	4060	;# 
  1446   000FDD                     POSTDEC2        equ	4061	;# 
  1447   000FDE                     POSTINC2        equ	4062	;# 
  1448   000FDF                     INDF2           equ	4063	;# 
  1449   000FE0                     BSR             equ	4064	;# 
  1450   000FE1                     FSR1            equ	4065	;# 
  1451   000FE1                     FSR1L           equ	4065	;# 
  1452   000FE2                     FSR1H           equ	4066	;# 
  1453   000FE3                     PLUSW1          equ	4067	;# 
  1454   000FE4                     PREINC1         equ	4068	;# 
  1455   000FE5                     POSTDEC1        equ	4069	;# 
  1456   000FE6                     POSTINC1        equ	4070	;# 
  1457   000FE7                     INDF1           equ	4071	;# 
  1458   000FE8                     WREG            equ	4072	;# 
  1459   000FE9                     FSR0            equ	4073	;# 
  1460   000FE9                     FSR0L           equ	4073	;# 
  1461   000FEA                     FSR0H           equ	4074	;# 
  1462   000FEB                     PLUSW0          equ	4075	;# 
  1463   000FEC                     PREINC0         equ	4076	;# 
  1464   000FED                     POSTDEC0        equ	4077	;# 
  1465   000FEE                     POSTINC0        equ	4078	;# 
  1466   000FEF                     INDF0           equ	4079	;# 
  1467   000FF0                     INTCON3         equ	4080	;# 
  1468   000FF1                     INTCON2         equ	4081	;# 
  1469   000FF2                     INTCON          equ	4082	;# 
  1470   000FF3                     PROD            equ	4083	;# 
  1471   000FF3                     PRODL           equ	4083	;# 
  1472   000FF4                     PRODH           equ	4084	;# 
  1473   000FF5                     TABLAT          equ	4085	;# 
  1474   000FF6                     TBLPTR          equ	4086	;# 
  1475   000FF6                     TBLPTRL         equ	4086	;# 
  1476   000FF7                     TBLPTRH         equ	4087	;# 
  1477   000FF8                     TBLPTRU         equ	4088	;# 
  1478   000FF9                     PCLAT           equ	4089	;# 
  1479   000FF9                     PC              equ	4089	;# 
  1480   000FF9                     PCL             equ	4089	;# 
  1481   000FFA                     PCLATH          equ	4090	;# 
  1482   000FFB                     PCLATU          equ	4091	;# 
  1483   000FFC                     STKPTR          equ	4092	;# 
  1484   000FFD                     TOS             equ	4093	;# 
  1485   000FFD                     TOSL            equ	4093	;# 
  1486   000FFE                     TOSH            equ	4094	;# 
  1487   000FFF                     TOSU            equ	4095	;# 
  1488   000F62                     SPPDATA         equ	3938	;# 
  1489   000F63                     SPPCFG          equ	3939	;# 
  1490   000F64                     SPPEPS          equ	3940	;# 
  1491   000F65                     SPPCON          equ	3941	;# 
  1492   000F66                     UFRM            equ	3942	;# 
  1493   000F66                     UFRML           equ	3942	;# 
  1494   000F67                     UFRMH           equ	3943	;# 
  1495   000F68                     UIR             equ	3944	;# 
  1496   000F69                     UIE             equ	3945	;# 
  1497   000F6A                     UEIR            equ	3946	;# 
  1498   000F6B                     UEIE            equ	3947	;# 
  1499   000F6C                     USTAT           equ	3948	;# 
  1500   000F6D                     UCON            equ	3949	;# 
  1501   000F6E                     UADDR           equ	3950	;# 
  1502   000F6F                     UCFG            equ	3951	;# 
  1503   000F70                     UEP0            equ	3952	;# 
  1504   000F71                     UEP1            equ	3953	;# 
  1505   000F72                     UEP2            equ	3954	;# 
  1506   000F73                     UEP3            equ	3955	;# 
  1507   000F74                     UEP4            equ	3956	;# 
  1508   000F75                     UEP5            equ	3957	;# 
  1509   000F76                     UEP6            equ	3958	;# 
  1510   000F77                     UEP7            equ	3959	;# 
  1511   000F78                     UEP8            equ	3960	;# 
  1512   000F79                     UEP9            equ	3961	;# 
  1513   000F7A                     UEP10           equ	3962	;# 
  1514   000F7B                     UEP11           equ	3963	;# 
  1515   000F7C                     UEP12           equ	3964	;# 
  1516   000F7D                     UEP13           equ	3965	;# 
  1517   000F7E                     UEP14           equ	3966	;# 
  1518   000F7F                     UEP15           equ	3967	;# 
  1519   000F80                     PORTA           equ	3968	;# 
  1520   000F81                     PORTB           equ	3969	;# 
  1521   000F82                     PORTC           equ	3970	;# 
  1522   000F83                     PORTD           equ	3971	;# 
  1523   000F84                     PORTE           equ	3972	;# 
  1524   000F89                     LATA            equ	3977	;# 
  1525   000F8A                     LATB            equ	3978	;# 
  1526   000F8B                     LATC            equ	3979	;# 
  1527   000F8C                     LATD            equ	3980	;# 
  1528   000F8D                     LATE            equ	3981	;# 
  1529   000F92                     TRISA           equ	3986	;# 
  1530   000F92                     DDRA            equ	3986	;# 
  1531   000F93                     TRISB           equ	3987	;# 
  1532   000F93                     DDRB            equ	3987	;# 
  1533   000F94                     TRISC           equ	3988	;# 
  1534   000F94                     DDRC            equ	3988	;# 
  1535   000F95                     TRISD           equ	3989	;# 
  1536   000F95                     DDRD            equ	3989	;# 
  1537   000F96                     TRISE           equ	3990	;# 
  1538   000F96                     DDRE            equ	3990	;# 
  1539   000F9B                     OSCTUNE         equ	3995	;# 
  1540   000F9D                     PIE1            equ	3997	;# 
  1541   000F9E                     PIR1            equ	3998	;# 
  1542   000F9F                     IPR1            equ	3999	;# 
  1543   000FA0                     PIE2            equ	4000	;# 
  1544   000FA1                     PIR2            equ	4001	;# 
  1545   000FA2                     IPR2            equ	4002	;# 
  1546   000FA6                     EECON1          equ	4006	;# 
  1547   000FA7                     EECON2          equ	4007	;# 
  1548   000FA8                     EEDATA          equ	4008	;# 
  1549   000FA9                     EEADR           equ	4009	;# 
  1550   000FAB                     RCSTA           equ	4011	;# 
  1551   000FAB                     RCSTA1          equ	4011	;# 
  1552   000FAC                     TXSTA           equ	4012	;# 
  1553   000FAC                     TXSTA1          equ	4012	;# 
  1554   000FAD                     TXREG           equ	4013	;# 
  1555   000FAD                     TXREG1          equ	4013	;# 
  1556   000FAE                     RCREG           equ	4014	;# 
  1557   000FAE                     RCREG1          equ	4014	;# 
  1558   000FAF                     SPBRG           equ	4015	;# 
  1559   000FAF                     SPBRG1          equ	4015	;# 
  1560   000FB0                     SPBRGH          equ	4016	;# 
  1561   000FB1                     T3CON           equ	4017	;# 
  1562   000FB2                     TMR3            equ	4018	;# 
  1563   000FB2                     TMR3L           equ	4018	;# 
  1564   000FB3                     TMR3H           equ	4019	;# 
  1565   000FB4                     CMCON           equ	4020	;# 
  1566   000FB5                     CVRCON          equ	4021	;# 
  1567   000FB6                     ECCP1AS         equ	4022	;# 
  1568   000FB6                     CCP1AS          equ	4022	;# 
  1569   000FB7                     ECCP1DEL        equ	4023	;# 
  1570   000FB7                     CCP1DEL         equ	4023	;# 
  1571   000FB8                     BAUDCON         equ	4024	;# 
  1572   000FB8                     BAUDCTL         equ	4024	;# 
  1573   000FBA                     CCP2CON         equ	4026	;# 
  1574   000FBB                     CCPR2           equ	4027	;# 
  1575   000FBB                     CCPR2L          equ	4027	;# 
  1576   000FBC                     CCPR2H          equ	4028	;# 
  1577   000FBD                     CCP1CON         equ	4029	;# 
  1578   000FBD                     ECCP1CON        equ	4029	;# 
  1579   000FBE                     CCPR1           equ	4030	;# 
  1580   000FBE                     CCPR1L          equ	4030	;# 
  1581   000FBF                     CCPR1H          equ	4031	;# 
  1582   000FC0                     ADCON2          equ	4032	;# 
  1583   000FC1                     ADCON1          equ	4033	;# 
  1584   000FC2                     ADCON0          equ	4034	;# 
  1585   000FC3                     ADRES           equ	4035	;# 
  1586   000FC3                     ADRESL          equ	4035	;# 
  1587   000FC4                     ADRESH          equ	4036	;# 
  1588   000FC5                     SSPCON2         equ	4037	;# 
  1589   000FC6                     SSPCON1         equ	4038	;# 
  1590   000FC7                     SSPSTAT         equ	4039	;# 
  1591   000FC8                     SSPADD          equ	4040	;# 
  1592   000FC9                     SSPBUF          equ	4041	;# 
  1593   000FCA                     T2CON           equ	4042	;# 
  1594   000FCB                     PR2             equ	4043	;# 
  1595   000FCB                     MEMCON          equ	4043	;# 
  1596   000FCC                     TMR2            equ	4044	;# 
  1597   000FCD                     T1CON           equ	4045	;# 
  1598   000FCE                     TMR1            equ	4046	;# 
  1599   000FCE                     TMR1L           equ	4046	;# 
  1600   000FCF                     TMR1H           equ	4047	;# 
  1601   000FD0                     RCON            equ	4048	;# 
  1602   000FD1                     WDTCON          equ	4049	;# 
  1603   000FD2                     HLVDCON         equ	4050	;# 
  1604   000FD2                     LVDCON          equ	4050	;# 
  1605   000FD3                     OSCCON          equ	4051	;# 
  1606   000FD5                     T0CON           equ	4053	;# 
  1607   000FD6                     TMR0            equ	4054	;# 
  1608   000FD6                     TMR0L           equ	4054	;# 
  1609   000FD7                     TMR0H           equ	4055	;# 
  1610   000FD8                     STATUS          equ	4056	;# 
  1611   000FD9                     FSR2            equ	4057	;# 
  1612   000FD9                     FSR2L           equ	4057	;# 
  1613   000FDA                     FSR2H           equ	4058	;# 
  1614   000FDB                     PLUSW2          equ	4059	;# 
  1615   000FDC                     PREINC2         equ	4060	;# 
  1616   000FDD                     POSTDEC2        equ	4061	;# 
  1617   000FDE                     POSTINC2        equ	4062	;# 
  1618   000FDF                     INDF2           equ	4063	;# 
  1619   000FE0                     BSR             equ	4064	;# 
  1620   000FE1                     FSR1            equ	4065	;# 
  1621   000FE1                     FSR1L           equ	4065	;# 
  1622   000FE2                     FSR1H           equ	4066	;# 
  1623   000FE3                     PLUSW1          equ	4067	;# 
  1624   000FE4                     PREINC1         equ	4068	;# 
  1625   000FE5                     POSTDEC1        equ	4069	;# 
  1626   000FE6                     POSTINC1        equ	4070	;# 
  1627   000FE7                     INDF1           equ	4071	;# 
  1628   000FE8                     WREG            equ	4072	;# 
  1629   000FE9                     FSR0            equ	4073	;# 
  1630   000FE9                     FSR0L           equ	4073	;# 
  1631   000FEA                     FSR0H           equ	4074	;# 
  1632   000FEB                     PLUSW0          equ	4075	;# 
  1633   000FEC                     PREINC0         equ	4076	;# 
  1634   000FED                     POSTDEC0        equ	4077	;# 
  1635   000FEE                     POSTINC0        equ	4078	;# 
  1636   000FEF                     INDF0           equ	4079	;# 
  1637   000FF0                     INTCON3         equ	4080	;# 
  1638   000FF1                     INTCON2         equ	4081	;# 
  1639   000FF2                     INTCON          equ	4082	;# 
  1640   000FF3                     PROD            equ	4083	;# 
  1641   000FF3                     PRODL           equ	4083	;# 
  1642   000FF4                     PRODH           equ	4084	;# 
  1643   000FF5                     TABLAT          equ	4085	;# 
  1644   000FF6                     TBLPTR          equ	4086	;# 
  1645   000FF6                     TBLPTRL         equ	4086	;# 
  1646   000FF7                     TBLPTRH         equ	4087	;# 
  1647   000FF8                     TBLPTRU         equ	4088	;# 
  1648   000FF9                     PCLAT           equ	4089	;# 
  1649   000FF9                     PC              equ	4089	;# 
  1650   000FF9                     PCL             equ	4089	;# 
  1651   000FFA                     PCLATH          equ	4090	;# 
  1652   000FFB                     PCLATU          equ	4091	;# 
  1653   000FFC                     STKPTR          equ	4092	;# 
  1654   000FFD                     TOS             equ	4093	;# 
  1655   000FFD                     TOSL            equ	4093	;# 
  1656   000FFE                     TOSH            equ	4094	;# 
  1657   000FFF                     TOSU            equ	4095	;# 
  1658                           
  1659                           ; _pSegA loaded to wtemp22
  1660                           ; _pSegA loaded to wtemp22
  1661                           ; _pSegA loaded to wtemp22
  1662                           ; _pSegA loaded to wtemp22
  1663                           ; _pSegA loaded to wtemp22
  1664                           ; _pSegA loaded to wtemp22
  1665                           ; _pSegA loaded to wtemp22
  1666                           ; _pSegA loaded to wtemp22
  1667                           ; _pSegA loaded to wtemp22
  1668                           ; _pSegA loaded to wtemp22
  1669                           ; _pSegA loaded to wtemp22
  1670                           ; _pSegA loaded to wtemp22
  1671                           ; _pSegA loaded to wtemp22
  1672                           ; _pSegA loaded to wtemp22
  1673                           ; _pSegB loaded to wtemp2
  1674                           ; _pSegB loaded to wtemp2
  1675                           ; _pSegB loaded to wtemp2
  1676                           ; _pSegB loaded to wtemp2
  1677                           ; _pSegB loaded to wtemp2
  1678                           ; _pSegB loaded to wtemp2
  1679                           ; _pSegB loaded to wtemp2
  1680                           ; _pSegB loaded to wtemp2
  1681                           ; _pSegB loaded to wtemp2
  1682                           ; _pSegB loaded to wtemp2
  1683                           ; _pSegB loaded to wtemp2
  1684                           ; _pSegB loaded to wtemp2
  1685                           ; _pSegB loaded to wtemp2
  1686                           ; _pSegA loaded to wtemp22
  1687                           ; _pSegA loaded to wtemp22
  1688                           ; _pSegA loaded to wtemp22
  1689                           ; _pSegA loaded to wtemp22
  1690                           ; _pSegA loaded to wtemp22
  1691                           ; _pSegA loaded to wtemp22
  1692                           ; _pSegA loaded to wtemp22
  1693                           ; _pSegA loaded to wtemp22
  1694                           ; _pSegA loaded to wtemp22
  1695                           ; _pSegA loaded to wtemp22
  1696                           ; _pSegA loaded to wtemp22
  1697                           ; _pSegA loaded to wtemp22
  1698                           ; _pSegA loaded to wtemp22
  1699                           ; _pSegA loaded to wtemp22
  1700                           ; _pSegA loaded to wtemp22
  1701                           ; _pSegA loaded to wtemp22
  1702                           ; _pSegA loaded to wtemp22
  1703                           ; _pSegA loaded to wtemp22
  1704                           ; _pSegA loaded to wtemp22
  1705                           ; _pSegA loaded to wtemp22
  1706                           ; _pSegA loaded to wtemp22
  1707                           ; _pSegA loaded to wtemp22
  1708                           ; _pSegA loaded to wtemp22
  1709                           ; _pSegA loaded to wtemp22
  1710                           ; _pSegA loaded to wtemp22
  1711                           ; _pSegA loaded to wtemp22
  1712                           ; _pSegA loaded to wtemp22
  1713                           ; _pSegA loaded to wtemp22
  1714                           ; _pSegA loaded to wtemp22
  1715                           ; _pSegB loaded to wtemp2
  1716                           ; _pSegA loaded to wtemp22
  1717                           ; _pSegB loaded to wtemp2
  1718                           ; _pSegA loaded to wtemp22
  1719                           ; _pSegB loaded to wtemp2
  1720                           ; _pSegA loaded to wtemp22
  1721                           ; _pSegB loaded to wtemp2
  1722                           ; _pSegA loaded to wtemp22
  1723                           ; _pSegB loaded to wtemp2
  1724                           ; _pSegA loaded to wtemp22
  1725                           ; _pSegB loaded to wtemp2
  1726                           ; _pSegA loaded to wtemp22
  1727                           ; _pSegB loaded to wtemp2
  1728                           ; _pSegA loaded to wtemp22
  1729                           ; _pSegB loaded to wtemp2
  1730                           ; _pSegA loaded to wtemp22
  1731                           ; _pSegB loaded to wtemp2
  1732                           ; _pSegA loaded to wtemp22
  1733                           ; _pSegB loaded to wtemp2
  1734                           ; _pSegA loaded to wtemp22
  1735                           ; _pSegB loaded to wtemp2
  1736                           ; _pSegA loaded to wtemp22
  1737                           ; _pSegB loaded to wtemp2
  1738                           ; _pSegA loaded to wtemp22
  1739                           ; _pSegB loaded to wtemp2
  1740                           ; _pSegA loaded to wtemp22
  1741                           ; _pSegB loaded to wtemp2
  1742                           ; _pSegA loaded to wtemp22
  1743                           ; _pSegB loaded to wtemp2
  1744                           ; _pSegA loaded to wtemp22
  1745                           ; _pSegB loaded to wtemp2
  1746                           ; _pSegA loaded to wtemp22
  1747                           ; _pSegB loaded to wtemp2
  1748                           ; _pSegA loaded to wtemp22
  1749                           ; _pSegB loaded to wtemp2
  1750                           ; _pSegA loaded to wtemp22
  1751                           ; _pSegB loaded to wtemp2
  1752                           ; _pSegA loaded to wtemp22
  1753                           ; _pSegB loaded to wtemp2
  1754                           ; _pSegA loaded to wtemp22
  1755                           ; _pSegB loaded to wtemp2
  1756                           ; _pSegA loaded to wtemp22
  1757                           ; _pSegB loaded to wtemp2
  1758                           ; _pSegA loaded to wtemp22
  1759                           ; _pSegB loaded to wtemp2
  1760                           ; _pSegA loaded to wtemp22
  1761                           ; _pSegB loaded to wtemp2
  1762                           ; _pSegA loaded to wtemp22
  1763                           ; _pSegB loaded to wtemp2
  1764                           ; _pSegA loaded to wtemp22
  1765                           ; _pSegB loaded to wtemp2
  1766                           ; _pSegA loaded to wtemp22
  1767                           ; _pSegB loaded to wtemp2
  1768                           ; _pSegA loaded to wtemp22
  1769                           ; _pSegB loaded to wtemp2
  1770                           ; _pSegA loaded to wtemp22
  1771                           ; _pSegB loaded to wtemp2
  1772                           ; _pSegA loaded to wtemp22
  1773                           ; _pSegB loaded to wtemp2
  1774                           ; _pSegA loaded to wtemp22
  1775                           ; _pSegB loaded to wtemp2
  1776                           ; _pSegA loaded to wtemp22
  1777                           ; _pSegB loaded to wtemp2
  1778                           ; _pSegA loaded to wtemp22
  1779                           ; _pSegB loaded to wtemp2
  1780                           ; _pSegA loaded to wtemp22
  1781                           ; _pSegB loaded to wtemp2
  1782                           ; _pSegA loaded to wtemp22
  1783                           ; _pSegB loaded to wtemp2
  1784                           ; _pSegA loaded to wtemp22
  1785                           ; _pSegB loaded to wtemp2
  1786                           ; _pSegA loaded to wtemp22
  1787                           ; _pSegB loaded to wtemp2
  1788                           ; _pSegA loaded to wtemp22
  1789                           ; _pSegB loaded to wtemp2
  1790                           ; _pSegA loaded to wtemp22
  1791                           ; _pSegB loaded to wtemp2
  1792                           ; _pSegA loaded to wtemp22
  1793 ;;_pHeap	offset	0
  1794 ;;_segHeader	offset	2
  1795 ;;_uSegB	offset	0
  1796 ;;_uSegA	offset	1
  1797 ;;_uSum	offset	2
  1798 ;;_pHeap	offset	0
  1799 ;;_new_task	offset	0
  1800 ;;_dados_sensores	offset	0
  1801 ;;_nivel_bateria	offset	4
  1802 ;;_i	offset	0
  1803 ;;_data_buffer	offset	1
  1804 ;;_next_task	offset	0
  1805 ;;_highest_priority	offset	2
  1806 ;;_sign	offset	0
  1807 ;;_velocidades_locais	offset	0
  1808 ;;_dados_sensores	offset	0
  1809 ;;_i	offset	0
  1810 ;;_data_buffer	offset	1
  1811 ;;_nivel_bateria	offset	0
  1812 ;;_next_task	offset	0
  1813 ;;_highest_priority	offset	2
  1814   000FFD                     _TOS            set	4093
  1815   000FC3                     _ADRES          set	4035
  1816   000FD6                     _TMR0           set	4054
  1817   000FCA                     _T2CONbits      set	4042
  1818   000FBD                     _CCP1CONbits    set	4029
  1819   000FBE                     _CCPR1L         set	4030
  1820   000FCB                     _PR2            set	4043
  1821   000F94                     _TRISCbits      set	3988
  1822   000FC0                     _ADCON2bits     set	4032
  1823   000FC1                     _ADCON1bits     set	4033
  1824   000FC2                     _ADCON0bits     set	4034
  1825   000FD5                     _T0CONbits      set	4053
  1826   000FFC                     _STKPTR         set	4092
  1827   000FE8                     _WREG           set	4072
  1828   000FD8                     _STATUS         set	4056
  1829   000FE0                     _BSR            set	4064
  1830   000F83                     _PORTDbits      set	3971
  1831   000F8C                     _LATDbits       set	3980
  1832   000F95                     _TRISDbits      set	3989
  1833   000FF2                     _INTCONbits     set	4082
  1834                           
  1835                           ; #config settings
  1836                           
  1837                           	psect	cinit
  1838   001B3C                     __pcinit:
  1839                           	callstack 0
  1840   001B3C                     start_initialization:
  1841                           	callstack 0
  1842   001B3C                     __initialization:
  1843                           	callstack 0
  1844                           
  1845                           ; Clear objects allocated to BIGRAM (1045 bytes)
  1846   001B3C  EE00  F0A2         	lfsr	0,__pbssBIGRAM
  1847   001B40  EE24 F015          	lfsr	2,1045
  1848   001B44                     clear_0:
  1849   001B44  6AEE               	clrf	postinc0,c
  1850   001B46  50DD               	movf	postdec2,w,c
  1851   001B48  50D9               	movf	fsr2l,w,c
  1852   001B4A  E1FC               	bnz	clear_0
  1853   001B4C  50DA               	movf	fsr2h,w,c
  1854   001B4E  E1FA               	bnz	clear_0
  1855                           
  1856                           ; Clear objects allocated to BANK0 (66 bytes)
  1857   001B50  EE00  F060         	lfsr	0,__pbssBANK0
  1858   001B54  0E42               	movlw	66
  1859   001B56                     clear_1:
  1860   001B56  6AEE               	clrf	postinc0,c
  1861   001B58  06E8               	decf	wreg,f,c
  1862   001B5A  E1FD               	bnz	clear_1
  1863                           
  1864                           ; Clear objects allocated to COMRAM (22 bytes)
  1865   001B5C  EE00  F039         	lfsr	0,__pbssCOMRAM
  1866   001B60  0E16               	movlw	22
  1867   001B62                     clear_2:
  1868   001B62  6AEE               	clrf	postinc0,c
  1869   001B64  06E8               	decf	wreg,f,c
  1870   001B66  E1FD               	bnz	clear_2
  1871   001B68                     end_of_initialization:
  1872                           	callstack 0
  1873   001B68                     __end_of__initialization:
  1874                           	callstack 0
  1875   001B68  0100               	movlb	0
  1876   001B6A  EFCB  F00C         	goto	_main	;jump to C main() function
  1877                           
  1878                           	psect	bssCOMRAM
  1879   000039                     __pbssCOMRAM:
  1880                           	callstack 0
  1881   000039                     _velocidade_motores:
  1882                           	callstack 0
  1883   000039                     	ds	8
  1884   000041                     _mutex_motores:
  1885                           	callstack 0
  1886   000041                     	ds	14
  1887                           
  1888                           	psect	bssBANK0
  1889   000060                     __pbssBANK0:
  1890                           	callstack 0
  1891   000060                     _pipe_bateria:
  1892                           	callstack 0
  1893   000060                     	ds	33
  1894   000081                     _pipe_sensores:
  1895                           	callstack 0
  1896   000081                     	ds	33
  1897                           
  1898                           	psect	bssBIGRAM
  1899   0000A2                     __pbssBIGRAM:
  1900                           	callstack 0
  1901   0000A2                     _readyQueue:
  1902                           	callstack 0
  1903   0000A2                     	ds	533
  1904   0002B7                     __uDynamicHeap:
  1905                           	callstack 0
  1906   0002B7                     	ds	512
  1907                           
  1908                           	psect	cstackCOMRAM
  1909   00004F                     __pcstackCOMRAM:
  1910                           	callstack 0
  1911   00004F                     ??_ISR_TIMER_0:
  1912                           
  1913                           ; 1 bytes @ 0x0
  1914   00004F                     	ds	14
  1915                           
  1916 ;;
  1917 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1918 ;;
  1919 ;; *************** function _main *****************
  1920 ;; Defined at:
  1921 ;;		line 7 in file "main.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;		None
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  2  [STACK] int 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp6, btemp8, 
      +btemp9, btemp20, btemp21, btemp22, btemp23, btemp28, btemp29, btemp36, btemp37, btemp44, btemp45, btemp54, btemp55, prod
      +l, prodh, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1935 ;;      Params:         0       0       0       0       0       0       0       0       0
  1936 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1938 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1939 ;;Total ram usage:        0 bytes
  1940 ;; Hardware stack levels required when called: 13
  1941 ;; This function calls:
  1942 ;;		_os_config
  1943 ;;		_os_create_task
  1944 ;;		_os_start
  1945 ;; This function is called by:
  1946 ;;		Startup code after reset
  1947 ;; This function uses a reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text0
  1951   001996                     __ptext0:
  1952                           	callstack 0
  1953   001996                     _main:
  1954                           	callstack 18
  1955   001996                     
  1956                           ;main.c: 9:     os_config();
  1957   001996  ECFC  F00D         	call	_os_config	;wreg free
  1958                           
  1959                           ;main.c: 13:     os_create_task(100, tarefa_controle_central, 5);
  1960                           ;register	btemp20
  1961   00199A  0E64               	movlw	100
  1962   00199C  6E15               	movwf	btemp20^0,c
  1963                           
  1964                           ;register	btemp21
  1965   00199E  0E05               	movlw	5
  1966   0019A0  6E16               	movwf	btemp21^0,c
  1967                           
  1968                           ;register	wtemp11
  1969   0019A2  0E88               	movlw	low _tarefa_controle_central
  1970   0019A4  6E17               	movwf	wtemp11^0,c
  1971   0019A6  0E12               	movlw	high _tarefa_controle_central
  1972   0019A8  6E18               	movwf	btemp23^0,c
  1973   0019AA  EC63  F00B         	call	_os_create_task	;wreg free
  1974                           
  1975                           ;main.c: 16:     os_create_task(101, tarefa_controle_motores, 4);
  1976                           ;register	btemp20
  1977   0019AE  0E65               	movlw	101
  1978   0019B0  6E15               	movwf	btemp20^0,c
  1979                           
  1980                           ;register	btemp21
  1981   0019B2  0E04               	movlw	4
  1982   0019B4  6E16               	movwf	btemp21^0,c
  1983                           
  1984                           ;register	wtemp11
  1985   0019B6  0E50               	movlw	low _tarefa_controle_motores
  1986   0019B8  6E17               	movwf	wtemp11^0,c
  1987   0019BA  0E1A               	movlw	high _tarefa_controle_motores
  1988   0019BC  6E18               	movwf	btemp23^0,c
  1989   0019BE  EC63  F00B         	call	_os_create_task	;wreg free
  1990                           
  1991                           ;main.c: 19:     os_create_task(102, tarefa_leitura_sensores, 3);
  1992                           ;register	btemp20
  1993   0019C2  0E66               	movlw	102
  1994   0019C4  6E15               	movwf	btemp20^0,c
  1995                           
  1996                           ;register	btemp21
  1997   0019C6  0E03               	movlw	3
  1998   0019C8  6E16               	movwf	btemp21^0,c
  1999                           
  2000                           ;register	wtemp11
  2001   0019CA  0E20               	movlw	low _tarefa_leitura_sensores
  2002   0019CC  6E17               	movwf	wtemp11^0,c
  2003   0019CE  0E19               	movlw	high _tarefa_leitura_sensores
  2004   0019D0  6E18               	movwf	btemp23^0,c
  2005   0019D2  EC63  F00B         	call	_os_create_task	;wreg free
  2006                           
  2007                           ;main.c: 22:     os_create_task(103, tarefa_monitoramento_bateria, 2);
  2008                           ;register	btemp20
  2009   0019D6  0E67               	movlw	103
  2010   0019D8  6E15               	movwf	btemp20^0,c
  2011                           
  2012                           ;register	btemp21
  2013   0019DA  0E02               	movlw	2
  2014   0019DC  6E16               	movwf	btemp21^0,c
  2015                           
  2016                           ;register	wtemp11
  2017   0019DE  0EA2               	movlw	low _tarefa_monitoramento_bateria
  2018   0019E0  6E17               	movwf	wtemp11^0,c
  2019   0019E2  0E1A               	movlw	high _tarefa_monitoramento_bateria
  2020   0019E4  6E18               	movwf	btemp23^0,c
  2021   0019E6  EC63  F00B         	call	_os_create_task	;wreg free
  2022   0019EA                     
  2023                           ;main.c: 26:     os_start();
  2024   0019EA  EC4B  F00E         	call	_os_start	;wreg free
  2025   0019EE                     l19:
  2026   0019EE  EFF7  F00C         	goto	l19
  2027   0019F2  EF06  F000         	goto	start
  2028   0019F6                     __end_of_main:
  2029                           	callstack 0
  2030                           
  2031 ;; *************** function _os_start *****************
  2032 ;; Defined at:
  2033 ;;		line 23 in file "kernel.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1  [STACK] void 
  2040 ;; Registers used:
  2041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp6, btemp8, btemp9, btemp2
      +0, btemp21, btemp28, btemp29, btemp36, btemp37, btemp44, btemp45, btemp54, btemp55, prodl, prodh, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2047 ;;      Params:         0       0       0       0       0       0       0       0       0
  2048 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2050 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2051 ;;Total ram usage:        0 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; Hardware stack levels required when called: 12
  2054 ;; This function calls:
  2055 ;;		_SRAMInitHeap
  2056 ;;		_conf_interrupts
  2057 ;;		_conf_timer_0
  2058 ;;		_config_app
  2059 ;; This function is called by:
  2060 ;;		_main
  2061 ;; This function uses a reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text1
  2065   001C96                     __ptext1:
  2066                           	callstack 0
  2067   001C96                     _os_start:
  2068                           	callstack 18
  2069   001C96                     
  2070                           ;kernel.c: 26:     conf_interrupts();
  2071   001C96  EC83  F00E         	call	_conf_interrupts	;wreg free
  2072   001C9A                     
  2073                           ;kernel.c: 30:     SRAMInitHeap();
  2074   001C9A  EC06  F00C         	call	_SRAMInitHeap	;wreg free
  2075   001C9E                     
  2076                           ;kernel.c: 34:     config_app();
  2077   001C9E  EC78  F00D         	call	_config_app	;wreg free
  2078   001CA2                     
  2079                           ;kernel.c: 36:     conf_timer_0();
  2080   001CA2  EC31  F00E         	call	_conf_timer_0	;wreg free
  2081   001CA6                     
  2082                           ;kernel.c: 39:     (INTCONbits.GIE = 1);
  2083   001CA6  8EF2               	bsf	242,7,c	;volatile
  2084   001CA8                     
  2085                           ; _os_start: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  2086   001CA8  0012               	return		;funcret
  2087   001CAA                     __end_of_os_start:
  2088                           	callstack 0
  2089                           
  2090 ;; *************** function _config_app *****************
  2091 ;; Defined at:
  2092 ;;		line 19 in file "user_app.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;		None
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1  [STACK] void 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp6, btemp8, btemp9, btemp2
      +8, btemp29, btemp36, btemp37, btemp44, btemp45, btemp54, btemp55, prodl, prodh, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2106 ;;      Params:         0       0       0       0       0       0       0       0       0
  2107 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2109 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2110 ;;Total ram usage:        0 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; Hardware stack levels required when called: 11
  2113 ;; This function calls:
  2114 ;;		_adc_go
  2115 ;;		_config_adc
  2116 ;;		_create_pipe
  2117 ;;		_mutex_init
  2118 ;;		_pwm_init
  2119 ;;		_set_channel
  2120 ;;		_set_port
  2121 ;; This function is called by:
  2122 ;;		_os_start
  2123 ;; This function uses a reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text2
  2127   001AF0                     __ptext2:
  2128                           	callstack 0
  2129   001AF0                     _config_app:
  2130                           	callstack 18
  2131   001AF0                     
  2132                           ;user_app.c: 23:     set_channel(CHANNEL_0);
  2133                           ;register	btemp28
  2134   001AF0  0E00               	movlw	0
  2135   001AF2  6E1D               	movwf	btemp28^0,c
  2136   001AF4  EC55  F00E         	call	_set_channel	;wreg free
  2137   001AF8                     
  2138                           ;user_app.c: 24:     set_port(AN03);
  2139                           ;register	btemp28
  2140   001AF8  0E0B               	movlw	11
  2141   001AFA  6E1D               	movwf	btemp28^0,c
  2142   001AFC  EC6D  F00E         	call	_set_port	;wreg free
  2143   001B00                     
  2144                           ;user_app.c: 25:     config_adc(TAD12, FOSC4);
  2145                           ;register	btemp28
  2146   001B00  0E05               	movlw	5
  2147   001B02  6E1D               	movwf	btemp28^0,c
  2148                           
  2149                           ;register	btemp29
  2150   001B04  0E04               	movlw	4
  2151   001B06  6E1E               	movwf	btemp29^0,c
  2152   001B08  EC10  F00E         	call	_config_adc	;wreg free
  2153   001B0C                     
  2154                           ;user_app.c: 26:     adc_go(1);
  2155                           ;register	wtemp14
  2156   001B0C  6A1E               	clrf	btemp29^0,c
  2157   001B0E  0E01               	movlw	1
  2158   001B10  6E1D               	movwf	btemp28^0,c
  2159   001B12  EC73  F00E         	call	_adc_go	;wreg free
  2160   001B16                     
  2161                           ;user_app.c: 29:     pwm_init();
  2162   001B16  EC21  F00E         	call	_pwm_init	;wreg free
  2163   001B1A                     
  2164                           ;user_app.c: 32:     mutex_init(&mutex_motores);
  2165                           ;register	btemp28
  2166   001B1A  0E41               	movlw	low _mutex_motores
  2167   001B1C  6E1D               	movwf	btemp28^0,c
  2168   001B1E  EC5F  F00E         	call	_mutex_init	;wreg free
  2169   001B22                     
  2170                           ;user_app.c: 33:     create_pipe(&pipe_sensores, sizeof(sensor_data_t));
  2171                           ;register	btemp28
  2172   001B22  0E81               	movlw	low _pipe_sensores
  2173   001B24  6E1D               	movwf	btemp28^0,c
  2174                           
  2175                           ;register	btemp29
  2176   001B26  0E04               	movlw	4
  2177   001B28  6E1E               	movwf	btemp29^0,c
  2178   001B2A  ECFB  F00C         	call	_create_pipe	;wreg free
  2179   001B2E                     
  2180                           ;user_app.c: 34:     create_pipe(&pipe_bateria, sizeof(int));
  2181                           ;register	btemp28
  2182   001B2E  0E60               	movlw	low _pipe_bateria
  2183   001B30  6E1D               	movwf	btemp28^0,c
  2184                           
  2185                           ;register	btemp29
  2186   001B32  0E02               	movlw	2
  2187   001B34  6E1E               	movwf	btemp29^0,c
  2188   001B36  ECFB  F00C         	call	_create_pipe	;# 
  2189   001B3A                     
  2190                           ; _config_app: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  2191   001B3A  0012               	return		;funcret
  2192   001B3C                     __end_of_config_app:
  2193                           	callstack 0
  2194                           
  2195 ;; *************** function _set_port *****************
  2196 ;; Defined at:
  2197 ;;		line 11 in file "io.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  port            1    btemp28  enum E3358
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1  [STACK] void 
  2204 ;; Registers used:
  2205 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp28
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2211 ;;      Params:         0       0       0       0       0       0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2214 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2215 ;;Total ram usage:        0 bytes
  2216 ;; Hardware stack levels used: 1
  2217 ;; Hardware stack levels required when called: 8
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_config_app
  2222 ;; This function uses a reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text3
  2226   001CDA                     __ptext3:
  2227                           	callstack 0
  2228   001CDA                     _set_port:
  2229                           	callstack 20
  2230   001CDA                     
  2231                           ;io.c: 11: void set_port(port_conf_t port);io.c: 12: {;io.c: 13:     ADCON1bits.PCFG = p
      +                          ort;
  2232   001CDA  50C1               	movf	193,w,c	;volatile
  2233   001CDC  181D               	xorwf	btemp28^0,w,c
  2234   001CDE  0BF0               	andlw	-16
  2235   001CE0  181D               	xorwf	btemp28^0,w,c
  2236   001CE2  6EC1               	movwf	193,c	;volatile
  2237   001CE4                     
  2238                           ; _set_port: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  2239   001CE4  0012               	return		;funcret
  2240   001CE6                     __end_of_set_port:
  2241                           	callstack 0
  2242                           
  2243 ;; *************** function _set_channel *****************
  2244 ;; Defined at:
  2245 ;;		line 6 in file "io.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  channel         1    btemp28  enum E3343
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1  [STACK] void 
  2252 ;; Registers used:
  2253 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp28, btemp55
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2259 ;;      Params:         0       0       0       0       0       0       0       0       0
  2260 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2262 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2263 ;;Total ram usage:        0 bytes
  2264 ;; Hardware stack levels used: 1
  2265 ;; Hardware stack levels required when called: 8
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_config_app
  2270 ;;		_tarefa_leitura_sensores
  2271 ;;		_tarefa_monitoramento_bateria
  2272 ;; This function uses a reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text4
  2276   001CAA                     __ptext4:
  2277                           	callstack 0
  2278   001CAA                     _set_channel:
  2279                           	callstack 16
  2280   001CAA                     
  2281                           ;io.c: 6: void set_channel(channel_t channel);io.c: 7: {;io.c: 8:     ADCON0bits.CHS = c
      +                          hannel;
  2282   001CAA  C01D F038          	movff	btemp28,btemp55
  2283   001CAE  4638               	rlncf	btemp55^0,f,c
  2284   001CB0  4638               	rlncf	btemp55^0,f,c
  2285   001CB2  50C2               	movf	194,w,c	;volatile
  2286   001CB4  1838               	xorwf	btemp55^0,w,c
  2287   001CB6  0BC3               	andlw	-61
  2288   001CB8  1838               	xorwf	btemp55^0,w,c
  2289   001CBA  6EC2               	movwf	194,c	;volatile
  2290   001CBC                     
  2291                           ; _set_channel: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2292   001CBC  0012               	return		;funcret
  2293   001CBE                     __end_of_set_channel:
  2294                           	callstack 0
  2295                           
  2296 ;; *************** function _pwm_init *****************
  2297 ;; Defined at:
  2298 ;;		line 44 in file "io.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;		None
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1  [STACK] void 
  2305 ;; Registers used:
  2306 ;;		wreg, status,2
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2312 ;;      Params:         0       0       0       0       0       0       0       0       0
  2313 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2315 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2316 ;;Total ram usage:        0 bytes
  2317 ;; Hardware stack levels used: 1
  2318 ;; Hardware stack levels required when called: 8
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		_config_app
  2323 ;; This function uses a reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text5
  2327   001C42                     __ptext5:
  2328                           	callstack 0
  2329   001C42                     _pwm_init:
  2330                           	callstack 20
  2331   001C42                     
  2332                           ;io.c: 46:     TRISCbits.RC2 = 0;
  2333   001C42  9494               	bcf	148,2,c	;volatile
  2334   001C44                     
  2335                           ;io.c: 49:     PR2 = 124;
  2336   001C44  0E7C               	movlw	124
  2337   001C46  6ECB               	movwf	203,c	;volatile
  2338   001C48                     
  2339                           ;io.c: 52:     CCPR1L = 0;
  2340   001C48  6ABE               	clrf	190,c	;volatile
  2341                           
  2342                           ;io.c: 53:     CCP1CONbits.DC1B = 0;
  2343   001C4A  0ECF               	movlw	-49
  2344   001C4C  16BD               	andwf	189,f,c	;volatile
  2345                           
  2346                           ;io.c: 56:     T2CONbits.T2CKPS = 0b10;
  2347   001C4E  50CA               	movf	202,w,c	;volatile
  2348   001C50  0BFC               	andlw	-4
  2349   001C52  0902               	iorlw	2
  2350   001C54  6ECA               	movwf	202,c	;volatile
  2351   001C56                     
  2352                           ;io.c: 57:     T2CONbits.TMR2ON = 1;
  2353   001C56  84CA               	bsf	202,2,c	;volatile
  2354                           
  2355                           ;io.c: 60:     CCP1CONbits.CCP1M = 0b1100;
  2356   001C58  50BD               	movf	189,w,c	;volatile
  2357   001C5A  0BF0               	andlw	-16
  2358   001C5C  090C               	iorlw	12
  2359   001C5E  6EBD               	movwf	189,c	;volatile
  2360   001C60                     
  2361                           ; _pwm_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  2362   001C60  0012               	return		;funcret
  2363   001C62                     __end_of_pwm_init:
  2364                           	callstack 0
  2365                           
  2366 ;; *************** function _mutex_init *****************
  2367 ;; Defined at:
  2368 ;;		line 53 in file "sync.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  m               1    btemp28  PTR struct semaphore
  2371 ;;		 -> mutex_motores(14), 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;		None
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1  [STACK] void 
  2376 ;; Registers used:
  2377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp28, btemp36, btemp37, btemp54, btemp55, cstack
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2383 ;;      Params:         0       0       0       0       0       0       0       0       0
  2384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2386 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2387 ;;Total ram usage:        0 bytes
  2388 ;; Hardware stack levels used: 1
  2389 ;; Hardware stack levels required when called: 9
  2390 ;; This function calls:
  2391 ;;		_sem_init
  2392 ;; This function is called by:
  2393 ;;		_config_app
  2394 ;; This function uses a reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text6
  2398   001CBE                     __ptext6:
  2399                           	callstack 0
  2400   001CBE                     _mutex_init:
  2401                           	callstack 19
  2402   001CBE                     
  2403                           ;sync.c: 53: void mutex_init(mutex_t *m);sync.c: 54: {;sync.c: 56:     sem_init(m, 1);
  2404                           ;register	btemp36
  2405   001CBE  C01D F025          	movff	btemp28,btemp36
  2406                           
  2407                           ;register	btemp37
  2408   001CC2  0E01               	movlw	1
  2409   001CC4  6E26               	movwf	btemp37^0,c
  2410   001CC6  ECB7  F00D         	call	_sem_init	;wreg free
  2411   001CCA                     
  2412                           ; _mutex_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  2413   001CCA  0012               	return		;funcret
  2414   001CCC                     __end_of_mutex_init:
  2415                           	callstack 0
  2416                           
  2417 ;; *************** function _create_pipe *****************
  2418 ;; Defined at:
  2419 ;;		line 7 in file "pipe.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  p               1    btemp28  PTR struct pipe
  2422 ;;		 -> pipe_bateria(33), pipe_sensores(33), 
  2423 ;;  size            1    btemp29  unsigned char 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1  [STACK] void 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp6, btemp8, btemp9, btemp2
      +8, btemp29, btemp36, btemp37, btemp44, btemp45, btemp54, btemp55, prodl, prodh, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2435 ;;      Params:         0       0       0       0       0       0       0       0       0
  2436 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2438 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2439 ;;Total ram usage:        0 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; Hardware stack levels required when called: 10
  2442 ;; This function calls:
  2443 ;;		_SRAMalloc
  2444 ;;		_sem_init
  2445 ;; This function is called by:
  2446 ;;		_config_app
  2447 ;; This function uses a reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text7
  2451   0019F6                     __ptext7:
  2452                           	callstack 0
  2453   0019F6                     _create_pipe:
  2454                           	callstack 18
  2455   0019F6                     
  2456                           ;pipe.c: 7: void create_pipe(pipe_t *p, uint8_t size);pipe.c: 8: {;pipe.c: 9:     p->pip
      +                          e_pos_read = 0;
  2457   0019F6  501D               	movf	btemp28^0,w,c
  2458   0019F8  6ED9               	movwf	fsr2l,c
  2459   0019FA  6ADA               	clrf	fsr2h,c
  2460   0019FC  6ADF               	clrf	indf2,c
  2461   0019FE                     
  2462                           ;pipe.c: 10:     p->pipe_pos_write = 0;
  2463   0019FE  501D               	movf	btemp28^0,w,c
  2464   001A00  6ED9               	movwf	fsr2l,c
  2465   001A02  6ADA               	clrf	fsr2h,c
  2466   001A04  0E01               	movlw	1
  2467   001A06  26D9               	addwf	fsr2l,f,c
  2468   001A08  6ADF               	clrf	indf2,c
  2469   001A0A                     
  2470                           ;pipe.c: 11:     p->pipe_size = size;
  2471   001A0A  501D               	movf	btemp28^0,w,c
  2472   001A0C  6ED9               	movwf	fsr2l,c
  2473   001A0E  6ADA               	clrf	fsr2h,c
  2474   001A10  0E04               	movlw	4
  2475   001A12  26D9               	addwf	fsr2l,f,c
  2476   001A14  C01E FFDF          	movff	btemp29,indf2
  2477   001A18                     
  2478                           ;pipe.c: 12:     p->pipe_data = (char*)SRAMalloc(size);
  2479                           ;register	btemp36
  2480   001A18  C01E F025          	movff	btemp29,btemp36
  2481   001A1C  ECE3  F007         	call	_SRAMalloc	;wreg free
  2482   001A20  501D               	movf	btemp28^0,w,c
  2483   001A22  6ED9               	movwf	fsr2l,c
  2484   001A24  6ADA               	clrf	fsr2h,c
  2485   001A26  0E02               	movlw	2
  2486   001A28  26D9               	addwf	fsr2l,f,c
  2487   001A2A  C001 FFDE          	movff	btemp0,postinc2
  2488   001A2E  C002 FFDD          	movff	btemp1,postdec2
  2489   001A32                     
  2490                           ;pipe.c: 15:     sem_init(&p->pipe_sem_read, 0);
  2491   001A32  501D               	movf	btemp28^0,w,c
  2492   001A34  0F05               	addlw	5
  2493                           
  2494                           ;register	btemp36
  2495   001A36  6E25               	movwf	btemp36^0,c
  2496                           
  2497                           ;register	btemp37
  2498   001A38  0E00               	movlw	0
  2499   001A3A  6E26               	movwf	btemp37^0,c
  2500   001A3C  ECB7  F00D         	call	_sem_init	;wreg free
  2501   001A40                     
  2502                           ;pipe.c: 16:     sem_init(&p->pipe_sem_write, size);
  2503   001A40  501D               	movf	btemp28^0,w,c
  2504   001A42  0F13               	addlw	19
  2505                           
  2506                           ;register	btemp36
  2507   001A44  6E25               	movwf	btemp36^0,c
  2508                           
  2509                           ;register	btemp37
  2510   001A46  C01E F026          	movff	btemp29,btemp37
  2511   001A4A  ECB7  F00D         	call	_sem_init	;wreg free
  2512   001A4E                     
  2513                           ; _create_pipe: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
  2514   001A4E  0012               	return		;funcret
  2515   001A50                     __end_of_create_pipe:
  2516                           	callstack 0
  2517                           
  2518 ;; *************** function _sem_init *****************
  2519 ;; Defined at:
  2520 ;;		line 10 in file "sync.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  s               1    btemp36  PTR struct semaphore
  2523 ;;		 -> pipe_bateria(33), pipe_sensores(33), mutex_motores(14), 
  2524 ;;  init_value      1    btemp37  unsigned char 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1  [STACK] void 
  2529 ;; Registers used:
  2530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp36, btemp37, btemp54, btemp55
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2536 ;;      Params:         0       0       0       0       0       0       0       0       0
  2537 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2539 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2540 ;;Total ram usage:        0 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 8
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_mutex_init
  2547 ;;		_create_pipe
  2548 ;; This function uses a reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text8
  2552   001B6E                     __ptext8:
  2553                           	callstack 0
  2554   001B6E                     _sem_init:
  2555                           	callstack 19
  2556   001B6E                     
  2557                           ;sync.c: 10: void sem_init(sem_t *s, uint8_t init_value);sync.c: 11: {;sync.c: 12:     s
      +                          ->contador = init_value;
  2558   001B6E  5026               	movf	btemp37^0,w,c
  2559   001B70  6E37               	movwf	btemp54^0,c
  2560   001B72  6A38               	clrf	btemp55^0,c
  2561   001B74  5025               	movf	btemp36^0,w,c
  2562   001B76  6ED9               	movwf	fsr2l,c
  2563   001B78  6ADA               	clrf	fsr2h,c
  2564   001B7A  C037 FFDE          	movff	btemp54,postinc2
  2565   001B7E  C038 FFDD          	movff	btemp55,postdec2
  2566   001B82                     
  2567                           ;sync.c: 13:     s->sem_queue_in = 0;
  2568   001B82  5025               	movf	btemp36^0,w,c
  2569   001B84  6ED9               	movwf	fsr2l,c
  2570   001B86  6ADA               	clrf	fsr2h,c
  2571   001B88  0E0C               	movlw	12
  2572   001B8A  26D9               	addwf	fsr2l,f,c
  2573   001B8C  6ADF               	clrf	indf2,c
  2574   001B8E                     
  2575                           ;sync.c: 14:     s->sem_queue_out = 0;
  2576   001B8E  5025               	movf	btemp36^0,w,c
  2577   001B90  6ED9               	movwf	fsr2l,c
  2578   001B92  6ADA               	clrf	fsr2h,c
  2579   001B94  0E0D               	movlw	13
  2580   001B96  26D9               	addwf	fsr2l,f,c
  2581   001B98  6ADF               	clrf	indf2,c
  2582   001B9A                     
  2583                           ; _sem_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  2584   001B9A  0012               	return		;funcret
  2585   001B9C                     __end_of_sem_init:
  2586                           	callstack 0
  2587                           
  2588 ;; *************** function _SRAMalloc *****************
  2589 ;; Defined at:
  2590 ;;		line 154 in file "mem.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;  nBytes          1    btemp36  unsigned char 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  pHeap           2  [STACK] PTR struct _SALLOC
  2595 ;;		 -> _uDynamicHeap(512), 
  2596 ;;  temp            2    wtemp4   PTR struct _SALLOC
  2597 ;;		 -> _uDynamicHeap(512), 
  2598 ;;  segHeader       1  [STACK] struct _SALLOC
  2599 ;;  segLen          1    btemp6   unsigned char 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  2  [STACK] PTR unsigned char 
  2602 ;; Registers used:
  2603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp6, btemp8, btemp9, btemp3
      +6, btemp44, btemp45, btemp54, btemp55, prodl, prodh, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2609 ;;      Params:         0       0       0       0       0       0       0       0       0
  2610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2612 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2613 ;;Total ram usage:        0 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; Hardware stack levels required when called: 9
  2616 ;; This function calls:
  2617 ;;		__SRAMmerge
  2618 ;; This function is called by:
  2619 ;;		_create_pipe
  2620 ;; This function uses a reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text9
  2624   000FC6                     __ptext9:
  2625                           	callstack 0
  2626   000FC6                     _SRAMalloc:
  2627                           	callstack 0
  2628                           
  2629                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2630   000FC6  52E6               	movf	postinc1,f,c
  2631   000FC8  52E6               	movf	postinc1,f,c
  2632   000FCA  52E6               	movf	postinc1,f,c
  2633   000FCC                     
  2634                           ;mem.c: 154: unsigned char * SRAMalloc( unsigned char nBytes);mem.c: 155: {;mem.c: 156: 
      +                           SALLOC * pHeap;;mem.c: 157:  SALLOC * temp;;mem.c: 158:       SALLOC segHeader;;mem.c: 
      +                          159:       unsigned char segLen;;mem.c: 162:  if (nBytes > (0x7F - 1)) return (0);
  2635   000FCC  0E7E               	movlw	126
  2636   000FCE  6425               	cpfsgt	btemp36^0,c
  2637   000FD0  EFEC  F007         	goto	u561
  2638   000FD4  EFEE  F007         	goto	u560
  2639   000FD8                     u561:
  2640   000FD8  EFF4  F007         	goto	l1831
  2641   000FDC                     u560:
  2642   000FDC                     l1827:
  2643   000FDC  0E00               	movlw	0
  2644   000FDE  6E01               	movwf	btemp0^0,c
  2645   000FE0  0E00               	movlw	0
  2646   000FE2  6E02               	movwf	(btemp0+1)^0,c
  2647   000FE4  EFA6  F008         	goto	l356
  2648   000FE8                     l1831:
  2649                           
  2650                           ;mem.c: 165:  pHeap = (SALLOC *)_uDynamicHeap;
  2651                           ;stkvar	_pHeap @ sp[(-3)+0]
  2652   000FE8  0E02               	movlw	high __uDynamicHeap
  2653   000FEA  6E01               	movwf	btemp0^0,c
  2654   000FEC  0EFE               	movlw	-2
  2655   000FEE  C001 FFE3          	movff	btemp0,plusw1
  2656   000FF2  0EB7               	movlw	low __uDynamicHeap
  2657   000FF4  6E01               	movwf	btemp0^0,c
  2658   000FF6  0EFD               	movlw	-3
  2659   000FF8  C001 FFE3          	movff	btemp0,plusw1
  2660   000FFC                     l1833:
  2661                           
  2662                           ; _pHeap loaded to wtemp2
  2663                           ;stkvar	_pHeap @ sp[(-3)+0]
  2664                           ;register	wtemp2
  2665   000FFC  0EFD               	movlw	-3
  2666   000FFE  CFE3 F005          	movff	plusw1,btemp4
  2667   001002  0F01               	addlw	1
  2668   001004  CFE3 F006          	movff	plusw1,btemp5
  2669                           
  2670                           ;mem.c: 168:  {;mem.c: 170:   segHeader = *pHeap;
  2671   001008  C005 FFD9          	movff	btemp4,fsr2l
  2672   00100C  C006 FFDA          	movff	btemp4+1,fsr2h
  2673   001010  50DF               	movf	indf2,w,c
  2674   001012  6E38               	movwf	btemp55^0,c
  2675                           
  2676                           ;stkvar	_segHeader @ sp[(-3)+2]
  2677   001014  0EFF               	movlw	-1
  2678   001016  C038 FFE3          	movff	btemp55,plusw1
  2679   00101A                     
  2680                           ;mem.c: 173:   segLen = segHeader.bits.count - 1;
  2681                           ;stkvar	_segHeader @ sp[(-3)+2]
  2682   00101A  0EFF               	movlw	255
  2683   00101C  24E1               	addwf	fsr1l,w,c
  2684   00101E  6ED9               	movwf	fsr2l,c
  2685   001020  0EFF               	movlw	255
  2686   001022  20E2               	addwfc	fsr1h,w,c
  2687   001024  6EDA               	movwf	fsr2h,c
  2688   001026  50DF               	movf	223,w,c
  2689   001028  0B7F               	andlw	127
  2690   00102A  6E38               	movwf	btemp55^0,c
  2691   00102C  0438               	decf	btemp55^0,w,c
  2692   00102E  6E07               	movwf	btemp6^0,c
  2693   001030                     
  2694                           ;_pHeap stored from wtemp2
  2695                           ;register	wtemp2
  2696                           ;stkvar	_pHeap @ sp[(-3)+0]
  2697   001030  0EFE               	movlw	-2
  2698   001032  C006 FFE3          	movff	btemp5,plusw1
  2699   001036  0EFD               	movlw	-3
  2700   001038  C005 FFE3          	movff	btemp4,plusw1
  2701                           
  2702                           ;mem.c: 176:   if (segHeader.byte == 0) return (0);
  2703                           ;stkvar	_segHeader @ sp[(-3)+2]
  2704   00103C  0EFF               	movlw	-1
  2705   00103E  50E3               	movf	plusw1,w,c
  2706   001040  A4D8               	btfss	status,2,c
  2707   001042  EF25  F008         	goto	u571
  2708   001046  EF27  F008         	goto	u570
  2709   00104A                     u571:
  2710   00104A  EF29  F008         	goto	l1843
  2711   00104E                     u570:
  2712   00104E  EFEE  F007         	goto	l1827
  2713   001052                     l1843:
  2714                           
  2715                           ;mem.c: 179:   if (!(segHeader.bits.alloc))
  2716                           ;stkvar	_segHeader @ sp[(-3)+2]
  2717   001052  0EFF               	movlw	255
  2718   001054  24E1               	addwf	fsr1l,w,c
  2719   001056  6ED9               	movwf	fsr2l,c
  2720   001058  0EFF               	movlw	255
  2721   00105A  20E2               	addwfc	fsr1h,w,c
  2722   00105C  6EDA               	movwf	fsr2h,c
  2723   00105E  BEDF               	btfsc	indf2,7,c
  2724   001060  EF34  F008         	goto	u581
  2725   001064  EF36  F008         	goto	u580
  2726   001068                     u581:
  2727   001068  EF4F  F008         	goto	l1849
  2728   00106C                     u580:
  2729   00106C                     
  2730                           ;mem.c: 180:   {;mem.c: 182:    if (nBytes > segLen)
  2731   00106C  5025               	movf	btemp36^0,w,c
  2732   00106E  5C07               	subwf	btemp6^0,w,c
  2733   001070  B0D8               	btfsc	status,0,c
  2734   001072  EF3D  F008         	goto	u591
  2735   001076  EF3F  F008         	goto	u590
  2736   00107A                     u591:
  2737   00107A  EF64  F008         	goto	l1851
  2738   00107E                     u590:
  2739   00107E                     
  2740                           ;mem.c: 183:    {;mem.c: 185:     if (!(_SRAMmerge(pHeap))) pHeap += segHeader.bits.coun
      +                          t;
  2741                           ;stkvar	_pHeap @ sp[(-3)+0]
  2742                           ;register	wtemp22
  2743   00107E  0EFD               	movlw	-3
  2744   001080  CFE3 F02D          	movff	plusw1,btemp44
  2745   001084  0F01               	addlw	1
  2746   001086  CFE3 F02E          	movff	plusw1,btemp45
  2747   00108A  ECAA  F008         	call	__SRAMmerge	;wreg free
  2748   00108E  5001               	movf	btemp0^0,w,c
  2749   001090  A4D8               	btfss	status,2,c
  2750   001092  EF4D  F008         	goto	u601
  2751   001096  EF4F  F008         	goto	u600
  2752   00109A                     u601:
  2753   00109A  EFFE  F007         	goto	l1833
  2754   00109E                     u600:
  2755   00109E                     l1849:
  2756                           
  2757                           ;stkvar	_segHeader @ sp[(-3)+2]
  2758   00109E  0EFF               	movlw	255
  2759   0010A0  24E1               	addwf	fsr1l,w,c
  2760   0010A2  6ED9               	movwf	fsr2l,c
  2761   0010A4  0EFF               	movlw	255
  2762   0010A6  20E2               	addwfc	fsr1h,w,c
  2763   0010A8  6EDA               	movwf	fsr2h,c
  2764   0010AA  50DF               	movf	223,w,c
  2765   0010AC  0B7F               	andlw	127
  2766   0010AE  0D01               	mullw	1
  2767                           
  2768                           ;stkvar	_pHeap @ sp[(-3)+0]
  2769   0010B0  0EFD               	movlw	253
  2770   0010B2  24E1               	addwf	fsr1l,w,c
  2771   0010B4  6ED9               	movwf	fsr2l,c
  2772   0010B6  0EFF               	movlw	255
  2773   0010B8  20E2               	addwfc	fsr1h,w,c
  2774   0010BA  6EDA               	movwf	fsr2h,c
  2775   0010BC  50F3               	movf	243,w,c
  2776   0010BE  26DE               	addwf	postinc2,f,c
  2777   0010C0  50F4               	movf	244,w,c
  2778   0010C2  22DD               	addwfc	postdec2,f,c
  2779   0010C4  EFFE  F007         	goto	l1833
  2780   0010C8                     l1851:
  2781                           
  2782                           ; _pHeap loaded to wtemp2
  2783                           ;stkvar	_pHeap @ sp[(-3)+0]
  2784                           ;register	wtemp2
  2785   0010C8  0EFD               	movlw	-3
  2786   0010CA  CFE3 F005          	movff	plusw1,btemp4
  2787   0010CE  0F01               	addlw	1
  2788   0010D0  CFE3 F006          	movff	plusw1,btemp5
  2789                           
  2790                           ;mem.c: 191:    if (nBytes == segLen)
  2791   0010D4  5007               	movf	btemp6^0,w,c
  2792   0010D6  1825               	xorwf	btemp36^0,w,c
  2793   0010D8  A4D8               	btfss	status,2,c
  2794   0010DA  EF71  F008         	goto	u611
  2795   0010DE  EF73  F008         	goto	u610
  2796   0010E2                     u611:
  2797   0010E2  EF80  F008         	goto	l1861
  2798   0010E6                     u610:
  2799   0010E6                     
  2800                           ;mem.c: 192:    {;mem.c: 194:     (*pHeap).bits.alloc = 1;
  2801   0010E6  C005 FFD9          	movff	btemp4,fsr2l
  2802   0010EA  C006 FFDA          	movff	btemp4+1,fsr2h
  2803   0010EE  8EDF               	bsf	indf2,7,c
  2804   0010F0                     
  2805                           ;mem.c: 197:     return ((unsigned char *)(pHeap + 1));
  2806   0010F0  0E01               	movlw	1
  2807   0010F2  2405               	addwf	btemp4^0,w,c
  2808   0010F4  6E01               	movwf	btemp0^0,c
  2809   0010F6  0E00               	movlw	0
  2810   0010F8  2006               	addwfc	(btemp4+1)^0,w,c
  2811   0010FA  6E02               	movwf	btemp1^0,c
  2812   0010FC  EFA6  F008         	goto	l356
  2813   001100                     l1861:
  2814                           
  2815                           ;mem.c: 202:    {;mem.c: 204:     (*pHeap).byte = nBytes + 0x81;
  2816   001100  5025               	movf	btemp36^0,w,c
  2817   001102  0F81               	addlw	129
  2818   001104  C005 FFD9          	movff	btemp4,fsr2l
  2819   001108  C006 FFDA          	movff	btemp4+1,fsr2h
  2820   00110C  6EDF               	movwf	indf2,c
  2821   00110E                     
  2822                           ;mem.c: 207:     temp = pHeap + 1;
  2823   00110E  C005 F037          	movff	btemp4,btemp54
  2824   001112  C006 F038          	movff	btemp4+1,btemp55
  2825   001116  0E01               	movlw	1
  2826   001118  2437               	addwf	btemp54^0,w,c
  2827   00111A  6E09               	movwf	btemp8^0,c
  2828   00111C  0E00               	movlw	0
  2829   00111E  2038               	addwfc	btemp55^0,w,c
  2830   001120  6E0A               	movwf	(btemp8+1)^0,c
  2831   001122                     
  2832                           ;mem.c: 210:     pHeap += (nBytes + 1);
  2833   001122  0E01               	movlw	1
  2834   001124  2425               	addwf	btemp36^0,w,c
  2835   001126  6E37               	movwf	btemp54^0,c
  2836   001128  6A38               	clrf	(btemp54+1)^0,c
  2837   00112A  0E00               	movlw	0
  2838   00112C  2238               	addwfc	(btemp54+1)^0,f,c
  2839   00112E  5037               	movf	btemp54^0,w,c
  2840   001130  2605               	addwf	btemp4^0,f,c
  2841   001132  5038               	movf	btemp55^0,w,c
  2842   001134  2206               	addwfc	(btemp4+1)^0,f,c
  2843   001136                     
  2844                           ;mem.c: 213:     (*pHeap).byte = segLen - nBytes;
  2845   001136  5025               	movf	btemp36^0,w,c
  2846   001138  5C07               	subwf	btemp6^0,w,c
  2847   00113A  C005 FFD9          	movff	btemp4,fsr2l
  2848   00113E  C006 FFDA          	movff	btemp4+1,fsr2h
  2849   001142  6EDF               	movwf	indf2,c
  2850   001144                     
  2851                           ;mem.c: 216:     return ((unsigned char *) temp);
  2852   001144  C009 F001          	movff	btemp8,btemp0
  2853   001148  C00A F002          	movff	btemp8+1,btemp1
  2854   00114C                     l356:
  2855                           
  2856                           ; _SRAMalloc: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  2857   00114C  52E5               	movf	postdec1,f,c
  2858   00114E  52E5               	movf	postdec1,f,c
  2859   001150  52E5               	movf	postdec1,f,c
  2860   001152  0012               	return		;funcret
  2861   001154                     __end_of_SRAMalloc:
  2862                           	callstack 0
  2863                           
  2864 ;; *************** function __SRAMmerge *****************
  2865 ;; Defined at:
  2866 ;;		line 322 in file "mem.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  pSegA           2    wtemp22  PTR struct _SALLOC
  2869 ;;		 -> _uDynamicHeap(512), 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  pSegB           2    wtemp2   PTR struct _SALLOC
  2872 ;;		 -> _uDynamicHeap(512), 
  2873 ;;  uSegB           1  [STACK] struct _SALLOC
  2874 ;;  uSegA           1  [STACK] struct _SALLOC
  2875 ;;  uSum            1  [STACK] struct _SALLOC
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1  [STACK] unsigned char 
  2878 ;; Registers used:
  2879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp4, btemp5, btemp44, btemp45, btemp54, btemp55, pr
      +odl, prodh
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2885 ;;      Params:         0       0       0       0       0       0       0       0       0
  2886 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2887 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2888 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2889 ;;Total ram usage:        0 bytes
  2890 ;; Hardware stack levels used: 1
  2891 ;; Hardware stack levels required when called: 8
  2892 ;; This function calls:
  2893 ;;		Nothing
  2894 ;; This function is called by:
  2895 ;;		_SRAMalloc
  2896 ;; This function uses a reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text10
  2900   001154                     __ptext10:
  2901                           	callstack 0
  2902   001154                     __SRAMmerge:
  2903                           	callstack 0
  2904                           
  2905                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2906   001154  52E6               	movf	postinc1,f,c
  2907   001156  52E6               	movf	postinc1,f,c
  2908   001158  52E6               	movf	postinc1,f,c
  2909   00115A                     
  2910                           ;mem.c: 322:      unsigned char _SRAMmerge(SALLOC * pSegA);mem.c: 323: {;mem.c: 324:  SA
      +                          LLOC * pSegB;;mem.c: 325:       SALLOC uSegA, uSegB, uSum;;mem.c: 329:  pSegB = pSegA + 
      +                          (*pSegA).byte;
  2911   00115A  C02D FFD9          	movff	btemp44,fsr2l
  2912   00115E  C02E FFDA          	movff	btemp44+1,fsr2h
  2913   001162  50DF               	movf	indf2,w,c
  2914   001164  6E38               	movwf	btemp55^0,c
  2915   001166  5038               	movf	btemp55^0,w,c
  2916   001168  242D               	addwf	btemp44^0,w,c
  2917   00116A  6E05               	movwf	btemp4^0,c
  2918   00116C  0E00               	movlw	0
  2919   00116E  202E               	addwfc	(btemp44+1)^0,w,c
  2920   001170  6E06               	movwf	(btemp4+1)^0,c
  2921   001172                     
  2922                           ;mem.c: 332:  uSegA = *pSegA;
  2923   001172  C02D FFD9          	movff	btemp44,fsr2l
  2924   001176  C02E FFDA          	movff	btemp44+1,fsr2h
  2925   00117A  50DF               	movf	indf2,w,c
  2926   00117C  6E38               	movwf	btemp55^0,c
  2927                           
  2928                           ;stkvar	_uSegA @ sp[(-3)+1]
  2929   00117E  0EFE               	movlw	-2
  2930   001180  C038 FFE3          	movff	btemp55,plusw1
  2931   001184                     
  2932                           ;mem.c: 333:  uSegB = *pSegB;
  2933   001184  C005 FFD9          	movff	btemp4,fsr2l
  2934   001188  C006 FFDA          	movff	btemp4+1,fsr2h
  2935   00118C  50DF               	movf	indf2,w,c
  2936   00118E  6E38               	movwf	btemp55^0,c
  2937                           
  2938                           ;stkvar	_uSegB @ sp[(-3)+0]
  2939   001190  0EFD               	movlw	-3
  2940   001192  C038 FFE3          	movff	btemp55,plusw1
  2941   001196                     
  2942                           ;mem.c: 336:  if (uSegB.byte == 0) return (0);
  2943                           ;stkvar	_uSegB @ sp[(-3)+0]
  2944   001196  0EFD               	movlw	-3
  2945   001198  50E3               	movf	plusw1,w,c
  2946   00119A  A4D8               	btfss	status,2,c
  2947   00119C  EFD2  F008         	goto	u511
  2948   0011A0  EFD4  F008         	goto	u510
  2949   0011A4                     u511:
  2950   0011A4  EFD8  F008         	goto	l1783
  2951   0011A8                     u510:
  2952   0011A8                     l1779:
  2953   0011A8  0E00               	movlw	0
  2954   0011AA  6E01               	movwf	btemp0^0,c
  2955   0011AC  EF40  F009         	goto	l382
  2956   0011B0                     l1783:
  2957                           
  2958                           ;mem.c: 339:  if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  2959                           ;stkvar	_uSegA @ sp[(-3)+1]
  2960   0011B0  0EFE               	movlw	254
  2961   0011B2  24E1               	addwf	fsr1l,w,c
  2962   0011B4  6ED9               	movwf	fsr2l,c
  2963   0011B6  0EFF               	movlw	255
  2964   0011B8  20E2               	addwfc	fsr1h,w,c
  2965   0011BA  6EDA               	movwf	fsr2h,c
  2966   0011BC  BEDF               	btfsc	indf2,7,c
  2967   0011BE  EFE3  F008         	goto	u521
  2968   0011C2  EFE5  F008         	goto	u520
  2969   0011C6                     u521:
  2970   0011C6  EFD4  F008         	goto	l1779
  2971   0011CA                     u520:
  2972   0011CA                     
  2973                           ;stkvar	_uSegB @ sp[(-3)+0]
  2974   0011CA  0EFD               	movlw	253
  2975   0011CC  24E1               	addwf	fsr1l,w,c
  2976   0011CE  6ED9               	movwf	fsr2l,c
  2977   0011D0  0EFF               	movlw	255
  2978   0011D2  20E2               	addwfc	fsr1h,w,c
  2979   0011D4  6EDA               	movwf	fsr2h,c
  2980   0011D6  AEDF               	btfss	indf2,7,c
  2981   0011D8  EFF0  F008         	goto	u531
  2982   0011DC  EFF2  F008         	goto	u530
  2983   0011E0                     u531:
  2984   0011E0  EFF4  F008         	goto	l1791
  2985   0011E4                     u530:
  2986   0011E4  EFD4  F008         	goto	l1779
  2987   0011E8                     l1791:
  2988                           
  2989                           ;mem.c: 342:  if (uSegA.bits.count == 0x7F) return (0);
  2990                           ;stkvar	_uSegA @ sp[(-3)+1]
  2991   0011E8  0EFE               	movlw	254
  2992   0011EA  24E1               	addwf	fsr1l,w,c
  2993   0011EC  6ED9               	movwf	fsr2l,c
  2994   0011EE  0EFF               	movlw	255
  2995   0011F0  20E2               	addwfc	fsr1h,w,c
  2996   0011F2  6EDA               	movwf	fsr2h,c
  2997   0011F4  50DF               	movf	223,w,c
  2998   0011F6  0B7F               	andlw	127
  2999   0011F8  0A7F               	xorlw	127
  3000   0011FA  A4D8               	btfss	status,2,c
  3001   0011FC  EF02  F009         	goto	u541
  3002   001200  EF04  F009         	goto	u540
  3003   001204                     u541:
  3004   001204  EF06  F009         	goto	l1797
  3005   001208                     u540:
  3006   001208  EFD4  F008         	goto	l1779
  3007   00120C                     l1797:
  3008                           
  3009                           ;mem.c: 345:  uSum.byte = uSegA.byte + uSegB.byte;
  3010                           ;stkvar	_uSegB @ sp[(-3)+0]
  3011   00120C  0EFD               	movlw	-3
  3012   00120E  CFE3 F038          	movff	plusw1,btemp55
  3013                           
  3014                           ;stkvar	_uSegA @ sp[(-3)+1]
  3015   001212  0EFE               	movlw	-2
  3016   001214  50E3               	movf	plusw1,w,c
  3017   001216  2438               	addwf	btemp55^0,w,c
  3018   001218  6E37               	movwf	btemp54^0,c
  3019                           
  3020                           ;stkvar	_uSum @ sp[(-3)+2]
  3021   00121A  0EFF               	movlw	-1
  3022   00121C  C037 FFE3          	movff	btemp54,plusw1
  3023   001220                     
  3024                           ;mem.c: 351:  if ((uSum.byte) > 0x7F)
  3025                           ;stkvar	_uSum @ sp[(-3)+2]
  3026   001220  0EFF               	movlw	-1
  3027   001222  CFE3 F001          	movff	plusw1,btemp0
  3028   001226  0E7F               	movlw	127
  3029   001228  6401               	cpfsgt	btemp0^0,c
  3030   00122A  EF19  F009         	goto	u551
  3031   00122E  EF1B  F009         	goto	u550
  3032   001232                     u551:
  3033   001232  EF37  F009         	goto	l1815
  3034   001236                     u550:
  3035   001236                     
  3036                           ;mem.c: 352:  {;mem.c: 353:   (*pSegA).byte = 0x7F;
  3037   001236  C02D FFD9          	movff	btemp44,fsr2l
  3038   00123A  C02E FFDA          	movff	btemp44+1,fsr2h
  3039   00123E  0E7F               	movlw	127
  3040   001240  6EDF               	movwf	indf2,c
  3041   001242                     
  3042                           ;mem.c: 354:   pSegA += 0x7F;
  3043   001242  0E7F               	movlw	127
  3044   001244  262D               	addwf	btemp44^0,f,c
  3045   001246  0E00               	movlw	0
  3046   001248  222E               	addwfc	(btemp44+1)^0,f,c
  3047   00124A                     
  3048                           ;mem.c: 355:   pSegB += uSegB.byte;
  3049                           ;stkvar	_uSegB @ sp[(-3)+0]
  3050   00124A  0EFD               	movlw	-3
  3051   00124C  50E3               	movf	plusw1,w,c
  3052   00124E  0D01               	mullw	1
  3053   001250  50F3               	movf	243,w,c
  3054   001252  2605               	addwf	btemp4^0,f,c
  3055   001254  50F4               	movf	244,w,c
  3056   001256  2206               	addwfc	(btemp4+1)^0,f,c
  3057   001258                     
  3058                           ;mem.c: 356:   (*pSegA).byte = pSegB - pSegA;
  3059   001258  502D               	movf	wtemp22^0,w,c
  3060   00125A  5C05               	subwf	wtemp2^0,w,c
  3061   00125C  C02D FFD9          	movff	btemp44,fsr2l
  3062   001260  C02E FFDA          	movff	btemp44+1,fsr2h
  3063   001264  6EDF               	movwf	indf2,c
  3064   001266                     
  3065                           ;mem.c: 358:   return (0x7F);
  3066   001266  0E7F               	movlw	127
  3067   001268  6E01               	movwf	btemp0^0,c
  3068   00126A  EF40  F009         	goto	l382
  3069   00126E                     l1815:
  3070                           
  3071                           ;mem.c: 363:  {;mem.c: 364:   return ((*pSegA).byte = uSum.byte);
  3072                           ;stkvar	_uSum @ sp[(-3)+2]
  3073   00126E  C02D FFD9          	movff	btemp44,fsr2l
  3074   001272  C02E FFDA          	movff	btemp44+1,fsr2h
  3075   001276  0EFF               	movlw	-1
  3076   001278  CFE3 FFDF          	movff	plusw1,indf2
  3077   00127C  50DF               	movf	indf2,w,c
  3078   00127E  6E01               	movwf	btemp0^0,c
  3079   001280                     l382:
  3080                           
  3081                           ; __SRAMmerge: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3082   001280  52E5               	movf	postdec1,f,c
  3083   001282  52E5               	movf	postdec1,f,c
  3084   001284  52E5               	movf	postdec1,f,c
  3085   001286  0012               	return		;funcret
  3086   001288                     __end_of__SRAMmerge:
  3087                           	callstack 0
  3088                           
  3089 ;; *************** function _config_adc *****************
  3090 ;; Defined at:
  3091 ;;		line 16 in file "io.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;  tad             1    btemp28  enum E3374
  3094 ;;  cclk            1    btemp29  enum E3384
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1  [STACK] void 
  3099 ;; Registers used:
  3100 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp28, btemp29, btemp55
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3106 ;;      Params:         0       0       0       0       0       0       0       0       0
  3107 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3108 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3109 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3110 ;;Total ram usage:        0 bytes
  3111 ;; Hardware stack levels used: 1
  3112 ;; Hardware stack levels required when called: 8
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_config_app
  3117 ;; This function uses a reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text11
  3121   001C20                     __ptext11:
  3122                           	callstack 0
  3123   001C20                     _config_adc:
  3124                           	callstack 20
  3125   001C20                     
  3126                           ;io.c: 16: void config_adc(tad_t tad, conversion_clock_t cclk);io.c: 17: {;io.c: 18:    
      +                           ADCON2bits.ACQT = tad;
  3127   001C20  C01D F038          	movff	btemp28,btemp55
  3128   001C24  4638               	rlncf	btemp55^0,f,c
  3129   001C26  4638               	rlncf	btemp55^0,f,c
  3130   001C28  4638               	rlncf	btemp55^0,f,c
  3131   001C2A  50C0               	movf	192,w,c	;volatile
  3132   001C2C  1838               	xorwf	btemp55^0,w,c
  3133   001C2E  0BC7               	andlw	-57
  3134   001C30  1838               	xorwf	btemp55^0,w,c
  3135   001C32  6EC0               	movwf	192,c	;volatile
  3136   001C34                     
  3137                           ;io.c: 19:     ADCON2bits.ADCS = cclk;
  3138   001C34  50C0               	movf	192,w,c	;volatile
  3139   001C36  181E               	xorwf	btemp29^0,w,c
  3140   001C38  0BF8               	andlw	-8
  3141   001C3A  181E               	xorwf	btemp29^0,w,c
  3142   001C3C  6EC0               	movwf	192,c	;volatile
  3143   001C3E                     
  3144                           ;io.c: 20:     ADCON2bits.ADFM = 1;
  3145   001C3E  8EC0               	bsf	192,7,c	;volatile
  3146   001C40                     
  3147                           ; _config_adc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3148   001C40  0012               	return		;funcret
  3149   001C42                     __end_of_config_adc:
  3150                           	callstack 0
  3151                           
  3152 ;; *************** function _adc_go *****************
  3153 ;; Defined at:
  3154 ;;		line 23 in file "io.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  go_done         2    wtemp14  int 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;		None
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  1  [STACK] void 
  3161 ;; Registers used:
  3162 ;;		wreg, fsr1l, fsr1h, btemp28, btemp29
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3168 ;;      Params:         0       0       0       0       0       0       0       0       0
  3169 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3171 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3172 ;;Total ram usage:        0 bytes
  3173 ;; Hardware stack levels used: 1
  3174 ;; Hardware stack levels required when called: 8
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_config_app
  3179 ;; This function uses a reentrant model
  3180 ;;
  3181                           
  3182                           	psect	text12
  3183   001CE6                     __ptext12:
  3184                           	callstack 0
  3185   001CE6                     _adc_go:
  3186                           	callstack 20
  3187   001CE6                     
  3188                           ;io.c: 23: void adc_go(int go_done);io.c: 24: {;io.c: 25:     ADCON0bits.ADON = go_done;
  3189   001CE6  B01D               	btfsc	wtemp14^0,0,c
  3190   001CE8  D002               	bra	u625
  3191   001CEA  90C2               	bcf	194,0,c	;volatile
  3192   001CEC  D001               	bra	u626
  3193   001CEE                     u625:
  3194   001CEE  80C2               	bsf	194,0,c	;volatile
  3195   001CF0                     u626:
  3196   001CF0                     
  3197                           ; _adc_go: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsiz
      +                          e = 0, vargsize = 0
  3198   001CF0  0012               	return		;funcret
  3199   001CF2                     __end_of_adc_go:
  3200                           	callstack 0
  3201                           
  3202 ;; *************** function _conf_timer_0 *****************
  3203 ;; Defined at:
  3204 ;;		line 7 in file "hardware.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;		None
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;		None
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1  [STACK] void 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3218 ;;      Params:         0       0       0       0       0       0       0       0       0
  3219 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3221 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3222 ;;Total ram usage:        0 bytes
  3223 ;; Hardware stack levels used: 1
  3224 ;; Hardware stack levels required when called: 8
  3225 ;; This function calls:
  3226 ;;		Nothing
  3227 ;; This function is called by:
  3228 ;;		_os_start
  3229 ;; This function uses a reentrant model
  3230 ;;
  3231                           
  3232                           	psect	text13
  3233   001C62                     __ptext13:
  3234                           	callstack 0
  3235   001C62                     _conf_timer_0:
  3236                           	callstack 21
  3237   001C62                     
  3238                           ;hardware.c: 10:     T0CONbits.T0CS = 0;
  3239   001C62  9AD5               	bcf	213,5,c	;volatile
  3240                           
  3241                           ;hardware.c: 11:     T0CONbits.PSA = 0;
  3242   001C64  96D5               	bcf	213,3,c	;volatile
  3243   001C66                     
  3244                           ;hardware.c: 12:     T0CONbits.T0PS = 0b110;
  3245   001C66  50D5               	movf	213,w,c	;volatile
  3246   001C68  0BF8               	andlw	-8
  3247   001C6A  0906               	iorlw	6
  3248   001C6C  6ED5               	movwf	213,c	;volatile
  3249                           
  3250                           ;hardware.c: 13:     TMR0 = 128;
  3251   001C6E  6AD7               	clrf	215,c	;volatile
  3252   001C70  0E80               	movlw	128
  3253   001C72  6ED6               	movwf	214,c	;volatile
  3254   001C74                     
  3255                           ;hardware.c: 14:     INTCONbits.TMR0IE = 1;
  3256   001C74  8AF2               	bsf	242,5,c	;volatile
  3257   001C76                     
  3258                           ;hardware.c: 15:     INTCONbits.TMR0IF = 0;
  3259   001C76  94F2               	bcf	242,2,c	;volatile
  3260   001C78                     
  3261                           ;hardware.c: 16:     T0CONbits.TMR0ON = 1;
  3262   001C78  8ED5               	bsf	213,7,c	;volatile
  3263   001C7A                     
  3264                           ; _conf_timer_0: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3265   001C7A  0012               	return		;funcret
  3266   001C7C                     __end_of_conf_timer_0:
  3267                           	callstack 0
  3268                           
  3269 ;; *************** function _conf_interrupts *****************
  3270 ;; Defined at:
  3271 ;;		line 19 in file "hardware.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;		None
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;		None
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1  [STACK] void 
  3278 ;; Registers used:
  3279 ;;		None
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3285 ;;      Params:         0       0       0       0       0       0       0       0       0
  3286 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3288 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3289 ;;Total ram usage:        0 bytes
  3290 ;; Hardware stack levels used: 1
  3291 ;; Hardware stack levels required when called: 8
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_os_start
  3296 ;; This function uses a reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text14
  3300   001D06                     __ptext14:
  3301                           	callstack 0
  3302   001D06                     _conf_interrupts:
  3303                           	callstack 21
  3304   001D06                     
  3305                           ;hardware.c: 21:     INTCONbits.PEIE = 1;
  3306   001D06  8CF2               	bsf	242,6,c	;volatile
  3307   001D08                     
  3308                           ; _conf_interrupts: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  3309   001D08  0012               	return		;funcret
  3310   001D0A                     __end_of_conf_interrupts:
  3311                           	callstack 0
  3312                           
  3313 ;; *************** function _SRAMInitHeap *****************
  3314 ;; Defined at:
  3315 ;;		line 276 in file "mem.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;		None
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  count           2    wtemp2   unsigned int 
  3320 ;;  pHeap           2  [STACK] PTR unsigned char 
  3321 ;;		 -> _uDynamicHeap(512), 
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  1  [STACK] void 
  3324 ;; Registers used:
  3325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp4, btemp5, btemp20, btemp21
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3331 ;;      Params:         0       0       0       0       0       0       0       0       0
  3332 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3333 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3334 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3335 ;;Total ram usage:        0 bytes
  3336 ;; Hardware stack levels used: 1
  3337 ;; Hardware stack levels required when called: 8
  3338 ;; This function calls:
  3339 ;;		Nothing
  3340 ;; This function is called by:
  3341 ;;		_os_start
  3342 ;; This function uses a reentrant model
  3343 ;;
  3344                           
  3345                           	psect	text15
  3346   00180C                     __ptext15:
  3347                           	callstack 0
  3348   00180C                     _SRAMInitHeap:
  3349                           	callstack 0
  3350                           
  3351                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3352   00180C  52E6               	movf	postinc1,f,c
  3353   00180E  52E6               	movf	postinc1,f,c
  3354   001810                     
  3355                           ;mem.c: 278:  unsigned char * pHeap;;mem.c: 279:       unsigned int count;;mem.c: 281:  
      +                          pHeap = _uDynamicHeap;
  3356                           ;stkvar	_pHeap @ sp[(-2)+0]
  3357   001810  0E02               	movlw	high __uDynamicHeap
  3358   001812  6E01               	movwf	btemp0^0,c
  3359   001814  0EFF               	movlw	-1
  3360   001816  C001 FFE3          	movff	btemp0,plusw1
  3361   00181A  0EB7               	movlw	low __uDynamicHeap
  3362   00181C  6E01               	movwf	btemp0^0,c
  3363   00181E  0EFE               	movlw	-2
  3364   001820  C001 FFE3          	movff	btemp0,plusw1
  3365   001824                     
  3366                           ;mem.c: 282:  count = 0x200 -1;
  3367   001824  0E01               	movlw	1
  3368   001826  6E06               	movwf	(btemp4+1)^0,c
  3369   001828  6805               	setf	btemp4^0,c
  3370   00182A                     l1427:
  3371                           
  3372                           ; _pHeap loaded to wtemp10
  3373                           ;stkvar	_pHeap @ sp[(-2)+0]
  3374                           ;register	wtemp10
  3375   00182A  0EFE               	movlw	-2
  3376   00182C  CFE3 F015          	movff	plusw1,btemp20
  3377   001830  0F01               	addlw	1
  3378   001832  CFE3 F016          	movff	plusw1,btemp21
  3379                           
  3380                           ;mem.c: 285:  {;mem.c: 286:   if (count > 0x7F)
  3381   001836  5006               	movf	(btemp4+1)^0,w,c
  3382   001838  E109               	bnz	u200
  3383   00183A  0E80               	movlw	128
  3384   00183C  5C05               	subwf	btemp4^0,w,c
  3385   00183E  A0D8               	btfss	status,0,c
  3386   001840  EF24  F00C         	goto	u201
  3387   001844  EF26  F00C         	goto	u200
  3388   001848                     u201:
  3389   001848  EF3C  F00C         	goto	l1435
  3390   00184C                     u200:
  3391   00184C                     
  3392                           ;mem.c: 287:   {;mem.c: 288:    *pHeap = 0x7F;
  3393   00184C  C015 FFD9          	movff	btemp20,fsr2l
  3394   001850  C016 FFDA          	movff	btemp20+1,fsr2h
  3395   001854  0E7F               	movlw	127
  3396   001856  6EDF               	movwf	indf2,c
  3397   001858                     
  3398                           ;mem.c: 289:    pHeap += 0x7F;
  3399   001858  0E7F               	movlw	127
  3400   00185A  2615               	addwf	btemp20^0,f,c
  3401   00185C  0E00               	movlw	0
  3402   00185E  2216               	addwfc	(btemp20+1)^0,f,c
  3403                           
  3404                           ;_pHeap stored from wtemp10
  3405                           ;register	wtemp10
  3406                           ;stkvar	_pHeap @ sp[(-2)+0]
  3407   001860  0EFF               	movlw	-1
  3408   001862  C016 FFE3          	movff	btemp21,plusw1
  3409   001866  0EFE               	movlw	-2
  3410   001868  C015 FFE3          	movff	btemp20,plusw1
  3411   00186C                     
  3412                           ;mem.c: 290:    count = count - 0x7F;
  3413   00186C  0E81               	movlw	129
  3414   00186E  2605               	addwf	btemp4^0,f,c
  3415   001870  0EFF               	movlw	255
  3416   001872  2206               	addwfc	(btemp4+1)^0,f,c
  3417                           
  3418                           ;mem.c: 291:   }
  3419   001874  EF15  F00C         	goto	l1427
  3420   001878                     l1435:
  3421                           
  3422                           ;mem.c: 293:   {;mem.c: 294:    *pHeap = count;
  3423   001878  C015 FFD9          	movff	btemp20,fsr2l
  3424   00187C  C016 FFDA          	movff	btemp20+1,fsr2h
  3425   001880  C005 FFDF          	movff	wtemp2,indf2
  3426   001884                     
  3427                           ;mem.c: 295:    *(pHeap + count) = 0;
  3428   001884  5005               	movf	btemp4^0,w,c
  3429   001886  2415               	addwf	btemp20^0,w,c
  3430   001888  6ED9               	movwf	fsr2l,c
  3431   00188A  5006               	movf	(btemp4+1)^0,w,c
  3432   00188C  2016               	addwfc	(btemp20+1)^0,w,c
  3433   00188E  6EDA               	movwf	fsr2h,c
  3434   001890  6ADF               	clrf	indf2,c
  3435   001892                     
  3436                           ; _SRAMInitHeap: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3437   001892  52E5               	movf	postdec1,f,c
  3438   001894  52E5               	movf	postdec1,f,c
  3439   001896  0012               	return		;funcret
  3440   001898                     __end_of_SRAMInitHeap:
  3441                           	callstack 0
  3442                           
  3443 ;; *************** function _os_config *****************
  3444 ;; Defined at:
  3445 ;;		line 12 in file "kernel.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;		None
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;		None
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1  [STACK] void 
  3452 ;; Registers used:
  3453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp20, btemp21, btemp22, btemp23, prodl, prodh
      +, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3459 ;;      Params:         0       0       0       0       0       0       0       0       0
  3460 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3461 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3462 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3463 ;;Total ram usage:        0 bytes
  3464 ;; Hardware stack levels used: 1
  3465 ;; Hardware stack levels required when called: 9
  3466 ;; This function calls:
  3467 ;;		_os_create_task
  3468 ;; This function is called by:
  3469 ;;		_main
  3470 ;; This function uses a reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text16
  3474   001BF8                     __ptext16:
  3475                           	callstack 0
  3476   001BF8                     _os_config:
  3477                           	callstack 21
  3478   001BF8                     
  3479                           ;kernel.c: 14:     readyQueue.readyQueueSize = 0;
  3480   001BF8  0E00               	movlw	0
  3481   001BFA  CFE8 F2B4          	movff	wreg,_readyQueue+530
  3482                           
  3483                           ;kernel.c: 15:     readyQueue.taskRunning = 0;
  3484   001BFE  0E00               	movlw	0
  3485   001C00  CFE8 F2B5          	movff	wreg,_readyQueue+531
  3486   001C04  0E00               	movlw	0
  3487   001C06  CFE8 F2B6          	movff	wreg,_readyQueue+532
  3488   001C0A                     
  3489                           ;kernel.c: 18:     os_create_task(0, os_idle_task, 1);
  3490                           ;register	btemp20
  3491   001C0A  0E00               	movlw	0
  3492   001C0C  6E15               	movwf	btemp20^0,c
  3493                           
  3494                           ;register	btemp21
  3495   001C0E  0E01               	movlw	1
  3496   001C10  6E16               	movwf	btemp21^0,c
  3497                           
  3498                           ;register	wtemp11
  3499   001C12  0E9C               	movlw	low _os_idle_task
  3500   001C14  6E17               	movwf	wtemp11^0,c
  3501   001C16  0E1B               	movlw	high _os_idle_task
  3502   001C18  6E18               	movwf	btemp23^0,c
  3503   001C1A  EC63  F00B         	call	_os_create_task	;# 
  3504   001C1E                     
  3505                           ; _os_config: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  3506   001C1E  0012               	return		;funcret
  3507   001C20                     __end_of_os_config:
  3508                           	callstack 0
  3509                           
  3510 ;; *************** function _os_create_task *****************
  3511 ;; Defined at:
  3512 ;;		line 9 in file "syscall.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;  id              1    btemp20  unsigned char 
  3515 ;;  task_f          2    wtemp11  PTR FTN()void 
  3516 ;;		 -> os_idle_task(1), tarefa_monitoramento_bateria(1), tarefa_leitura_sensores(1), tarefa_controle_motores(1), 
  3517 ;;		 -> tarefa_controle_central(1), 
  3518 ;;  prior           1    btemp21  unsigned char 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  new_task      106  [STACK] struct tcb
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  1  [STACK] void 
  3523 ;; Registers used:
  3524 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp20, btemp21, btemp22, btemp23, prodl, prodh
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3530 ;;      Params:         0       0       0       0       0       0       0       0       0
  3531 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3532 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3533 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3534 ;;Total ram usage:        0 bytes
  3535 ;; Hardware stack levels used: 1
  3536 ;; Hardware stack levels required when called: 8
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_main
  3541 ;;		_os_config
  3542 ;; This function uses a reentrant model
  3543 ;;
  3544                           
  3545                           	psect	text17
  3546   0016C6                     __ptext17:
  3547                           	callstack 0
  3548   0016C6                     _os_create_task:
  3549                           	callstack 0
  3550                           
  3551                           ; autosize = 106, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 v
      +                          argsize = 0, retsize = 0 argfudge = 0
  3552   0016C6  0E6A               	movlw	106
  3553   0016C8  26E1               	addwf	fsr1l,f,c
  3554   0016CA  0E00               	movlw	0
  3555   0016CC  22E2               	addwfc	fsr1h,f,c
  3556   0016CE                     
  3557                           ;syscall.c: 9: void os_create_task(uint8_t id, f_ptr task_f, uint8_t prior);syscall.c: 1
      +                          0: {;syscall.c: 11:     tcb_t new_task;;syscall.c: 13:     new_task.task_id = id;
  3558                           ;stkvar	_new_task @ sp[(-106)+0]
  3559   0016CE  0E96               	movlw	-106
  3560   0016D0  C015 FFE3          	movff	btemp20,plusw1
  3561   0016D4                     
  3562                           ;syscall.c: 14:     new_task.task_func = task_f;
  3563                           ;stkvar	_new_task @ sp[(-106)+0]
  3564   0016D4  0E97               	movlw	151
  3565   0016D6  24E1               	addwf	fsr1l,w,c
  3566   0016D8  6ED9               	movwf	fsr2l,c
  3567   0016DA  0EFF               	movlw	255
  3568   0016DC  20E2               	addwfc	fsr1h,w,c
  3569   0016DE  6EDA               	movwf	fsr2h,c
  3570   0016E0  C017 FFDE          	movff	btemp22,postinc2
  3571   0016E4  C018 FFDD          	movff	btemp22+1,postdec2
  3572   0016E8                     
  3573                           ;syscall.c: 15:     new_task.task_priority = prior;
  3574                           ;stkvar	_new_task @ sp[(-106)+0]
  3575   0016E8  0E9A               	movlw	154
  3576   0016EA  24E1               	addwf	fsr1l,w,c
  3577   0016EC  6ED9               	movwf	fsr2l,c
  3578   0016EE  0EFF               	movlw	255
  3579   0016F0  20E2               	addwfc	fsr1h,w,c
  3580   0016F2  6EDA               	movwf	fsr2h,c
  3581   0016F4  C016 FFDF          	movff	btemp21,indf2
  3582   0016F8                     
  3583                           ;syscall.c: 16:     new_task.task_state = READY;
  3584                           ;stkvar	_new_task @ sp[(-106)+0]
  3585   0016F8  0E99               	movlw	153
  3586   0016FA  24E1               	addwf	fsr1l,w,c
  3587   0016FC  6ED9               	movwf	fsr2l,c
  3588   0016FE  0EFF               	movlw	255
  3589   001700  20E2               	addwfc	fsr1h,w,c
  3590   001702  6EDA               	movwf	fsr2h,c
  3591   001704  6ADF               	clrf	indf2,c
  3592   001706                     
  3593                           ;syscall.c: 18:     new_task.BSR_reg = 0;
  3594                           ;stkvar	_new_task @ sp[(-106)+0]
  3595   001706  0E9C               	movlw	156
  3596   001708  24E1               	addwf	fsr1l,w,c
  3597   00170A  6ED9               	movwf	fsr2l,c
  3598   00170C  0EFF               	movlw	255
  3599   00170E  20E2               	addwfc	fsr1h,w,c
  3600   001710  6EDA               	movwf	fsr2h,c
  3601   001712  6ADF               	clrf	indf2,c
  3602   001714                     
  3603                           ;syscall.c: 19:     new_task.STATUS_reg = 0;
  3604                           ;stkvar	_new_task @ sp[(-106)+0]
  3605   001714  0E9E               	movlw	158
  3606   001716  24E1               	addwf	fsr1l,w,c
  3607   001718  6ED9               	movwf	fsr2l,c
  3608   00171A  0EFF               	movlw	255
  3609   00171C  20E2               	addwfc	fsr1h,w,c
  3610   00171E  6EDA               	movwf	fsr2h,c
  3611   001720  6ADF               	clrf	indf2,c
  3612   001722                     
  3613                           ;syscall.c: 20:     new_task.WORK_reg = 0;
  3614                           ;stkvar	_new_task @ sp[(-106)+0]
  3615   001722  0E9D               	movlw	157
  3616   001724  24E1               	addwf	fsr1l,w,c
  3617   001726  6ED9               	movwf	fsr2l,c
  3618   001728  0EFF               	movlw	255
  3619   00172A  20E2               	addwfc	fsr1h,w,c
  3620   00172C  6EDA               	movwf	fsr2h,c
  3621   00172E  6ADF               	clrf	indf2,c
  3622   001730                     
  3623                           ;syscall.c: 21:     new_task.task_sp = 0;
  3624                           ;stkvar	_new_task @ sp[(-106)+0]
  3625   001730  0EFF               	movlw	255
  3626   001732  24E1               	addwf	fsr1l,w,c
  3627   001734  6ED9               	movwf	fsr2l,c
  3628   001736  0EFF               	movlw	255
  3629   001738  20E2               	addwfc	fsr1h,w,c
  3630   00173A  6EDA               	movwf	fsr2h,c
  3631   00173C  6ADF               	clrf	indf2,c
  3632   00173E                     
  3633                           ;syscall.c: 24:     readyQueue.readyQueue[readyQueue.readyQueueSize++] = new_task;
  3634                           ;stkvar	_new_task @ sp[(-106)+0]
  3635   00173E  0E96               	movlw	150
  3636   001740  24E1               	addwf	fsr1l,w,c
  3637   001742  6ED9               	movwf	fsr2l,c
  3638   001744  0EFF               	movlw	255
  3639   001746  20E2               	addwfc	fsr1h,w,c
  3640   001748  6EDA               	movwf	fsr2h,c
  3641   00174A  EE02  F0B4         	lfsr	0,_readyQueue+530
  3642   00174E  50EF               	movf	indf0,w,c
  3643   001750  0D6A               	mullw	106
  3644   001752  0EA2               	movlw	low _readyQueue
  3645   001754  24F3               	addwf	243,w,c
  3646   001756  6EE9               	movwf	fsr0l,c
  3647   001758  0E00               	movlw	high _readyQueue
  3648   00175A  20F4               	addwfc	prodh,w,c
  3649   00175C  6EEA               	movwf	fsr0h,c
  3650   00175E  0E69               	movlw	105
  3651   001760                     u191:
  3652   001760  CFDB FFEB          	movff	plusw2,plusw0
  3653   001764  06E8               	decf	wreg,f,c
  3654   001766  E2FC               	bc	u191
  3655   001768  C2B4  FFE8         	movff	_readyQueue+530,wreg
  3656   00176C  0F01               	addlw	1
  3657   00176E  CFE8 F2B4          	movff	wreg,_readyQueue+530
  3658   001772                     
  3659                           ; _os_create_task: autosize = 106, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3660   001772  0E96               	movlw	150
  3661   001774  26E1               	addwf	fsr1l,f,c
  3662   001776  0EFF               	movlw	255
  3663   001778  22E2               	addwfc	fsr1h,f,c
  3664   00177A  0012               	return		;funcret
  3665   00177C                     __end_of_os_create_task:
  3666                           	callstack 0
  3667                           
  3668 ;; *************** function _os_idle_task *****************
  3669 ;; Defined at:
  3670 ;;		line 43 in file "kernel.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1  [STACK] void 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0, btemp55
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0
  3685 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3687 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3688 ;;Total ram usage:        0 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; Hardware stack levels required when called: 3
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_os_config
  3695 ;; This function uses a reentrant model
  3696 ;;
  3697                           
  3698                           	psect	text18
  3699   001B9C                     __ptext18:
  3700                           	callstack 0
  3701   001B9C                     _os_idle_task:
  3702                           	callstack 22
  3703   001B9C                     
  3704                           ;kernel.c: 45:     TRISDbits.RD3 = 0;
  3705   001B9C  9695               	bcf	149,3,c	;volatile
  3706   001B9E                     l1677:
  3707                           
  3708                           ;kernel.c: 49:         LATDbits.LD3 = ~PORTDbits.RD3;
  3709   001B9E  B683               	btfsc	131,3,c	;volatile
  3710   001BA0  EFD4  F00D         	goto	u42_21
  3711   001BA4  EFD7  F00D         	goto	u42_20
  3712   001BA8                     u42_21:
  3713   001BA8  0E01               	movlw	1
  3714   001BAA  EFD8  F00D         	goto	u42_26
  3715   001BAE                     u42_20:
  3716   001BAE  0E00               	movlw	0
  3717   001BB0                     u42_26:
  3718   001BB0  0AFF               	xorlw	255
  3719   001BB2  6E38               	movwf	btemp55^0,c
  3720   001BB4  4638               	rlncf	btemp55^0,f,c
  3721   001BB6  4638               	rlncf	btemp55^0,f,c
  3722   001BB8  4638               	rlncf	btemp55^0,f,c
  3723   001BBA  508C               	movf	140,w,c	;volatile
  3724   001BBC  1838               	xorwf	btemp55^0,w,c
  3725   001BBE  0BF7               	andlw	-9
  3726   001BC0  1838               	xorwf	btemp55^0,w,c
  3727   001BC2  6E8C               	movwf	140,c	;volatile
  3728   001BC4  EFCF  F00D         	goto	l1677
  3729                           
  3730                           ; _os_idle_task: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3731   001BC8  0012               	return		;funcret
  3732   001BCA                     __end_of_os_idle_task:
  3733                           	callstack 0
  3734                           
  3735 ;; *************** function _tarefa_controle_central *****************
  3736 ;; Defined at:
  3737 ;;		line 44 in file "user_app.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;		None
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;  base_speed      2    wtemp2   unsigned short 
  3742 ;;  dados_sensor    4  [STACK] struct .
  3743 ;;  nivel_bateri    2  [STACK] int 
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  1  [STACK] void 
  3746 ;; Registers used:
  3747 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp5, btemp12, btemp13
      +, btemp14, btemp15, btemp20, btemp28, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, p
      +rodl, prodh, cstack
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3753 ;;      Params:         0       0       0       0       0       0       0       0       0
  3754 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3755 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3756 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3757 ;;Total ram usage:        0 bytes
  3758 ;; Hardware stack levels used: 1
  3759 ;; Hardware stack levels required when called: 7
  3760 ;; This function calls:
  3761 ;;		_mutex_lock
  3762 ;;		_mutex_unlock
  3763 ;;		_os_delay
  3764 ;;		_read_pipe
  3765 ;; This function is called by:
  3766 ;;		_main
  3767 ;; This function uses a reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text19
  3771   001288                     __ptext19:
  3772                           	callstack 0
  3773   001288                     _tarefa_controle_central:
  3774                           	callstack 0
  3775                           
  3776                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3777   001288  0E06               	movlw	6
  3778   00128A  26E1               	addwf	fsr1l,f,c
  3779   00128C  0E00               	movlw	0
  3780   00128E  22E2               	addwfc	fsr1h,f,c
  3781   001290                     l113:
  3782   001290                     
  3783                           ;user_app.c: 51:         read_pipe(&pipe_sensores, &dados_sensores, sizeof(sensor_data_t
      +                          ));
  3784                           ;register	btemp12
  3785   001290  0E81               	movlw	low _pipe_sensores
  3786   001292  6E0D               	movwf	btemp12^0,c
  3787                           
  3788                           ;register	btemp13
  3789   001294  0E04               	movlw	4
  3790   001296  6E0E               	movwf	btemp13^0,c
  3791                           
  3792                           ;stkvar	_dados_sensores @ sp[(-6)+0]
  3793   001298  0EFA               	movlw	250
  3794   00129A  24E1               	addwf	fsr1l,w,c
  3795   00129C  6E37               	movwf	btemp54^0,c
  3796   00129E  0EFF               	movlw	255
  3797   0012A0  20E2               	addwfc	fsr1h,w,c
  3798   0012A2  6E38               	movwf	btemp55^0,c
  3799                           
  3800                           ;register	wtemp7
  3801   0012A4  C037 F00F          	movff	btemp54,btemp14
  3802   0012A8  C038 F010          	movff	btemp55,btemp15
  3803   0012AC  EC31  F00A         	call	_read_pipe	;wreg free
  3804                           
  3805                           ;user_app.c: 52:         read_pipe(&pipe_bateria, &nivel_bateria, sizeof(int));
  3806                           ;register	btemp12
  3807   0012B0  0E60               	movlw	low _pipe_bateria
  3808   0012B2  6E0D               	movwf	btemp12^0,c
  3809                           
  3810                           ;register	btemp13
  3811   0012B4  0E02               	movlw	2
  3812   0012B6  6E0E               	movwf	btemp13^0,c
  3813                           
  3814                           ;stkvar	_nivel_bateria @ sp[(-6)+4]
  3815   0012B8  0EFE               	movlw	254
  3816   0012BA  24E1               	addwf	fsr1l,w,c
  3817   0012BC  6E37               	movwf	btemp54^0,c
  3818   0012BE  0EFF               	movlw	255
  3819   0012C0  20E2               	addwfc	fsr1h,w,c
  3820   0012C2  6E38               	movwf	btemp55^0,c
  3821                           
  3822                           ;register	wtemp7
  3823   0012C4  C037 F00F          	movff	btemp54,btemp14
  3824   0012C8  C038 F010          	movff	btemp55,btemp15
  3825   0012CC  EC31  F00A         	call	_read_pipe	;wreg free
  3826   0012D0                     
  3827                           ;user_app.c: 54:         if (nivel_bateria < 200) {
  3828                           ;stkvar	_nivel_bateria @ sp[(-6)+4]
  3829   0012D0  0EFF               	movlw	-1
  3830   0012D2  BEE3               	btfsc	plusw1,7,c
  3831   0012D4  EF7B  F009         	goto	u87_20
  3832   0012D8  0EFF               	movlw	-1
  3833   0012DA  50E3               	movf	plusw1,w,c
  3834   0012DC  E10A               	bnz	u87_21
  3835   0012DE  0EFE               	movlw	-2
  3836   0012E0  CFE3 F001          	movff	plusw1,btemp0
  3837   0012E4  0EC8               	movlw	200
  3838   0012E6  5E01               	subwf	btemp0^0,f,c
  3839   0012E8  B0D8               	btfsc	status,0,c
  3840   0012EA  EF79  F009         	goto	u87_21
  3841   0012EE  EF7B  F009         	goto	u87_20
  3842   0012F2                     u87_21:
  3843   0012F2  EF89  F009         	goto	l2155
  3844   0012F6                     u87_20:
  3845   0012F6                     
  3846                           ;user_app.c: 55:             velocidade_motores.motor1_speed = 50;
  3847   0012F6  6A3A               	clrf	(_velocidade_motores+1)^0,c
  3848   0012F8  0E32               	movlw	50
  3849   0012FA  6E39               	movwf	_velocidade_motores^0,c
  3850                           
  3851                           ;user_app.c: 56:             velocidade_motores.motor2_speed = 50;
  3852   0012FC  6A3C               	clrf	(_velocidade_motores+3)^0,c
  3853   0012FE  0E32               	movlw	50
  3854   001300  6E3B               	movwf	(_velocidade_motores+2)^0,c
  3855                           
  3856                           ;user_app.c: 57:             velocidade_motores.motor3_speed = 50;
  3857   001302  6A3E               	clrf	(_velocidade_motores+5)^0,c
  3858   001304  0E32               	movlw	50
  3859   001306  6E3D               	movwf	(_velocidade_motores+4)^0,c
  3860                           
  3861                           ;user_app.c: 58:             velocidade_motores.motor4_speed = 50;
  3862   001308  6A40               	clrf	(_velocidade_motores+7)^0,c
  3863   00130A  0E32               	movlw	50
  3864   00130C  6E3F               	movwf	(_velocidade_motores+6)^0,c
  3865                           
  3866                           ;user_app.c: 59:         } else {
  3867   00130E  EFAD  F009         	goto	l2165
  3868   001312                     l2155:
  3869                           
  3870                           ;user_app.c: 61:             uint16_t base_speed = (uint16_t)dados_sensores.acelerometro
      +                           / 4;
  3871                           ;stkvar	_dados_sensores @ sp[(-6)+0]
  3872   001312  0EFC               	movlw	252
  3873   001314  24E1               	addwf	fsr1l,w,c
  3874   001316  6ED9               	movwf	fsr2l,c
  3875   001318  0EFF               	movlw	255
  3876   00131A  20E2               	addwfc	fsr1h,w,c
  3877   00131C  6EDA               	movwf	fsr2h,c
  3878   00131E  CFDE F037          	movff	postinc2,btemp54
  3879   001322  CFDD F038          	movff	postdec2,btemp55
  3880   001326  90D8               	bcf	status,0,c
  3881   001328  3238               	rrcf	btemp55^0,f,c
  3882   00132A  3237               	rrcf	btemp54^0,f,c
  3883   00132C  90D8               	bcf	status,0,c
  3884   00132E  3238               	rrcf	btemp55^0,f,c
  3885   001330  3237               	rrcf	btemp54^0,f,c
  3886   001332  C037 F005          	movff	btemp54,btemp4
  3887   001336  C038 F006          	movff	btemp55,btemp4+1
  3888   00133A                     
  3889                           ;user_app.c: 62:             velocidade_motores.motor1_speed = base_speed;
  3890   00133A  C005 F039          	movff	btemp4,_velocidade_motores
  3891   00133E  C006 F03A          	movff	btemp4+1,_velocidade_motores+1
  3892   001342                     
  3893                           ;user_app.c: 63:             velocidade_motores.motor2_speed = base_speed;
  3894   001342  C005 F03B          	movff	btemp4,_velocidade_motores+2
  3895   001346  C006 F03C          	movff	btemp4+1,_velocidade_motores+3
  3896   00134A                     
  3897                           ;user_app.c: 64:             velocidade_motores.motor3_speed = base_speed;
  3898   00134A  C005 F03D          	movff	btemp4,_velocidade_motores+4
  3899   00134E  C006 F03E          	movff	btemp4+1,_velocidade_motores+5
  3900   001352                     
  3901                           ;user_app.c: 65:             velocidade_motores.motor4_speed = base_speed;
  3902   001352  C005 F03F          	movff	btemp4,_velocidade_motores+6
  3903   001356  C006 F040          	movff	btemp4+1,_velocidade_motores+7
  3904   00135A                     l2165:
  3905                           
  3906                           ;user_app.c: 68:         mutex_lock(&mutex_motores);
  3907                           ;register	btemp12
  3908   00135A  0E41               	movlw	low _mutex_motores
  3909   00135C  6E0D               	movwf	btemp12^0,c
  3910   00135E  EC7E  F00E         	call	_mutex_lock	;wreg free
  3911   001362                     
  3912                           ;user_app.c: 69:         mutex_unlock(&mutex_motores);
  3913                           ;register	btemp12
  3914   001362  0E41               	movlw	low _mutex_motores
  3915   001364  6E0D               	movwf	btemp12^0,c
  3916   001366  EC79  F00E         	call	_mutex_unlock	;wreg free
  3917   00136A                     
  3918                           ;user_app.c: 71:         os_delay(100);
  3919                           ;register	btemp12
  3920   00136A  0E64               	movlw	100
  3921   00136C  6E0D               	movwf	btemp12^0,c
  3922   00136E  ECBB  F006         	call	_os_delay	;wreg free
  3923   001372  EF48  F009         	goto	l113
  3924                           
  3925                           ; _tarefa_controle_central: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 0, argsize = 0, vargsize = 0
  3926   001376  0EFA               	movlw	250
  3927   001378  26E1               	addwf	fsr1l,f,c
  3928   00137A  0EFF               	movlw	255
  3929   00137C  22E2               	addwfc	fsr1h,f,c
  3930   00137E  0012               	return		;funcret
  3931   001380                     __end_of_tarefa_controle_central:
  3932                           	callstack 0
  3933                           
  3934 ;; *************** function _read_pipe *****************
  3935 ;; Defined at:
  3936 ;;		line 20 in file "pipe.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;  p               1    btemp12  PTR struct pipe
  3939 ;;		 -> pipe_bateria(33), pipe_sensores(33), 
  3940 ;;  buffer          2    wtemp7   PTR void 
  3941 ;;		 -> nivel_bateria(2), dados_sensores(4), 
  3942 ;;  size            1    btemp13  unsigned char 
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;  size            1    btemp13  unsigned char 
  3945 ;;  p               1    btemp12  PTR struct pipe
  3946 ;;		 -> pipe_bateria(33), pipe_sensores(33), 
  3947 ;;  i               1  [STACK] unsigned char 
  3948 ;;  data_buffer     2  [STACK] PTR unsigned char 
  3949 ;;		 -> nivel_bateria(2), dados_sensores(4), 
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1  [STACK] void 
  3952 ;; Registers used:
  3953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp13, btemp1
      +4, btemp15, btemp20, btemp28, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, pr
      +odh, cstack
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3959 ;;      Params:         0       0       0       0       0       0       0       0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3962 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3963 ;;Total ram usage:        0 bytes
  3964 ;; Hardware stack levels used: 1
  3965 ;; Hardware stack levels required when called: 4
  3966 ;; This function calls:
  3967 ;;		___awmod
  3968 ;;		_sem_post
  3969 ;;		_sem_wait
  3970 ;; This function is called by:
  3971 ;;		_tarefa_controle_central
  3972 ;; This function uses a reentrant model
  3973 ;;
  3974                           
  3975                           	psect	text20
  3976   001462                     __ptext20:
  3977                           	callstack 0
  3978   001462                     _read_pipe:
  3979                           	callstack 0
  3980                           
  3981                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3982   001462  52E6               	movf	postinc1,f,c
  3983   001464  52E6               	movf	postinc1,f,c
  3984   001466  52E6               	movf	postinc1,f,c
  3985   001468                     
  3986                           ;pipe.c: 20: void read_pipe(pipe_t *p, void *buffer, uint8_t size);pipe.c: 21: {;pipe.c:
      +                           22:     char *data_buffer = (char*)buffer;
  3987                           ;stkvar	_data_buffer @ sp[(-3)+1]
  3988   001468  0EFF               	movlw	-1
  3989   00146A  C010 FFE3          	movff	btemp15,plusw1
  3990   00146E  0EFE               	movlw	-2
  3991   001470  C00F FFE3          	movff	btemp14,plusw1
  3992   001474                     
  3993                           ;pipe.c: 23:     for (uint8_t i = 0; i < size; i++) {
  3994   001474  6A05               	clrf	btemp4^0,c
  3995   001476  EF8F  F00A         	goto	l2071
  3996   00147A                     l340:
  3997                           
  3998                           ;pipe.c: 24:         (INTCONbits.GIE = 0);
  3999   00147A  9EF2               	bcf	242,7,c	;volatile
  4000                           
  4001                           ;_i stored from btemp4
  4002                           ;register	btemp4
  4003                           ;stkvar	_i @ sp[(-3)+0]
  4004   00147C  0EFD               	movlw	-3
  4005   00147E  C005 FFE3          	movff	btemp4,plusw1
  4006   001482                     
  4007                           ;pipe.c: 25:         sem_wait(&p->pipe_sem_read);
  4008   001482  500D               	movf	btemp12^0,w,c
  4009   001484  0F05               	addlw	5
  4010                           
  4011                           ;register	btemp20
  4012   001486  6E15               	movwf	btemp20^0,c
  4013   001488  EC60  F005         	call	_sem_wait	;wreg free
  4014   00148C                     
  4015                           ;pipe.c: 26:         data_buffer[i] = p->pipe_data[p->pipe_pos_read];
  4016   00148C  500D               	movf	btemp12^0,w,c
  4017   00148E  6ED9               	movwf	fsr2l,c
  4018   001490  6ADA               	clrf	fsr2h,c
  4019   001492  50DF               	movf	indf2,w,c
  4020   001494  6E38               	movwf	btemp55^0,c
  4021   001496  500D               	movf	btemp12^0,w,c
  4022   001498  6ED9               	movwf	fsr2l,c
  4023   00149A  6ADA               	clrf	fsr2h,c
  4024   00149C  0E02               	movlw	2
  4025   00149E  26D9               	addwf	fsr2l,f,c
  4026   0014A0  CFDE F035          	movff	postinc2,btemp52
  4027   0014A4  CFDD F036          	movff	postdec2,btemp53
  4028   0014A8  5038               	movf	btemp55^0,w,c
  4029   0014AA  2435               	addwf	btemp52^0,w,c
  4030   0014AC  6ED9               	movwf	fsr2l,c
  4031   0014AE  0E00               	movlw	0
  4032   0014B0  2036               	addwfc	btemp53^0,w,c
  4033   0014B2  6EDA               	movwf	fsr2h,c
  4034                           
  4035                           ;stkvar	_i @ sp[(-3)+0]
  4036   0014B4  0EFD               	movlw	-3
  4037   0014B6  CFE3 F038          	movff	plusw1,btemp55
  4038                           
  4039                           ;stkvar	_data_buffer @ sp[(-3)+1]
  4040   0014BA  0EFE               	movlw	-2
  4041   0014BC  CFE3 F035          	movff	plusw1,btemp52
  4042   0014C0  0F01               	addlw	1
  4043   0014C2  CFE3 F036          	movff	plusw1,btemp53
  4044   0014C6  5038               	movf	btemp55^0,w,c
  4045   0014C8  2435               	addwf	btemp52^0,w,c
  4046   0014CA  6EE9               	movwf	fsr0l,c
  4047   0014CC  0E00               	movlw	0
  4048   0014CE  2036               	addwfc	btemp53^0,w,c
  4049   0014D0  6EEA               	movwf	fsr0h,c
  4050   0014D2  CFDF FFEF          	movff	indf2,indf0
  4051   0014D6                     
  4052                           ;pipe.c: 27:         p->pipe_pos_read = (p->pipe_pos_read + 1) % p->pipe_size;
  4053   0014D6  500D               	movf	btemp12^0,w,c
  4054   0014D8  6ED9               	movwf	fsr2l,c
  4055   0014DA  6ADA               	clrf	fsr2h,c
  4056   0014DC  500D               	movf	btemp12^0,w,c
  4057   0014DE  6EE9               	movwf	fsr0l,c
  4058   0014E0  6AEA               	clrf	fsr0h,c
  4059   0014E2  50EF               	movf	indf0,w,c
  4060   0014E4  6E38               	movwf	btemp55^0,c
  4061   0014E6  0E01               	movlw	1
  4062   0014E8  2438               	addwf	btemp55^0,w,c
  4063                           
  4064                           ;register	wtemp14
  4065   0014EA  6E1D               	movwf	btemp28^0,c
  4066   0014EC  6A1E               	clrf	(btemp28+1)^0,c
  4067   0014EE  0E00               	movlw	0
  4068   0014F0  221E               	addwfc	(btemp28+1)^0,f,c
  4069   0014F2  500D               	movf	btemp12^0,w,c
  4070   0014F4  6EE9               	movwf	fsr0l,c
  4071   0014F6  6AEA               	clrf	fsr0h,c
  4072   0014F8  0E04               	movlw	4
  4073   0014FA  26E9               	addwf	fsr0l,f,c
  4074   0014FC  50EF               	movf	indf0,w,c
  4075                           
  4076                           ;register	wtemp15
  4077   0014FE  6E1F               	movwf	btemp30^0,c
  4078   001500  6A20               	clrf	btemp31^0,c
  4079   001502  EC04  F00B         	call	___awmod	;wreg free
  4080   001506  5001               	movf	btemp0^0,w,c
  4081   001508  6EDF               	movwf	indf2,c
  4082   00150A                     
  4083                           ;pipe.c: 28:         sem_post(&p->pipe_sem_write);
  4084   00150A  500D               	movf	btemp12^0,w,c
  4085   00150C  0F13               	addlw	19
  4086                           
  4087                           ;register	btemp20
  4088   00150E  6E15               	movwf	btemp20^0,c
  4089   001510  ECBE  F00B         	call	_sem_post	;wreg free
  4090   001514                     
  4091                           ;pipe.c: 29:         (INTCONbits.GIE = 1);
  4092   001514  8EF2               	bsf	242,7,c	;volatile
  4093   001516                     
  4094                           ; _i loaded to btemp4
  4095                           ;stkvar	_i @ sp[(-3)+0]
  4096                           ;register	btemp4
  4097   001516  0EFD               	movlw	-3
  4098   001518  CFE3 F005          	movff	plusw1,btemp4
  4099                           
  4100                           ;pipe.c: 30:     }
  4101   00151C  2A05               	incf	btemp4^0,f,c
  4102   00151E                     l2071:
  4103   00151E  500E               	movf	btemp13^0,w,c
  4104   001520  5C05               	subwf	btemp4^0,w,c
  4105   001522  A0D8               	btfss	status,0,c
  4106   001524  EF96  F00A         	goto	u79_21
  4107   001528  EF98  F00A         	goto	u79_20
  4108   00152C                     u79_21:
  4109   00152C  EF3D  F00A         	goto	l340
  4110   001530                     u79_20:
  4111   001530                     
  4112                           ; _read_pipe: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4113   001530  52E5               	movf	postdec1,f,c
  4114   001532  52E5               	movf	postdec1,f,c
  4115   001534  52E5               	movf	postdec1,f,c
  4116   001536  0012               	return		;funcret
  4117   001538                     __end_of_read_pipe:
  4118                           	callstack 0
  4119                           
  4120 ;; *************** function _os_delay *****************
  4121 ;; Defined at:
  4122 ;;		line 27 in file "syscall.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  time            1    btemp12  unsigned char 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1  [STACK] void 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp50, btemp5
      +1, btemp52, btemp53, btemp54, btemp55, prodl, prodh
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4136 ;;      Params:         0       0       0       0       0       0       0       0       0
  4137 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4139 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4140 ;;Total ram usage:        0 bytes
  4141 ;; Hardware stack levels used: 1
  4142 ;; Hardware stack levels required when called: 5
  4143 ;; This function calls:
  4144 ;;		_scheduler
  4145 ;; This function is called by:
  4146 ;;		_tarefa_controle_central
  4147 ;;		_tarefa_controle_motores
  4148 ;;		_tarefa_leitura_sensores
  4149 ;;		_tarefa_monitoramento_bateria
  4150 ;; This function uses a reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text21
  4154   000D76                     __ptext21:
  4155                           	callstack 0
  4156   000D76                     _os_delay:
  4157                           	callstack 19
  4158   000D76                     
  4159                           ;syscall.c: 27: void os_delay(uint8_t time);syscall.c: 28: {;syscall.c: 29:     (INTCONb
      +                          its.GIE = 0);
  4160   000D76  9EF2               	bcf	242,7,c	;volatile
  4161   000D78                     
  4162                           ;syscall.c: 31:     readyQueue.taskRunning->task_time_to_waiting = time;
  4163   000D78  EE22  F0B5         	lfsr	2,_readyQueue+531
  4164   000D7C  EE00 F005          	lfsr	0,5
  4165   000D80  50DE               	movf	postinc2,w,c
  4166   000D82  26E9               	addwf	fsr0l,f,c
  4167   000D84  50DD               	movf	postdec2,w,c
  4168   000D86  22EA               	addwfc	fsr0h,f,c
  4169   000D88  C00D FFEF          	movff	btemp12,indf0
  4170   000D8C  EE22  F0B5         	lfsr	2,_readyQueue+531
  4171   000D90  EE00 F003          	lfsr	0,3
  4172   000D94  50DE               	movf	postinc2,w,c
  4173   000D96  26E9               	addwf	fsr0l,f,c
  4174   000D98  50DD               	movf	postdec2,w,c
  4175   000D9A  22EA               	addwfc	fsr0h,f,c
  4176   000D9C  04EE               	decf	postinc0,w,c
  4177   000D9E  A4D8               	btfss	status,2,c
  4178   000DA0  EFD4  F006         	goto	u80_21
  4179   000DA4  EFD6  F006         	goto	u80_20
  4180   000DA8                     u80_21:
  4181   000DA8  EF41  F007         	goto	l2093
  4182   000DAC                     u80_20:
  4183   000DAC  EE22  F0B5         	lfsr	2,_readyQueue+531
  4184   000DB0  EE00 F006          	lfsr	0,6
  4185   000DB4  50DE               	movf	postinc2,w,c
  4186   000DB6  26E9               	addwf	fsr0l,f,c
  4187   000DB8  50DD               	movf	postdec2,w,c
  4188   000DBA  22EA               	addwfc	fsr0h,f,c
  4189   000DBC  CFE0 FFEF          	movff	bsr,indf0	;volatile
  4190   000DC0  EE22  F0B5         	lfsr	2,_readyQueue+531
  4191   000DC4  EE00 F008          	lfsr	0,8
  4192   000DC8  50DE               	movf	postinc2,w,c
  4193   000DCA  26E9               	addwf	fsr0l,f,c
  4194   000DCC  50DD               	movf	postdec2,w,c
  4195   000DCE  22EA               	addwfc	fsr0h,f,c
  4196   000DD0  CFD8 FFEF          	movff	status,indf0	;volatile
  4197   000DD4  EE22  F0B5         	lfsr	2,_readyQueue+531
  4198   000DD8  EE00 F007          	lfsr	0,7
  4199   000DDC  50DE               	movf	postinc2,w,c
  4200   000DDE  26E9               	addwf	fsr0l,f,c
  4201   000DE0  50DD               	movf	postdec2,w,c
  4202   000DE2  22EA               	addwfc	fsr0h,f,c
  4203   000DE4  CFE8 FFEF          	movff	wreg,indf0	;volatile
  4204   000DE8  EE22  F0B5         	lfsr	2,_readyQueue+531
  4205   000DEC  EE00 F069          	lfsr	0,105
  4206   000DF0  50DE               	movf	postinc2,w,c
  4207   000DF2  26E9               	addwf	fsr0l,f,c
  4208   000DF4  50DD               	movf	postdec2,w,c
  4209   000DF6  22EA               	addwfc	fsr0h,f,c
  4210   000DF8  6AEF               	clrf	indf0,c
  4211   000DFA  EF2F  F007         	goto	l2089
  4212   000DFE                     l2085:
  4213   000DFE  EE22  F0B5         	lfsr	2,_readyQueue+531
  4214   000E02  EE00 F069          	lfsr	0,105
  4215   000E06  50DE               	movf	postinc2,w,c
  4216   000E08  26E9               	addwf	fsr0l,f,c
  4217   000E0A  50DD               	movf	postdec2,w,c
  4218   000E0C  22EA               	addwfc	fsr0h,f,c
  4219   000E0E  50EF               	movf	indf0,w,c
  4220   000E10  0D03               	mullw	3
  4221   000E12  CFF3 F037          	movff	prodl,btemp54
  4222   000E16  CFF4 F038          	movff	prodh,btemp55
  4223   000E1A  EE22  F0B5         	lfsr	2,_readyQueue+531
  4224   000E1E  CFDE F035          	movff	postinc2,btemp52
  4225   000E22  CFDD F036          	movff	postdec2,btemp53
  4226   000E26  5037               	movf	btemp54^0,w,c
  4227   000E28  2435               	addwf	btemp52^0,w,c
  4228   000E2A  6E33               	movwf	btemp50^0,c
  4229   000E2C  5038               	movf	btemp55^0,w,c
  4230   000E2E  2036               	addwfc	btemp53^0,w,c
  4231   000E30  6E34               	movwf	(btemp50+1)^0,c
  4232   000E32  0E09               	movlw	9
  4233   000E34  2433               	addwf	btemp50^0,w,c
  4234   000E36  6ED9               	movwf	fsr2l,c
  4235   000E38  0E00               	movlw	0
  4236   000E3A  2034               	addwfc	btemp51^0,w,c
  4237   000E3C  6EDA               	movwf	fsr2h,c
  4238   000E3E  CFFD FFDE          	movff	tosl,postinc2	;volatile
  4239   000E42  CFFE FFDE          	movff	tosh,postinc2	;volatile
  4240   000E46  CFFF FFDE          	movff	tosu,postinc2	;volatile
  4241   000E4A  EE22  F0B5         	lfsr	2,_readyQueue+531
  4242   000E4E  EE00 F069          	lfsr	0,105
  4243   000E52  50DE               	movf	postinc2,w,c
  4244   000E54  26E9               	addwf	fsr0l,f,c
  4245   000E56  50DD               	movf	postdec2,w,c
  4246   000E58  22EA               	addwfc	fsr0h,f,c
  4247   000E5A  2AEF               	incf	indf0,f,c
  4248   000E5C  0006               	pop		;# 
  4249   000E5E                     l2089:
  4250   000E5E  50FC               	movf	252,w,c	;volatile
  4251   000E60  A4D8               	btfss	status,2,c
  4252   000E62  EF35  F007         	goto	u81_21
  4253   000E66  EF37  F007         	goto	u81_20
  4254   000E6A                     u81_21:
  4255   000E6A  EFFF  F006         	goto	l2085
  4256   000E6E                     u81_20:
  4257   000E6E  EE22  F0B5         	lfsr	2,_readyQueue+531
  4258   000E72  EE00 F003          	lfsr	0,3
  4259   000E76  50DE               	movf	postinc2,w,c
  4260   000E78  26E9               	addwf	fsr0l,f,c
  4261   000E7A  50DD               	movf	postdec2,w,c
  4262   000E7C  22EA               	addwfc	fsr0h,f,c
  4263   000E7E  0E02               	movlw	2
  4264   000E80  6EEF               	movwf	indf0,c
  4265   000E82                     l2093:
  4266                           
  4267                           ;syscall.c: 34:     scheduler();
  4268   000E82  EC66  F00E         	call	_scheduler	;wreg free
  4269   000E86  EE22  F0B5         	lfsr	2,_readyQueue+531
  4270   000E8A  EE00 F003          	lfsr	0,3
  4271   000E8E  50DE               	movf	postinc2,w,c
  4272   000E90  26E9               	addwf	fsr0l,f,c
  4273   000E92  50DD               	movf	postdec2,w,c
  4274   000E94  22EA               	addwfc	fsr0h,f,c
  4275   000E96  50EF               	movf	indf0,w,c
  4276   000E98  A4D8               	btfss	status,2,c
  4277   000E9A  EF51  F007         	goto	u82_21
  4278   000E9E  EF53  F007         	goto	u82_20
  4279   000EA2                     u82_21:
  4280   000EA2  EFE1  F007         	goto	l2117
  4281   000EA6                     u82_20:
  4282   000EA6  EE22  F0B5         	lfsr	2,_readyQueue+531
  4283   000EAA  EE00 F006          	lfsr	0,6
  4284   000EAE  50DE               	movf	postinc2,w,c
  4285   000EB0  26E9               	addwf	fsr0l,f,c
  4286   000EB2  50DD               	movf	postdec2,w,c
  4287   000EB4  22EA               	addwfc	fsr0h,f,c
  4288   000EB6  50EF               	movf	indf0,w,c
  4289   000EB8  6EE0               	movwf	224,c	;volatile
  4290   000EBA  EE22  F0B5         	lfsr	2,_readyQueue+531
  4291   000EBE  EE00 F008          	lfsr	0,8
  4292   000EC2  50DE               	movf	postinc2,w,c
  4293   000EC4  26E9               	addwf	fsr0l,f,c
  4294   000EC6  50DD               	movf	postdec2,w,c
  4295   000EC8  22EA               	addwfc	fsr0h,f,c
  4296   000ECA  50EF               	movf	indf0,w,c
  4297   000ECC  6ED8               	movwf	216,c	;volatile
  4298   000ECE  EE22  F0B5         	lfsr	2,_readyQueue+531
  4299   000ED2  EE00 F007          	lfsr	0,7
  4300   000ED6  50DE               	movf	postinc2,w,c
  4301   000ED8  26E9               	addwf	fsr0l,f,c
  4302   000EDA  50DD               	movf	postdec2,w,c
  4303   000EDC  22EA               	addwfc	fsr0h,f,c
  4304   000EDE  50EF               	movf	indf0,w,c
  4305   000EE0  6E38               	movwf	btemp55^0,c
  4306   000EE2  5038               	movf	btemp55^0,w,c
  4307   000EE4  6AFC               	clrf	252,c	;volatile
  4308   000EE6  EE22  F0B5         	lfsr	2,_readyQueue+531
  4309   000EEA  EE00 F069          	lfsr	0,105
  4310   000EEE  50DE               	movf	postinc2,w,c
  4311   000EF0  26E9               	addwf	fsr0l,f,c
  4312   000EF2  50DD               	movf	postdec2,w,c
  4313   000EF4  22EA               	addwfc	fsr0h,f,c
  4314   000EF6  50EF               	movf	indf0,w,c
  4315   000EF8  A4D8               	btfss	status,2,c
  4316   000EFA  EF81  F007         	goto	u83_21
  4317   000EFE  EF83  F007         	goto	u83_20
  4318   000F02                     u83_21:
  4319   000F02  EF97  F007         	goto	l168
  4320   000F06                     u83_20:
  4321   000F06  0005               	push		;# 
  4322   000F08  EE22  F0B5         	lfsr	2,_readyQueue+531
  4323   000F0C  EE00 F001          	lfsr	0,1
  4324   000F10  50DE               	movf	postinc2,w,c
  4325   000F12  26E9               	addwf	fsr0l,f,c
  4326   000F14  50DD               	movf	postdec2,w,c
  4327   000F16  22EA               	addwfc	fsr0h,f,c
  4328   000F18  CFEE F037          	movff	postinc0,btemp54
  4329   000F1C  CFED F038          	movff	postdec0,btemp55
  4330   000F20  C037 FFFD          	movff	btemp54,tosl	;volatile
  4331   000F24  C038 FFFE          	movff	btemp55,tosh	;volatile
  4332   000F28  6AFF               	clrf	255,c	;volatile
  4333   000F2A  EFD7  F007         	goto	l2115
  4334   000F2E                     l168:
  4335   000F2E  0005               	push		;# 
  4336   000F30  EE22  F0B5         	lfsr	2,_readyQueue+531
  4337   000F34  EE00 F069          	lfsr	0,105
  4338   000F38  50DE               	movf	postinc2,w,c
  4339   000F3A  26E9               	addwf	fsr0l,f,c
  4340   000F3C  50DD               	movf	postdec2,w,c
  4341   000F3E  22EA               	addwfc	fsr0h,f,c
  4342   000F40  06EF               	decf	indf0,f,c
  4343   000F42  EE22  F0B5         	lfsr	2,_readyQueue+531
  4344   000F46  EE00 F069          	lfsr	0,105
  4345   000F4A  50DE               	movf	postinc2,w,c
  4346   000F4C  26E9               	addwf	fsr0l,f,c
  4347   000F4E  50DD               	movf	postdec2,w,c
  4348   000F50  22EA               	addwfc	fsr0h,f,c
  4349   000F52  50EF               	movf	indf0,w,c
  4350   000F54  0D03               	mullw	3
  4351   000F56  CFF3 F037          	movff	prodl,btemp54
  4352   000F5A  CFF4 F038          	movff	prodh,btemp55
  4353   000F5E  EE22  F0B5         	lfsr	2,_readyQueue+531
  4354   000F62  CFDE F035          	movff	postinc2,btemp52
  4355   000F66  CFDD F036          	movff	postdec2,btemp53
  4356   000F6A  5037               	movf	btemp54^0,w,c
  4357   000F6C  2435               	addwf	btemp52^0,w,c
  4358   000F6E  6E33               	movwf	btemp50^0,c
  4359   000F70  5038               	movf	btemp55^0,w,c
  4360   000F72  2036               	addwfc	btemp53^0,w,c
  4361   000F74  6E34               	movwf	(btemp50+1)^0,c
  4362   000F76  0E09               	movlw	9
  4363   000F78  2433               	addwf	btemp50^0,w,c
  4364   000F7A  6ED9               	movwf	fsr2l,c
  4365   000F7C  0E00               	movlw	0
  4366   000F7E  2034               	addwfc	btemp51^0,w,c
  4367   000F80  6EDA               	movwf	fsr2h,c
  4368   000F82  CFDE FFFD          	movff	postinc2,tosl	;volatile
  4369   000F86  CFDE FFFE          	movff	postinc2,tosh	;volatile
  4370   000F8A  CFDD FFFF          	movff	postdec2,tosu	;volatile
  4371   000F8E  EE22  F0B5         	lfsr	2,_readyQueue+531
  4372   000F92  EE00 F069          	lfsr	0,105
  4373   000F96  50DE               	movf	postinc2,w,c
  4374   000F98  26E9               	addwf	fsr0l,f,c
  4375   000F9A  50DD               	movf	postdec2,w,c
  4376   000F9C  22EA               	addwfc	fsr0h,f,c
  4377   000F9E  50EF               	movf	indf0,w,c
  4378   000FA0  A4D8               	btfss	status,2,c
  4379   000FA2  EFD5  F007         	goto	u84_21
  4380   000FA6  EFD7  F007         	goto	u84_20
  4381   000FAA                     u84_21:
  4382   000FAA  EF97  F007         	goto	l168
  4383   000FAE                     u84_20:
  4384   000FAE                     l2115:
  4385   000FAE  EE22  F0B5         	lfsr	2,_readyQueue+531
  4386   000FB2  EE00 F003          	lfsr	0,3
  4387   000FB6  50DE               	movf	postinc2,w,c
  4388   000FB8  26E9               	addwf	fsr0l,f,c
  4389   000FBA  50DD               	movf	postdec2,w,c
  4390   000FBC  22EA               	addwfc	fsr0h,f,c
  4391   000FBE  0E01               	movlw	1
  4392   000FC0  6EEF               	movwf	indf0,c
  4393   000FC2                     l2117:
  4394                           
  4395                           ;syscall.c: 37:     (INTCONbits.GIE = 1);
  4396   000FC2  8EF2               	bsf	242,7,c	;volatile
  4397   000FC4                     
  4398                           ; _os_delay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  4399   000FC4  0012               	return		;funcret
  4400   000FC6                     __end_of_os_delay:
  4401                           	callstack 0
  4402                           
  4403 ;; *************** function _mutex_unlock *****************
  4404 ;; Defined at:
  4405 ;;		line 65 in file "sync.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  m               1    btemp12  PTR struct semaphore
  4408 ;;		 -> mutex_motores(14), 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;		None
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  1  [STACK] void 
  4413 ;; Registers used:
  4414 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp20, btemp2
      +8, btemp29, btemp30, btemp31, btemp55, prodl, prodh, cstack
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4420 ;;      Params:         0       0       0       0       0       0       0       0       0
  4421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4423 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4424 ;;Total ram usage:        0 bytes
  4425 ;; Hardware stack levels used: 1
  4426 ;; Hardware stack levels required when called: 5
  4427 ;; This function calls:
  4428 ;;		_sem_post
  4429 ;; This function is called by:
  4430 ;;		_tarefa_controle_central
  4431 ;;		_tarefa_controle_motores
  4432 ;; This function uses a reentrant model
  4433 ;;
  4434                           
  4435                           	psect	text22
  4436   001CF2                     __ptext22:
  4437                           	callstack 0
  4438   001CF2                     _mutex_unlock:
  4439                           	callstack 19
  4440   001CF2                     
  4441                           ;sync.c: 65: void mutex_unlock(mutex_t *m);sync.c: 66: {;sync.c: 68:     sem_post(m);
  4442                           ;register	btemp20
  4443   001CF2  C00D F015          	movff	btemp12,btemp20
  4444   001CF6  ECBE  F00B         	call	_sem_post	;wreg free
  4445   001CFA                     
  4446                           ; _mutex_unlock: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4447   001CFA  0012               	return		;funcret
  4448   001CFC                     __end_of_mutex_unlock:
  4449                           	callstack 0
  4450                           
  4451 ;; *************** function _sem_post *****************
  4452 ;; Defined at:
  4453 ;;		line 37 in file "sync.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  s               1    btemp20  PTR struct semaphore
  4456 ;;		 -> pipe_bateria(33), pipe_sensores(33), mutex_motores(14), 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;		None
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1  [STACK] void 
  4461 ;; Registers used:
  4462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp20, btemp28, btemp2
      +9, btemp30, btemp31, btemp55, prodl, prodh, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4468 ;;      Params:         0       0       0       0       0       0       0       0       0
  4469 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4470 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4471 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4472 ;;Total ram usage:        0 bytes
  4473 ;; Hardware stack levels used: 1
  4474 ;; Hardware stack levels required when called: 4
  4475 ;; This function calls:
  4476 ;;		___awmod
  4477 ;; This function is called by:
  4478 ;;		_mutex_unlock
  4479 ;;		_read_pipe
  4480 ;;		_write_pipe
  4481 ;; This function uses a reentrant model
  4482 ;;
  4483                           
  4484                           	psect	text23
  4485   00177C                     __ptext23:
  4486                           	callstack 0
  4487   00177C                     _sem_post:
  4488                           	callstack 19
  4489   00177C                     
  4490                           ;sync.c: 37: void sem_post(sem_t *s);sync.c: 38: {;sync.c: 39:     (INTCONbits.GIE = 0);
  4491   00177C  9EF2               	bcf	242,7,c	;volatile
  4492   00177E                     
  4493                           ;sync.c: 41:     s->contador++;
  4494   00177E  5015               	movf	btemp20^0,w,c
  4495   001780  6ED9               	movwf	fsr2l,c
  4496   001782  6ADA               	clrf	fsr2h,c
  4497   001784  2ADE               	incf	postinc2,f,c
  4498   001786  0E00               	movlw	0
  4499   001788  22DD               	addwfc	postdec2,f,c
  4500   00178A                     
  4501                           ;sync.c: 43:     if (s->contador <= 0) {
  4502   00178A  5015               	movf	btemp20^0,w,c
  4503   00178C  6ED9               	movwf	fsr2l,c
  4504   00178E  6ADA               	clrf	fsr2h,c
  4505   001790  0E01               	movlw	1
  4506   001792  BEDB               	btfsc	plusw2,7,c
  4507   001794  EFD7  F00B         	goto	u78_20
  4508   001798  0E01               	movlw	1
  4509   00179A  50DB               	movf	plusw2,w,c
  4510   00179C  E106               	bnz	u78_21
  4511   00179E  04DE               	decf	postinc2,w,c
  4512   0017A0  B0D8               	btfsc	status,0,c
  4513   0017A2  EFD5  F00B         	goto	u78_21
  4514   0017A6  EFD7  F00B         	goto	u78_20
  4515   0017AA                     u78_21:
  4516   0017AA  EF04  F00C         	goto	l2041
  4517   0017AE                     u78_20:
  4518   0017AE                     
  4519                           ;sync.c: 44:         s->sem_queue[s->sem_queue_out]->task_state = READY;
  4520   0017AE  5015               	movf	btemp20^0,w,c
  4521   0017B0  6ED9               	movwf	fsr2l,c
  4522   0017B2  6ADA               	clrf	fsr2h,c
  4523   0017B4  0E0D               	movlw	13
  4524   0017B6  26D9               	addwf	fsr2l,f,c
  4525   0017B8  50DF               	movf	indf2,w,c
  4526   0017BA  0D02               	mullw	2
  4527   0017BC  5015               	movf	btemp20^0,w,c
  4528   0017BE  24F3               	addwf	243,w,c
  4529   0017C0  6ED9               	movwf	fsr2l,c
  4530   0017C2  6ADA               	clrf	fsr2h,c
  4531   0017C4  0E02               	movlw	2
  4532   0017C6  26D9               	addwf	fsr2l,f,c
  4533   0017C8  EE00 F003          	lfsr	0,3
  4534   0017CC  50DE               	movf	postinc2,w,c
  4535   0017CE  26E9               	addwf	fsr0l,f,c
  4536   0017D0  50DD               	movf	postdec2,w,c
  4537   0017D2  22EA               	addwfc	fsr0h,f,c
  4538   0017D4  6AEF               	clrf	indf0,c
  4539   0017D6                     
  4540                           ;sync.c: 45:         s->sem_queue_out = (s->sem_queue_out + 1) % 5;
  4541   0017D6  5015               	movf	btemp20^0,w,c
  4542   0017D8  6ED9               	movwf	fsr2l,c
  4543   0017DA  6ADA               	clrf	fsr2h,c
  4544   0017DC  0E0D               	movlw	13
  4545   0017DE  26D9               	addwf	fsr2l,f,c
  4546   0017E0  5015               	movf	btemp20^0,w,c
  4547   0017E2  6EE9               	movwf	fsr0l,c
  4548   0017E4  6AEA               	clrf	fsr0h,c
  4549   0017E6  0E0D               	movlw	13
  4550   0017E8  26E9               	addwf	fsr0l,f,c
  4551   0017EA  50EF               	movf	indf0,w,c
  4552   0017EC  6E38               	movwf	btemp55^0,c
  4553   0017EE  0E01               	movlw	1
  4554   0017F0  2438               	addwf	btemp55^0,w,c
  4555                           
  4556                           ;register	wtemp14
  4557   0017F2  6E1D               	movwf	btemp28^0,c
  4558   0017F4  6A1E               	clrf	(btemp28+1)^0,c
  4559   0017F6  0E00               	movlw	0
  4560   0017F8  221E               	addwfc	(btemp28+1)^0,f,c
  4561                           
  4562                           ;register	wtemp15
  4563   0017FA  6A20               	clrf	btemp31^0,c
  4564   0017FC  0E05               	movlw	5
  4565   0017FE  6E1F               	movwf	btemp30^0,c
  4566   001800  EC04  F00B         	call	___awmod	;wreg free
  4567   001804  5001               	movf	btemp0^0,w,c
  4568   001806  6EDF               	movwf	indf2,c
  4569   001808                     l2041:
  4570                           
  4571                           ;sync.c: 48:     (INTCONbits.GIE = 1);
  4572   001808  8EF2               	bsf	242,7,c	;volatile
  4573   00180A                     
  4574                           ; _sem_post: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  4575   00180A  0012               	return		;funcret
  4576   00180C                     __end_of_sem_post:
  4577                           	callstack 0
  4578                           
  4579 ;; *************** function _mutex_lock *****************
  4580 ;; Defined at:
  4581 ;;		line 59 in file "sync.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  m               1    btemp12  PTR struct semaphore
  4584 ;;		 -> mutex_motores(14), 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  m               1    btemp12  PTR struct semaphore
  4587 ;;		 -> mutex_motores(14), 
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1  [STACK] void 
  4590 ;; Registers used:
  4591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp20, btemp2
      +8, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, prodh, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4597 ;;      Params:         0       0       0       0       0       0       0       0       0
  4598 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4600 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4601 ;;Total ram usage:        0 bytes
  4602 ;; Hardware stack levels used: 1
  4603 ;; Hardware stack levels required when called: 6
  4604 ;; This function calls:
  4605 ;;		_sem_wait
  4606 ;; This function is called by:
  4607 ;;		_tarefa_controle_central
  4608 ;;		_tarefa_controle_motores
  4609 ;; This function uses a reentrant model
  4610 ;;
  4611                           
  4612                           	psect	text24
  4613   001CFC                     __ptext24:
  4614                           	callstack 0
  4615   001CFC                     _mutex_lock:
  4616                           	callstack 18
  4617   001CFC                     
  4618                           ;sync.c: 59: void mutex_lock(mutex_t *m);sync.c: 60: {;sync.c: 62:     sem_wait(m);
  4619                           ;register	btemp20
  4620   001CFC  C00D F015          	movff	btemp12,btemp20
  4621   001D00  EC60  F005         	call	_sem_wait	;wreg free
  4622   001D04                     
  4623                           ; _mutex_lock: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4624   001D04  0012               	return		;funcret
  4625   001D06                     __end_of_mutex_lock:
  4626                           	callstack 0
  4627                           
  4628 ;; *************** function _sem_wait *****************
  4629 ;; Defined at:
  4630 ;;		line 17 in file "sync.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  s               1    btemp20  PTR struct semaphore
  4633 ;;		 -> pipe_bateria(33), pipe_sensores(33), mutex_motores(14), 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;		None
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1  [STACK] void 
  4638 ;; Registers used:
  4639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp20, btemp28, btemp2
      +9, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, prodh, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4645 ;;      Params:         0       0       0       0       0       0       0       0       0
  4646 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4648 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4649 ;;Total ram usage:        0 bytes
  4650 ;; Hardware stack levels used: 1
  4651 ;; Hardware stack levels required when called: 4
  4652 ;; This function calls:
  4653 ;;		___awmod
  4654 ;;		_scheduler
  4655 ;; This function is called by:
  4656 ;;		_mutex_lock
  4657 ;;		_read_pipe
  4658 ;;		_write_pipe
  4659 ;; This function uses a reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text25
  4663   000AC0                     __ptext25:
  4664                           	callstack 0
  4665   000AC0                     _sem_wait:
  4666                           	callstack 19
  4667   000AC0                     
  4668                           ;sync.c: 17: void sem_wait(sem_t *s);sync.c: 18: {;sync.c: 19:     (INTCONbits.GIE = 0);
  4669   000AC0  9EF2               	bcf	242,7,c	;volatile
  4670   000AC2                     
  4671                           ;sync.c: 22:     s->contador--;
  4672   000AC2  5015               	movf	btemp20^0,w,c
  4673   000AC4  6ED9               	movwf	fsr2l,c
  4674   000AC6  6ADA               	clrf	fsr2h,c
  4675   000AC8  06DE               	decf	postinc2,f,c
  4676   000ACA  0E00               	movlw	0
  4677   000ACC  5ADD               	subwfb	postdec2,f,c
  4678   000ACE                     
  4679                           ;sync.c: 24:     if (s->contador < 0) {
  4680   000ACE  5015               	movf	btemp20^0,w,c
  4681   000AD0  6ED9               	movwf	fsr2l,c
  4682   000AD2  6ADA               	clrf	fsr2h,c
  4683   000AD4  0E01               	movlw	1
  4684   000AD6  BEDB               	btfsc	plusw2,7,c
  4685   000AD8  EF72  F005         	goto	u72_20
  4686   000ADC  EF70  F005         	goto	u72_21
  4687   000AE0                     u72_21:
  4688   000AE0  EFB9  F006         	goto	l2029
  4689   000AE4                     u72_20:
  4690   000AE4                     
  4691                           ;sync.c: 26:         s->sem_queue[s->sem_queue_in] = readyQueue.taskRunning;
  4692   000AE4  EE22  F0B5         	lfsr	2,_readyQueue+531
  4693   000AE8  5015               	movf	btemp20^0,w,c
  4694   000AEA  6EE9               	movwf	fsr0l,c
  4695   000AEC  6AEA               	clrf	fsr0h,c
  4696   000AEE  0E0C               	movlw	12
  4697   000AF0  26E9               	addwf	fsr0l,f,c
  4698   000AF2  50EF               	movf	indf0,w,c
  4699   000AF4  0D02               	mullw	2
  4700   000AF6  5015               	movf	btemp20^0,w,c
  4701   000AF8  24F3               	addwf	243,w,c
  4702   000AFA  6EE9               	movwf	fsr0l,c
  4703   000AFC  6AEA               	clrf	fsr0h,c
  4704   000AFE  0E02               	movlw	2
  4705   000B00  26E9               	addwf	fsr0l,f,c
  4706   000B02  CFDE FFEE          	movff	postinc2,postinc0
  4707   000B06  CFDD FFED          	movff	postdec2,postdec0
  4708   000B0A                     
  4709                           ;sync.c: 27:         s->sem_queue_in = (s->sem_queue_in + 1) % 5;
  4710   000B0A  5015               	movf	btemp20^0,w,c
  4711   000B0C  6ED9               	movwf	fsr2l,c
  4712   000B0E  6ADA               	clrf	fsr2h,c
  4713   000B10  0E0C               	movlw	12
  4714   000B12  26D9               	addwf	fsr2l,f,c
  4715   000B14  5015               	movf	btemp20^0,w,c
  4716   000B16  6EE9               	movwf	fsr0l,c
  4717   000B18  6AEA               	clrf	fsr0h,c
  4718   000B1A  0E0C               	movlw	12
  4719   000B1C  26E9               	addwf	fsr0l,f,c
  4720   000B1E  50EF               	movf	indf0,w,c
  4721   000B20  6E38               	movwf	btemp55^0,c
  4722   000B22  0E01               	movlw	1
  4723   000B24  2438               	addwf	btemp55^0,w,c
  4724                           
  4725                           ;register	wtemp14
  4726   000B26  6E1D               	movwf	btemp28^0,c
  4727   000B28  6A1E               	clrf	(btemp28+1)^0,c
  4728   000B2A  0E00               	movlw	0
  4729   000B2C  221E               	addwfc	(btemp28+1)^0,f,c
  4730                           
  4731                           ;register	wtemp15
  4732   000B2E  6A20               	clrf	btemp31^0,c
  4733   000B30  0E05               	movlw	5
  4734   000B32  6E1F               	movwf	btemp30^0,c
  4735   000B34  EC04  F00B         	call	___awmod	;wreg free
  4736   000B38  5001               	movf	btemp0^0,w,c
  4737   000B3A  6EDF               	movwf	indf2,c
  4738   000B3C  EE22  F0B5         	lfsr	2,_readyQueue+531
  4739   000B40  EE00 F003          	lfsr	0,3
  4740   000B44  50DE               	movf	postinc2,w,c
  4741   000B46  26E9               	addwf	fsr0l,f,c
  4742   000B48  50DD               	movf	postdec2,w,c
  4743   000B4A  22EA               	addwfc	fsr0h,f,c
  4744   000B4C  04EE               	decf	postinc0,w,c
  4745   000B4E  A4D8               	btfss	status,2,c
  4746   000B50  EFAC  F005         	goto	u73_21
  4747   000B54  EFAE  F005         	goto	u73_20
  4748   000B58                     u73_21:
  4749   000B58  EF19  F006         	goto	l2005
  4750   000B5C                     u73_20:
  4751   000B5C  EE22  F0B5         	lfsr	2,_readyQueue+531
  4752   000B60  EE00 F006          	lfsr	0,6
  4753   000B64  50DE               	movf	postinc2,w,c
  4754   000B66  26E9               	addwf	fsr0l,f,c
  4755   000B68  50DD               	movf	postdec2,w,c
  4756   000B6A  22EA               	addwfc	fsr0h,f,c
  4757   000B6C  CFE0 FFEF          	movff	bsr,indf0	;volatile
  4758   000B70  EE22  F0B5         	lfsr	2,_readyQueue+531
  4759   000B74  EE00 F008          	lfsr	0,8
  4760   000B78  50DE               	movf	postinc2,w,c
  4761   000B7A  26E9               	addwf	fsr0l,f,c
  4762   000B7C  50DD               	movf	postdec2,w,c
  4763   000B7E  22EA               	addwfc	fsr0h,f,c
  4764   000B80  CFD8 FFEF          	movff	status,indf0	;volatile
  4765   000B84  EE22  F0B5         	lfsr	2,_readyQueue+531
  4766   000B88  EE00 F007          	lfsr	0,7
  4767   000B8C  50DE               	movf	postinc2,w,c
  4768   000B8E  26E9               	addwf	fsr0l,f,c
  4769   000B90  50DD               	movf	postdec2,w,c
  4770   000B92  22EA               	addwfc	fsr0h,f,c
  4771   000B94  CFE8 FFEF          	movff	wreg,indf0	;volatile
  4772   000B98  EE22  F0B5         	lfsr	2,_readyQueue+531
  4773   000B9C  EE00 F069          	lfsr	0,105
  4774   000BA0  50DE               	movf	postinc2,w,c
  4775   000BA2  26E9               	addwf	fsr0l,f,c
  4776   000BA4  50DD               	movf	postdec2,w,c
  4777   000BA6  22EA               	addwfc	fsr0h,f,c
  4778   000BA8  6AEF               	clrf	indf0,c
  4779   000BAA  EF07  F006         	goto	l2001
  4780   000BAE                     l1997:
  4781   000BAE  EE22  F0B5         	lfsr	2,_readyQueue+531
  4782   000BB2  EE00 F069          	lfsr	0,105
  4783   000BB6  50DE               	movf	postinc2,w,c
  4784   000BB8  26E9               	addwf	fsr0l,f,c
  4785   000BBA  50DD               	movf	postdec2,w,c
  4786   000BBC  22EA               	addwfc	fsr0h,f,c
  4787   000BBE  50EF               	movf	indf0,w,c
  4788   000BC0  0D03               	mullw	3
  4789   000BC2  CFF3 F037          	movff	prodl,btemp54
  4790   000BC6  CFF4 F038          	movff	prodh,btemp55
  4791   000BCA  EE22  F0B5         	lfsr	2,_readyQueue+531
  4792   000BCE  CFDE F035          	movff	postinc2,btemp52
  4793   000BD2  CFDD F036          	movff	postdec2,btemp53
  4794   000BD6  5037               	movf	btemp54^0,w,c
  4795   000BD8  2435               	addwf	btemp52^0,w,c
  4796   000BDA  6E33               	movwf	btemp50^0,c
  4797   000BDC  5038               	movf	btemp55^0,w,c
  4798   000BDE  2036               	addwfc	btemp53^0,w,c
  4799   000BE0  6E34               	movwf	(btemp50+1)^0,c
  4800   000BE2  0E09               	movlw	9
  4801   000BE4  2433               	addwf	btemp50^0,w,c
  4802   000BE6  6ED9               	movwf	fsr2l,c
  4803   000BE8  0E00               	movlw	0
  4804   000BEA  2034               	addwfc	btemp51^0,w,c
  4805   000BEC  6EDA               	movwf	fsr2h,c
  4806   000BEE  CFFD FFDE          	movff	tosl,postinc2	;volatile
  4807   000BF2  CFFE FFDE          	movff	tosh,postinc2	;volatile
  4808   000BF6  CFFF FFDE          	movff	tosu,postinc2	;volatile
  4809   000BFA  EE22  F0B5         	lfsr	2,_readyQueue+531
  4810   000BFE  EE00 F069          	lfsr	0,105
  4811   000C02  50DE               	movf	postinc2,w,c
  4812   000C04  26E9               	addwf	fsr0l,f,c
  4813   000C06  50DD               	movf	postdec2,w,c
  4814   000C08  22EA               	addwfc	fsr0h,f,c
  4815   000C0A  2AEF               	incf	indf0,f,c
  4816   000C0C  0006               	pop		;# 
  4817   000C0E                     l2001:
  4818   000C0E  50FC               	movf	252,w,c	;volatile
  4819   000C10  A4D8               	btfss	status,2,c
  4820   000C12  EF0D  F006         	goto	u74_21
  4821   000C16  EF0F  F006         	goto	u74_20
  4822   000C1A                     u74_21:
  4823   000C1A  EFD7  F005         	goto	l1997
  4824   000C1E                     u74_20:
  4825   000C1E  EE22  F0B5         	lfsr	2,_readyQueue+531
  4826   000C22  EE00 F003          	lfsr	0,3
  4827   000C26  50DE               	movf	postinc2,w,c
  4828   000C28  26E9               	addwf	fsr0l,f,c
  4829   000C2A  50DD               	movf	postdec2,w,c
  4830   000C2C  22EA               	addwfc	fsr0h,f,c
  4831   000C2E  0E03               	movlw	3
  4832   000C30  6EEF               	movwf	indf0,c
  4833   000C32                     l2005:
  4834                           
  4835                           ;sync.c: 30:         scheduler();
  4836   000C32  EC66  F00E         	call	_scheduler	;wreg free
  4837   000C36  EE22  F0B5         	lfsr	2,_readyQueue+531
  4838   000C3A  EE00 F003          	lfsr	0,3
  4839   000C3E  50DE               	movf	postinc2,w,c
  4840   000C40  26E9               	addwf	fsr0l,f,c
  4841   000C42  50DD               	movf	postdec2,w,c
  4842   000C44  22EA               	addwfc	fsr0h,f,c
  4843   000C46  50EF               	movf	indf0,w,c
  4844   000C48  A4D8               	btfss	status,2,c
  4845   000C4A  EF29  F006         	goto	u75_21
  4846   000C4E  EF2B  F006         	goto	u75_20
  4847   000C52                     u75_21:
  4848   000C52  EFB9  F006         	goto	l2029
  4849   000C56                     u75_20:
  4850   000C56  EE22  F0B5         	lfsr	2,_readyQueue+531
  4851   000C5A  EE00 F006          	lfsr	0,6
  4852   000C5E  50DE               	movf	postinc2,w,c
  4853   000C60  26E9               	addwf	fsr0l,f,c
  4854   000C62  50DD               	movf	postdec2,w,c
  4855   000C64  22EA               	addwfc	fsr0h,f,c
  4856   000C66  50EF               	movf	indf0,w,c
  4857   000C68  6EE0               	movwf	224,c	;volatile
  4858   000C6A  EE22  F0B5         	lfsr	2,_readyQueue+531
  4859   000C6E  EE00 F008          	lfsr	0,8
  4860   000C72  50DE               	movf	postinc2,w,c
  4861   000C74  26E9               	addwf	fsr0l,f,c
  4862   000C76  50DD               	movf	postdec2,w,c
  4863   000C78  22EA               	addwfc	fsr0h,f,c
  4864   000C7A  50EF               	movf	indf0,w,c
  4865   000C7C  6ED8               	movwf	216,c	;volatile
  4866   000C7E  EE22  F0B5         	lfsr	2,_readyQueue+531
  4867   000C82  EE00 F007          	lfsr	0,7
  4868   000C86  50DE               	movf	postinc2,w,c
  4869   000C88  26E9               	addwf	fsr0l,f,c
  4870   000C8A  50DD               	movf	postdec2,w,c
  4871   000C8C  22EA               	addwfc	fsr0h,f,c
  4872   000C8E  50EF               	movf	indf0,w,c
  4873   000C90  6E38               	movwf	btemp55^0,c
  4874   000C92  5038               	movf	btemp55^0,w,c
  4875   000C94  6AFC               	clrf	252,c	;volatile
  4876   000C96  EE22  F0B5         	lfsr	2,_readyQueue+531
  4877   000C9A  EE00 F069          	lfsr	0,105
  4878   000C9E  50DE               	movf	postinc2,w,c
  4879   000CA0  26E9               	addwf	fsr0l,f,c
  4880   000CA2  50DD               	movf	postdec2,w,c
  4881   000CA4  22EA               	addwfc	fsr0h,f,c
  4882   000CA6  50EF               	movf	indf0,w,c
  4883   000CA8  A4D8               	btfss	status,2,c
  4884   000CAA  EF59  F006         	goto	u76_21
  4885   000CAE  EF5B  F006         	goto	u76_20
  4886   000CB2                     u76_21:
  4887   000CB2  EF6F  F006         	goto	l307
  4888   000CB6                     u76_20:
  4889   000CB6  0005               	push		;# 
  4890   000CB8  EE22  F0B5         	lfsr	2,_readyQueue+531
  4891   000CBC  EE00 F001          	lfsr	0,1
  4892   000CC0  50DE               	movf	postinc2,w,c
  4893   000CC2  26E9               	addwf	fsr0l,f,c
  4894   000CC4  50DD               	movf	postdec2,w,c
  4895   000CC6  22EA               	addwfc	fsr0h,f,c
  4896   000CC8  CFEE F037          	movff	postinc0,btemp54
  4897   000CCC  CFED F038          	movff	postdec0,btemp55
  4898   000CD0  C037 FFFD          	movff	btemp54,tosl	;volatile
  4899   000CD4  C038 FFFE          	movff	btemp55,tosh	;volatile
  4900   000CD8  6AFF               	clrf	255,c	;volatile
  4901   000CDA  EFAF  F006         	goto	l2027
  4902   000CDE                     l307:
  4903   000CDE  0005               	push		;# 
  4904   000CE0  EE22  F0B5         	lfsr	2,_readyQueue+531
  4905   000CE4  EE00 F069          	lfsr	0,105
  4906   000CE8  50DE               	movf	postinc2,w,c
  4907   000CEA  26E9               	addwf	fsr0l,f,c
  4908   000CEC  50DD               	movf	postdec2,w,c
  4909   000CEE  22EA               	addwfc	fsr0h,f,c
  4910   000CF0  06EF               	decf	indf0,f,c
  4911   000CF2  EE22  F0B5         	lfsr	2,_readyQueue+531
  4912   000CF6  EE00 F069          	lfsr	0,105
  4913   000CFA  50DE               	movf	postinc2,w,c
  4914   000CFC  26E9               	addwf	fsr0l,f,c
  4915   000CFE  50DD               	movf	postdec2,w,c
  4916   000D00  22EA               	addwfc	fsr0h,f,c
  4917   000D02  50EF               	movf	indf0,w,c
  4918   000D04  0D03               	mullw	3
  4919   000D06  CFF3 F037          	movff	prodl,btemp54
  4920   000D0A  CFF4 F038          	movff	prodh,btemp55
  4921   000D0E  EE22  F0B5         	lfsr	2,_readyQueue+531
  4922   000D12  CFDE F035          	movff	postinc2,btemp52
  4923   000D16  CFDD F036          	movff	postdec2,btemp53
  4924   000D1A  5037               	movf	btemp54^0,w,c
  4925   000D1C  2435               	addwf	btemp52^0,w,c
  4926   000D1E  6E33               	movwf	btemp50^0,c
  4927   000D20  5038               	movf	btemp55^0,w,c
  4928   000D22  2036               	addwfc	btemp53^0,w,c
  4929   000D24  6E34               	movwf	(btemp50+1)^0,c
  4930   000D26  0E09               	movlw	9
  4931   000D28  2433               	addwf	btemp50^0,w,c
  4932   000D2A  6ED9               	movwf	fsr2l,c
  4933   000D2C  0E00               	movlw	0
  4934   000D2E  2034               	addwfc	btemp51^0,w,c
  4935   000D30  6EDA               	movwf	fsr2h,c
  4936   000D32  CFDE FFFD          	movff	postinc2,tosl	;volatile
  4937   000D36  CFDE FFFE          	movff	postinc2,tosh	;volatile
  4938   000D3A  CFDD FFFF          	movff	postdec2,tosu	;volatile
  4939   000D3E  EE22  F0B5         	lfsr	2,_readyQueue+531
  4940   000D42  EE00 F069          	lfsr	0,105
  4941   000D46  50DE               	movf	postinc2,w,c
  4942   000D48  26E9               	addwf	fsr0l,f,c
  4943   000D4A  50DD               	movf	postdec2,w,c
  4944   000D4C  22EA               	addwfc	fsr0h,f,c
  4945   000D4E  50EF               	movf	indf0,w,c
  4946   000D50  A4D8               	btfss	status,2,c
  4947   000D52  EFAD  F006         	goto	u77_21
  4948   000D56  EFAF  F006         	goto	u77_20
  4949   000D5A                     u77_21:
  4950   000D5A  EF6F  F006         	goto	l307
  4951   000D5E                     u77_20:
  4952   000D5E                     l2027:
  4953   000D5E  EE22  F0B5         	lfsr	2,_readyQueue+531
  4954   000D62  EE00 F003          	lfsr	0,3
  4955   000D66  50DE               	movf	postinc2,w,c
  4956   000D68  26E9               	addwf	fsr0l,f,c
  4957   000D6A  50DD               	movf	postdec2,w,c
  4958   000D6C  22EA               	addwfc	fsr0h,f,c
  4959   000D6E  0E01               	movlw	1
  4960   000D70  6EEF               	movwf	indf0,c
  4961   000D72                     l2029:
  4962                           
  4963                           ;sync.c: 34:     (INTCONbits.GIE = 1);
  4964   000D72  8EF2               	bsf	242,7,c	;volatile
  4965   000D74                     
  4966                           ; _sem_wait: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  4967   000D74  0012               	return		;funcret
  4968   000D76                     __end_of_sem_wait:
  4969                           	callstack 0
  4970                           
  4971 ;; *************** function _scheduler *****************
  4972 ;; Defined at:
  4973 ;;		line 50 in file "scheduler.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;		None
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1  [STACK] void 
  4980 ;; Registers used:
  4981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp54, btemp55, prodl, prodh
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4987 ;;      Params:         0       0       0       0       0       0       0       0       0
  4988 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4990 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4991 ;;Total ram usage:        0 bytes
  4992 ;; Hardware stack levels used: 1
  4993 ;; Hardware stack levels required when called: 3
  4994 ;; This function calls:
  4995 ;;		_priority_scheduler
  4996 ;; This function is called by:
  4997 ;;		_os_delay
  4998 ;;		_ISR_TIMER_0
  4999 ;;		_sem_wait
  5000 ;; This function uses a reentrant model
  5001 ;;
  5002                           
  5003                           	psect	text26
  5004   001CCC                     __ptext26:
  5005                           	callstack 0
  5006   001CCC                     _scheduler:
  5007                           	callstack 16
  5008   001CCC                     
  5009                           ;scheduler.c: 55:     readyQueue.taskRunning = priority_scheduler();
  5010   001CCC  EC9C  F00A         	call	_priority_scheduler	;wreg free
  5011   001CD0  C001 F2B5          	movff	btemp0,_readyQueue+531
  5012   001CD4  C002 F2B6          	movff	btemp1,_readyQueue+532
  5013   001CD8                     
  5014                           ; _scheduler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5015   001CD8  0012               	return		;funcret
  5016   001CDA                     __end_of_scheduler:
  5017                           	callstack 0
  5018                           
  5019 ;; *************** function _priority_scheduler *****************
  5020 ;; Defined at:
  5021 ;;		line 30 in file "scheduler.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;		None
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;  i               1    btemp4   unsigned char 
  5026 ;;  next_task       2  [STACK] PTR struct tcb
  5027 ;;		 -> readyQueue$readyQueue(530), readyQueue(533), 
  5028 ;;  highest_prio    1  [STACK] unsigned char 
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  2  [STACK] PTR struct tcb
  5031 ;; Registers used:
  5032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp54, btemp55, prodl, prodh
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5038 ;;      Params:         0       0       0       0       0       0       0       0       0
  5039 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5040 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5041 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5042 ;;Total ram usage:        0 bytes
  5043 ;; Hardware stack levels used: 1
  5044 ;; Hardware stack levels required when called: 3
  5045 ;; This function calls:
  5046 ;;		Nothing
  5047 ;; This function is called by:
  5048 ;;		_scheduler
  5049 ;; This function uses a reentrant model
  5050 ;;
  5051                           
  5052                           	psect	text27
  5053   001538                     __ptext27:
  5054                           	callstack 0
  5055   001538                     _priority_scheduler:
  5056                           	callstack 0
  5057                           
  5058                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5059   001538  52E6               	movf	postinc1,f,c
  5060   00153A  52E6               	movf	postinc1,f,c
  5061   00153C  52E6               	movf	postinc1,f,c
  5062   00153E                     
  5063                           ;scheduler.c: 32:     tcb_t *next_task = &readyQueue.readyQueue[0];
  5064                           ;stkvar	_next_task @ sp[(-3)+0]
  5065   00153E  0E00               	movlw	high _readyQueue
  5066   001540  6E01               	movwf	btemp0^0,c
  5067   001542  0EFE               	movlw	-2
  5068   001544  C001 FFE3          	movff	btemp0,plusw1
  5069   001548  0EA2               	movlw	low _readyQueue
  5070   00154A  6E01               	movwf	btemp0^0,c
  5071   00154C  0EFD               	movlw	-3
  5072   00154E  C001 FFE3          	movff	btemp0,plusw1
  5073   001552                     
  5074                           ;scheduler.c: 33:     uint8_t highest_priority = 0;
  5075                           ;stkvar	_highest_priority @ sp[(-3)+2]
  5076   001552  0EFF               	movlw	-1
  5077   001554  6AE3               	clrf	plusw1,c
  5078   001556                     
  5079                           ;scheduler.c: 36:     for (uint8_t i = 1; i < readyQueue.readyQueueSize; i++) {
  5080   001556  0E01               	movlw	1
  5081   001558  6E05               	movwf	btemp4^0,c
  5082   00155A  EFEF  F00A         	goto	l1977
  5083   00155E                     l1967:
  5084                           
  5085                           ;scheduler.c: 38:         if (readyQueue.readyQueue[i].task_state == READY) {
  5086   00155E  5005               	movf	btemp4^0,w,c
  5087   001560  0D6A               	mullw	106
  5088   001562  0EA5               	movlw	low (_readyQueue+3)
  5089   001564  24F3               	addwf	243,w,c
  5090   001566  6ED9               	movwf	fsr2l,c
  5091   001568  0E00               	movlw	high (_readyQueue+3)
  5092   00156A  20F4               	addwfc	prodh,w,c
  5093   00156C  6EDA               	movwf	fsr2h,c
  5094   00156E  50DF               	movf	indf2,w,c
  5095   001570  A4D8               	btfss	status,2,c
  5096   001572  EFBD  F00A         	goto	u69_21
  5097   001576  EFBF  F00A         	goto	u69_20
  5098   00157A                     u69_21:
  5099   00157A  EFEE  F00A         	goto	l1975
  5100   00157E                     u69_20:
  5101   00157E                     
  5102                           ;scheduler.c: 40:             if (readyQueue.readyQueue[i].task_priority > highest_prior
      +                          ity) {
  5103   00157E  5005               	movf	btemp4^0,w,c
  5104   001580  0D6A               	mullw	106
  5105   001582  0EA6               	movlw	low (_readyQueue+4)
  5106   001584  24F3               	addwf	243,w,c
  5107   001586  6ED9               	movwf	fsr2l,c
  5108   001588  0E00               	movlw	high (_readyQueue+4)
  5109   00158A  20F4               	addwfc	prodh,w,c
  5110   00158C  6EDA               	movwf	fsr2h,c
  5111                           
  5112                           ;stkvar	_highest_priority @ sp[(-3)+2]
  5113   00158E  0EFF               	movlw	-1
  5114   001590  CFE3 F001          	movff	plusw1,btemp0
  5115   001594  50DE               	movf	postinc2,w,c
  5116   001596  5C01               	subwf	btemp0^0,w,c
  5117   001598  B0D8               	btfsc	status,0,c
  5118   00159A  EFD1  F00A         	goto	u70_21
  5119   00159E  EFD3  F00A         	goto	u70_20
  5120   0015A2                     u70_21:
  5121   0015A2  EFEE  F00A         	goto	l1975
  5122   0015A6                     u70_20:
  5123   0015A6                     
  5124                           ;scheduler.c: 41:                 highest_priority = readyQueue.readyQueue[i].task_prior
      +                          ity;
  5125   0015A6  5005               	movf	btemp4^0,w,c
  5126   0015A8  0D6A               	mullw	106
  5127   0015AA  0EA6               	movlw	low (_readyQueue+4)
  5128   0015AC  24F3               	addwf	243,w,c
  5129   0015AE  6ED9               	movwf	fsr2l,c
  5130   0015B0  0E00               	movlw	high (_readyQueue+4)
  5131   0015B2  20F4               	addwfc	prodh,w,c
  5132   0015B4  6EDA               	movwf	fsr2h,c
  5133   0015B6  50DF               	movf	indf2,w,c
  5134   0015B8  6E38               	movwf	btemp55^0,c
  5135                           
  5136                           ;stkvar	_highest_priority @ sp[(-3)+2]
  5137   0015BA  0EFF               	movlw	-1
  5138   0015BC  C038 FFE3          	movff	btemp55,plusw1
  5139   0015C0                     
  5140                           ;scheduler.c: 42:                 next_task = &readyQueue.readyQueue[i];
  5141   0015C0  5005               	movf	btemp4^0,w,c
  5142   0015C2  0D6A               	mullw	106
  5143   0015C4  0EA2               	movlw	low _readyQueue
  5144   0015C6  24F3               	addwf	243,w,c
  5145   0015C8  6E37               	movwf	btemp54^0,c
  5146   0015CA  0E00               	movlw	high _readyQueue
  5147   0015CC  20F4               	addwfc	prodh,w,c
  5148   0015CE  6E38               	movwf	(btemp54+1)^0,c
  5149                           
  5150                           ;stkvar	_next_task @ sp[(-3)+0]
  5151   0015D0  0EFE               	movlw	-2
  5152   0015D2  C038 FFE3          	movff	btemp55,plusw1
  5153   0015D6  0EFD               	movlw	-3
  5154   0015D8  C037 FFE3          	movff	btemp54,plusw1
  5155   0015DC                     l1975:
  5156                           
  5157                           ;scheduler.c: 45:     }
  5158   0015DC  2A05               	incf	btemp4^0,f,c
  5159   0015DE                     l1977:
  5160   0015DE  EE22  F0B4         	lfsr	2,_readyQueue+530
  5161   0015E2  50DE               	movf	postinc2,w,c
  5162   0015E4  5C05               	subwf	btemp4^0,w,c
  5163   0015E6  A0D8               	btfss	status,0,c
  5164   0015E8  EFF8  F00A         	goto	u71_21
  5165   0015EC  EFFA  F00A         	goto	u71_20
  5166   0015F0                     u71_21:
  5167   0015F0  EFAF  F00A         	goto	l1967
  5168   0015F4                     u71_20:
  5169   0015F4                     
  5170                           ;scheduler.c: 47:     return next_task;
  5171                           ;stkvar	_next_task @ sp[(-3)+0]
  5172   0015F4  0EFD               	movlw	-3
  5173   0015F6  CFE3 F001          	movff	plusw1,btemp0
  5174   0015FA  0F01               	addlw	1
  5175   0015FC  CFE3 F002          	movff	plusw1,btemp1
  5176   001600                     
  5177                           ; _priority_scheduler: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
  5178   001600  52E5               	movf	postdec1,f,c
  5179   001602  52E5               	movf	postdec1,f,c
  5180   001604  52E5               	movf	postdec1,f,c
  5181   001606  0012               	return		;funcret
  5182   001608                     __end_of_priority_scheduler:
  5183                           	callstack 0
  5184                           
  5185 ;; *************** function ___awmod *****************
  5186 ;; Defined at:
  5187 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.10\pic\sources\c99\common\awmod.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;  dividend        2    wtemp14  int 
  5190 ;;  divisor         2    wtemp15  int 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  sign            1  [STACK] unsigned char 
  5193 ;;  counter         1    btemp4   unsigned char 
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  2  [STACK] int 
  5196 ;; Registers used:
  5197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp0, btemp1, btemp4, btemp28, btemp29, btemp30, btemp31
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5203 ;;      Params:         0       0       0       0       0       0       0       0       0
  5204 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5206 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5207 ;;Total ram usage:        0 bytes
  5208 ;; Hardware stack levels used: 1
  5209 ;; Hardware stack levels required when called: 3
  5210 ;; This function calls:
  5211 ;;		Nothing
  5212 ;; This function is called by:
  5213 ;;		_sem_wait
  5214 ;;		_sem_post
  5215 ;;		_read_pipe
  5216 ;;		_write_pipe
  5217 ;; This function uses a reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text28
  5221   001608                     __ptext28:
  5222                           	callstack 0
  5223   001608                     ___awmod:
  5224                           	callstack 0
  5225                           
  5226                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5227   001608  52E6               	movf	postinc1,f,c
  5228   00160A  6A05               	clrf	btemp4^0,c
  5229   00160C  BE1E               	btfsc	(btemp28+1)^0,7,c
  5230   00160E  EF0D  F00B         	goto	u63_20
  5231   001612  EF0B  F00B         	goto	u63_21
  5232   001616                     u63_21:
  5233   001616  EF13  F00B         	goto	l1915
  5234   00161A                     u63_20:
  5235   00161A  6C1D               	negf	btemp28^0,c
  5236   00161C  1E1E               	comf	(btemp28+1)^0,f,c
  5237   00161E  B0D8               	btfsc	status,0,c
  5238   001620  2A1E               	incf	(btemp28+1)^0,f,c
  5239   001622  0E01               	movlw	1
  5240   001624  6E05               	movwf	btemp4^0,c
  5241   001626                     l1915:
  5242   001626  BE20               	btfsc	(btemp30+1)^0,7,c
  5243   001628  EF1A  F00B         	goto	u64_20
  5244   00162C  EF18  F00B         	goto	u64_21
  5245   001630                     u64_21:
  5246   001630  EF1E  F00B         	goto	l1919
  5247   001634                     u64_20:
  5248   001634  6C1F               	negf	btemp30^0,c
  5249   001636  1E20               	comf	(btemp30+1)^0,f,c
  5250   001638  B0D8               	btfsc	status,0,c
  5251   00163A  2A20               	incf	(btemp30+1)^0,f,c
  5252   00163C                     l1919:
  5253                           
  5254                           ;_sign stored from btemp4
  5255                           ;register	btemp4
  5256                           ;stkvar	_sign @ sp[(-1)+0]
  5257   00163C  0EFF               	movlw	-1
  5258   00163E  C005 FFE3          	movff	btemp4,plusw1
  5259   001642  501F               	movf	btemp30^0,w,c
  5260   001644  1020               	iorwf	(btemp30+1)^0,w,c
  5261   001646  B4D8               	btfsc	status,2,c
  5262   001648  EF28  F00B         	goto	u65_21
  5263   00164C  EF2A  F00B         	goto	u65_20
  5264   001650                     u65_21:
  5265   001650  EF4E  F00B         	goto	l1937
  5266   001654                     u65_20:
  5267   001654  0E01               	movlw	1
  5268   001656  6E05               	movwf	btemp4^0,c
  5269   001658  EF32  F00B         	goto	l1927
  5270   00165C                     l1923:
  5271   00165C  90D8               	bcf	status,0,c
  5272   00165E  361F               	rlcf	btemp30^0,f,c
  5273   001660  3620               	rlcf	btemp31^0,f,c
  5274   001662  2A05               	incf	btemp4^0,f,c
  5275   001664                     l1927:
  5276   001664  AE20               	btfss	(btemp30+1)^0,7,c
  5277   001666  EF37  F00B         	goto	u66_21
  5278   00166A  EF39  F00B         	goto	u66_20
  5279   00166E                     u66_21:
  5280   00166E  EF2E  F00B         	goto	l1923
  5281   001672                     u66_20:
  5282   001672                     l1929:
  5283   001672  501F               	movf	btemp30^0,w,c
  5284   001674  5C1D               	subwf	btemp28^0,w,c
  5285   001676  5020               	movf	(btemp30+1)^0,w,c
  5286   001678  581E               	subwfb	(btemp28+1)^0,w,c
  5287   00167A  A0D8               	btfss	status,0,c
  5288   00167C  EF42  F00B         	goto	u67_21
  5289   001680  EF44  F00B         	goto	u67_20
  5290   001684                     u67_21:
  5291   001684  EF48  F00B         	goto	l1933
  5292   001688                     u67_20:
  5293   001688  501F               	movf	btemp30^0,w,c
  5294   00168A  5E1D               	subwf	btemp28^0,f,c
  5295   00168C  5020               	movf	(btemp30+1)^0,w,c
  5296   00168E  5A1E               	subwfb	(btemp28+1)^0,f,c
  5297   001690                     l1933:
  5298   001690  90D8               	bcf	status,0,c
  5299   001692  3220               	rrcf	btemp31^0,f,c
  5300   001694  321F               	rrcf	btemp30^0,f,c
  5301   001696  2E05               	decfsz	btemp4^0,f,c
  5302   001698  EF39  F00B         	goto	l1929
  5303   00169C                     l1937:
  5304                           
  5305                           ; _sign loaded to btemp4
  5306                           ;stkvar	_sign @ sp[(-1)+0]
  5307                           ;register	btemp4
  5308   00169C  0EFF               	movlw	-1
  5309   00169E  CFE3 F005          	movff	plusw1,btemp4
  5310   0016A2  5005               	movf	btemp4^0,w,c
  5311   0016A4  B4D8               	btfsc	status,2,c
  5312   0016A6  EF57  F00B         	goto	u68_21
  5313   0016AA  EF59  F00B         	goto	u68_20
  5314   0016AE                     u68_21:
  5315   0016AE  EF5D  F00B         	goto	l1941
  5316   0016B2                     u68_20:
  5317   0016B2  6C1D               	negf	btemp28^0,c
  5318   0016B4  1E1E               	comf	(btemp28+1)^0,f,c
  5319   0016B6  B0D8               	btfsc	status,0,c
  5320   0016B8  2A1E               	incf	(btemp28+1)^0,f,c
  5321   0016BA                     l1941:
  5322   0016BA  C01D F001          	movff	btemp28,btemp0
  5323   0016BE  C01E F002          	movff	btemp28+1,btemp1
  5324   0016C2                     
  5325                           ; ___awmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsi
      +                          ze = 0, vargsize = 0
  5326   0016C2  52E5               	movf	postdec1,f,c
  5327   0016C4  0012               	return		;funcret
  5328   0016C6                     __end_of___awmod:
  5329                           	callstack 0
  5330                           
  5331 ;; *************** function _tarefa_controle_motores *****************
  5332 ;; Defined at:
  5333 ;;		line 79 in file "user_app.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;		None
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;  velocidades_    8  [STACK] struct .
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  1  [STACK] void 
  5340 ;; Registers used:
  5341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp13, btemp2
      +0, btemp28, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, prodh, cstack
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5347 ;;      Params:         0       0       0       0       0       0       0       0       0
  5348 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5350 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5351 ;;Total ram usage:        0 bytes
  5352 ;; Hardware stack levels used: 1
  5353 ;; Hardware stack levels required when called: 7
  5354 ;; This function calls:
  5355 ;;		_mutex_lock
  5356 ;;		_mutex_unlock
  5357 ;;		_os_delay
  5358 ;;		_pwm_set_duty_cycle
  5359 ;; This function is called by:
  5360 ;;		_main
  5361 ;; This function uses a reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text29
  5365   001A50                     __ptext29:
  5366                           	callstack 0
  5367   001A50                     _tarefa_controle_motores:
  5368                           	callstack 0
  5369                           
  5370                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5371   001A50  0E08               	movlw	8
  5372   001A52  26E1               	addwf	fsr1l,f,c
  5373   001A54  0E00               	movlw	0
  5374   001A56  22E2               	addwfc	fsr1h,f,c
  5375   001A58                     l121:
  5376   001A58                     
  5377                           ;user_app.c: 85:         mutex_lock(&mutex_motores);
  5378                           ;register	btemp12
  5379   001A58  0E41               	movlw	low _mutex_motores
  5380   001A5A  6E0D               	movwf	btemp12^0,c
  5381   001A5C  EC7E  F00E         	call	_mutex_lock	;wreg free
  5382   001A60                     
  5383                           ;user_app.c: 86:         velocidades_locais = velocidade_motores;
  5384   001A60  EE20  F039         	lfsr	2,_velocidade_motores
  5385                           
  5386                           ;stkvar	_velocidades_locais @ sp[(-8)+0]
  5387   001A64  0E08               	movlw	8
  5388   001A66  6E01               	movwf	btemp0^0,c
  5389   001A68  0EF8               	movlw	-8
  5390   001A6A                     us88_2999:
  5391   001A6A  CFDE FFE3          	movff	postinc2,plusw1
  5392   001A6E  28E8               	incf	wreg,w,c
  5393   001A70  2E01               	decfsz	btemp0^0,f,c
  5394   001A72  D7FB               	bra	us88_2999
  5395   001A74                     
  5396                           ;user_app.c: 87:         mutex_unlock(&mutex_motores);
  5397                           ;register	btemp12
  5398   001A74  0E41               	movlw	low _mutex_motores
  5399   001A76  6E0D               	movwf	btemp12^0,c
  5400   001A78  EC79  F00E         	call	_mutex_unlock	;wreg free
  5401   001A7C                     
  5402                           ;user_app.c: 91:         pwm_set_duty_cycle(velocidades_locais.motor1_speed);
  5403                           ;stkvar	_velocidades_locais @ sp[(-8)+0]
  5404                           ;register	wtemp6
  5405   001A7C  0EF8               	movlw	-8
  5406   001A7E  CFE3 F00D          	movff	plusw1,btemp12
  5407   001A82  0F01               	addlw	1
  5408   001A84  CFE3 F00E          	movff	plusw1,btemp13
  5409   001A88  ECE5  F00D         	call	_pwm_set_duty_cycle	;wreg free
  5410   001A8C                     
  5411                           ;user_app.c: 94:         os_delay(50);
  5412                           ;register	btemp12
  5413   001A8C  0E32               	movlw	50
  5414   001A8E  6E0D               	movwf	btemp12^0,c
  5415   001A90  ECBB  F006         	call	_os_delay	;wreg free
  5416   001A94  EF2C  F00D         	goto	l121
  5417                           
  5418                           ; _tarefa_controle_motores: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 0, argsize = 0, vargsize = 0
  5419   001A98  0EF8               	movlw	248
  5420   001A9A  26E1               	addwf	fsr1l,f,c
  5421   001A9C  0EFF               	movlw	255
  5422   001A9E  22E2               	addwfc	fsr1h,f,c
  5423   001AA0  0012               	return		;funcret
  5424   001AA2                     __end_of_tarefa_controle_motores:
  5425                           	callstack 0
  5426                           
  5427 ;; *************** function _pwm_set_duty_cycle *****************
  5428 ;; Defined at:
  5429 ;;		line 69 in file "io.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  duty_cycle      2    wtemp6   unsigned short 
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;		None
  5434 ;; Return value:  Size  Location     Type
  5435 ;;                  1  [STACK] void 
  5436 ;; Registers used:
  5437 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp12, btemp13, btemp54, btemp55
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5443 ;;      Params:         0       0       0       0       0       0       0       0       0
  5444 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5445 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5446 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5447 ;;Total ram usage:        0 bytes
  5448 ;; Hardware stack levels used: 1
  5449 ;; Hardware stack levels required when called: 3
  5450 ;; This function calls:
  5451 ;;		Nothing
  5452 ;; This function is called by:
  5453 ;;		_tarefa_controle_motores
  5454 ;; This function uses a reentrant model
  5455 ;;
  5456                           
  5457                           	psect	text30
  5458   001BCA                     __ptext30:
  5459                           	callstack 0
  5460   001BCA                     _pwm_set_duty_cycle:
  5461                           	callstack 21
  5462   001BCA                     
  5463                           ;io.c: 69: void pwm_set_duty_cycle(uint16_t duty_cycle);io.c: 70: {;io.c: 74:     CCPR1L
      +                           = (duty_cycle >> 2);
  5464   001BCA  C00D F037          	movff	btemp12,btemp54
  5465   001BCE  C00E F038          	movff	btemp12+1,btemp55
  5466   001BD2  90D8               	bcf	status,0,c
  5467   001BD4  3238               	rrcf	btemp55^0,f,c
  5468   001BD6  3237               	rrcf	btemp54^0,f,c
  5469   001BD8  90D8               	bcf	status,0,c
  5470   001BDA  3238               	rrcf	btemp55^0,f,c
  5471   001BDC  3237               	rrcf	btemp54^0,f,c
  5472   001BDE  5037               	movf	btemp54^0,w,c
  5473   001BE0  6EBE               	movwf	190,c	;volatile
  5474   001BE2                     
  5475                           ;io.c: 75:     CCP1CONbits.DC1B = (duty_cycle & 0x03);
  5476   001BE2  C00D F038          	movff	wtemp6,btemp55
  5477   001BE6  0E03               	movlw	3
  5478   001BE8  1638               	andwf	btemp55^0,f,c
  5479   001BEA  3A38               	swapf	btemp55^0,f,c
  5480   001BEC  50BD               	movf	189,w,c	;volatile
  5481   001BEE  1838               	xorwf	btemp55^0,w,c
  5482   001BF0  0BCF               	andlw	-49
  5483   001BF2  1838               	xorwf	btemp55^0,w,c
  5484   001BF4  6EBD               	movwf	189,c	;volatile
  5485   001BF6                     
  5486                           ; _pwm_set_duty_cycle: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
  5487   001BF6  0012               	return		;funcret
  5488   001BF8                     __end_of_pwm_set_duty_cycle:
  5489                           	callstack 0
  5490                           
  5491 ;; *************** function _tarefa_leitura_sensores *****************
  5492 ;; Defined at:
  5493 ;;		line 102 in file "user_app.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;		None
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  dados_sensor    4  [STACK] struct .
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  1  [STACK] void 
  5500 ;; Registers used:
  5501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp13, btemp1
      +4, btemp15, btemp20, btemp28, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, pr
      +odh, cstack
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5507 ;;      Params:         0       0       0       0       0       0       0       0       0
  5508 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5510 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5511 ;;Total ram usage:        0 bytes
  5512 ;; Hardware stack levels used: 1
  5513 ;; Hardware stack levels required when called: 6
  5514 ;; This function calls:
  5515 ;;		_adc_read
  5516 ;;		_os_delay
  5517 ;;		_set_channel
  5518 ;;		_write_pipe
  5519 ;; This function is called by:
  5520 ;;		_main
  5521 ;; This function uses a reentrant model
  5522 ;;
  5523                           
  5524                           	psect	text31
  5525   001920                     __ptext31:
  5526                           	callstack 0
  5527   001920                     _tarefa_leitura_sensores:
  5528                           	callstack 0
  5529                           
  5530                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5531   001920  52E6               	movf	postinc1,f,c
  5532   001922  52E6               	movf	postinc1,f,c
  5533   001924  52E6               	movf	postinc1,f,c
  5534   001926  52E6               	movf	postinc1,f,c
  5535   001928                     l127:
  5536   001928                     
  5537                           ;user_app.c: 107:         set_channel(CHANNEL_0);
  5538                           ;register	btemp28
  5539   001928  0E00               	movlw	0
  5540   00192A  6E1D               	movwf	btemp28^0,c
  5541   00192C  EC55  F00E         	call	_set_channel	;wreg free
  5542   001930                     
  5543                           ;user_app.c: 108:         dados_sensores.giroscopio = adc_read();
  5544   001930  EC3E  F00E         	call	_adc_read	;wreg free
  5545                           
  5546                           ;stkvar	_dados_sensores @ sp[(-4)+0]
  5547   001934  0EFC               	movlw	-4
  5548   001936  C001 FFE3          	movff	btemp0,plusw1
  5549   00193A  0F01               	addlw	1
  5550   00193C  C002 FFE3          	movff	btemp1,plusw1
  5551   001940                     
  5552                           ;user_app.c: 110:         set_channel(CHANNEL_1);
  5553                           ;register	btemp28
  5554   001940  0E01               	movlw	1
  5555   001942  6E1D               	movwf	btemp28^0,c
  5556   001944  EC55  F00E         	call	_set_channel	;wreg free
  5557   001948                     
  5558                           ;user_app.c: 111:         dados_sensores.acelerometro = adc_read();
  5559   001948  EC3E  F00E         	call	_adc_read	;wreg free
  5560                           
  5561                           ;stkvar	_dados_sensores @ sp[(-4)+0]
  5562   00194C  0EFE               	movlw	254
  5563   00194E  24E1               	addwf	fsr1l,w,c
  5564   001950  6ED9               	movwf	fsr2l,c
  5565   001952  0EFF               	movlw	255
  5566   001954  20E2               	addwfc	fsr1h,w,c
  5567   001956  6EDA               	movwf	fsr2h,c
  5568   001958  C001 FFDE          	movff	btemp0,postinc2
  5569   00195C  C002 FFDD          	movff	btemp1,postdec2
  5570   001960                     
  5571                           ;user_app.c: 114:         write_pipe(&pipe_sensores, &dados_sensores, sizeof(sensor_data
      +                          _t));
  5572                           ;register	btemp12
  5573   001960  0E81               	movlw	low _pipe_sensores
  5574   001962  6E0D               	movwf	btemp12^0,c
  5575                           
  5576                           ;register	btemp13
  5577   001964  0E04               	movlw	4
  5578   001966  6E0E               	movwf	btemp13^0,c
  5579                           
  5580                           ;stkvar	_dados_sensores @ sp[(-4)+0]
  5581   001968  0EFC               	movlw	252
  5582   00196A  24E1               	addwf	fsr1l,w,c
  5583   00196C  6E37               	movwf	btemp54^0,c
  5584   00196E  0EFF               	movlw	255
  5585   001970  20E2               	addwfc	fsr1h,w,c
  5586   001972  6E38               	movwf	btemp55^0,c
  5587                           
  5588                           ;register	wtemp7
  5589   001974  C037 F00F          	movff	btemp54,btemp14
  5590   001978  C038 F010          	movff	btemp55,btemp15
  5591   00197C  ECC0  F009         	call	_write_pipe	;wreg free
  5592   001980                     
  5593                           ;user_app.c: 116:         os_delay(150);
  5594                           ;register	btemp12
  5595   001980  0E96               	movlw	150
  5596   001982  6E0D               	movwf	btemp12^0,c
  5597   001984  ECBB  F006         	call	_os_delay	;wreg free
  5598   001988  EF94  F00C         	goto	l127
  5599                           
  5600                           ; _tarefa_leitura_sensores: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 0, argsize = 0, vargsize = 0
  5601   00198C  52E5               	movf	postdec1,f,c
  5602   00198E  52E5               	movf	postdec1,f,c
  5603   001990  52E5               	movf	postdec1,f,c
  5604   001992  52E5               	movf	postdec1,f,c
  5605   001994  0012               	return		;funcret
  5606   001996                     __end_of_tarefa_leitura_sensores:
  5607                           	callstack 0
  5608                           
  5609 ;; *************** function _write_pipe *****************
  5610 ;; Defined at:
  5611 ;;		line 34 in file "pipe.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  p               1    btemp12  PTR struct pipe
  5614 ;;		 -> pipe_bateria(33), pipe_sensores(33), 
  5615 ;;  buffer          2    wtemp7   PTR void 
  5616 ;;		 -> nivel_bateria(2), dados_sensores(4), 
  5617 ;;  size            1    btemp13  unsigned char 
  5618 ;; Auto vars:     Size  Location     Type
  5619 ;;  size            1    btemp13  unsigned char 
  5620 ;;  p               1    btemp12  PTR struct pipe
  5621 ;;		 -> pipe_bateria(33), pipe_sensores(33), 
  5622 ;;  i               1  [STACK] unsigned char 
  5623 ;;  data_buffer     2  [STACK] PTR unsigned char 
  5624 ;;		 -> nivel_bateria(2), dados_sensores(4), 
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1  [STACK] void 
  5627 ;; Registers used:
  5628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp13, btemp1
      +4, btemp15, btemp20, btemp28, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, pr
      +odh, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5634 ;;      Params:         0       0       0       0       0       0       0       0       0
  5635 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5637 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5638 ;;Total ram usage:        0 bytes
  5639 ;; Hardware stack levels used: 1
  5640 ;; Hardware stack levels required when called: 5
  5641 ;; This function calls:
  5642 ;;		___awmod
  5643 ;;		_sem_post
  5644 ;;		_sem_wait
  5645 ;; This function is called by:
  5646 ;;		_tarefa_leitura_sensores
  5647 ;;		_tarefa_monitoramento_bateria
  5648 ;; This function uses a reentrant model
  5649 ;;
  5650                           
  5651                           	psect	text32
  5652   001380                     __ptext32:
  5653                           	callstack 0
  5654   001380                     _write_pipe:
  5655                           	callstack 0
  5656                           
  5657                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5658   001380  52E6               	movf	postinc1,f,c
  5659   001382  52E6               	movf	postinc1,f,c
  5660   001384  52E6               	movf	postinc1,f,c
  5661   001386                     
  5662                           ;pipe.c: 34: void write_pipe(pipe_t *p, void *buffer, uint8_t size);pipe.c: 35: {;pipe.c
      +                          : 36:     char *data_buffer = (char*)buffer;
  5663                           ;stkvar	_data_buffer @ sp[(-3)+1]
  5664   001386  0EFF               	movlw	-1
  5665   001388  C010 FFE3          	movff	btemp15,plusw1
  5666   00138C  0EFE               	movlw	-2
  5667   00138E  C00F FFE3          	movff	btemp14,plusw1
  5668   001392                     
  5669                           ;pipe.c: 37:     for (uint8_t i = 0; i < size; i++) {
  5670   001392  6A05               	clrf	btemp4^0,c
  5671   001394  EF24  F00A         	goto	l2141
  5672   001398                     l346:
  5673                           
  5674                           ;pipe.c: 38:         (INTCONbits.GIE = 0);
  5675   001398  9EF2               	bcf	242,7,c	;volatile
  5676                           
  5677                           ;_i stored from btemp4
  5678                           ;register	btemp4
  5679                           ;stkvar	_i @ sp[(-3)+0]
  5680   00139A  0EFD               	movlw	-3
  5681   00139C  C005 FFE3          	movff	btemp4,plusw1
  5682   0013A0                     
  5683                           ;pipe.c: 39:         sem_wait(&p->pipe_sem_write);
  5684   0013A0  500D               	movf	btemp12^0,w,c
  5685   0013A2  0F13               	addlw	19
  5686                           
  5687                           ;register	btemp20
  5688   0013A4  6E15               	movwf	btemp20^0,c
  5689   0013A6  EC60  F005         	call	_sem_wait	;wreg free
  5690   0013AA                     
  5691                           ;pipe.c: 40:         p->pipe_data[p->pipe_pos_write] = data_buffer[i];
  5692                           ;stkvar	_i @ sp[(-3)+0]
  5693   0013AA  0EFD               	movlw	-3
  5694   0013AC  CFE3 F038          	movff	plusw1,btemp55
  5695                           
  5696                           ;stkvar	_data_buffer @ sp[(-3)+1]
  5697   0013B0  0EFE               	movlw	-2
  5698   0013B2  CFE3 F035          	movff	plusw1,btemp52
  5699   0013B6  0F01               	addlw	1
  5700   0013B8  CFE3 F036          	movff	plusw1,btemp53
  5701   0013BC  5038               	movf	btemp55^0,w,c
  5702   0013BE  2435               	addwf	btemp52^0,w,c
  5703   0013C0  6ED9               	movwf	fsr2l,c
  5704   0013C2  0E00               	movlw	0
  5705   0013C4  2036               	addwfc	btemp53^0,w,c
  5706   0013C6  6EDA               	movwf	fsr2h,c
  5707   0013C8  500D               	movf	btemp12^0,w,c
  5708   0013CA  6EE9               	movwf	fsr0l,c
  5709   0013CC  6AEA               	clrf	fsr0h,c
  5710   0013CE  0E01               	movlw	1
  5711   0013D0  26E9               	addwf	fsr0l,f,c
  5712   0013D2  50EF               	movf	indf0,w,c
  5713   0013D4  6E38               	movwf	btemp55^0,c
  5714   0013D6  500D               	movf	btemp12^0,w,c
  5715   0013D8  6EE9               	movwf	fsr0l,c
  5716   0013DA  6AEA               	clrf	fsr0h,c
  5717   0013DC  0E02               	movlw	2
  5718   0013DE  26E9               	addwf	fsr0l,f,c
  5719   0013E0  CFEE F035          	movff	postinc0,btemp52
  5720   0013E4  CFED F036          	movff	postdec0,btemp53
  5721   0013E8  5038               	movf	btemp55^0,w,c
  5722   0013EA  2435               	addwf	btemp52^0,w,c
  5723   0013EC  6EE9               	movwf	fsr0l,c
  5724   0013EE  0E00               	movlw	0
  5725   0013F0  2036               	addwfc	btemp53^0,w,c
  5726   0013F2  6EEA               	movwf	fsr0h,c
  5727   0013F4  CFDF FFEF          	movff	indf2,indf0
  5728   0013F8                     
  5729                           ;pipe.c: 41:         p->pipe_pos_write = (p->pipe_pos_write + 1) % p->pipe_size;
  5730   0013F8  500D               	movf	btemp12^0,w,c
  5731   0013FA  6ED9               	movwf	fsr2l,c
  5732   0013FC  6ADA               	clrf	fsr2h,c
  5733   0013FE  0E01               	movlw	1
  5734   001400  26D9               	addwf	fsr2l,f,c
  5735   001402  500D               	movf	btemp12^0,w,c
  5736   001404  6EE9               	movwf	fsr0l,c
  5737   001406  6AEA               	clrf	fsr0h,c
  5738   001408  0E01               	movlw	1
  5739   00140A  26E9               	addwf	fsr0l,f,c
  5740   00140C  50EF               	movf	indf0,w,c
  5741   00140E  6E38               	movwf	btemp55^0,c
  5742   001410  0E01               	movlw	1
  5743   001412  2438               	addwf	btemp55^0,w,c
  5744                           
  5745                           ;register	wtemp14
  5746   001414  6E1D               	movwf	btemp28^0,c
  5747   001416  6A1E               	clrf	(btemp28+1)^0,c
  5748   001418  0E00               	movlw	0
  5749   00141A  221E               	addwfc	(btemp28+1)^0,f,c
  5750   00141C  500D               	movf	btemp12^0,w,c
  5751   00141E  6EE9               	movwf	fsr0l,c
  5752   001420  6AEA               	clrf	fsr0h,c
  5753   001422  0E04               	movlw	4
  5754   001424  26E9               	addwf	fsr0l,f,c
  5755   001426  50EF               	movf	indf0,w,c
  5756                           
  5757                           ;register	wtemp15
  5758   001428  6E1F               	movwf	btemp30^0,c
  5759   00142A  6A20               	clrf	btemp31^0,c
  5760   00142C  EC04  F00B         	call	___awmod	;wreg free
  5761   001430  5001               	movf	btemp0^0,w,c
  5762   001432  6EDF               	movwf	indf2,c
  5763   001434                     
  5764                           ;pipe.c: 42:         sem_post(&p->pipe_sem_read);
  5765   001434  500D               	movf	btemp12^0,w,c
  5766   001436  0F05               	addlw	5
  5767                           
  5768                           ;register	btemp20
  5769   001438  6E15               	movwf	btemp20^0,c
  5770   00143A  ECBE  F00B         	call	_sem_post	;wreg free
  5771   00143E                     
  5772                           ;pipe.c: 43:         (INTCONbits.GIE = 1);
  5773   00143E  8EF2               	bsf	242,7,c	;volatile
  5774   001440                     
  5775                           ; _i loaded to btemp4
  5776                           ;stkvar	_i @ sp[(-3)+0]
  5777                           ;register	btemp4
  5778   001440  0EFD               	movlw	-3
  5779   001442  CFE3 F005          	movff	plusw1,btemp4
  5780                           
  5781                           ;pipe.c: 44:     }
  5782   001446  2A05               	incf	btemp4^0,f,c
  5783   001448                     l2141:
  5784   001448  500E               	movf	btemp13^0,w,c
  5785   00144A  5C05               	subwf	btemp4^0,w,c
  5786   00144C  A0D8               	btfss	status,0,c
  5787   00144E  EF2B  F00A         	goto	u86_21
  5788   001452  EF2D  F00A         	goto	u86_20
  5789   001456                     u86_21:
  5790   001456  EFCC  F009         	goto	l346
  5791   00145A                     u86_20:
  5792   00145A                     
  5793                           ; _write_pipe: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5794   00145A  52E5               	movf	postdec1,f,c
  5795   00145C  52E5               	movf	postdec1,f,c
  5796   00145E  52E5               	movf	postdec1,f,c
  5797   001460  0012               	return		;funcret
  5798   001462                     __end_of_write_pipe:
  5799                           	callstack 0
  5800                           
  5801 ;; *************** function _adc_read *****************
  5802 ;; Defined at:
  5803 ;;		line 28 in file "io.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;		None
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;		None
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  2  [STACK] int 
  5810 ;; Registers used:
  5811 ;;		btemp0, btemp1
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5817 ;;      Params:         0       0       0       0       0       0       0       0       0
  5818 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5819 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5820 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5821 ;;Total ram usage:        0 bytes
  5822 ;; Hardware stack levels used: 1
  5823 ;; Hardware stack levels required when called: 3
  5824 ;; This function calls:
  5825 ;;		Nothing
  5826 ;; This function is called by:
  5827 ;;		_tarefa_leitura_sensores
  5828 ;;		_tarefa_monitoramento_bateria
  5829 ;; This function uses a reentrant model
  5830 ;;
  5831                           
  5832                           	psect	text33
  5833   001C7C                     __ptext33:
  5834                           	callstack 0
  5835   001C7C                     _adc_read:
  5836                           	callstack 21
  5837   001C7C                     
  5838                           ;io.c: 30:     ADCON0bits.GO = 1;
  5839   001C7C  82C2               	bsf	194,1,c	;volatile
  5840   001C7E                     l429:
  5841   001C7E  B2C2               	btfsc	194,1,c	;volatile
  5842   001C80  EF44  F00E         	goto	u85_21
  5843   001C84  EF46  F00E         	goto	u85_20
  5844   001C88                     u85_21:
  5845   001C88  EF3F  F00E         	goto	l429
  5846   001C8C                     u85_20:
  5847   001C8C                     
  5848                           ;io.c: 32:     return ADRES;
  5849   001C8C  CFC3 F001          	movff	4035,btemp0	;volatile
  5850   001C90  CFC4 F002          	movff	4036,btemp1	;volatile
  5851   001C94                     
  5852                           ; _adc_read: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, args
      +                          ize = 0, vargsize = 0
  5853   001C94  0012               	return		;funcret
  5854   001C96                     __end_of_adc_read:
  5855                           	callstack 0
  5856                           
  5857 ;; *************** function _tarefa_monitoramento_bateria *****************
  5858 ;; Defined at:
  5859 ;;		line 120 in file "user_app.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;		None
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;  nivel_bateri    2  [STACK] int 
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  1  [STACK] void 
  5866 ;; Registers used:
  5867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp12, btemp13, btemp1
      +4, btemp15, btemp20, btemp28, btemp29, btemp30, btemp31, btemp50, btemp51, btemp52, btemp53, btemp54, btemp55, prodl, pr
      +odh, cstack
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5873 ;;      Params:         0       0       0       0       0       0       0       0       0
  5874 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5875 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5876 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5877 ;;Total ram usage:        0 bytes
  5878 ;; Hardware stack levels used: 1
  5879 ;; Hardware stack levels required when called: 6
  5880 ;; This function calls:
  5881 ;;		_adc_read
  5882 ;;		_os_delay
  5883 ;;		_set_channel
  5884 ;;		_write_pipe
  5885 ;; This function is called by:
  5886 ;;		_main
  5887 ;; This function uses a reentrant model
  5888 ;;
  5889                           
  5890                           	psect	text34
  5891   001AA2                     __ptext34:
  5892                           	callstack 0
  5893   001AA2                     _tarefa_monitoramento_bateria:
  5894                           	callstack 0
  5895                           
  5896                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5897   001AA2  52E6               	movf	postinc1,f,c
  5898   001AA4  52E6               	movf	postinc1,f,c
  5899   001AA6                     l133:
  5900   001AA6                     
  5901                           ;user_app.c: 125:         set_channel(CHANNEL_2);
  5902                           ;register	btemp28
  5903   001AA6  0E02               	movlw	2
  5904   001AA8  6E1D               	movwf	btemp28^0,c
  5905   001AAA  EC55  F00E         	call	_set_channel	;wreg free
  5906   001AAE                     
  5907                           ;user_app.c: 126:         nivel_bateria = adc_read();
  5908   001AAE  EC3E  F00E         	call	_adc_read	;wreg free
  5909                           
  5910                           ;stkvar	_nivel_bateria @ sp[(-2)+0]
  5911   001AB2  0EFE               	movlw	-2
  5912   001AB4  C001 FFE3          	movff	btemp0,plusw1
  5913   001AB8  0F01               	addlw	1
  5914   001ABA  C002 FFE3          	movff	btemp1,plusw1
  5915   001ABE                     
  5916                           ;user_app.c: 129:         write_pipe(&pipe_bateria, &nivel_bateria, sizeof(int));
  5917                           ;register	btemp12
  5918   001ABE  0E60               	movlw	low _pipe_bateria
  5919   001AC0  6E0D               	movwf	btemp12^0,c
  5920                           
  5921                           ;register	btemp13
  5922   001AC2  0E02               	movlw	2
  5923   001AC4  6E0E               	movwf	btemp13^0,c
  5924                           
  5925                           ;stkvar	_nivel_bateria @ sp[(-2)+0]
  5926   001AC6  0EFE               	movlw	254
  5927   001AC8  24E1               	addwf	fsr1l,w,c
  5928   001ACA  6E37               	movwf	btemp54^0,c
  5929   001ACC  0EFF               	movlw	255
  5930   001ACE  20E2               	addwfc	fsr1h,w,c
  5931   001AD0  6E38               	movwf	btemp55^0,c
  5932                           
  5933                           ;register	wtemp7
  5934   001AD2  C037 F00F          	movff	btemp54,btemp14
  5935   001AD6  C038 F010          	movff	btemp55,btemp15
  5936   001ADA  ECC0  F009         	call	_write_pipe	;wreg free
  5937   001ADE                     
  5938                           ;user_app.c: 133:         os_delay(250);
  5939                           ;register	btemp12
  5940   001ADE  0EFA               	movlw	250
  5941   001AE0  6E0D               	movwf	btemp12^0,c
  5942   001AE2  ECBB  F006         	call	_os_delay	;wreg free
  5943   001AE6  EF53  F00D         	goto	l133
  5944                           
  5945                           ; _tarefa_monitoramento_bateria: autosize = 2, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
  5946   001AEA  52E5               	movf	postdec1,f,c
  5947   001AEC  52E5               	movf	postdec1,f,c
  5948   001AEE  0012               	return		;funcret
  5949   001AF0                     __end_of_tarefa_monitoramento_bateria:
  5950                           	callstack 0
  5951                           
  5952 ;; *************** function _ISR_TIMER_0 *****************
  5953 ;; Defined at:
  5954 ;;		line 25 in file "hardware.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;		None
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;		None
  5959 ;; Return value:  Size  Location     Type
  5960 ;;                  1    wreg      void 
  5961 ;; Registers used:
  5962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp1, btemp4, btemp54, btemp55, prodl,
      + prodh
  5963 ;; Tracked objects:
  5964 ;;		On entry : 0/0
  5965 ;;		On exit  : 0/0
  5966 ;;		Unchanged: 0/0
  5967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5968 ;;      Params:         0       0       0       0       0       0       0       0       0
  5969 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5970 ;;      Temps:         14       0       0       0       0       0       0       0       0
  5971 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5972 ;;Total ram usage:       14 bytes
  5973 ;; Hardware stack levels used: 1
  5974 ;; Hardware stack levels required when called: 2
  5975 ;; This function calls:
  5976 ;;		_os_task_time_decrease
  5977 ;;		_scheduler
  5978 ;; This function is called by:
  5979 ;;		Interrupt level 2
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           	psect	intcode
  5984   000008                     __pintcode:
  5985                           	callstack 0
  5986   000008                     _ISR_TIMER_0:
  5987                           	callstack 18
  5988                           
  5989                           ;incstack = 0
  5990   000008  ED01  F004         	call	int_func,f	;refresh shadow registers
  5991                           
  5992                           	psect	intcode_body
  5993   000802                     __pintcode_body:
  5994                           	callstack 18
  5995   000802                     int_func:
  5996                           	callstack 18
  5997   000802  0006               	pop		; remove dummy address from shadow register refresh
  5998   000804  CFE9 F055          	movff	fsr0l,??_ISR_TIMER_0+6
  5999   000808  CFEA F056          	movff	fsr0h,??_ISR_TIMER_0+7
  6000   00080C  CFE1 F057          	movff	fsr1l,??_ISR_TIMER_0+8
  6001   000810  CFE2 F058          	movff	fsr1h,??_ISR_TIMER_0+9
  6002   000814  CFD9 F059          	movff	fsr2l,??_ISR_TIMER_0+10
  6003   000818  CFDA F05A          	movff	fsr2h,??_ISR_TIMER_0+11
  6004   00081C  CFF3 F05B          	movff	prodl,??_ISR_TIMER_0+12
  6005   000820  CFF4 F05C          	movff	prodh,??_ISR_TIMER_0+13
  6006   000824  EE16  F05C         	lfsr	1,___inthi_sp
  6007   000828  C001 FFE6          	movff	btemp0,postinc1
  6008   00082C  C002 FFE6          	movff	btemp1,postinc1
  6009   000830  C005 FFE6          	movff	btemp4,postinc1
  6010   000834  C037 FFE6          	movff	btemp54,postinc1
  6011   000838  C038 FFE6          	movff	btemp55,postinc1
  6012   00083C                     
  6013                           ;hardware.c: 27:     (INTCONbits.GIE = 0);
  6014   00083C  9EF2               	bcf	242,7,c	;volatile
  6015                           
  6016                           ;hardware.c: 29:     if (INTCONbits.TMR0IF == 1) {
  6017   00083E  A4F2               	btfss	242,2,c	;volatile
  6018   000840  EF24  F004         	goto	i2u89_41
  6019   000844  EF26  F004         	goto	i2u89_40
  6020   000848                     i2u89_41:
  6021   000848  EF43  F005         	goto	i2l2239
  6022   00084C                     i2u89_40:
  6023   00084C                     
  6024                           ;hardware.c: 30:         INTCONbits.TMR0IF = 0;
  6025   00084C  94F2               	bcf	242,2,c	;volatile
  6026   00084E                     
  6027                           ;hardware.c: 33:         os_task_time_decrease();
  6028   00084E  EC4C  F00C         	call	_os_task_time_decrease	;wreg free
  6029   000852  EE22  F0B5         	lfsr	2,_readyQueue+531
  6030   000856  EE00 F003          	lfsr	0,3
  6031   00085A  50DE               	movf	postinc2,w,c
  6032   00085C  26E9               	addwf	fsr0l,f,c
  6033   00085E  50DD               	movf	postdec2,w,c
  6034   000860  22EA               	addwfc	fsr0h,f,c
  6035   000862  04EE               	decf	postinc0,w,c
  6036   000864  A4D8               	btfss	status,2,c
  6037   000866  EF37  F004         	goto	i2u90_41
  6038   00086A  EF39  F004         	goto	i2u90_40
  6039   00086E                     i2u90_41:
  6040   00086E  EFA3  F004         	goto	i2l2219
  6041   000872                     i2u90_40:
  6042   000872  EE22  F0B5         	lfsr	2,_readyQueue+531
  6043   000876  EE00 F006          	lfsr	0,6
  6044   00087A  50DE               	movf	postinc2,w,c
  6045   00087C  26E9               	addwf	fsr0l,f,c
  6046   00087E  50DD               	movf	postdec2,w,c
  6047   000880  22EA               	addwfc	fsr0h,f,c
  6048   000882  CFE0 FFEF          	movff	bsr,indf0	;volatile
  6049   000886  EE22  F0B5         	lfsr	2,_readyQueue+531
  6050   00088A  EE00 F008          	lfsr	0,8
  6051   00088E  50DE               	movf	postinc2,w,c
  6052   000890  26E9               	addwf	fsr0l,f,c
  6053   000892  50DD               	movf	postdec2,w,c
  6054   000894  22EA               	addwfc	fsr0h,f,c
  6055   000896  CFD8 FFEF          	movff	status,indf0	;volatile
  6056   00089A  EE22  F0B5         	lfsr	2,_readyQueue+531
  6057   00089E  EE00 F007          	lfsr	0,7
  6058   0008A2  50DE               	movf	postinc2,w,c
  6059   0008A4  26E9               	addwf	fsr0l,f,c
  6060   0008A6  50DD               	movf	postdec2,w,c
  6061   0008A8  22EA               	addwfc	fsr0h,f,c
  6062   0008AA  CFE8 FFEF          	movff	wreg,indf0	;volatile
  6063   0008AE  EE22  F0B5         	lfsr	2,_readyQueue+531
  6064   0008B2  EE00 F069          	lfsr	0,105
  6065   0008B6  50DE               	movf	postinc2,w,c
  6066   0008B8  26E9               	addwf	fsr0l,f,c
  6067   0008BA  50DD               	movf	postdec2,w,c
  6068   0008BC  22EA               	addwfc	fsr0h,f,c
  6069   0008BE  6AEF               	clrf	indf0,c
  6070   0008C0  EF92  F004         	goto	i2l2215
  6071   0008C4                     i2l2211:
  6072   0008C4  EE22  F0B5         	lfsr	2,_readyQueue+531
  6073   0008C8  EE00 F069          	lfsr	0,105
  6074   0008CC  50DE               	movf	postinc2,w,c
  6075   0008CE  26E9               	addwf	fsr0l,f,c
  6076   0008D0  50DD               	movf	postdec2,w,c
  6077   0008D2  22EA               	addwfc	fsr0h,f,c
  6078   0008D4  50EF               	movf	indf0,w,c
  6079   0008D6  0D03               	mullw	3
  6080   0008D8  CFF3 F04F          	movff	prodl,??_ISR_TIMER_0
  6081   0008DC  CFF4 F050          	movff	prodh,??_ISR_TIMER_0+1
  6082   0008E0  EE22  F0B5         	lfsr	2,_readyQueue+531
  6083   0008E4  CFDE F051          	movff	postinc2,??_ISR_TIMER_0+2
  6084   0008E8  CFDD F052          	movff	postdec2,??_ISR_TIMER_0+3
  6085   0008EC  504F               	movf	??_ISR_TIMER_0^0,w,c
  6086   0008EE  2451               	addwf	(??_ISR_TIMER_0+2)^0,w,c
  6087   0008F0  6E53               	movwf	(??_ISR_TIMER_0+4)^0,c
  6088   0008F2  5050               	movf	(??_ISR_TIMER_0+1)^0,w,c
  6089   0008F4  2052               	addwfc	(??_ISR_TIMER_0+3)^0,w,c
  6090   0008F6  6E54               	movwf	(??_ISR_TIMER_0+5)^0,c
  6091   0008F8  0E09               	movlw	9
  6092   0008FA  2453               	addwf	(??_ISR_TIMER_0+4)^0,w,c
  6093   0008FC  6ED9               	movwf	fsr2l,c
  6094   0008FE  0E00               	movlw	0
  6095   000900  2054               	addwfc	(??_ISR_TIMER_0+5)^0,w,c
  6096   000902  6EDA               	movwf	fsr2h,c
  6097   000904  CFFD FFDE          	movff	tosl,postinc2	;volatile
  6098   000908  CFFE FFDE          	movff	tosh,postinc2	;volatile
  6099   00090C  CFFF FFDE          	movff	tosu,postinc2	;volatile
  6100   000910  EE22  F0B5         	lfsr	2,_readyQueue+531
  6101   000914  EE00 F069          	lfsr	0,105
  6102   000918  50DE               	movf	postinc2,w,c
  6103   00091A  26E9               	addwf	fsr0l,f,c
  6104   00091C  50DD               	movf	postdec2,w,c
  6105   00091E  22EA               	addwfc	fsr0h,f,c
  6106   000920  2AEF               	incf	indf0,f,c
  6107   000922  0006               	pop		;# 
  6108   000924                     i2l2215:
  6109   000924  50FC               	movf	252,w,c	;volatile
  6110   000926  A4D8               	btfss	status,2,c
  6111   000928  EF98  F004         	goto	i2u91_41
  6112   00092C  EF9A  F004         	goto	i2u91_40
  6113   000930                     i2u91_41:
  6114   000930  EF62  F004         	goto	i2l2211
  6115   000934                     i2u91_40:
  6116   000934  EE22  F0B5         	lfsr	2,_readyQueue+531
  6117   000938  EE00 F003          	lfsr	0,3
  6118   00093C  50DE               	movf	postinc2,w,c
  6119   00093E  26E9               	addwf	fsr0l,f,c
  6120   000940  50DD               	movf	postdec2,w,c
  6121   000942  22EA               	addwfc	fsr0h,f,c
  6122   000944  6AEF               	clrf	indf0,c
  6123   000946                     i2l2219:
  6124                           
  6125                           ;hardware.c: 36:         scheduler();
  6126   000946  EC66  F00E         	call	_scheduler	;wreg free
  6127   00094A  EE22  F0B5         	lfsr	2,_readyQueue+531
  6128   00094E  EE00 F003          	lfsr	0,3
  6129   000952  50DE               	movf	postinc2,w,c
  6130   000954  26E9               	addwf	fsr0l,f,c
  6131   000956  50DD               	movf	postdec2,w,c
  6132   000958  22EA               	addwfc	fsr0h,f,c
  6133   00095A  50EF               	movf	indf0,w,c
  6134   00095C  A4D8               	btfss	status,2,c
  6135   00095E  EFB3  F004         	goto	i2u92_41
  6136   000962  EFB5  F004         	goto	i2u92_40
  6137   000966                     i2u92_41:
  6138   000966  EF43  F005         	goto	i2l2239
  6139   00096A                     i2u92_40:
  6140   00096A  EE22  F0B5         	lfsr	2,_readyQueue+531
  6141   00096E  EE00 F006          	lfsr	0,6
  6142   000972  50DE               	movf	postinc2,w,c
  6143   000974  26E9               	addwf	fsr0l,f,c
  6144   000976  50DD               	movf	postdec2,w,c
  6145   000978  22EA               	addwfc	fsr0h,f,c
  6146   00097A  50EF               	movf	indf0,w,c
  6147   00097C  6EE0               	movwf	224,c	;volatile
  6148   00097E  EE22  F0B5         	lfsr	2,_readyQueue+531
  6149   000982  EE00 F008          	lfsr	0,8
  6150   000986  50DE               	movf	postinc2,w,c
  6151   000988  26E9               	addwf	fsr0l,f,c
  6152   00098A  50DD               	movf	postdec2,w,c
  6153   00098C  22EA               	addwfc	fsr0h,f,c
  6154   00098E  50EF               	movf	indf0,w,c
  6155   000990  6ED8               	movwf	216,c	;volatile
  6156   000992  EE22  F0B5         	lfsr	2,_readyQueue+531
  6157   000996  EE00 F007          	lfsr	0,7
  6158   00099A  50DE               	movf	postinc2,w,c
  6159   00099C  26E9               	addwf	fsr0l,f,c
  6160   00099E  50DD               	movf	postdec2,w,c
  6161   0009A0  22EA               	addwfc	fsr0h,f,c
  6162   0009A2  50EF               	movf	indf0,w,c
  6163   0009A4  6E4F               	movwf	??_ISR_TIMER_0^0,c
  6164   0009A6  504F               	movf	??_ISR_TIMER_0^0,w,c
  6165   0009A8  6AFC               	clrf	252,c	;volatile
  6166   0009AA  EE22  F0B5         	lfsr	2,_readyQueue+531
  6167   0009AE  EE00 F069          	lfsr	0,105
  6168   0009B2  50DE               	movf	postinc2,w,c
  6169   0009B4  26E9               	addwf	fsr0l,f,c
  6170   0009B6  50DD               	movf	postdec2,w,c
  6171   0009B8  22EA               	addwfc	fsr0h,f,c
  6172   0009BA  50EF               	movf	indf0,w,c
  6173   0009BC  A4D8               	btfss	status,2,c
  6174   0009BE  EFE3  F004         	goto	i2u93_41
  6175   0009C2  EFE5  F004         	goto	i2u93_40
  6176   0009C6                     i2u93_41:
  6177   0009C6  EFF9  F004         	goto	i2l271
  6178   0009CA                     i2u93_40:
  6179   0009CA  0005               	push		;# 
  6180   0009CC  EE22  F0B5         	lfsr	2,_readyQueue+531
  6181   0009D0  EE00 F001          	lfsr	0,1
  6182   0009D4  50DE               	movf	postinc2,w,c
  6183   0009D6  26E9               	addwf	fsr0l,f,c
  6184   0009D8  50DD               	movf	postdec2,w,c
  6185   0009DA  22EA               	addwfc	fsr0h,f,c
  6186   0009DC  CFEE F04F          	movff	postinc0,??_ISR_TIMER_0
  6187   0009E0  CFED F050          	movff	postdec0,??_ISR_TIMER_0+1
  6188   0009E4  C04F  FFFD         	movff	??_ISR_TIMER_0,tosl	;volatile
  6189   0009E8  C050  FFFE         	movff	??_ISR_TIMER_0+1,tosh	;volatile
  6190   0009EC  6AFF               	clrf	255,c	;volatile
  6191   0009EE  EF39  F005         	goto	i2l2237
  6192   0009F2                     i2l271:
  6193   0009F2  0005               	push		;# 
  6194   0009F4  EE22  F0B5         	lfsr	2,_readyQueue+531
  6195   0009F8  EE00 F069          	lfsr	0,105
  6196   0009FC  50DE               	movf	postinc2,w,c
  6197   0009FE  26E9               	addwf	fsr0l,f,c
  6198   000A00  50DD               	movf	postdec2,w,c
  6199   000A02  22EA               	addwfc	fsr0h,f,c
  6200   000A04  06EF               	decf	indf0,f,c
  6201   000A06  EE22  F0B5         	lfsr	2,_readyQueue+531
  6202   000A0A  EE00 F069          	lfsr	0,105
  6203   000A0E  50DE               	movf	postinc2,w,c
  6204   000A10  26E9               	addwf	fsr0l,f,c
  6205   000A12  50DD               	movf	postdec2,w,c
  6206   000A14  22EA               	addwfc	fsr0h,f,c
  6207   000A16  50EF               	movf	indf0,w,c
  6208   000A18  0D03               	mullw	3
  6209   000A1A  CFF3 F04F          	movff	prodl,??_ISR_TIMER_0
  6210   000A1E  CFF4 F050          	movff	prodh,??_ISR_TIMER_0+1
  6211   000A22  EE22  F0B5         	lfsr	2,_readyQueue+531
  6212   000A26  CFDE F051          	movff	postinc2,??_ISR_TIMER_0+2
  6213   000A2A  CFDD F052          	movff	postdec2,??_ISR_TIMER_0+3
  6214   000A2E  504F               	movf	??_ISR_TIMER_0^0,w,c
  6215   000A30  2451               	addwf	(??_ISR_TIMER_0+2)^0,w,c
  6216   000A32  6E53               	movwf	(??_ISR_TIMER_0+4)^0,c
  6217   000A34  5050               	movf	(??_ISR_TIMER_0+1)^0,w,c
  6218   000A36  2052               	addwfc	(??_ISR_TIMER_0+3)^0,w,c
  6219   000A38  6E54               	movwf	(??_ISR_TIMER_0+5)^0,c
  6220   000A3A  0E09               	movlw	9
  6221   000A3C  2453               	addwf	(??_ISR_TIMER_0+4)^0,w,c
  6222   000A3E  6ED9               	movwf	fsr2l,c
  6223   000A40  0E00               	movlw	0
  6224   000A42  2054               	addwfc	(??_ISR_TIMER_0+5)^0,w,c
  6225   000A44  6EDA               	movwf	fsr2h,c
  6226   000A46  CFDE FFFD          	movff	postinc2,tosl	;volatile
  6227   000A4A  CFDE FFFE          	movff	postinc2,tosh	;volatile
  6228   000A4E  CFDD FFFF          	movff	postdec2,tosu	;volatile
  6229   000A52  EE22  F0B5         	lfsr	2,_readyQueue+531
  6230   000A56  EE00 F069          	lfsr	0,105
  6231   000A5A  50DE               	movf	postinc2,w,c
  6232   000A5C  26E9               	addwf	fsr0l,f,c
  6233   000A5E  50DD               	movf	postdec2,w,c
  6234   000A60  22EA               	addwfc	fsr0h,f,c
  6235   000A62  50EF               	movf	indf0,w,c
  6236   000A64  A4D8               	btfss	status,2,c
  6237   000A66  EF37  F005         	goto	i2u94_41
  6238   000A6A  EF39  F005         	goto	i2u94_40
  6239   000A6E                     i2u94_41:
  6240   000A6E  EFF9  F004         	goto	i2l271
  6241   000A72                     i2u94_40:
  6242   000A72                     i2l2237:
  6243   000A72  EE22  F0B5         	lfsr	2,_readyQueue+531
  6244   000A76  EE00 F003          	lfsr	0,3
  6245   000A7A  50DE               	movf	postinc2,w,c
  6246   000A7C  26E9               	addwf	fsr0l,f,c
  6247   000A7E  50DD               	movf	postdec2,w,c
  6248   000A80  22EA               	addwfc	fsr0h,f,c
  6249   000A82  0E01               	movlw	1
  6250   000A84  6EEF               	movwf	indf0,c
  6251   000A86                     i2l2239:
  6252                           
  6253                           ;hardware.c: 40:     (INTCONbits.GIE = 1);
  6254   000A86  8EF2               	bsf	242,7,c	;volatile
  6255   000A88  52E5               	movf	postdec1,f,c
  6256   000A8A  CFE5 F038          	movff	postdec1,btemp55
  6257   000A8E  CFE5 F037          	movff	postdec1,btemp54
  6258   000A92  CFE5 F005          	movff	postdec1,btemp4
  6259   000A96  CFE5 F002          	movff	postdec1,btemp1
  6260   000A9A  CFE5 F001          	movff	postdec1,btemp0
  6261   000A9E  C05C  FFF4         	movff	??_ISR_TIMER_0+13,prodh
  6262   000AA2  C05B  FFF3         	movff	??_ISR_TIMER_0+12,prodl
  6263   000AA6  C05A  FFDA         	movff	??_ISR_TIMER_0+11,fsr2h
  6264   000AAA  C059  FFD9         	movff	??_ISR_TIMER_0+10,fsr2l
  6265   000AAE  C058  FFE2         	movff	??_ISR_TIMER_0+9,fsr1h
  6266   000AB2  C057  FFE1         	movff	??_ISR_TIMER_0+8,fsr1l
  6267   000AB6  C056  FFEA         	movff	??_ISR_TIMER_0+7,fsr0h
  6268   000ABA  C055  FFE9         	movff	??_ISR_TIMER_0+6,fsr0l
  6269   000ABE  0011               	retfie		f
  6270   000AC0                     __end_of_ISR_TIMER_0:
  6271                           	callstack 0
  6272                           
  6273 ;; *************** function _os_task_time_decrease *****************
  6274 ;; Defined at:
  6275 ;;		line 62 in file "kernel.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;		None
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  i               1    btemp4   unsigned char 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  1  [STACK] void 
  6282 ;; Registers used:
  6283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp0, btemp4, prodl, prodh
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6289 ;;      Params:         0       0       0       0       0       0       0       0       0
  6290 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6291 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6292 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6293 ;;Total ram usage:        0 bytes
  6294 ;; Hardware stack levels used: 1
  6295 ;; This function calls:
  6296 ;;		Nothing
  6297 ;; This function is called by:
  6298 ;;		_ISR_TIMER_0
  6299 ;; This function uses a reentrant model
  6300 ;;
  6301                           
  6302                           	psect	text36
  6303   001898                     __ptext36:
  6304                           	callstack 0
  6305   001898                     _os_task_time_decrease:
  6306                           	callstack 19
  6307   001898                     
  6308                           ;kernel.c: 64:     for (uint8_t i = 1; i < readyQueue.readyQueueSize; i++) {
  6309   001898  0E01               	movlw	1
  6310   00189A  6E05               	movwf	btemp4^0,c
  6311   00189C  EF84  F00C         	goto	l1573
  6312   0018A0                     l1565:
  6313                           
  6314                           ;kernel.c: 65:         if (readyQueue.readyQueue[i].task_state == WAITING) {
  6315   0018A0  5005               	movf	btemp4^0,w,c
  6316   0018A2  0D6A               	mullw	106
  6317   0018A4  0EA5               	movlw	low (_readyQueue+3)
  6318   0018A6  24F3               	addwf	243,w,c
  6319   0018A8  6ED9               	movwf	fsr2l,c
  6320   0018AA  0E00               	movlw	high (_readyQueue+3)
  6321   0018AC  20F4               	addwfc	prodh,w,c
  6322   0018AE  6EDA               	movwf	fsr2h,c
  6323   0018B0  0E02               	movlw	2
  6324   0018B2  18DE               	xorwf	postinc2,w,c
  6325   0018B4  A4D8               	btfss	status,2,c
  6326   0018B6  EF5F  F00C         	goto	u31_41
  6327   0018BA  EF61  F00C         	goto	u31_40
  6328   0018BE                     u31_41:
  6329   0018BE  EF83  F00C         	goto	l1571
  6330   0018C2                     u31_40:
  6331   0018C2                     
  6332                           ;kernel.c: 66:             readyQueue.readyQueue[i].task_time_to_waiting--;
  6333   0018C2  5005               	movf	btemp4^0,w,c
  6334   0018C4  0D6A               	mullw	106
  6335   0018C6  0EA7               	movlw	low (_readyQueue+5)
  6336   0018C8  24F3               	addwf	243,w,c
  6337   0018CA  6ED9               	movwf	fsr2l,c
  6338   0018CC  0E00               	movlw	high (_readyQueue+5)
  6339   0018CE  20F4               	addwfc	prodh,w,c
  6340   0018D0  6EDA               	movwf	fsr2h,c
  6341   0018D2  06DF               	decf	indf2,f,c
  6342                           
  6343                           ;kernel.c: 67:             if (readyQueue.readyQueue[i].task_time_to_waiting == 0) {
  6344   0018D4  5005               	movf	btemp4^0,w,c
  6345   0018D6  0D6A               	mullw	106
  6346   0018D8  0EA7               	movlw	low (_readyQueue+5)
  6347   0018DA  24F3               	addwf	243,w,c
  6348   0018DC  6ED9               	movwf	fsr2l,c
  6349   0018DE  0E00               	movlw	high (_readyQueue+5)
  6350   0018E0  20F4               	addwfc	prodh,w,c
  6351   0018E2  6EDA               	movwf	fsr2h,c
  6352   0018E4  50DF               	movf	indf2,w,c
  6353   0018E6  A4D8               	btfss	status,2,c
  6354   0018E8  EF78  F00C         	goto	u32_41
  6355   0018EC  EF7A  F00C         	goto	u32_40
  6356   0018F0                     u32_41:
  6357   0018F0  EF83  F00C         	goto	l1571
  6358   0018F4                     u32_40:
  6359   0018F4                     
  6360                           ;kernel.c: 69:                 readyQueue.readyQueue[i].task_state = READY;
  6361   0018F4  5005               	movf	btemp4^0,w,c
  6362   0018F6  0D6A               	mullw	106
  6363   0018F8  0EA5               	movlw	low (_readyQueue+3)
  6364   0018FA  24F3               	addwf	243,w,c
  6365   0018FC  6ED9               	movwf	fsr2l,c
  6366   0018FE  0E00               	movlw	high (_readyQueue+3)
  6367   001900  20F4               	addwfc	prodh,w,c
  6368   001902  6EDA               	movwf	fsr2h,c
  6369   001904  6ADF               	clrf	indf2,c
  6370   001906                     l1571:
  6371                           
  6372                           ;kernel.c: 72:     }
  6373   001906  2A05               	incf	btemp4^0,f,c
  6374   001908                     l1573:
  6375   001908  EE22  F0B4         	lfsr	2,_readyQueue+530
  6376   00190C  50DE               	movf	postinc2,w,c
  6377   00190E  5C05               	subwf	btemp4^0,w,c
  6378   001910  A0D8               	btfss	status,0,c
  6379   001912  EF8D  F00C         	goto	u33_41
  6380   001916  EF8F  F00C         	goto	u33_40
  6381   00191A                     u33_41:
  6382   00191A  EF50  F00C         	goto	l1565
  6383   00191E                     u33_40:
  6384   00191E                     
  6385                           ; _os_task_time_decrease: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 0, argsize = 0, vargsize = 0
  6386   00191E  0012               	return		;funcret
  6387   001920                     __end_of_os_task_time_decrease:
  6388                           	callstack 0
  6389                           
  6390                           	psect	smallconst
  6391   000800                     __psmallconst:
  6392                           	callstack 0
  6393   000800  00                 	db	0
  6394   000801  00                 	db	0	; dummy byte at the end
  6395   000800                     __smallconst    set	__psmallconst
  6396   000800                     __mediumconst   set	__psmallconst
  6397   000000                     __activetblptr  equ	0
  6398                           
  6399                           	psect	rparam
  6400   000001                     ___rparam_used  equ	1
  6401   000000                     ___param_bank   equ	0
  6402   000000                     __Lparam        equ	__Lrparam
  6403   000000                     __Hparam        equ	__Hrparam
  6404   000001                     btemp           set	1	;btemp
  6405   000001                     btemp0          set	1
  6406   000002                     btemp1          set	2
  6407   000003                     btemp2          set	3
  6408   000004                     btemp3          set	4
  6409   000005                     btemp4          set	5
  6410   000006                     btemp5          set	6
  6411   000007                     btemp6          set	7
  6412   000008                     btemp7          set	8
  6413   000009                     btemp8          set	9
  6414   00000A                     btemp9          set	10
  6415   00000B                     btemp10         set	11
  6416   00000C                     btemp11         set	12
  6417   00000D                     btemp12         set	13
  6418   00000E                     btemp13         set	14
  6419   00000F                     btemp14         set	15
  6420   000010                     btemp15         set	16
  6421   000011                     btemp16         set	17
  6422   000012                     btemp17         set	18
  6423   000013                     btemp18         set	19
  6424   000014                     btemp19         set	20
  6425   000015                     btemp20         set	21
  6426   000016                     btemp21         set	22
  6427   000017                     btemp22         set	23
  6428   000018                     btemp23         set	24
  6429   000019                     btemp24         set	25
  6430   00001A                     btemp25         set	26
  6431   00001B                     btemp26         set	27
  6432   00001C                     btemp27         set	28
  6433   00001D                     btemp28         set	29
  6434   00001E                     btemp29         set	30
  6435   00001F                     btemp30         set	31
  6436   000020                     btemp31         set	32
  6437   000021                     btemp32         set	33
  6438   000022                     btemp33         set	34
  6439   000023                     btemp34         set	35
  6440   000024                     btemp35         set	36
  6441   000025                     btemp36         set	37
  6442   000026                     btemp37         set	38
  6443   000027                     btemp38         set	39
  6444   000028                     btemp39         set	40
  6445   000029                     btemp40         set	41
  6446   00002A                     btemp41         set	42
  6447   00002B                     btemp42         set	43
  6448   00002C                     btemp43         set	44
  6449   00002D                     btemp44         set	45
  6450   00002E                     btemp45         set	46
  6451   00002F                     btemp46         set	47
  6452   000030                     btemp47         set	48
  6453   000031                     btemp48         set	49
  6454   000032                     btemp49         set	50
  6455   000033                     btemp50         set	51
  6456   000034                     btemp51         set	52
  6457   000035                     btemp52         set	53
  6458   000036                     btemp53         set	54
  6459   000037                     btemp54         set	55
  6460   000038                     btemp55         set	56
  6461   000001                     wtemp0          set	1
  6462   000003                     wtemp1          set	3
  6463   000005                     wtemp2          set	5
  6464   000007                     wtemp3          set	7
  6465   000009                     wtemp4          set	9
  6466   00000B                     wtemp5          set	11
  6467   00000D                     wtemp6          set	13
  6468   00000F                     wtemp7          set	15
  6469   000011                     wtemp8          set	17
  6470   000013                     wtemp9          set	19
  6471   000015                     wtemp10         set	21
  6472   000017                     wtemp11         set	23
  6473   000019                     wtemp12         set	25
  6474   00001B                     wtemp13         set	27
  6475   00001D                     wtemp14         set	29
  6476   00001F                     wtemp15         set	31
  6477   000021                     wtemp16         set	33
  6478   000023                     wtemp17         set	35
  6479   000025                     wtemp18         set	37
  6480   000027                     wtemp19         set	39
  6481   000029                     wtemp20         set	41
  6482   00002B                     wtemp21         set	43
  6483   00002D                     wtemp22         set	45
  6484   00002F                     wtemp23         set	47
  6485   000031                     wtemp24         set	49
  6486   000033                     wtemp25         set	51
  6487   000035                     wtemp26         set	53
  6488   000037                     wtemp27         set	55
  6489   000001                     ttemp0          set	1
  6490   000005                     ttemp1          set	5
  6491   000009                     ttemp2          set	9
  6492   00000D                     ttemp3          set	13
  6493   000011                     ttemp4          set	17
  6494   000015                     ttemp5          set	21
  6495   000019                     ttemp6          set	25
  6496   00001D                     ttemp7          set	29
  6497   000021                     ttemp8          set	33
  6498   000025                     ttemp9          set	37
  6499   000029                     ttemp10         set	41
  6500   00002D                     ttemp11         set	45
  6501   000031                     ttemp12         set	49
  6502   000035                     ttemp13         set	53
  6503   000001                     ltemp0          set	1
  6504   000005                     ltemp1          set	5
  6505   000009                     ltemp2          set	9
  6506   00000D                     ltemp3          set	13
  6507   000011                     ltemp4          set	17
  6508   000015                     ltemp5          set	21
  6509   000019                     ltemp6          set	25
  6510   00001D                     ltemp7          set	29
  6511   000021                     ltemp8          set	33
  6512   000025                     ltemp9          set	37
  6513   000029                     ltemp10         set	41
  6514   00002D                     ltemp11         set	45
  6515   000031                     ltemp12         set	49
  6516   000035                     ltemp13         set	53
  6517   000001                     lltemp0         set	1
  6518   000009                     lltemp1         set	9
  6519   000011                     lltemp2         set	17
  6520   000019                     lltemp3         set	25
  6521   000021                     lltemp4         set	33
  6522   000029                     lltemp5         set	41
  6523   000031                     lltemp6         set	49
  6524                           tosu	equ	0xFFF
  6525                           tosh	equ	0xFFE
  6526                           tosl	equ	0xFFD
  6527                           stkptr	equ	0xFFC
  6528                           pclatu	equ	0xFFB
  6529                           pclath	equ	0xFFA
  6530                           pcl	equ	0xFF9
  6531                           tblptru	equ	0xFF8
  6532                           tblptrh	equ	0xFF7
  6533                           tblptrl	equ	0xFF6
  6534                           tablat	equ	0xFF5
  6535                           prodh	equ	0xFF4
  6536                           prodl	equ	0xFF3
  6537                           indf0	equ	0xFEF
  6538                           postinc0	equ	0xFEE
  6539                           postdec0	equ	0xFED
  6540                           preinc0	equ	0xFEC
  6541                           plusw0	equ	0xFEB
  6542                           fsr0h	equ	0xFEA
  6543                           fsr0l	equ	0xFE9
  6544                           wreg	equ	0xFE8
  6545                           indf1	equ	0xFE7
  6546                           postinc1	equ	0xFE6
  6547                           postdec1	equ	0xFE5
  6548                           preinc1	equ	0xFE4
  6549                           plusw1	equ	0xFE3
  6550                           fsr1h	equ	0xFE2
  6551                           fsr1l	equ	0xFE1
  6552                           bsr	equ	0xFE0
  6553                           indf2	equ	0xFDF
  6554                           postinc2	equ	0xFDE
  6555                           postdec2	equ	0xFDD
  6556                           preinc2	equ	0xFDC
  6557                           plusw2	equ	0xFDB
  6558                           fsr2h	equ	0xFDA
  6559                           fsr2l	equ	0xFD9
  6560                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1133
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           39     14      36
    BANK0           160      0      66
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    buffer	PTR void  size(2) Largest target is 4
		 -> dados_sensores(STACK[4]), nivel_bateria(STACK[2]), 

    buffer	PTR void  size(2) Largest target is 4
		 -> dados_sensores(STACK[4]), nivel_bateria(STACK[2]), 

    data_buffer	PTR unsigned char  size(2) Largest target is 4
		 -> dados_sensores(STACK[4]), nivel_bateria(STACK[2]), 

    data_buffer	PTR unsigned char  size(2) Largest target is 4
		 -> dados_sensores(STACK[4]), nivel_bateria(STACK[2]), 

    m	PTR struct semaphore size(1) Largest target is 14
		 -> mutex_motores(COMRAM[14]), 

    m	PTR struct semaphore size(1) Largest target is 14
		 -> mutex_motores(COMRAM[14]), 

    m	PTR struct semaphore size(1) Largest target is 14
		 -> mutex_motores(COMRAM[14]), 

    m$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    m$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    m$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    mutex_motores$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    mutex_motores$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    new_task$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    next_task	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 

    next_task$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    p	PTR struct pipe size(1) Largest target is 33
		 -> pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    p	PTR struct pipe size(1) Largest target is 33
		 -> pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    p	PTR struct pipe size(1) Largest target is 33
		 -> pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    p$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    p$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    p$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pHeap	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pipe_bateria$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_bateria$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_bateria$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_bateria$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_bateria$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    pipe_sensores$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    pipe_sensores$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_sensores$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_sensores$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    pipe_sensores$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    pSegA	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    pSegB	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    readyQueue$readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    readyQueue$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), NULL(NULL[0]), 

    readyQueue$taskRunning$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    s	PTR struct semaphore size(1) Largest target is 33
		 -> mutex_motores(COMRAM[14]), pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    s	PTR struct semaphore size(1) Largest target is 33
		 -> mutex_motores(COMRAM[14]), pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    s	PTR struct semaphore size(1) Largest target is 33
		 -> mutex_motores(COMRAM[14]), pipe_bateria(BANK0[33]), pipe_sensores(BANK0[33]), 

    s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    s$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    s$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    S354semaphore$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    S359pipe$pipe_data	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    S67tcb$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    S78f_aptos$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    sp__priority_scheduler	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 

    sp__priority_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    sp__rr_scheduler	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    task_f	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_controle_central(), tarefa_controle_motores(), tarefa_leitura_sensores(), 
		 -> tarefa_monitoramento_bateria(), 

    temp	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _tarefa_controle_central in COMRAM

    None.

Critical Paths under _tarefa_controle_motores in COMRAM

    None.

Critical Paths under _tarefa_leitura_sensores in COMRAM

    None.

Critical Paths under _tarefa_monitoramento_bateria in COMRAM

    None.

Critical Paths under _tarefa_controle_central in COMRAM

    None.

Critical Paths under _tarefa_controle_motores in COMRAM

    None.

Critical Paths under _tarefa_leitura_sensores in COMRAM

    None.

Critical Paths under _tarefa_monitoramento_bateria in COMRAM

    None.

Critical Paths under _ISR_TIMER_0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _tarefa_controle_central in BANK0

    None.

Critical Paths under _tarefa_controle_motores in BANK0

    None.

Critical Paths under _tarefa_leitura_sensores in BANK0

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK0

    None.

Critical Paths under _tarefa_controle_central in BANK0

    None.

Critical Paths under _tarefa_controle_motores in BANK0

    None.

Critical Paths under _tarefa_leitura_sensores in BANK0

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK0

    None.

Critical Paths under _ISR_TIMER_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _tarefa_controle_central in BANK1

    None.

Critical Paths under _tarefa_controle_motores in BANK1

    None.

Critical Paths under _tarefa_leitura_sensores in BANK1

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK1

    None.

Critical Paths under _tarefa_controle_central in BANK1

    None.

Critical Paths under _tarefa_controle_motores in BANK1

    None.

Critical Paths under _tarefa_leitura_sensores in BANK1

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK1

    None.

Critical Paths under _ISR_TIMER_0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _tarefa_controle_central in BANK2

    None.

Critical Paths under _tarefa_controle_motores in BANK2

    None.

Critical Paths under _tarefa_leitura_sensores in BANK2

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK2

    None.

Critical Paths under _tarefa_controle_central in BANK2

    None.

Critical Paths under _tarefa_controle_motores in BANK2

    None.

Critical Paths under _tarefa_leitura_sensores in BANK2

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK2

    None.

Critical Paths under _ISR_TIMER_0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _tarefa_controle_central in BANK3

    None.

Critical Paths under _tarefa_controle_motores in BANK3

    None.

Critical Paths under _tarefa_leitura_sensores in BANK3

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK3

    None.

Critical Paths under _tarefa_controle_central in BANK3

    None.

Critical Paths under _tarefa_controle_motores in BANK3

    None.

Critical Paths under _tarefa_leitura_sensores in BANK3

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK3

    None.

Critical Paths under _ISR_TIMER_0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _tarefa_controle_central in BANK4

    None.

Critical Paths under _tarefa_controle_motores in BANK4

    None.

Critical Paths under _tarefa_leitura_sensores in BANK4

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK4

    None.

Critical Paths under _tarefa_controle_central in BANK4

    None.

Critical Paths under _tarefa_controle_motores in BANK4

    None.

Critical Paths under _tarefa_leitura_sensores in BANK4

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK4

    None.

Critical Paths under _ISR_TIMER_0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _tarefa_controle_central in BANK5

    None.

Critical Paths under _tarefa_controle_motores in BANK5

    None.

Critical Paths under _tarefa_leitura_sensores in BANK5

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK5

    None.

Critical Paths under _tarefa_controle_central in BANK5

    None.

Critical Paths under _tarefa_controle_motores in BANK5

    None.

Critical Paths under _tarefa_leitura_sensores in BANK5

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK5

    None.

Critical Paths under _ISR_TIMER_0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _tarefa_controle_central in BANK6

    None.

Critical Paths under _tarefa_controle_motores in BANK6

    None.

Critical Paths under _tarefa_leitura_sensores in BANK6

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK6

    None.

Critical Paths under _tarefa_controle_central in BANK6

    None.

Critical Paths under _tarefa_controle_motores in BANK6

    None.

Critical Paths under _tarefa_leitura_sensores in BANK6

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK6

    None.

Critical Paths under _ISR_TIMER_0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _tarefa_controle_central in BANK7

    None.

Critical Paths under _tarefa_controle_motores in BANK7

    None.

Critical Paths under _tarefa_leitura_sensores in BANK7

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK7

    None.

Critical Paths under _tarefa_controle_central in BANK7

    None.

Critical Paths under _tarefa_controle_motores in BANK7

    None.

Critical Paths under _tarefa_leitura_sensores in BANK7

    None.

Critical Paths under _tarefa_monitoramento_bateria in BANK7

    None.

Critical Paths under _ISR_TIMER_0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1819
                          _os_config
                     _os_create_task
                           _os_start
 ---------------------------------------------------------------------------------
 (1) _os_start                                             0     0      0    1489
                       _SRAMInitHeap
                    _conf_interrupts
                       _conf_timer_0
                         _config_app
 ---------------------------------------------------------------------------------
 (2) _config_app                                           0     0      0    1399
                             _adc_go
                         _config_adc
                        _create_pipe
                         _mutex_init
                           _pwm_init
                        _set_channel
                           _set_port
 ---------------------------------------------------------------------------------
 (3) _set_port                                             0     0      0      22
 ---------------------------------------------------------------------------------
 (7) _set_channel                                          0     0      0      22
 ---------------------------------------------------------------------------------
 (3) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mutex_init                                           0     0      0     110
                           _sem_init
 ---------------------------------------------------------------------------------
 (3) _create_pipe                                          0     0      0    1179
                          _SRAMalloc
                           _sem_init
 ---------------------------------------------------------------------------------
 (4) _sem_init                                             0     0      0      88
 ---------------------------------------------------------------------------------
 (4) _SRAMalloc                                            6     6      0     893
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (5) __SRAMmerge                                           5     5      0     402
 ---------------------------------------------------------------------------------
 (3) _config_adc                                           0     0      0      44
 ---------------------------------------------------------------------------------
 (3) _adc_go                                               0     0      0      22
 ---------------------------------------------------------------------------------
 (2) _conf_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0      90
 ---------------------------------------------------------------------------------
 (1) _os_config                                            0     0      0     165
                     _os_create_task
 ---------------------------------------------------------------------------------
 (2) _os_create_task                                     106   106      0     165
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _os_idle_task                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _os_idle_task                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_controle_central                              8     8      0    3066
                         _mutex_lock
                       _mutex_unlock
                           _os_delay
                          _read_pipe
 ---------------------------------------------------------------------------------
 (7) _read_pipe                                            5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         0     0      0     450
                           _sem_post
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           1     1      0     617
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_controle_motores                              8     8      0    1302
                         _mutex_lock
                       _mutex_unlock
                           _os_delay
                 _pwm_set_duty_cycle
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle                                   0     0      0      30
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         0     0      0     450
                           _sem_post
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           1     1      0     617
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_leitura_sensores                              4     4      0    1887
                           _adc_read
                           _os_delay
                        _set_channel
                         _write_pipe
 ---------------------------------------------------------------------------------
 (7) _write_pipe                                           5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (7) _set_channel                                          0     0      0      22
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (7) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_monitoramento_bateria                         2     2      0    1863
                           _adc_read
                           _os_delay
                        _set_channel
                         _write_pipe
 ---------------------------------------------------------------------------------
 (7) _write_pipe                                           5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (7) _set_channel                                          0     0      0      22
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (7) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_controle_central                              8     8      0    3066
                         _mutex_lock
                       _mutex_unlock
                           _os_delay
                          _read_pipe
 ---------------------------------------------------------------------------------
 (7) _read_pipe                                            5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         0     0      0     450
                           _sem_post
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           1     1      0     617
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_controle_motores                              8     8      0    1302
                         _mutex_lock
                       _mutex_unlock
                           _os_delay
                 _pwm_set_duty_cycle
 ---------------------------------------------------------------------------------
 (7) _pwm_set_duty_cycle                                   0     0      0      30
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _mutex_unlock                                         0     0      0     450
                           _sem_post
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _mutex_lock                                           1     1      0     617
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_leitura_sensores                              4     4      0    1887
                           _adc_read
                           _os_delay
                        _set_channel
                         _write_pipe
 ---------------------------------------------------------------------------------
 (7) _write_pipe                                           5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (7) _set_channel                                          0     0      0      22
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (7) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tarefa_monitoramento_bateria                         2     2      0    1863
                           _adc_read
                           _os_delay
                        _set_channel
                         _write_pipe
 ---------------------------------------------------------------------------------
 (7) _write_pipe                                           5     5      0    1635
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (8) _sem_wait                                             0     0      0     588
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _sem_post                                             0     0      0     428
                            ___awmod
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              2     2      0     296
 ---------------------------------------------------------------------------------
 (7) _set_channel                                          0     0      0      22
 ---------------------------------------------------------------------------------
 (7) _os_delay                                             0     0      0     182
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (7) _adc_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR_TIMER_0                                        14    14      0     235
                                              0 COMRAM    14    14      0
              _os_task_time_decrease
                          _scheduler
 ---------------------------------------------------------------------------------
 (12) _scheduler                                           0     0      0     160
                 _priority_scheduler
 ---------------------------------------------------------------------------------
 (13) _priority_scheduler                                  4     4      0     160
 ---------------------------------------------------------------------------------
 (12) _os_task_time_decrease                               1     1      0      75
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _os_config
     _os_create_task
   _os_create_task
   _os_start
     _SRAMInitHeap
     _conf_interrupts
     _conf_timer_0
     _config_app
       _adc_go
       _config_adc
       _create_pipe
         _SRAMalloc
           __SRAMmerge
         _sem_init
       _mutex_init
         _sem_init
       _pwm_init
       _set_channel
       _set_port

 _os_idle_task (ROOT)

 _os_idle_task (ROOT)

 _tarefa_controle_central (ROOT)
   _mutex_lock
     _sem_wait
       ___awmod
       _scheduler
         _priority_scheduler
   _mutex_unlock
     _sem_post
       ___awmod
   _os_delay
     _scheduler
   _read_pipe
     ___awmod
     _sem_post
     _sem_wait

 _tarefa_controle_motores (ROOT)
   _mutex_lock
     _sem_wait
       ___awmod
       _scheduler
         _priority_scheduler
   _mutex_unlock
     _sem_post
       ___awmod
   _os_delay
     _scheduler
   _pwm_set_duty_cycle

 _tarefa_leitura_sensores (ROOT)
   _adc_read
   _os_delay
     _scheduler
       _priority_scheduler
   _set_channel
   _write_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler

 _tarefa_monitoramento_bateria (ROOT)
   _adc_read
   _os_delay
     _scheduler
       _priority_scheduler
   _set_channel
   _write_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler

 _tarefa_controle_central (ROOT)
   _mutex_lock
     _sem_wait
       ___awmod
       _scheduler
         _priority_scheduler
   _mutex_unlock
     _sem_post
       ___awmod
   _os_delay
     _scheduler
   _read_pipe
     ___awmod
     _sem_post
     _sem_wait

 _tarefa_controle_motores (ROOT)
   _mutex_lock
     _sem_wait
       ___awmod
       _scheduler
         _priority_scheduler
   _mutex_unlock
     _sem_post
       ___awmod
   _os_delay
     _scheduler
   _pwm_set_duty_cycle

 _tarefa_leitura_sensores (ROOT)
   _adc_read
   _os_delay
     _scheduler
       _priority_scheduler
   _set_channel
   _write_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler

 _tarefa_monitoramento_bateria (ROOT)
   _adc_read
   _os_delay
     _scheduler
       _priority_scheduler
   _set_channel
   _write_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler

 _ISR_TIMER_0 (ROOT)
   _os_task_time_decrease
   _scheduler
     _priority_scheduler

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0    1045     51.1%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      66     41.2%
BITBIGSFRh          66      0       0      0.0%
BITBIGSFRlh         48      0       0      0.0%
BITCOMRAM           39      0       0      0.0%
COMRAM              39     14      36     92.3%
BITBIGSFRlll        35      0       0      0.0%
BITBIGSFRllh         8      0       0      0.0%
STACK                0      0     142      0.0%
DATA                 0      0    1289      0.0%


Microchip Technology PIC18 Macro Assembler V3.10 build 20250813170317 
Symbol Table                                                                                   Wed Oct  8 15:54:40 2025

                                  l20 19EE                                    l50 1CA8  
                                  l19 19EE                                    l71 191E  
                                  l47 1C1E                                   l110 1B3A  
                                 l121 1A58                                   l113 1290  
                                 l133 1AA6                                   l310 0D74  
                                 l127 1928                                   l224 1600  
                                 l320 1D04                                   l314 180A  
                                 l227 1CD8                                   l307 0CDE  
                                 l323 1CFA                                   l171 0FC4  
                                 l155 1772                                   l340 147A  
                                 l252 1C7A                                   l420 1CE4  
                                 l317 1CCA                                   l342 1530  
                                 l255 1D08                                   l423 1C40  
                                 l432 1C94                                   l168 0F2E  
                                 l336 1A4E                                   l417 1CBC  
                                 l346 1398                                   l426 1CF0  
                                 l435 1C60                                   l348 145A  
                                 l356 114C                                   l429 1C7E  
                                 l293 1B9A                                   l438 1BF6  
                                 l382 1280                                   l376 1892  
                                 l798 16C2                                   _BSR 0FE0  
       __end_of_os_task_time_decrease 1920                                   u200 184C  
                                 u201 1848                                   u510 11A8  
                                 _PR2 0FCB                                   u191 1760  
                                 u511 11A4                                   u520 11CA  
                                 u600 109E                                   u521 11C6  
                                 u601 109A                                   u530 11E4  
                                 u610 10E6                                   u531 11E0  
                                 u611 10E2                                   u540 1208  
                                 u541 1204                                   u550 1236  
                                 u551 1232                                   u560 0FDC  
                                 u625 1CEE                                   u561 0FD8  
                                 u626 1CF0                                   u570 104E  
                                 u571 104A                                   u580 106C  
                                 u581 1068                                   u590 107E  
                                 u591 107A                                   _TOS 0FFD  
                                 prod 0FF3                                   wreg 0FE8  
                  _priority_scheduler 1538                                  l2001 0C0E  
                                l2011 0C7E                                  l2003 0C1E  
                                l2021 0CE0                                  l2013 0C94  
                                l2005 0C32                                  l2101 0EE4  
                                l2023 0CF2                                  l2015 0C96  
                                l2007 0C36                                  l2031 177C  
                                l2111 0F42                                  l2103 0EE6  
                                l2121 1C8C                                  l2025 0D3E  
                                l2017 0CB6                                  l2009 0C56  
                                l2041 1808                                  l2033 177E  
                                l2113 0F8E                                  l2105 0F06  
                                l1401 16CE                                  l2131 13AA  
                                l2027 0D5E                                  l2019 0CB8  
                                l2035 178A                                  l2115 0FAE  
                                l2107 0F08                                  l1411 1714  
                                l1403 16D4                                  l2051 1CA6  
                                l2043 1C96                                  l2133 13F8  
                                l2141 1448                                  l2125 1386  
                                l2029 0D72                                  l2037 17AE  
                                l2109 0F30                                  l2117 0FC2  
                                l2061 148C                                  l1413 1722  
                                l1405 16E8                                  l1421 1D06  
                                l2053 1CAA                                  l2045 1C9A  
                                l2119 1C7C                                  l2135 1434  
                                l2127 1392                                  l2143 1CCC  
                                l2039 17D6                                  l2063 14D6  
                                l2071 151E                                  l2055 1468  
                                l2151 12D0                                  l1415 1730  
                                l1407 16F8                                  l1431 1858  
                                l1423 1810                                  l2047 1C9E  
                                l2137 143E                                  l2129 13A0  
                                l2073 1CFC                                  l2081 0D8C  
                                l2065 150A                                  l2057 1474  
                                l2161 134A                                  l2153 12F6  
                                l1417 173E                                  l1409 1706  
                                l1433 186C                                  l1425 1824  
                                l2049 1CA2                                  l2145 1996  
                                l2139 1440                                  l2171 1A58  
                                l2075 1CF2                                  l2091 0E6E  
                                l2083 0DAC                                  l2067 1514  
                                l2059 1482                                  l2163 1352  
                                l2155 1312                                  l1419 1768  
                                l1435 1878                                  l1427 182A  
                                l2147 19EA                                  l2181 1928  
                                l2173 1A60                                  l2085 0DFE  
                                l2093 0E82                                  l2077 0D76  
                                l2069 1516                                  l2157 133A  
                                l2165 135A                                  l2149 1290  
                                l1437 1884                                  l1429 184C  
                                l1461 1C74                                  l2191 1980  
                                l2183 1930                                  l2175 1A74  
                                l2095 0E86                                  l2087 0E4A  
                                l2079 0D78                                  l2167 1362  
                                l2159 1342                                  l1551 1C0A  
                                l1463 1C76                                  l2193 1AA6  
                                l2185 1940                                  l1641 1BCA  
                                l2177 1A7C                                  l2097 0EA6  
                                l2089 0E5E                                  l2169 136A  
                                l1465 1C78                                  l1457 1C62  
                                l1801 1236                                  l1571 1906  
                                l1563 1898                                  l2195 1AAE  
                                l2187 1948                                  l1643 1BE2  
                                l2179 1A8C                                  l2099 0ECE  
                                l1459 1C66                                  l1803 1242  
                                l1565 18A0                                  l1573 1908  
                                l2197 1ABE                                  l2189 1960  
                                l1549 1BF8                                  l1805 124A  
                                l1821 1B82                                  l1901 1A18  
                                l1567 18C2                                  l2199 1ADE  
                                l1911 161A                                  l1807 1258  
                                l1815 126E                                  l1831 0FE8  
                                l1823 1B8E                                  l1903 1A32  
                                l1569 18F4                                  l1921 1654  
                                l1913 1622                                  l1809 1266  
                                l1833 0FFC                                  l1825 0FCC  
                                l1905 1A40                                  l1931 1688  
                                l1923 165C                                  l1915 1626  
                                l1907 160A                                  l1675 1B9C  
                                l1771 115A                                  l1851 10C8  
                                l1843 1052                                  l1835 101A  
                                l1827 0FDC                                  l1819 1B6E  
                                l1941 16BA                                  l1933 1690  
                                l1925 1662                                  l1917 1634  
                                l1909 160C                                  l1677 1B9E  
                                l1773 1172                                  l1853 10E6  
                                l1861 1100                                  l1845 106C  
                                l1837 1030                                  l1935 1696  
                                l1927 1664                                  l1919 163C  
                                l1791 11E8                                  l1783 11B0  
                                l1775 1184                                  l1863 110E  
                                l1855 10F0                                  l1847 107E  
                                l1951 1B0C                                  l1929 1672  
                                l1937 169C                                  l1961 153E  
                                l1881 1C3E                                  l1785 11CA  
                                l1777 1196                                  l1865 1122  
                                l1849 109E                                  l1953 1B16  
                                l1945 1AF0                                  l1939 16B2  
                                l1971 15A6                                  l1963 1552  
                                l1883 1CE6                                  l1779 11A8  
                                l1867 1136                                  l1891 1C56  
                                l1875 1CDA                                  l1955 1B1A  
                                l1947 1AF8                                  l1973 15C0  
                                l1965 1556                                  l1877 1C20  
                                l1797 120C                                  l1869 1144  
                                l1893 1CBE                                  l1885 1C42  
                                l1957 1B22                                  l1949 1B00  
                                l1975 15DC                                  l1967 155E  
                                l1991 0B0A                                  l1983 0AC0  
                                l1879 1C34                                  l1799 1220  
                                l1895 19F6                                  l1887 1C44  
                                l1959 1B2E                                  l1969 157E  
                                l1977 15DE                                  l1993 0B3C  
                                l1985 0AC2                                  l1897 19FE  
                                l1889 1C48                                  l1979 15F4  
                                l1995 0B5C                                  l1987 0ACE  
                                l1899 1A0A                                  l1997 0BAE  
                                l1989 0AE4                                  l1999 0BFA  
                                _TMR0 0FD6                                  _WREG 0FE8  
                                _main 1996                                  fsr0h 0FEA  
                                fsr1h 0FE2                                  indf0 0FEF  
                                fsr2h 0FDA                                  fsr0l 0FE9  
                                indf2 0FDF                                  fsr1l 0FE1  
                                fsr2l 0FD9                                  btemp 0001  
                                prodh 0FF4                                  prodl 0FF3  
                                start 000C       __end_of_tarefa_controle_central 1380  
__end_of_tarefa_monitoramento_bateria 1AF0          _tarefa_monitoramento_bateria 1AA2  
                        ___param_bank 0000       __end_of_tarefa_controle_motores 1AA2  
                               _ADRES 0FC3                       __end_of___awmod 16C6  
                               i2l271 09F2                                 i2l274 0A88  
                               u31_40 18C2                                 u31_41 18BE  
                               u32_40 18F4                                 u32_41 18F0  
                               u33_40 191E                                 u33_41 191A  
                               u42_20 1BAE                                 u42_21 1BA8  
                               u42_26 1BB0                                 u70_20 15A6  
                               u70_21 15A2                                 u63_20 161A  
                               u71_20 15F4                                 u63_21 1616  
                               u71_21 15F0                                 u64_20 1634  
                               u72_20 0AE4                                 u80_20 0DAC  
                               u64_21 1630                                 u72_21 0AE0  
                               u80_21 0DA8                                 u65_20 1654  
                               u73_20 0B5C                                 u81_20 0E6E  
                               u65_21 1650                                 u73_21 0B58  
                               u81_21 0E6A                                 u66_20 1672  
                               u74_20 0C1E                                 u82_20 0EA6  
                               u66_21 166E                                 u74_21 0C1A  
                               u82_21 0EA2                                 u67_20 1688  
                               u75_20 0C56                                 u83_20 0F06  
                               u67_21 1684                                 u75_21 0C52  
                               u83_21 0F02                                 u68_20 16B2  
                               u76_20 0CB6                                 u84_20 0FAE  
                               u68_21 16AE                                 u76_21 0CB2  
                               u84_21 0FAA                                 u85_20 1C8C  
                               u69_20 157E                                 u77_20 0D5E  
                               u85_21 1C88                                 u69_21 157A  
                               u77_21 0D5A                                 u86_20 145A  
                               u78_20 17AE                                 u86_21 1456  
                               u78_21 17AA                                 u79_20 1530  
                               u87_20 12F6                                 u79_21 152C  
                               u87_21 12F2                            __SRAMmerge 1154  
                               btemp0 0001                                 btemp1 0002  
                               btemp2 0003                                 btemp3 0004  
                               btemp4 0005                                 btemp5 0006  
                               btemp6 0007                                 btemp7 0008  
                               btemp8 0009                                 btemp9 000A  
                               ltemp0 0001                                 ltemp1 0005  
                               ltemp2 0009                                 ltemp3 000D  
                               ltemp4 0011                                 ltemp5 0015  
                               ltemp6 0019                                 ltemp7 001D  
                               ltemp8 0021                                 ltemp9 0025  
                               plusw0 0FEB                                 plusw1 0FE3  
                               plusw2 0FDB                                 ttemp0 0001  
                               ttemp1 0005                                 ttemp2 0009  
                               ttemp3 000D                                 ttemp4 0011  
                               ttemp5 0015                                 ttemp6 0019  
                               ttemp7 001D                                 ttemp8 0021  
                               ttemp9 0025                                 status 0FD8  
                               wtemp0 0001                                 wtemp1 0003  
                               wtemp2 0005                                 wtemp3 0007  
                               wtemp4 0009                                 wtemp5 000B  
                               wtemp6 000D                                 wtemp7 000F  
                               wtemp8 0011                                 wtemp9 0013  
                     __initialization 1B3C                          ?_ISR_TIMER_0 004F  
                        __end_of_main 19F6                         __activetblptr 0000  
                              _CCPR1L 0FBE                      __end_of_adc_read 1C96  
                              i2l2201 083C                                i2l2211 08C4  
                              i2l2203 084C                                i2l2221 094A  
                              i2l2213 0910                                i2l2205 084E  
                              i2l2231 09F4                                i2l2223 096A  
                              i2l2215 0924                                i2l2207 0852  
                              i2l2233 0A06                                i2l2225 09A8  
                              i2l2217 0934                                i2l2209 0872  
                              i2l2235 0A52                                i2l2227 09CA  
                              i2l2219 0946                                i2l2237 0A72  
                              i2l2229 09CC                                i2l2239 0A86  
                              _STATUS 0FD8                                _STKPTR 0FFC  
                              _adc_go 1CE6                     __end_of_SRAMalloc 1154  
                              clear_0 1B44                                clear_1 1B56  
                              clear_2 1B62                                isa$std 0001  
                              btemp10 000B                                btemp11 000C  
                              btemp12 000D                                btemp20 0015  
                              btemp13 000E                                btemp21 0016  
                              btemp30 001F                                btemp14 000F  
                              btemp22 0017                                btemp31 0020  
                              btemp15 0010                                btemp23 0018  
                              btemp40 0029                                btemp32 0021  
                              btemp24 0019                                btemp16 0011  
                              btemp41 002A                                btemp33 0022  
                              btemp25 001A                                btemp17 0012  
                              btemp42 002B                                btemp34 0023  
                              btemp26 001B                                btemp18 0013  
                              btemp50 0033                                btemp43 002C  
                              btemp35 0024                                btemp27 001C  
                              btemp19 0014                                btemp51 0034  
                              btemp52 0035                                btemp44 002D  
                              btemp36 0025                                btemp28 001D  
                              btemp53 0036                                btemp45 002E  
                              btemp37 0026                                btemp29 001E  
                              btemp46 002F                                btemp38 0027  
                              btemp54 0037                                btemp47 0030  
                              btemp39 0028                                btemp55 0038  
                              btemp48 0031                                btemp49 0032  
                    __end_of_os_delay 0FC6                      __end_of_sem_init 1B9C  
                    __end_of_sem_wait 0D76                      __end_of_sem_post 180C  
                __end_of_conf_timer_0 1C7C                                ltemp10 0029  
                              ltemp11 002D                                ltemp12 0031  
                              ltemp13 0035                      __end_of_set_port 1CE6  
                    __end_of_os_start 1CAA                                lltemp0 0001  
                              lltemp1 0009                                lltemp2 0011  
                              lltemp3 0019                                lltemp4 0021  
                              lltemp5 0029                                lltemp6 0031  
                        __mediumconst 0800                      __end_of_pwm_init 1C62  
                              ttemp10 0029                                ttemp11 002D  
                              ttemp12 0031                                ttemp13 0035  
                              wtemp10 0015                                wtemp11 0017  
                              wtemp20 0029                                wtemp12 0019  
                              wtemp21 002B                                wtemp13 001B  
                              wtemp14 001D                                wtemp22 002D  
                              wtemp23 002F                                wtemp15 001F  
                              wtemp24 0031                                wtemp16 0021  
                              wtemp25 0033                                wtemp17 0023  
                              wtemp26 0035                                wtemp18 0025  
                              wtemp27 0037                                wtemp19 0027  
                          __accesstop 0060               __end_of__initialization 1B68  
                       ___rparam_used 0001                        _os_create_task 16C6  
                      __pcstackCOMRAM 004F                            ___inthi_sp 065C  
                          __pbssBANK0 0060                         __uDynamicHeap 02B7  
              __end_of_os_create_task 177C                            _config_adc 1C20  
               _os_task_time_decrease 1898                            _config_app 1AF0  
                             i2u90_40 0872                               i2u90_41 086E  
                             i2u91_40 0934                               i2u91_41 0930  
                             i2u92_40 096A                               i2u92_41 0966  
                             i2u93_40 09CA                               i2u93_41 09C6  
                             i2u94_40 0A72                               i2u94_41 0A6E  
                             i2u89_40 084C                               i2u89_41 0848  
                             __Hparam 0000                               __Lparam 0000  
                             ___awmod 1608                          __psmallconst 0800  
                             __pcinit 1B3C                               __ramtop 0800  
                             __ptext0 1996                               __ptext1 1C96  
                             __ptext2 1AF0                               __ptext3 1CDA  
                             __ptext4 1CAA                               __ptext5 1C42  
                             __ptext6 1CBE                               __ptext7 19F6  
                             __ptext8 1B6E                               __ptext9 0FC6  
             _tarefa_leitura_sensores 1920                             _T0CONbits 0FD5  
                           _T2CONbits 0FCA                            _readyQueue 00A2  
                   __end_of_read_pipe 1538                     __end_of_scheduler 1CDA  
                      __pintcode_body 0802                  end_of_initialization 1B68  
                   __end_of_os_config 1C20                               int_func 0802  
                        _conf_timer_0 1C62                               postdec0 0FED  
                             postdec1 0FE5                               postdec2 0FDD  
                             postinc0 0FEE                               postinc1 0FE6  
                             postinc2 0FDE                             _PORTDbits 0F83  
                           _SRAMalloc 0FC6                            _mutex_init 1CBE  
                          _mutex_lock 1CFC                             _TRISCbits 0F94  
                           _TRISDbits 0F95                           _CCP1CONbits 0FBD  
          __end_of_pwm_set_duty_cycle 1BF8                    __end_of__SRAMmerge 1288  
                      __end_of_adc_go 1CF2                            _write_pipe 1380  
                 start_initialization 1B3C                  __end_of_os_idle_task 1BCA  
                  _velocidade_motores 0039                   __end_of_create_pipe 1A50  
                       _pipe_sensores 0081                           __pbssBIGRAM 00A2  
                         __pbssCOMRAM 0039       __end_of_tarefa_leitura_sensores 1996  
                     _conf_interrupts 1D06                  __end_of_SRAMInitHeap 1898  
                       ??_ISR_TIMER_0 004F                             __pintcode 0008  
                         __smallconst 0800                             _read_pipe 1462  
                           _scheduler 1CCC                           _create_pipe 19F6  
                            _LATDbits 0F8C                             _os_config 1BF8  
          __end_of_priority_scheduler 1608                  __end_of_mutex_unlock 1CFC  
                          _ADCON0bits 0FC2                   __end_of_ISR_TIMER_0 0AC0  
                          _ADCON1bits 0FC1                            _ADCON2bits 0FC0  
             __end_of_conf_interrupts 1D0A                          _pipe_bateria 0060  
                            __Hrparam 0000                              __Lrparam 0000  
                  __end_of_config_adc 1C42                   __end_of_set_channel 1CBE  
                  __end_of_config_app 1B3C                    _pwm_set_duty_cycle 1BCA  
                            _adc_read 1C7C                          _os_idle_task 1B9C  
                            __ptext10 1154                              __ptext11 1C20  
                            __ptext20 1462                              __ptext12 1CE6  
                            __ptext21 0D76                              __ptext13 1C62  
                            __ptext30 1BCA                              __ptext22 1CF2  
                            __ptext14 1D06                              __ptext31 1920  
                            __ptext23 177C                              __ptext15 180C  
                            __ptext32 1380                              __ptext24 1CFC  
                            __ptext16 1BF8                              __ptext33 1C7C  
                            __ptext25 0AC0                              __ptext17 16C6  
                            __ptext34 1AA2                              __ptext26 1CCC  
                            __ptext18 1B9C                              __ptext27 1538  
                            __ptext19 1288                              __ptext36 1898  
                            __ptext28 1608                              __ptext29 1A50  
             _tarefa_controle_central 1288                              _os_delay 0D76  
             _tarefa_controle_motores 1A50                              _sem_init 1B6E  
                            _sem_wait 0AC0                              _sem_post 177C  
                            us88_2999 1A6A                              _set_port 1CDA  
                            _os_start 1C96                              isa$xinst 0000  
                         _ISR_TIMER_0 0008                              _pwm_init 1C42  
                        _SRAMInitHeap 180C                            _INTCONbits 0FF2  
                            intlevel1 0000                              intlevel2 0000  
                         _set_channel 1CAA                    __end_of_mutex_init 1CCC  
                  __end_of_mutex_lock 1D06                         _mutex_motores 0041  
                        _mutex_unlock 1CF2                    __end_of_write_pipe 1462  
