

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Sep 17 15:41:13 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    38   000000                     
    39                           ; Generated 17/01/2025 GMT
    40                           ; 
    41                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4550 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000FE0                     bsr             equ	4064
    74   000FE9                     fsr0            equ	4073
    75   000FEA                     fsr0h           equ	4074
    76   000FE9                     fsr0l           equ	4073
    77   000FE1                     fsr1            equ	4065
    78   000FE2                     fsr1h           equ	4066
    79   000FE1                     fsr1l           equ	4065
    80   000FD9                     fsr2            equ	4057
    81   000FDA                     fsr2h           equ	4058
    82   000FD9                     fsr2l           equ	4057
    83   000FEF                     indf0           equ	4079
    84   000FE7                     indf1           equ	4071
    85   000FDF                     indf2           equ	4063
    86   000FF2                     intcon          equ	4082
    87   000000                     nvmcon          equ	0
    88   000FF9                     pcl             equ	4089
    89   000FFA                     pclath          equ	4090
    90   000FFB                     pclatu          equ	4091
    91   000FEB                     plusw0          equ	4075
    92   000FE3                     plusw1          equ	4067
    93   000FDB                     plusw2          equ	4059
    94   000FED                     postdec0        equ	4077
    95   000FE5                     postdec1        equ	4069
    96   000FDD                     postdec2        equ	4061
    97   000FEE                     postinc0        equ	4078
    98   000FE6                     postinc1        equ	4070
    99   000FDE                     postinc2        equ	4062
   100   000FEC                     preinc0         equ	4076
   101   000FE4                     preinc1         equ	4068
   102   000FDC                     preinc2         equ	4060
   103   000FF3                     prod            equ	4083
   104   000FF4                     prodh           equ	4084
   105   000FF3                     prodl           equ	4083
   106   000FD8                     status          equ	4056
   107   000FF5                     tablat          equ	4085
   108   000FF6                     tblptr          equ	4086
   109   000FF7                     tblptrh         equ	4087
   110   000FF6                     tblptrl         equ	4086
   111   000FF8                     tblptru         equ	4088
   112   000FFD                     tosl            equ	4093
   113   000FE8                     wreg            equ	4072
   114   000F62                     SPPDATA         equ	3938	;# 
   115   000F63                     SPPCFG          equ	3939	;# 
   116   000F64                     SPPEPS          equ	3940	;# 
   117   000F65                     SPPCON          equ	3941	;# 
   118   000F66                     UFRM            equ	3942	;# 
   119   000F66                     UFRML           equ	3942	;# 
   120   000F67                     UFRMH           equ	3943	;# 
   121   000F68                     UIR             equ	3944	;# 
   122   000F69                     UIE             equ	3945	;# 
   123   000F6A                     UEIR            equ	3946	;# 
   124   000F6B                     UEIE            equ	3947	;# 
   125   000F6C                     USTAT           equ	3948	;# 
   126   000F6D                     UCON            equ	3949	;# 
   127   000F6E                     UADDR           equ	3950	;# 
   128   000F6F                     UCFG            equ	3951	;# 
   129   000F70                     UEP0            equ	3952	;# 
   130   000F71                     UEP1            equ	3953	;# 
   131   000F72                     UEP2            equ	3954	;# 
   132   000F73                     UEP3            equ	3955	;# 
   133   000F74                     UEP4            equ	3956	;# 
   134   000F75                     UEP5            equ	3957	;# 
   135   000F76                     UEP6            equ	3958	;# 
   136   000F77                     UEP7            equ	3959	;# 
   137   000F78                     UEP8            equ	3960	;# 
   138   000F79                     UEP9            equ	3961	;# 
   139   000F7A                     UEP10           equ	3962	;# 
   140   000F7B                     UEP11           equ	3963	;# 
   141   000F7C                     UEP12           equ	3964	;# 
   142   000F7D                     UEP13           equ	3965	;# 
   143   000F7E                     UEP14           equ	3966	;# 
   144   000F7F                     UEP15           equ	3967	;# 
   145   000F80                     PORTA           equ	3968	;# 
   146   000F81                     PORTB           equ	3969	;# 
   147   000F82                     PORTC           equ	3970	;# 
   148   000F83                     PORTD           equ	3971	;# 
   149   000F84                     PORTE           equ	3972	;# 
   150   000F89                     LATA            equ	3977	;# 
   151   000F8A                     LATB            equ	3978	;# 
   152   000F8B                     LATC            equ	3979	;# 
   153   000F8C                     LATD            equ	3980	;# 
   154   000F8D                     LATE            equ	3981	;# 
   155   000F92                     TRISA           equ	3986	;# 
   156   000F92                     DDRA            equ	3986	;# 
   157   000F93                     TRISB           equ	3987	;# 
   158   000F93                     DDRB            equ	3987	;# 
   159   000F94                     TRISC           equ	3988	;# 
   160   000F94                     DDRC            equ	3988	;# 
   161   000F95                     TRISD           equ	3989	;# 
   162   000F95                     DDRD            equ	3989	;# 
   163   000F96                     TRISE           equ	3990	;# 
   164   000F96                     DDRE            equ	3990	;# 
   165   000F9B                     OSCTUNE         equ	3995	;# 
   166   000F9D                     PIE1            equ	3997	;# 
   167   000F9E                     PIR1            equ	3998	;# 
   168   000F9F                     IPR1            equ	3999	;# 
   169   000FA0                     PIE2            equ	4000	;# 
   170   000FA1                     PIR2            equ	4001	;# 
   171   000FA2                     IPR2            equ	4002	;# 
   172   000FA6                     EECON1          equ	4006	;# 
   173   000FA7                     EECON2          equ	4007	;# 
   174   000FA8                     EEDATA          equ	4008	;# 
   175   000FA9                     EEADR           equ	4009	;# 
   176   000FAB                     RCSTA           equ	4011	;# 
   177   000FAB                     RCSTA1          equ	4011	;# 
   178   000FAC                     TXSTA           equ	4012	;# 
   179   000FAC                     TXSTA1          equ	4012	;# 
   180   000FAD                     TXREG           equ	4013	;# 
   181   000FAD                     TXREG1          equ	4013	;# 
   182   000FAE                     RCREG           equ	4014	;# 
   183   000FAE                     RCREG1          equ	4014	;# 
   184   000FAF                     SPBRG           equ	4015	;# 
   185   000FAF                     SPBRG1          equ	4015	;# 
   186   000FB0                     SPBRGH          equ	4016	;# 
   187   000FB1                     T3CON           equ	4017	;# 
   188   000FB2                     TMR3            equ	4018	;# 
   189   000FB2                     TMR3L           equ	4018	;# 
   190   000FB3                     TMR3H           equ	4019	;# 
   191   000FB4                     CMCON           equ	4020	;# 
   192   000FB5                     CVRCON          equ	4021	;# 
   193   000FB6                     ECCP1AS         equ	4022	;# 
   194   000FB6                     CCP1AS          equ	4022	;# 
   195   000FB7                     ECCP1DEL        equ	4023	;# 
   196   000FB7                     CCP1DEL         equ	4023	;# 
   197   000FB8                     BAUDCON         equ	4024	;# 
   198   000FB8                     BAUDCTL         equ	4024	;# 
   199   000FBA                     CCP2CON         equ	4026	;# 
   200   000FBB                     CCPR2           equ	4027	;# 
   201   000FBB                     CCPR2L          equ	4027	;# 
   202   000FBC                     CCPR2H          equ	4028	;# 
   203   000FBD                     CCP1CON         equ	4029	;# 
   204   000FBD                     ECCP1CON        equ	4029	;# 
   205   000FBE                     CCPR1           equ	4030	;# 
   206   000FBE                     CCPR1L          equ	4030	;# 
   207   000FBF                     CCPR1H          equ	4031	;# 
   208   000FC0                     ADCON2          equ	4032	;# 
   209   000FC1                     ADCON1          equ	4033	;# 
   210   000FC2                     ADCON0          equ	4034	;# 
   211   000FC3                     ADRES           equ	4035	;# 
   212   000FC3                     ADRESL          equ	4035	;# 
   213   000FC4                     ADRESH          equ	4036	;# 
   214   000FC5                     SSPCON2         equ	4037	;# 
   215   000FC6                     SSPCON1         equ	4038	;# 
   216   000FC7                     SSPSTAT         equ	4039	;# 
   217   000FC8                     SSPADD          equ	4040	;# 
   218   000FC9                     SSPBUF          equ	4041	;# 
   219   000FCA                     T2CON           equ	4042	;# 
   220   000FCB                     PR2             equ	4043	;# 
   221   000FCB                     MEMCON          equ	4043	;# 
   222   000FCC                     TMR2            equ	4044	;# 
   223   000FCD                     T1CON           equ	4045	;# 
   224   000FCE                     TMR1            equ	4046	;# 
   225   000FCE                     TMR1L           equ	4046	;# 
   226   000FCF                     TMR1H           equ	4047	;# 
   227   000FD0                     RCON            equ	4048	;# 
   228   000FD1                     WDTCON          equ	4049	;# 
   229   000FD2                     HLVDCON         equ	4050	;# 
   230   000FD2                     LVDCON          equ	4050	;# 
   231   000FD3                     OSCCON          equ	4051	;# 
   232   000FD5                     T0CON           equ	4053	;# 
   233   000FD6                     TMR0            equ	4054	;# 
   234   000FD6                     TMR0L           equ	4054	;# 
   235   000FD7                     TMR0H           equ	4055	;# 
   236   000FD8                     STATUS          equ	4056	;# 
   237   000FD9                     FSR2            equ	4057	;# 
   238   000FD9                     FSR2L           equ	4057	;# 
   239   000FDA                     FSR2H           equ	4058	;# 
   240   000FDB                     PLUSW2          equ	4059	;# 
   241   000FDC                     PREINC2         equ	4060	;# 
   242   000FDD                     POSTDEC2        equ	4061	;# 
   243   000FDE                     POSTINC2        equ	4062	;# 
   244   000FDF                     INDF2           equ	4063	;# 
   245   000FE0                     BSR             equ	4064	;# 
   246   000FE1                     FSR1            equ	4065	;# 
   247   000FE1                     FSR1L           equ	4065	;# 
   248   000FE2                     FSR1H           equ	4066	;# 
   249   000FE3                     PLUSW1          equ	4067	;# 
   250   000FE4                     PREINC1         equ	4068	;# 
   251   000FE5                     POSTDEC1        equ	4069	;# 
   252   000FE6                     POSTINC1        equ	4070	;# 
   253   000FE7                     INDF1           equ	4071	;# 
   254   000FE8                     WREG            equ	4072	;# 
   255   000FE9                     FSR0            equ	4073	;# 
   256   000FE9                     FSR0L           equ	4073	;# 
   257   000FEA                     FSR0H           equ	4074	;# 
   258   000FEB                     PLUSW0          equ	4075	;# 
   259   000FEC                     PREINC0         equ	4076	;# 
   260   000FED                     POSTDEC0        equ	4077	;# 
   261   000FEE                     POSTINC0        equ	4078	;# 
   262   000FEF                     INDF0           equ	4079	;# 
   263   000FF0                     INTCON3         equ	4080	;# 
   264   000FF1                     INTCON2         equ	4081	;# 
   265   000FF2                     INTCON          equ	4082	;# 
   266   000FF3                     PROD            equ	4083	;# 
   267   000FF3                     PRODL           equ	4083	;# 
   268   000FF4                     PRODH           equ	4084	;# 
   269   000FF5                     TABLAT          equ	4085	;# 
   270   000FF6                     TBLPTR          equ	4086	;# 
   271   000FF6                     TBLPTRL         equ	4086	;# 
   272   000FF7                     TBLPTRH         equ	4087	;# 
   273   000FF8                     TBLPTRU         equ	4088	;# 
   274   000FF9                     PCLAT           equ	4089	;# 
   275   000FF9                     PC              equ	4089	;# 
   276   000FF9                     PCL             equ	4089	;# 
   277   000FFA                     PCLATH          equ	4090	;# 
   278   000FFB                     PCLATU          equ	4091	;# 
   279   000FFC                     STKPTR          equ	4092	;# 
   280   000FFD                     TOS             equ	4093	;# 
   281   000FFD                     TOSL            equ	4093	;# 
   282   000FFE                     TOSH            equ	4094	;# 
   283   000FFF                     TOSU            equ	4095	;# 
   284   000F62                     SPPDATA         equ	3938	;# 
   285   000F63                     SPPCFG          equ	3939	;# 
   286   000F64                     SPPEPS          equ	3940	;# 
   287   000F65                     SPPCON          equ	3941	;# 
   288   000F66                     UFRM            equ	3942	;# 
   289   000F66                     UFRML           equ	3942	;# 
   290   000F67                     UFRMH           equ	3943	;# 
   291   000F68                     UIR             equ	3944	;# 
   292   000F69                     UIE             equ	3945	;# 
   293   000F6A                     UEIR            equ	3946	;# 
   294   000F6B                     UEIE            equ	3947	;# 
   295   000F6C                     USTAT           equ	3948	;# 
   296   000F6D                     UCON            equ	3949	;# 
   297   000F6E                     UADDR           equ	3950	;# 
   298   000F6F                     UCFG            equ	3951	;# 
   299   000F70                     UEP0            equ	3952	;# 
   300   000F71                     UEP1            equ	3953	;# 
   301   000F72                     UEP2            equ	3954	;# 
   302   000F73                     UEP3            equ	3955	;# 
   303   000F74                     UEP4            equ	3956	;# 
   304   000F75                     UEP5            equ	3957	;# 
   305   000F76                     UEP6            equ	3958	;# 
   306   000F77                     UEP7            equ	3959	;# 
   307   000F78                     UEP8            equ	3960	;# 
   308   000F79                     UEP9            equ	3961	;# 
   309   000F7A                     UEP10           equ	3962	;# 
   310   000F7B                     UEP11           equ	3963	;# 
   311   000F7C                     UEP12           equ	3964	;# 
   312   000F7D                     UEP13           equ	3965	;# 
   313   000F7E                     UEP14           equ	3966	;# 
   314   000F7F                     UEP15           equ	3967	;# 
   315   000F80                     PORTA           equ	3968	;# 
   316   000F81                     PORTB           equ	3969	;# 
   317   000F82                     PORTC           equ	3970	;# 
   318   000F83                     PORTD           equ	3971	;# 
   319   000F84                     PORTE           equ	3972	;# 
   320   000F89                     LATA            equ	3977	;# 
   321   000F8A                     LATB            equ	3978	;# 
   322   000F8B                     LATC            equ	3979	;# 
   323   000F8C                     LATD            equ	3980	;# 
   324   000F8D                     LATE            equ	3981	;# 
   325   000F92                     TRISA           equ	3986	;# 
   326   000F92                     DDRA            equ	3986	;# 
   327   000F93                     TRISB           equ	3987	;# 
   328   000F93                     DDRB            equ	3987	;# 
   329   000F94                     TRISC           equ	3988	;# 
   330   000F94                     DDRC            equ	3988	;# 
   331   000F95                     TRISD           equ	3989	;# 
   332   000F95                     DDRD            equ	3989	;# 
   333   000F96                     TRISE           equ	3990	;# 
   334   000F96                     DDRE            equ	3990	;# 
   335   000F9B                     OSCTUNE         equ	3995	;# 
   336   000F9D                     PIE1            equ	3997	;# 
   337   000F9E                     PIR1            equ	3998	;# 
   338   000F9F                     IPR1            equ	3999	;# 
   339   000FA0                     PIE2            equ	4000	;# 
   340   000FA1                     PIR2            equ	4001	;# 
   341   000FA2                     IPR2            equ	4002	;# 
   342   000FA6                     EECON1          equ	4006	;# 
   343   000FA7                     EECON2          equ	4007	;# 
   344   000FA8                     EEDATA          equ	4008	;# 
   345   000FA9                     EEADR           equ	4009	;# 
   346   000FAB                     RCSTA           equ	4011	;# 
   347   000FAB                     RCSTA1          equ	4011	;# 
   348   000FAC                     TXSTA           equ	4012	;# 
   349   000FAC                     TXSTA1          equ	4012	;# 
   350   000FAD                     TXREG           equ	4013	;# 
   351   000FAD                     TXREG1          equ	4013	;# 
   352   000FAE                     RCREG           equ	4014	;# 
   353   000FAE                     RCREG1          equ	4014	;# 
   354   000FAF                     SPBRG           equ	4015	;# 
   355   000FAF                     SPBRG1          equ	4015	;# 
   356   000FB0                     SPBRGH          equ	4016	;# 
   357   000FB1                     T3CON           equ	4017	;# 
   358   000FB2                     TMR3            equ	4018	;# 
   359   000FB2                     TMR3L           equ	4018	;# 
   360   000FB3                     TMR3H           equ	4019	;# 
   361   000FB4                     CMCON           equ	4020	;# 
   362   000FB5                     CVRCON          equ	4021	;# 
   363   000FB6                     ECCP1AS         equ	4022	;# 
   364   000FB6                     CCP1AS          equ	4022	;# 
   365   000FB7                     ECCP1DEL        equ	4023	;# 
   366   000FB7                     CCP1DEL         equ	4023	;# 
   367   000FB8                     BAUDCON         equ	4024	;# 
   368   000FB8                     BAUDCTL         equ	4024	;# 
   369   000FBA                     CCP2CON         equ	4026	;# 
   370   000FBB                     CCPR2           equ	4027	;# 
   371   000FBB                     CCPR2L          equ	4027	;# 
   372   000FBC                     CCPR2H          equ	4028	;# 
   373   000FBD                     CCP1CON         equ	4029	;# 
   374   000FBD                     ECCP1CON        equ	4029	;# 
   375   000FBE                     CCPR1           equ	4030	;# 
   376   000FBE                     CCPR1L          equ	4030	;# 
   377   000FBF                     CCPR1H          equ	4031	;# 
   378   000FC0                     ADCON2          equ	4032	;# 
   379   000FC1                     ADCON1          equ	4033	;# 
   380   000FC2                     ADCON0          equ	4034	;# 
   381   000FC3                     ADRES           equ	4035	;# 
   382   000FC3                     ADRESL          equ	4035	;# 
   383   000FC4                     ADRESH          equ	4036	;# 
   384   000FC5                     SSPCON2         equ	4037	;# 
   385   000FC6                     SSPCON1         equ	4038	;# 
   386   000FC7                     SSPSTAT         equ	4039	;# 
   387   000FC8                     SSPADD          equ	4040	;# 
   388   000FC9                     SSPBUF          equ	4041	;# 
   389   000FCA                     T2CON           equ	4042	;# 
   390   000FCB                     PR2             equ	4043	;# 
   391   000FCB                     MEMCON          equ	4043	;# 
   392   000FCC                     TMR2            equ	4044	;# 
   393   000FCD                     T1CON           equ	4045	;# 
   394   000FCE                     TMR1            equ	4046	;# 
   395   000FCE                     TMR1L           equ	4046	;# 
   396   000FCF                     TMR1H           equ	4047	;# 
   397   000FD0                     RCON            equ	4048	;# 
   398   000FD1                     WDTCON          equ	4049	;# 
   399   000FD2                     HLVDCON         equ	4050	;# 
   400   000FD2                     LVDCON          equ	4050	;# 
   401   000FD3                     OSCCON          equ	4051	;# 
   402   000FD5                     T0CON           equ	4053	;# 
   403   000FD6                     TMR0            equ	4054	;# 
   404   000FD6                     TMR0L           equ	4054	;# 
   405   000FD7                     TMR0H           equ	4055	;# 
   406   000FD8                     STATUS          equ	4056	;# 
   407   000FD9                     FSR2            equ	4057	;# 
   408   000FD9                     FSR2L           equ	4057	;# 
   409   000FDA                     FSR2H           equ	4058	;# 
   410   000FDB                     PLUSW2          equ	4059	;# 
   411   000FDC                     PREINC2         equ	4060	;# 
   412   000FDD                     POSTDEC2        equ	4061	;# 
   413   000FDE                     POSTINC2        equ	4062	;# 
   414   000FDF                     INDF2           equ	4063	;# 
   415   000FE0                     BSR             equ	4064	;# 
   416   000FE1                     FSR1            equ	4065	;# 
   417   000FE1                     FSR1L           equ	4065	;# 
   418   000FE2                     FSR1H           equ	4066	;# 
   419   000FE3                     PLUSW1          equ	4067	;# 
   420   000FE4                     PREINC1         equ	4068	;# 
   421   000FE5                     POSTDEC1        equ	4069	;# 
   422   000FE6                     POSTINC1        equ	4070	;# 
   423   000FE7                     INDF1           equ	4071	;# 
   424   000FE8                     WREG            equ	4072	;# 
   425   000FE9                     FSR0            equ	4073	;# 
   426   000FE9                     FSR0L           equ	4073	;# 
   427   000FEA                     FSR0H           equ	4074	;# 
   428   000FEB                     PLUSW0          equ	4075	;# 
   429   000FEC                     PREINC0         equ	4076	;# 
   430   000FED                     POSTDEC0        equ	4077	;# 
   431   000FEE                     POSTINC0        equ	4078	;# 
   432   000FEF                     INDF0           equ	4079	;# 
   433   000FF0                     INTCON3         equ	4080	;# 
   434   000FF1                     INTCON2         equ	4081	;# 
   435   000FF2                     INTCON          equ	4082	;# 
   436   000FF3                     PROD            equ	4083	;# 
   437   000FF3                     PRODL           equ	4083	;# 
   438   000FF4                     PRODH           equ	4084	;# 
   439   000FF5                     TABLAT          equ	4085	;# 
   440   000FF6                     TBLPTR          equ	4086	;# 
   441   000FF6                     TBLPTRL         equ	4086	;# 
   442   000FF7                     TBLPTRH         equ	4087	;# 
   443   000FF8                     TBLPTRU         equ	4088	;# 
   444   000FF9                     PCLAT           equ	4089	;# 
   445   000FF9                     PC              equ	4089	;# 
   446   000FF9                     PCL             equ	4089	;# 
   447   000FFA                     PCLATH          equ	4090	;# 
   448   000FFB                     PCLATU          equ	4091	;# 
   449   000FFC                     STKPTR          equ	4092	;# 
   450   000FFD                     TOS             equ	4093	;# 
   451   000FFD                     TOSL            equ	4093	;# 
   452   000FFE                     TOSH            equ	4094	;# 
   453   000FFF                     TOSU            equ	4095	;# 
   454   000F62                     SPPDATA         equ	3938	;# 
   455   000F63                     SPPCFG          equ	3939	;# 
   456   000F64                     SPPEPS          equ	3940	;# 
   457   000F65                     SPPCON          equ	3941	;# 
   458   000F66                     UFRM            equ	3942	;# 
   459   000F66                     UFRML           equ	3942	;# 
   460   000F67                     UFRMH           equ	3943	;# 
   461   000F68                     UIR             equ	3944	;# 
   462   000F69                     UIE             equ	3945	;# 
   463   000F6A                     UEIR            equ	3946	;# 
   464   000F6B                     UEIE            equ	3947	;# 
   465   000F6C                     USTAT           equ	3948	;# 
   466   000F6D                     UCON            equ	3949	;# 
   467   000F6E                     UADDR           equ	3950	;# 
   468   000F6F                     UCFG            equ	3951	;# 
   469   000F70                     UEP0            equ	3952	;# 
   470   000F71                     UEP1            equ	3953	;# 
   471   000F72                     UEP2            equ	3954	;# 
   472   000F73                     UEP3            equ	3955	;# 
   473   000F74                     UEP4            equ	3956	;# 
   474   000F75                     UEP5            equ	3957	;# 
   475   000F76                     UEP6            equ	3958	;# 
   476   000F77                     UEP7            equ	3959	;# 
   477   000F78                     UEP8            equ	3960	;# 
   478   000F79                     UEP9            equ	3961	;# 
   479   000F7A                     UEP10           equ	3962	;# 
   480   000F7B                     UEP11           equ	3963	;# 
   481   000F7C                     UEP12           equ	3964	;# 
   482   000F7D                     UEP13           equ	3965	;# 
   483   000F7E                     UEP14           equ	3966	;# 
   484   000F7F                     UEP15           equ	3967	;# 
   485   000F80                     PORTA           equ	3968	;# 
   486   000F81                     PORTB           equ	3969	;# 
   487   000F82                     PORTC           equ	3970	;# 
   488   000F83                     PORTD           equ	3971	;# 
   489   000F84                     PORTE           equ	3972	;# 
   490   000F89                     LATA            equ	3977	;# 
   491   000F8A                     LATB            equ	3978	;# 
   492   000F8B                     LATC            equ	3979	;# 
   493   000F8C                     LATD            equ	3980	;# 
   494   000F8D                     LATE            equ	3981	;# 
   495   000F92                     TRISA           equ	3986	;# 
   496   000F92                     DDRA            equ	3986	;# 
   497   000F93                     TRISB           equ	3987	;# 
   498   000F93                     DDRB            equ	3987	;# 
   499   000F94                     TRISC           equ	3988	;# 
   500   000F94                     DDRC            equ	3988	;# 
   501   000F95                     TRISD           equ	3989	;# 
   502   000F95                     DDRD            equ	3989	;# 
   503   000F96                     TRISE           equ	3990	;# 
   504   000F96                     DDRE            equ	3990	;# 
   505   000F9B                     OSCTUNE         equ	3995	;# 
   506   000F9D                     PIE1            equ	3997	;# 
   507   000F9E                     PIR1            equ	3998	;# 
   508   000F9F                     IPR1            equ	3999	;# 
   509   000FA0                     PIE2            equ	4000	;# 
   510   000FA1                     PIR2            equ	4001	;# 
   511   000FA2                     IPR2            equ	4002	;# 
   512   000FA6                     EECON1          equ	4006	;# 
   513   000FA7                     EECON2          equ	4007	;# 
   514   000FA8                     EEDATA          equ	4008	;# 
   515   000FA9                     EEADR           equ	4009	;# 
   516   000FAB                     RCSTA           equ	4011	;# 
   517   000FAB                     RCSTA1          equ	4011	;# 
   518   000FAC                     TXSTA           equ	4012	;# 
   519   000FAC                     TXSTA1          equ	4012	;# 
   520   000FAD                     TXREG           equ	4013	;# 
   521   000FAD                     TXREG1          equ	4013	;# 
   522   000FAE                     RCREG           equ	4014	;# 
   523   000FAE                     RCREG1          equ	4014	;# 
   524   000FAF                     SPBRG           equ	4015	;# 
   525   000FAF                     SPBRG1          equ	4015	;# 
   526   000FB0                     SPBRGH          equ	4016	;# 
   527   000FB1                     T3CON           equ	4017	;# 
   528   000FB2                     TMR3            equ	4018	;# 
   529   000FB2                     TMR3L           equ	4018	;# 
   530   000FB3                     TMR3H           equ	4019	;# 
   531   000FB4                     CMCON           equ	4020	;# 
   532   000FB5                     CVRCON          equ	4021	;# 
   533   000FB6                     ECCP1AS         equ	4022	;# 
   534   000FB6                     CCP1AS          equ	4022	;# 
   535   000FB7                     ECCP1DEL        equ	4023	;# 
   536   000FB7                     CCP1DEL         equ	4023	;# 
   537   000FB8                     BAUDCON         equ	4024	;# 
   538   000FB8                     BAUDCTL         equ	4024	;# 
   539   000FBA                     CCP2CON         equ	4026	;# 
   540   000FBB                     CCPR2           equ	4027	;# 
   541   000FBB                     CCPR2L          equ	4027	;# 
   542   000FBC                     CCPR2H          equ	4028	;# 
   543   000FBD                     CCP1CON         equ	4029	;# 
   544   000FBD                     ECCP1CON        equ	4029	;# 
   545   000FBE                     CCPR1           equ	4030	;# 
   546   000FBE                     CCPR1L          equ	4030	;# 
   547   000FBF                     CCPR1H          equ	4031	;# 
   548   000FC0                     ADCON2          equ	4032	;# 
   549   000FC1                     ADCON1          equ	4033	;# 
   550   000FC2                     ADCON0          equ	4034	;# 
   551   000FC3                     ADRES           equ	4035	;# 
   552   000FC3                     ADRESL          equ	4035	;# 
   553   000FC4                     ADRESH          equ	4036	;# 
   554   000FC5                     SSPCON2         equ	4037	;# 
   555   000FC6                     SSPCON1         equ	4038	;# 
   556   000FC7                     SSPSTAT         equ	4039	;# 
   557   000FC8                     SSPADD          equ	4040	;# 
   558   000FC9                     SSPBUF          equ	4041	;# 
   559   000FCA                     T2CON           equ	4042	;# 
   560   000FCB                     PR2             equ	4043	;# 
   561   000FCB                     MEMCON          equ	4043	;# 
   562   000FCC                     TMR2            equ	4044	;# 
   563   000FCD                     T1CON           equ	4045	;# 
   564   000FCE                     TMR1            equ	4046	;# 
   565   000FCE                     TMR1L           equ	4046	;# 
   566   000FCF                     TMR1H           equ	4047	;# 
   567   000FD0                     RCON            equ	4048	;# 
   568   000FD1                     WDTCON          equ	4049	;# 
   569   000FD2                     HLVDCON         equ	4050	;# 
   570   000FD2                     LVDCON          equ	4050	;# 
   571   000FD3                     OSCCON          equ	4051	;# 
   572   000FD5                     T0CON           equ	4053	;# 
   573   000FD6                     TMR0            equ	4054	;# 
   574   000FD6                     TMR0L           equ	4054	;# 
   575   000FD7                     TMR0H           equ	4055	;# 
   576   000FD8                     STATUS          equ	4056	;# 
   577   000FD9                     FSR2            equ	4057	;# 
   578   000FD9                     FSR2L           equ	4057	;# 
   579   000FDA                     FSR2H           equ	4058	;# 
   580   000FDB                     PLUSW2          equ	4059	;# 
   581   000FDC                     PREINC2         equ	4060	;# 
   582   000FDD                     POSTDEC2        equ	4061	;# 
   583   000FDE                     POSTINC2        equ	4062	;# 
   584   000FDF                     INDF2           equ	4063	;# 
   585   000FE0                     BSR             equ	4064	;# 
   586   000FE1                     FSR1            equ	4065	;# 
   587   000FE1                     FSR1L           equ	4065	;# 
   588   000FE2                     FSR1H           equ	4066	;# 
   589   000FE3                     PLUSW1          equ	4067	;# 
   590   000FE4                     PREINC1         equ	4068	;# 
   591   000FE5                     POSTDEC1        equ	4069	;# 
   592   000FE6                     POSTINC1        equ	4070	;# 
   593   000FE7                     INDF1           equ	4071	;# 
   594   000FE8                     WREG            equ	4072	;# 
   595   000FE9                     FSR0            equ	4073	;# 
   596   000FE9                     FSR0L           equ	4073	;# 
   597   000FEA                     FSR0H           equ	4074	;# 
   598   000FEB                     PLUSW0          equ	4075	;# 
   599   000FEC                     PREINC0         equ	4076	;# 
   600   000FED                     POSTDEC0        equ	4077	;# 
   601   000FEE                     POSTINC0        equ	4078	;# 
   602   000FEF                     INDF0           equ	4079	;# 
   603   000FF0                     INTCON3         equ	4080	;# 
   604   000FF1                     INTCON2         equ	4081	;# 
   605   000FF2                     INTCON          equ	4082	;# 
   606   000FF3                     PROD            equ	4083	;# 
   607   000FF3                     PRODL           equ	4083	;# 
   608   000FF4                     PRODH           equ	4084	;# 
   609   000FF5                     TABLAT          equ	4085	;# 
   610   000FF6                     TBLPTR          equ	4086	;# 
   611   000FF6                     TBLPTRL         equ	4086	;# 
   612   000FF7                     TBLPTRH         equ	4087	;# 
   613   000FF8                     TBLPTRU         equ	4088	;# 
   614   000FF9                     PCLAT           equ	4089	;# 
   615   000FF9                     PC              equ	4089	;# 
   616   000FF9                     PCL             equ	4089	;# 
   617   000FFA                     PCLATH          equ	4090	;# 
   618   000FFB                     PCLATU          equ	4091	;# 
   619   000FFC                     STKPTR          equ	4092	;# 
   620   000FFD                     TOS             equ	4093	;# 
   621   000FFD                     TOSL            equ	4093	;# 
   622   000FFE                     TOSH            equ	4094	;# 
   623   000FFF                     TOSU            equ	4095	;# 
   624   000F62                     SPPDATA         equ	3938	;# 
   625   000F63                     SPPCFG          equ	3939	;# 
   626   000F64                     SPPEPS          equ	3940	;# 
   627   000F65                     SPPCON          equ	3941	;# 
   628   000F66                     UFRM            equ	3942	;# 
   629   000F66                     UFRML           equ	3942	;# 
   630   000F67                     UFRMH           equ	3943	;# 
   631   000F68                     UIR             equ	3944	;# 
   632   000F69                     UIE             equ	3945	;# 
   633   000F6A                     UEIR            equ	3946	;# 
   634   000F6B                     UEIE            equ	3947	;# 
   635   000F6C                     USTAT           equ	3948	;# 
   636   000F6D                     UCON            equ	3949	;# 
   637   000F6E                     UADDR           equ	3950	;# 
   638   000F6F                     UCFG            equ	3951	;# 
   639   000F70                     UEP0            equ	3952	;# 
   640   000F71                     UEP1            equ	3953	;# 
   641   000F72                     UEP2            equ	3954	;# 
   642   000F73                     UEP3            equ	3955	;# 
   643   000F74                     UEP4            equ	3956	;# 
   644   000F75                     UEP5            equ	3957	;# 
   645   000F76                     UEP6            equ	3958	;# 
   646   000F77                     UEP7            equ	3959	;# 
   647   000F78                     UEP8            equ	3960	;# 
   648   000F79                     UEP9            equ	3961	;# 
   649   000F7A                     UEP10           equ	3962	;# 
   650   000F7B                     UEP11           equ	3963	;# 
   651   000F7C                     UEP12           equ	3964	;# 
   652   000F7D                     UEP13           equ	3965	;# 
   653   000F7E                     UEP14           equ	3966	;# 
   654   000F7F                     UEP15           equ	3967	;# 
   655   000F80                     PORTA           equ	3968	;# 
   656   000F81                     PORTB           equ	3969	;# 
   657   000F82                     PORTC           equ	3970	;# 
   658   000F83                     PORTD           equ	3971	;# 
   659   000F84                     PORTE           equ	3972	;# 
   660   000F89                     LATA            equ	3977	;# 
   661   000F8A                     LATB            equ	3978	;# 
   662   000F8B                     LATC            equ	3979	;# 
   663   000F8C                     LATD            equ	3980	;# 
   664   000F8D                     LATE            equ	3981	;# 
   665   000F92                     TRISA           equ	3986	;# 
   666   000F92                     DDRA            equ	3986	;# 
   667   000F93                     TRISB           equ	3987	;# 
   668   000F93                     DDRB            equ	3987	;# 
   669   000F94                     TRISC           equ	3988	;# 
   670   000F94                     DDRC            equ	3988	;# 
   671   000F95                     TRISD           equ	3989	;# 
   672   000F95                     DDRD            equ	3989	;# 
   673   000F96                     TRISE           equ	3990	;# 
   674   000F96                     DDRE            equ	3990	;# 
   675   000F9B                     OSCTUNE         equ	3995	;# 
   676   000F9D                     PIE1            equ	3997	;# 
   677   000F9E                     PIR1            equ	3998	;# 
   678   000F9F                     IPR1            equ	3999	;# 
   679   000FA0                     PIE2            equ	4000	;# 
   680   000FA1                     PIR2            equ	4001	;# 
   681   000FA2                     IPR2            equ	4002	;# 
   682   000FA6                     EECON1          equ	4006	;# 
   683   000FA7                     EECON2          equ	4007	;# 
   684   000FA8                     EEDATA          equ	4008	;# 
   685   000FA9                     EEADR           equ	4009	;# 
   686   000FAB                     RCSTA           equ	4011	;# 
   687   000FAB                     RCSTA1          equ	4011	;# 
   688   000FAC                     TXSTA           equ	4012	;# 
   689   000FAC                     TXSTA1          equ	4012	;# 
   690   000FAD                     TXREG           equ	4013	;# 
   691   000FAD                     TXREG1          equ	4013	;# 
   692   000FAE                     RCREG           equ	4014	;# 
   693   000FAE                     RCREG1          equ	4014	;# 
   694   000FAF                     SPBRG           equ	4015	;# 
   695   000FAF                     SPBRG1          equ	4015	;# 
   696   000FB0                     SPBRGH          equ	4016	;# 
   697   000FB1                     T3CON           equ	4017	;# 
   698   000FB2                     TMR3            equ	4018	;# 
   699   000FB2                     TMR3L           equ	4018	;# 
   700   000FB3                     TMR3H           equ	4019	;# 
   701   000FB4                     CMCON           equ	4020	;# 
   702   000FB5                     CVRCON          equ	4021	;# 
   703   000FB6                     ECCP1AS         equ	4022	;# 
   704   000FB6                     CCP1AS          equ	4022	;# 
   705   000FB7                     ECCP1DEL        equ	4023	;# 
   706   000FB7                     CCP1DEL         equ	4023	;# 
   707   000FB8                     BAUDCON         equ	4024	;# 
   708   000FB8                     BAUDCTL         equ	4024	;# 
   709   000FBA                     CCP2CON         equ	4026	;# 
   710   000FBB                     CCPR2           equ	4027	;# 
   711   000FBB                     CCPR2L          equ	4027	;# 
   712   000FBC                     CCPR2H          equ	4028	;# 
   713   000FBD                     CCP1CON         equ	4029	;# 
   714   000FBD                     ECCP1CON        equ	4029	;# 
   715   000FBE                     CCPR1           equ	4030	;# 
   716   000FBE                     CCPR1L          equ	4030	;# 
   717   000FBF                     CCPR1H          equ	4031	;# 
   718   000FC0                     ADCON2          equ	4032	;# 
   719   000FC1                     ADCON1          equ	4033	;# 
   720   000FC2                     ADCON0          equ	4034	;# 
   721   000FC3                     ADRES           equ	4035	;# 
   722   000FC3                     ADRESL          equ	4035	;# 
   723   000FC4                     ADRESH          equ	4036	;# 
   724   000FC5                     SSPCON2         equ	4037	;# 
   725   000FC6                     SSPCON1         equ	4038	;# 
   726   000FC7                     SSPSTAT         equ	4039	;# 
   727   000FC8                     SSPADD          equ	4040	;# 
   728   000FC9                     SSPBUF          equ	4041	;# 
   729   000FCA                     T2CON           equ	4042	;# 
   730   000FCB                     PR2             equ	4043	;# 
   731   000FCB                     MEMCON          equ	4043	;# 
   732   000FCC                     TMR2            equ	4044	;# 
   733   000FCD                     T1CON           equ	4045	;# 
   734   000FCE                     TMR1            equ	4046	;# 
   735   000FCE                     TMR1L           equ	4046	;# 
   736   000FCF                     TMR1H           equ	4047	;# 
   737   000FD0                     RCON            equ	4048	;# 
   738   000FD1                     WDTCON          equ	4049	;# 
   739   000FD2                     HLVDCON         equ	4050	;# 
   740   000FD2                     LVDCON          equ	4050	;# 
   741   000FD3                     OSCCON          equ	4051	;# 
   742   000FD5                     T0CON           equ	4053	;# 
   743   000FD6                     TMR0            equ	4054	;# 
   744   000FD6                     TMR0L           equ	4054	;# 
   745   000FD7                     TMR0H           equ	4055	;# 
   746   000FD8                     STATUS          equ	4056	;# 
   747   000FD9                     FSR2            equ	4057	;# 
   748   000FD9                     FSR2L           equ	4057	;# 
   749   000FDA                     FSR2H           equ	4058	;# 
   750   000FDB                     PLUSW2          equ	4059	;# 
   751   000FDC                     PREINC2         equ	4060	;# 
   752   000FDD                     POSTDEC2        equ	4061	;# 
   753   000FDE                     POSTINC2        equ	4062	;# 
   754   000FDF                     INDF2           equ	4063	;# 
   755   000FE0                     BSR             equ	4064	;# 
   756   000FE1                     FSR1            equ	4065	;# 
   757   000FE1                     FSR1L           equ	4065	;# 
   758   000FE2                     FSR1H           equ	4066	;# 
   759   000FE3                     PLUSW1          equ	4067	;# 
   760   000FE4                     PREINC1         equ	4068	;# 
   761   000FE5                     POSTDEC1        equ	4069	;# 
   762   000FE6                     POSTINC1        equ	4070	;# 
   763   000FE7                     INDF1           equ	4071	;# 
   764   000FE8                     WREG            equ	4072	;# 
   765   000FE9                     FSR0            equ	4073	;# 
   766   000FE9                     FSR0L           equ	4073	;# 
   767   000FEA                     FSR0H           equ	4074	;# 
   768   000FEB                     PLUSW0          equ	4075	;# 
   769   000FEC                     PREINC0         equ	4076	;# 
   770   000FED                     POSTDEC0        equ	4077	;# 
   771   000FEE                     POSTINC0        equ	4078	;# 
   772   000FEF                     INDF0           equ	4079	;# 
   773   000FF0                     INTCON3         equ	4080	;# 
   774   000FF1                     INTCON2         equ	4081	;# 
   775   000FF2                     INTCON          equ	4082	;# 
   776   000FF3                     PROD            equ	4083	;# 
   777   000FF3                     PRODL           equ	4083	;# 
   778   000FF4                     PRODH           equ	4084	;# 
   779   000FF5                     TABLAT          equ	4085	;# 
   780   000FF6                     TBLPTR          equ	4086	;# 
   781   000FF6                     TBLPTRL         equ	4086	;# 
   782   000FF7                     TBLPTRH         equ	4087	;# 
   783   000FF8                     TBLPTRU         equ	4088	;# 
   784   000FF9                     PCLAT           equ	4089	;# 
   785   000FF9                     PC              equ	4089	;# 
   786   000FF9                     PCL             equ	4089	;# 
   787   000FFA                     PCLATH          equ	4090	;# 
   788   000FFB                     PCLATU          equ	4091	;# 
   789   000FFC                     STKPTR          equ	4092	;# 
   790   000FFD                     TOS             equ	4093	;# 
   791   000FFD                     TOSL            equ	4093	;# 
   792   000FFE                     TOSH            equ	4094	;# 
   793   000FFF                     TOSU            equ	4095	;# 
   794   000F62                     SPPDATA         equ	3938	;# 
   795   000F63                     SPPCFG          equ	3939	;# 
   796   000F64                     SPPEPS          equ	3940	;# 
   797   000F65                     SPPCON          equ	3941	;# 
   798   000F66                     UFRM            equ	3942	;# 
   799   000F66                     UFRML           equ	3942	;# 
   800   000F67                     UFRMH           equ	3943	;# 
   801   000F68                     UIR             equ	3944	;# 
   802   000F69                     UIE             equ	3945	;# 
   803   000F6A                     UEIR            equ	3946	;# 
   804   000F6B                     UEIE            equ	3947	;# 
   805   000F6C                     USTAT           equ	3948	;# 
   806   000F6D                     UCON            equ	3949	;# 
   807   000F6E                     UADDR           equ	3950	;# 
   808   000F6F                     UCFG            equ	3951	;# 
   809   000F70                     UEP0            equ	3952	;# 
   810   000F71                     UEP1            equ	3953	;# 
   811   000F72                     UEP2            equ	3954	;# 
   812   000F73                     UEP3            equ	3955	;# 
   813   000F74                     UEP4            equ	3956	;# 
   814   000F75                     UEP5            equ	3957	;# 
   815   000F76                     UEP6            equ	3958	;# 
   816   000F77                     UEP7            equ	3959	;# 
   817   000F78                     UEP8            equ	3960	;# 
   818   000F79                     UEP9            equ	3961	;# 
   819   000F7A                     UEP10           equ	3962	;# 
   820   000F7B                     UEP11           equ	3963	;# 
   821   000F7C                     UEP12           equ	3964	;# 
   822   000F7D                     UEP13           equ	3965	;# 
   823   000F7E                     UEP14           equ	3966	;# 
   824   000F7F                     UEP15           equ	3967	;# 
   825   000F80                     PORTA           equ	3968	;# 
   826   000F81                     PORTB           equ	3969	;# 
   827   000F82                     PORTC           equ	3970	;# 
   828   000F83                     PORTD           equ	3971	;# 
   829   000F84                     PORTE           equ	3972	;# 
   830   000F89                     LATA            equ	3977	;# 
   831   000F8A                     LATB            equ	3978	;# 
   832   000F8B                     LATC            equ	3979	;# 
   833   000F8C                     LATD            equ	3980	;# 
   834   000F8D                     LATE            equ	3981	;# 
   835   000F92                     TRISA           equ	3986	;# 
   836   000F92                     DDRA            equ	3986	;# 
   837   000F93                     TRISB           equ	3987	;# 
   838   000F93                     DDRB            equ	3987	;# 
   839   000F94                     TRISC           equ	3988	;# 
   840   000F94                     DDRC            equ	3988	;# 
   841   000F95                     TRISD           equ	3989	;# 
   842   000F95                     DDRD            equ	3989	;# 
   843   000F96                     TRISE           equ	3990	;# 
   844   000F96                     DDRE            equ	3990	;# 
   845   000F9B                     OSCTUNE         equ	3995	;# 
   846   000F9D                     PIE1            equ	3997	;# 
   847   000F9E                     PIR1            equ	3998	;# 
   848   000F9F                     IPR1            equ	3999	;# 
   849   000FA0                     PIE2            equ	4000	;# 
   850   000FA1                     PIR2            equ	4001	;# 
   851   000FA2                     IPR2            equ	4002	;# 
   852   000FA6                     EECON1          equ	4006	;# 
   853   000FA7                     EECON2          equ	4007	;# 
   854   000FA8                     EEDATA          equ	4008	;# 
   855   000FA9                     EEADR           equ	4009	;# 
   856   000FAB                     RCSTA           equ	4011	;# 
   857   000FAB                     RCSTA1          equ	4011	;# 
   858   000FAC                     TXSTA           equ	4012	;# 
   859   000FAC                     TXSTA1          equ	4012	;# 
   860   000FAD                     TXREG           equ	4013	;# 
   861   000FAD                     TXREG1          equ	4013	;# 
   862   000FAE                     RCREG           equ	4014	;# 
   863   000FAE                     RCREG1          equ	4014	;# 
   864   000FAF                     SPBRG           equ	4015	;# 
   865   000FAF                     SPBRG1          equ	4015	;# 
   866   000FB0                     SPBRGH          equ	4016	;# 
   867   000FB1                     T3CON           equ	4017	;# 
   868   000FB2                     TMR3            equ	4018	;# 
   869   000FB2                     TMR3L           equ	4018	;# 
   870   000FB3                     TMR3H           equ	4019	;# 
   871   000FB4                     CMCON           equ	4020	;# 
   872   000FB5                     CVRCON          equ	4021	;# 
   873   000FB6                     ECCP1AS         equ	4022	;# 
   874   000FB6                     CCP1AS          equ	4022	;# 
   875   000FB7                     ECCP1DEL        equ	4023	;# 
   876   000FB7                     CCP1DEL         equ	4023	;# 
   877   000FB8                     BAUDCON         equ	4024	;# 
   878   000FB8                     BAUDCTL         equ	4024	;# 
   879   000FBA                     CCP2CON         equ	4026	;# 
   880   000FBB                     CCPR2           equ	4027	;# 
   881   000FBB                     CCPR2L          equ	4027	;# 
   882   000FBC                     CCPR2H          equ	4028	;# 
   883   000FBD                     CCP1CON         equ	4029	;# 
   884   000FBD                     ECCP1CON        equ	4029	;# 
   885   000FBE                     CCPR1           equ	4030	;# 
   886   000FBE                     CCPR1L          equ	4030	;# 
   887   000FBF                     CCPR1H          equ	4031	;# 
   888   000FC0                     ADCON2          equ	4032	;# 
   889   000FC1                     ADCON1          equ	4033	;# 
   890   000FC2                     ADCON0          equ	4034	;# 
   891   000FC3                     ADRES           equ	4035	;# 
   892   000FC3                     ADRESL          equ	4035	;# 
   893   000FC4                     ADRESH          equ	4036	;# 
   894   000FC5                     SSPCON2         equ	4037	;# 
   895   000FC6                     SSPCON1         equ	4038	;# 
   896   000FC7                     SSPSTAT         equ	4039	;# 
   897   000FC8                     SSPADD          equ	4040	;# 
   898   000FC9                     SSPBUF          equ	4041	;# 
   899   000FCA                     T2CON           equ	4042	;# 
   900   000FCB                     PR2             equ	4043	;# 
   901   000FCB                     MEMCON          equ	4043	;# 
   902   000FCC                     TMR2            equ	4044	;# 
   903   000FCD                     T1CON           equ	4045	;# 
   904   000FCE                     TMR1            equ	4046	;# 
   905   000FCE                     TMR1L           equ	4046	;# 
   906   000FCF                     TMR1H           equ	4047	;# 
   907   000FD0                     RCON            equ	4048	;# 
   908   000FD1                     WDTCON          equ	4049	;# 
   909   000FD2                     HLVDCON         equ	4050	;# 
   910   000FD2                     LVDCON          equ	4050	;# 
   911   000FD3                     OSCCON          equ	4051	;# 
   912   000FD5                     T0CON           equ	4053	;# 
   913   000FD6                     TMR0            equ	4054	;# 
   914   000FD6                     TMR0L           equ	4054	;# 
   915   000FD7                     TMR0H           equ	4055	;# 
   916   000FD8                     STATUS          equ	4056	;# 
   917   000FD9                     FSR2            equ	4057	;# 
   918   000FD9                     FSR2L           equ	4057	;# 
   919   000FDA                     FSR2H           equ	4058	;# 
   920   000FDB                     PLUSW2          equ	4059	;# 
   921   000FDC                     PREINC2         equ	4060	;# 
   922   000FDD                     POSTDEC2        equ	4061	;# 
   923   000FDE                     POSTINC2        equ	4062	;# 
   924   000FDF                     INDF2           equ	4063	;# 
   925   000FE0                     BSR             equ	4064	;# 
   926   000FE1                     FSR1            equ	4065	;# 
   927   000FE1                     FSR1L           equ	4065	;# 
   928   000FE2                     FSR1H           equ	4066	;# 
   929   000FE3                     PLUSW1          equ	4067	;# 
   930   000FE4                     PREINC1         equ	4068	;# 
   931   000FE5                     POSTDEC1        equ	4069	;# 
   932   000FE6                     POSTINC1        equ	4070	;# 
   933   000FE7                     INDF1           equ	4071	;# 
   934   000FE8                     WREG            equ	4072	;# 
   935   000FE9                     FSR0            equ	4073	;# 
   936   000FE9                     FSR0L           equ	4073	;# 
   937   000FEA                     FSR0H           equ	4074	;# 
   938   000FEB                     PLUSW0          equ	4075	;# 
   939   000FEC                     PREINC0         equ	4076	;# 
   940   000FED                     POSTDEC0        equ	4077	;# 
   941   000FEE                     POSTINC0        equ	4078	;# 
   942   000FEF                     INDF0           equ	4079	;# 
   943   000FF0                     INTCON3         equ	4080	;# 
   944   000FF1                     INTCON2         equ	4081	;# 
   945   000FF2                     INTCON          equ	4082	;# 
   946   000FF3                     PROD            equ	4083	;# 
   947   000FF3                     PRODL           equ	4083	;# 
   948   000FF4                     PRODH           equ	4084	;# 
   949   000FF5                     TABLAT          equ	4085	;# 
   950   000FF6                     TBLPTR          equ	4086	;# 
   951   000FF6                     TBLPTRL         equ	4086	;# 
   952   000FF7                     TBLPTRH         equ	4087	;# 
   953   000FF8                     TBLPTRU         equ	4088	;# 
   954   000FF9                     PCLAT           equ	4089	;# 
   955   000FF9                     PC              equ	4089	;# 
   956   000FF9                     PCL             equ	4089	;# 
   957   000FFA                     PCLATH          equ	4090	;# 
   958   000FFB                     PCLATU          equ	4091	;# 
   959   000FFC                     STKPTR          equ	4092	;# 
   960   000FFD                     TOS             equ	4093	;# 
   961   000FFD                     TOSL            equ	4093	;# 
   962   000FFE                     TOSH            equ	4094	;# 
   963   000FFF                     TOSU            equ	4095	;# 
   964   000F62                     SPPDATA         equ	3938	;# 
   965   000F63                     SPPCFG          equ	3939	;# 
   966   000F64                     SPPEPS          equ	3940	;# 
   967   000F65                     SPPCON          equ	3941	;# 
   968   000F66                     UFRM            equ	3942	;# 
   969   000F66                     UFRML           equ	3942	;# 
   970   000F67                     UFRMH           equ	3943	;# 
   971   000F68                     UIR             equ	3944	;# 
   972   000F69                     UIE             equ	3945	;# 
   973   000F6A                     UEIR            equ	3946	;# 
   974   000F6B                     UEIE            equ	3947	;# 
   975   000F6C                     USTAT           equ	3948	;# 
   976   000F6D                     UCON            equ	3949	;# 
   977   000F6E                     UADDR           equ	3950	;# 
   978   000F6F                     UCFG            equ	3951	;# 
   979   000F70                     UEP0            equ	3952	;# 
   980   000F71                     UEP1            equ	3953	;# 
   981   000F72                     UEP2            equ	3954	;# 
   982   000F73                     UEP3            equ	3955	;# 
   983   000F74                     UEP4            equ	3956	;# 
   984   000F75                     UEP5            equ	3957	;# 
   985   000F76                     UEP6            equ	3958	;# 
   986   000F77                     UEP7            equ	3959	;# 
   987   000F78                     UEP8            equ	3960	;# 
   988   000F79                     UEP9            equ	3961	;# 
   989   000F7A                     UEP10           equ	3962	;# 
   990   000F7B                     UEP11           equ	3963	;# 
   991   000F7C                     UEP12           equ	3964	;# 
   992   000F7D                     UEP13           equ	3965	;# 
   993   000F7E                     UEP14           equ	3966	;# 
   994   000F7F                     UEP15           equ	3967	;# 
   995   000F80                     PORTA           equ	3968	;# 
   996   000F81                     PORTB           equ	3969	;# 
   997   000F82                     PORTC           equ	3970	;# 
   998   000F83                     PORTD           equ	3971	;# 
   999   000F84                     PORTE           equ	3972	;# 
  1000   000F89                     LATA            equ	3977	;# 
  1001   000F8A                     LATB            equ	3978	;# 
  1002   000F8B                     LATC            equ	3979	;# 
  1003   000F8C                     LATD            equ	3980	;# 
  1004   000F8D                     LATE            equ	3981	;# 
  1005   000F92                     TRISA           equ	3986	;# 
  1006   000F92                     DDRA            equ	3986	;# 
  1007   000F93                     TRISB           equ	3987	;# 
  1008   000F93                     DDRB            equ	3987	;# 
  1009   000F94                     TRISC           equ	3988	;# 
  1010   000F94                     DDRC            equ	3988	;# 
  1011   000F95                     TRISD           equ	3989	;# 
  1012   000F95                     DDRD            equ	3989	;# 
  1013   000F96                     TRISE           equ	3990	;# 
  1014   000F96                     DDRE            equ	3990	;# 
  1015   000F9B                     OSCTUNE         equ	3995	;# 
  1016   000F9D                     PIE1            equ	3997	;# 
  1017   000F9E                     PIR1            equ	3998	;# 
  1018   000F9F                     IPR1            equ	3999	;# 
  1019   000FA0                     PIE2            equ	4000	;# 
  1020   000FA1                     PIR2            equ	4001	;# 
  1021   000FA2                     IPR2            equ	4002	;# 
  1022   000FA6                     EECON1          equ	4006	;# 
  1023   000FA7                     EECON2          equ	4007	;# 
  1024   000FA8                     EEDATA          equ	4008	;# 
  1025   000FA9                     EEADR           equ	4009	;# 
  1026   000FAB                     RCSTA           equ	4011	;# 
  1027   000FAB                     RCSTA1          equ	4011	;# 
  1028   000FAC                     TXSTA           equ	4012	;# 
  1029   000FAC                     TXSTA1          equ	4012	;# 
  1030   000FAD                     TXREG           equ	4013	;# 
  1031   000FAD                     TXREG1          equ	4013	;# 
  1032   000FAE                     RCREG           equ	4014	;# 
  1033   000FAE                     RCREG1          equ	4014	;# 
  1034   000FAF                     SPBRG           equ	4015	;# 
  1035   000FAF                     SPBRG1          equ	4015	;# 
  1036   000FB0                     SPBRGH          equ	4016	;# 
  1037   000FB1                     T3CON           equ	4017	;# 
  1038   000FB2                     TMR3            equ	4018	;# 
  1039   000FB2                     TMR3L           equ	4018	;# 
  1040   000FB3                     TMR3H           equ	4019	;# 
  1041   000FB4                     CMCON           equ	4020	;# 
  1042   000FB5                     CVRCON          equ	4021	;# 
  1043   000FB6                     ECCP1AS         equ	4022	;# 
  1044   000FB6                     CCP1AS          equ	4022	;# 
  1045   000FB7                     ECCP1DEL        equ	4023	;# 
  1046   000FB7                     CCP1DEL         equ	4023	;# 
  1047   000FB8                     BAUDCON         equ	4024	;# 
  1048   000FB8                     BAUDCTL         equ	4024	;# 
  1049   000FBA                     CCP2CON         equ	4026	;# 
  1050   000FBB                     CCPR2           equ	4027	;# 
  1051   000FBB                     CCPR2L          equ	4027	;# 
  1052   000FBC                     CCPR2H          equ	4028	;# 
  1053   000FBD                     CCP1CON         equ	4029	;# 
  1054   000FBD                     ECCP1CON        equ	4029	;# 
  1055   000FBE                     CCPR1           equ	4030	;# 
  1056   000FBE                     CCPR1L          equ	4030	;# 
  1057   000FBF                     CCPR1H          equ	4031	;# 
  1058   000FC0                     ADCON2          equ	4032	;# 
  1059   000FC1                     ADCON1          equ	4033	;# 
  1060   000FC2                     ADCON0          equ	4034	;# 
  1061   000FC3                     ADRES           equ	4035	;# 
  1062   000FC3                     ADRESL          equ	4035	;# 
  1063   000FC4                     ADRESH          equ	4036	;# 
  1064   000FC5                     SSPCON2         equ	4037	;# 
  1065   000FC6                     SSPCON1         equ	4038	;# 
  1066   000FC7                     SSPSTAT         equ	4039	;# 
  1067   000FC8                     SSPADD          equ	4040	;# 
  1068   000FC9                     SSPBUF          equ	4041	;# 
  1069   000FCA                     T2CON           equ	4042	;# 
  1070   000FCB                     PR2             equ	4043	;# 
  1071   000FCB                     MEMCON          equ	4043	;# 
  1072   000FCC                     TMR2            equ	4044	;# 
  1073   000FCD                     T1CON           equ	4045	;# 
  1074   000FCE                     TMR1            equ	4046	;# 
  1075   000FCE                     TMR1L           equ	4046	;# 
  1076   000FCF                     TMR1H           equ	4047	;# 
  1077   000FD0                     RCON            equ	4048	;# 
  1078   000FD1                     WDTCON          equ	4049	;# 
  1079   000FD2                     HLVDCON         equ	4050	;# 
  1080   000FD2                     LVDCON          equ	4050	;# 
  1081   000FD3                     OSCCON          equ	4051	;# 
  1082   000FD5                     T0CON           equ	4053	;# 
  1083   000FD6                     TMR0            equ	4054	;# 
  1084   000FD6                     TMR0L           equ	4054	;# 
  1085   000FD7                     TMR0H           equ	4055	;# 
  1086   000FD8                     STATUS          equ	4056	;# 
  1087   000FD9                     FSR2            equ	4057	;# 
  1088   000FD9                     FSR2L           equ	4057	;# 
  1089   000FDA                     FSR2H           equ	4058	;# 
  1090   000FDB                     PLUSW2          equ	4059	;# 
  1091   000FDC                     PREINC2         equ	4060	;# 
  1092   000FDD                     POSTDEC2        equ	4061	;# 
  1093   000FDE                     POSTINC2        equ	4062	;# 
  1094   000FDF                     INDF2           equ	4063	;# 
  1095   000FE0                     BSR             equ	4064	;# 
  1096   000FE1                     FSR1            equ	4065	;# 
  1097   000FE1                     FSR1L           equ	4065	;# 
  1098   000FE2                     FSR1H           equ	4066	;# 
  1099   000FE3                     PLUSW1          equ	4067	;# 
  1100   000FE4                     PREINC1         equ	4068	;# 
  1101   000FE5                     POSTDEC1        equ	4069	;# 
  1102   000FE6                     POSTINC1        equ	4070	;# 
  1103   000FE7                     INDF1           equ	4071	;# 
  1104   000FE8                     WREG            equ	4072	;# 
  1105   000FE9                     FSR0            equ	4073	;# 
  1106   000FE9                     FSR0L           equ	4073	;# 
  1107   000FEA                     FSR0H           equ	4074	;# 
  1108   000FEB                     PLUSW0          equ	4075	;# 
  1109   000FEC                     PREINC0         equ	4076	;# 
  1110   000FED                     POSTDEC0        equ	4077	;# 
  1111   000FEE                     POSTINC0        equ	4078	;# 
  1112   000FEF                     INDF0           equ	4079	;# 
  1113   000FF0                     INTCON3         equ	4080	;# 
  1114   000FF1                     INTCON2         equ	4081	;# 
  1115   000FF2                     INTCON          equ	4082	;# 
  1116   000FF3                     PROD            equ	4083	;# 
  1117   000FF3                     PRODL           equ	4083	;# 
  1118   000FF4                     PRODH           equ	4084	;# 
  1119   000FF5                     TABLAT          equ	4085	;# 
  1120   000FF6                     TBLPTR          equ	4086	;# 
  1121   000FF6                     TBLPTRL         equ	4086	;# 
  1122   000FF7                     TBLPTRH         equ	4087	;# 
  1123   000FF8                     TBLPTRU         equ	4088	;# 
  1124   000FF9                     PCLAT           equ	4089	;# 
  1125   000FF9                     PC              equ	4089	;# 
  1126   000FF9                     PCL             equ	4089	;# 
  1127   000FFA                     PCLATH          equ	4090	;# 
  1128   000FFB                     PCLATU          equ	4091	;# 
  1129   000FFC                     STKPTR          equ	4092	;# 
  1130   000FFD                     TOS             equ	4093	;# 
  1131   000FFD                     TOSL            equ	4093	;# 
  1132   000FFE                     TOSH            equ	4094	;# 
  1133   000FFF                     TOSU            equ	4095	;# 
  1134   000F62                     SPPDATA         equ	3938	;# 
  1135   000F63                     SPPCFG          equ	3939	;# 
  1136   000F64                     SPPEPS          equ	3940	;# 
  1137   000F65                     SPPCON          equ	3941	;# 
  1138   000F66                     UFRM            equ	3942	;# 
  1139   000F66                     UFRML           equ	3942	;# 
  1140   000F67                     UFRMH           equ	3943	;# 
  1141   000F68                     UIR             equ	3944	;# 
  1142   000F69                     UIE             equ	3945	;# 
  1143   000F6A                     UEIR            equ	3946	;# 
  1144   000F6B                     UEIE            equ	3947	;# 
  1145   000F6C                     USTAT           equ	3948	;# 
  1146   000F6D                     UCON            equ	3949	;# 
  1147   000F6E                     UADDR           equ	3950	;# 
  1148   000F6F                     UCFG            equ	3951	;# 
  1149   000F70                     UEP0            equ	3952	;# 
  1150   000F71                     UEP1            equ	3953	;# 
  1151   000F72                     UEP2            equ	3954	;# 
  1152   000F73                     UEP3            equ	3955	;# 
  1153   000F74                     UEP4            equ	3956	;# 
  1154   000F75                     UEP5            equ	3957	;# 
  1155   000F76                     UEP6            equ	3958	;# 
  1156   000F77                     UEP7            equ	3959	;# 
  1157   000F78                     UEP8            equ	3960	;# 
  1158   000F79                     UEP9            equ	3961	;# 
  1159   000F7A                     UEP10           equ	3962	;# 
  1160   000F7B                     UEP11           equ	3963	;# 
  1161   000F7C                     UEP12           equ	3964	;# 
  1162   000F7D                     UEP13           equ	3965	;# 
  1163   000F7E                     UEP14           equ	3966	;# 
  1164   000F7F                     UEP15           equ	3967	;# 
  1165   000F80                     PORTA           equ	3968	;# 
  1166   000F81                     PORTB           equ	3969	;# 
  1167   000F82                     PORTC           equ	3970	;# 
  1168   000F83                     PORTD           equ	3971	;# 
  1169   000F84                     PORTE           equ	3972	;# 
  1170   000F89                     LATA            equ	3977	;# 
  1171   000F8A                     LATB            equ	3978	;# 
  1172   000F8B                     LATC            equ	3979	;# 
  1173   000F8C                     LATD            equ	3980	;# 
  1174   000F8D                     LATE            equ	3981	;# 
  1175   000F92                     TRISA           equ	3986	;# 
  1176   000F92                     DDRA            equ	3986	;# 
  1177   000F93                     TRISB           equ	3987	;# 
  1178   000F93                     DDRB            equ	3987	;# 
  1179   000F94                     TRISC           equ	3988	;# 
  1180   000F94                     DDRC            equ	3988	;# 
  1181   000F95                     TRISD           equ	3989	;# 
  1182   000F95                     DDRD            equ	3989	;# 
  1183   000F96                     TRISE           equ	3990	;# 
  1184   000F96                     DDRE            equ	3990	;# 
  1185   000F9B                     OSCTUNE         equ	3995	;# 
  1186   000F9D                     PIE1            equ	3997	;# 
  1187   000F9E                     PIR1            equ	3998	;# 
  1188   000F9F                     IPR1            equ	3999	;# 
  1189   000FA0                     PIE2            equ	4000	;# 
  1190   000FA1                     PIR2            equ	4001	;# 
  1191   000FA2                     IPR2            equ	4002	;# 
  1192   000FA6                     EECON1          equ	4006	;# 
  1193   000FA7                     EECON2          equ	4007	;# 
  1194   000FA8                     EEDATA          equ	4008	;# 
  1195   000FA9                     EEADR           equ	4009	;# 
  1196   000FAB                     RCSTA           equ	4011	;# 
  1197   000FAB                     RCSTA1          equ	4011	;# 
  1198   000FAC                     TXSTA           equ	4012	;# 
  1199   000FAC                     TXSTA1          equ	4012	;# 
  1200   000FAD                     TXREG           equ	4013	;# 
  1201   000FAD                     TXREG1          equ	4013	;# 
  1202   000FAE                     RCREG           equ	4014	;# 
  1203   000FAE                     RCREG1          equ	4014	;# 
  1204   000FAF                     SPBRG           equ	4015	;# 
  1205   000FAF                     SPBRG1          equ	4015	;# 
  1206   000FB0                     SPBRGH          equ	4016	;# 
  1207   000FB1                     T3CON           equ	4017	;# 
  1208   000FB2                     TMR3            equ	4018	;# 
  1209   000FB2                     TMR3L           equ	4018	;# 
  1210   000FB3                     TMR3H           equ	4019	;# 
  1211   000FB4                     CMCON           equ	4020	;# 
  1212   000FB5                     CVRCON          equ	4021	;# 
  1213   000FB6                     ECCP1AS         equ	4022	;# 
  1214   000FB6                     CCP1AS          equ	4022	;# 
  1215   000FB7                     ECCP1DEL        equ	4023	;# 
  1216   000FB7                     CCP1DEL         equ	4023	;# 
  1217   000FB8                     BAUDCON         equ	4024	;# 
  1218   000FB8                     BAUDCTL         equ	4024	;# 
  1219   000FBA                     CCP2CON         equ	4026	;# 
  1220   000FBB                     CCPR2           equ	4027	;# 
  1221   000FBB                     CCPR2L          equ	4027	;# 
  1222   000FBC                     CCPR2H          equ	4028	;# 
  1223   000FBD                     CCP1CON         equ	4029	;# 
  1224   000FBD                     ECCP1CON        equ	4029	;# 
  1225   000FBE                     CCPR1           equ	4030	;# 
  1226   000FBE                     CCPR1L          equ	4030	;# 
  1227   000FBF                     CCPR1H          equ	4031	;# 
  1228   000FC0                     ADCON2          equ	4032	;# 
  1229   000FC1                     ADCON1          equ	4033	;# 
  1230   000FC2                     ADCON0          equ	4034	;# 
  1231   000FC3                     ADRES           equ	4035	;# 
  1232   000FC3                     ADRESL          equ	4035	;# 
  1233   000FC4                     ADRESH          equ	4036	;# 
  1234   000FC5                     SSPCON2         equ	4037	;# 
  1235   000FC6                     SSPCON1         equ	4038	;# 
  1236   000FC7                     SSPSTAT         equ	4039	;# 
  1237   000FC8                     SSPADD          equ	4040	;# 
  1238   000FC9                     SSPBUF          equ	4041	;# 
  1239   000FCA                     T2CON           equ	4042	;# 
  1240   000FCB                     PR2             equ	4043	;# 
  1241   000FCB                     MEMCON          equ	4043	;# 
  1242   000FCC                     TMR2            equ	4044	;# 
  1243   000FCD                     T1CON           equ	4045	;# 
  1244   000FCE                     TMR1            equ	4046	;# 
  1245   000FCE                     TMR1L           equ	4046	;# 
  1246   000FCF                     TMR1H           equ	4047	;# 
  1247   000FD0                     RCON            equ	4048	;# 
  1248   000FD1                     WDTCON          equ	4049	;# 
  1249   000FD2                     HLVDCON         equ	4050	;# 
  1250   000FD2                     LVDCON          equ	4050	;# 
  1251   000FD3                     OSCCON          equ	4051	;# 
  1252   000FD5                     T0CON           equ	4053	;# 
  1253   000FD6                     TMR0            equ	4054	;# 
  1254   000FD6                     TMR0L           equ	4054	;# 
  1255   000FD7                     TMR0H           equ	4055	;# 
  1256   000FD8                     STATUS          equ	4056	;# 
  1257   000FD9                     FSR2            equ	4057	;# 
  1258   000FD9                     FSR2L           equ	4057	;# 
  1259   000FDA                     FSR2H           equ	4058	;# 
  1260   000FDB                     PLUSW2          equ	4059	;# 
  1261   000FDC                     PREINC2         equ	4060	;# 
  1262   000FDD                     POSTDEC2        equ	4061	;# 
  1263   000FDE                     POSTINC2        equ	4062	;# 
  1264   000FDF                     INDF2           equ	4063	;# 
  1265   000FE0                     BSR             equ	4064	;# 
  1266   000FE1                     FSR1            equ	4065	;# 
  1267   000FE1                     FSR1L           equ	4065	;# 
  1268   000FE2                     FSR1H           equ	4066	;# 
  1269   000FE3                     PLUSW1          equ	4067	;# 
  1270   000FE4                     PREINC1         equ	4068	;# 
  1271   000FE5                     POSTDEC1        equ	4069	;# 
  1272   000FE6                     POSTINC1        equ	4070	;# 
  1273   000FE7                     INDF1           equ	4071	;# 
  1274   000FE8                     WREG            equ	4072	;# 
  1275   000FE9                     FSR0            equ	4073	;# 
  1276   000FE9                     FSR0L           equ	4073	;# 
  1277   000FEA                     FSR0H           equ	4074	;# 
  1278   000FEB                     PLUSW0          equ	4075	;# 
  1279   000FEC                     PREINC0         equ	4076	;# 
  1280   000FED                     POSTDEC0        equ	4077	;# 
  1281   000FEE                     POSTINC0        equ	4078	;# 
  1282   000FEF                     INDF0           equ	4079	;# 
  1283   000FF0                     INTCON3         equ	4080	;# 
  1284   000FF1                     INTCON2         equ	4081	;# 
  1285   000FF2                     INTCON          equ	4082	;# 
  1286   000FF3                     PROD            equ	4083	;# 
  1287   000FF3                     PRODL           equ	4083	;# 
  1288   000FF4                     PRODH           equ	4084	;# 
  1289   000FF5                     TABLAT          equ	4085	;# 
  1290   000FF6                     TBLPTR          equ	4086	;# 
  1291   000FF6                     TBLPTRL         equ	4086	;# 
  1292   000FF7                     TBLPTRH         equ	4087	;# 
  1293   000FF8                     TBLPTRU         equ	4088	;# 
  1294   000FF9                     PCLAT           equ	4089	;# 
  1295   000FF9                     PC              equ	4089	;# 
  1296   000FF9                     PCL             equ	4089	;# 
  1297   000FFA                     PCLATH          equ	4090	;# 
  1298   000FFB                     PCLATU          equ	4091	;# 
  1299   000FFC                     STKPTR          equ	4092	;# 
  1300   000FFD                     TOS             equ	4093	;# 
  1301   000FFD                     TOSL            equ	4093	;# 
  1302   000FFE                     TOSH            equ	4094	;# 
  1303   000FFF                     TOSU            equ	4095	;# 
  1304   000FFD                     _TOS            set	4093
  1305   000FD6                     _TMR0           set	4054
  1306   000FD5                     _T0CONbits      set	4053
  1307   000FFC                     _STKPTR         set	4092
  1308   000FE8                     _WREG           set	4072
  1309   000FD8                     _STATUS         set	4056
  1310   000FE0                     _BSR            set	4064
  1311   000F83                     _PORTDbits      set	3971
  1312   000F8C                     _LATDbits       set	3980
  1313   000F95                     _TRISDbits      set	3989
  1314   000FF2                     _INTCONbits     set	4082
  1315                           
  1316                           ; #config settings
  1317                           
  1318                           	psect	cinit
  1319   0012DE                     __pcinit:
  1320                           	callstack 0
  1321   0012DE                     start_initialization:
  1322                           	callstack 0
  1323   0012DE                     __initialization:
  1324                           	callstack 0
  1325                           
  1326                           ; Clear objects allocated to BIGRAM (533 bytes)
  1327   0012DE  EE00  F0D3         	lfsr	0,__pbssBIGRAM
  1328   0012E2  EE12 F015          	lfsr	1,533
  1329   0012E6                     clear_0:
  1330   0012E6  6AEE               	clrf	postinc0,c
  1331   0012E8  50E5               	movf	postdec1,w,c
  1332   0012EA  50E1               	movf	fsr1l,w,c
  1333   0012EC  E1FC               	bnz	clear_0
  1334   0012EE  50E2               	movf	fsr1h,w,c
  1335   0012F0  E1FA               	bnz	clear_0
  1336                           
  1337                           ; Clear objects allocated to COMRAM (14 bytes)
  1338   0012F2  EE00  F02C         	lfsr	0,__pbssCOMRAM
  1339   0012F6  0E0E               	movlw	14
  1340   0012F8                     clear_1:
  1341   0012F8  6AEE               	clrf	postinc0,c
  1342   0012FA  06E8               	decf	wreg,f,c
  1343   0012FC  E1FD               	bnz	clear_1
  1344   0012FE                     end_of_initialization:
  1345                           	callstack 0
  1346   0012FE                     __end_of__initialization:
  1347                           	callstack 0
  1348   0012FE  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1349   001300  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1350   001302  0100               	movlb	0
  1351   001304  EFED  F008         	goto	_main	;jump to C main() function
  1352                           
  1353                           	psect	bssCOMRAM
  1354   00002C                     __pbssCOMRAM:
  1355                           	callstack 0
  1356   00002C                     _semaforo_teste:
  1357                           	callstack 0
  1358   00002C                     	ds	14
  1359                           
  1360                           	psect	bssBIGRAM
  1361   0000D3                     __pbssBIGRAM:
  1362                           	callstack 0
  1363   0000D3                     _readyQueue:
  1364                           	callstack 0
  1365   0000D3                     	ds	533
  1366                           
  1367                           	psect	cstackBANK0
  1368   000060                     __pcstackBANK0:
  1369                           	callstack 0
  1370   000060                     	ds	2
  1371   000062                     ??_tarefa_2:
  1372                           
  1373                           ; 1 bytes @ 0x2
  1374   000062                     	ds	1
  1375   000063                     ??_tarefa_3:
  1376                           
  1377                           ; 1 bytes @ 0x3
  1378   000063                     	ds	1
  1379   000064                     sem_init@s:
  1380                           	callstack 0
  1381   000064                     os_create_task@task_f:
  1382                           	callstack 0
  1383   000064                     
  1384                           ; 1 bytes @ 0x4
  1385   000064                     	ds	1
  1386   000065                     sem_init@init_value:
  1387                           	callstack 0
  1388                           
  1389                           ; 1 bytes @ 0x5
  1390   000065                     	ds	1
  1391   000066                     os_create_task@prior:
  1392                           	callstack 0
  1393   000066                     ??_sem_init:
  1394                           
  1395                           ; 1 bytes @ 0x6
  1396   000066                     	ds	1
  1397   000067                     ??_os_create_task:
  1398                           
  1399                           ; 1 bytes @ 0x7
  1400   000067                     	ds	1
  1401   000068                     os_create_task@id:
  1402                           	callstack 0
  1403   000068                     
  1404                           ; 1 bytes @ 0x8
  1405   000068                     	ds	1
  1406   000069                     os_create_task@new_task:
  1407                           	callstack 0
  1408                           
  1409                           ; 106 bytes @ 0x9
  1410   000069                     	ds	106
  1411   0000D3                     
  1412                           ; 1 bytes @ 0x73
  1413                           
  1414                           	psect	cstackCOMRAM
  1415   000001                     __pcstackCOMRAM:
  1416                           	callstack 0
  1417   000001                     ?i2___awmod:
  1418                           	callstack 0
  1419   000001                     i2os_task_pos@task:
  1420                           	callstack 0
  1421   000001                     i2___awmod@dividend:
  1422                           	callstack 0
  1423   000001                     ??_os_idle_task:
  1424   000001                     
  1425                           ; 1 bytes @ 0x0
  1426   000001                     	ds	1
  1427   000002                     os_task_time_decrease@i:
  1428                           	callstack 0
  1429                           
  1430                           ; 1 bytes @ 0x1
  1431   000002                     	ds	1
  1432   000003                     i2___awmod@divisor:
  1433                           	callstack 0
  1434   000003                     
  1435                           ; 1 bytes @ 0x2
  1436   000003                     	ds	2
  1437   000005                     i2os_task_pos@i:
  1438                           	callstack 0
  1439   000005                     i2___awmod@counter:
  1440                           	callstack 0
  1441   000005                     
  1442                           ; 1 bytes @ 0x4
  1443   000005                     	ds	1
  1444   000006                     i2___awmod@sign:
  1445                           	callstack 0
  1446                           
  1447                           ; 1 bytes @ 0x5
  1448   000006                     	ds	1
  1449   000007                     ?i2_rr_scheduler:
  1450                           	callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x6
  1453   000007                     	ds	2
  1454   000009                     ??i2_rr_scheduler:
  1455                           
  1456                           ; 1 bytes @ 0x8
  1457   000009                     	ds	2
  1458   00000B                     i2rr_scheduler@idle_selected:
  1459                           	callstack 0
  1460                           
  1461                           ; 1 bytes @ 0xA
  1462   00000B                     	ds	1
  1463   00000C                     i2rr_scheduler@pos_task_running:
  1464                           	callstack 0
  1465                           
  1466                           ; 1 bytes @ 0xB
  1467   00000C                     	ds	1
  1468   00000D                     ??_ISR_TIMER_0:
  1469   00000D                     
  1470                           ; 1 bytes @ 0xC
  1471   00000D                     	ds	10
  1472   000017                     ?___awmod:
  1473                           	callstack 0
  1474   000017                     os_task_pos@task:
  1475                           	callstack 0
  1476   000017                     ___awmod@dividend:
  1477                           	callstack 0
  1478                           
  1479                           ; 2 bytes @ 0x16
  1480   000017                     	ds	2
  1481   000019                     ___awmod@divisor:
  1482                           	callstack 0
  1483   000019                     
  1484                           ; 1 bytes @ 0x18
  1485   000019                     	ds	2
  1486   00001B                     os_task_pos@i:
  1487                           	callstack 0
  1488   00001B                     ___awmod@counter:
  1489                           	callstack 0
  1490   00001B                     
  1491                           ; 1 bytes @ 0x1A
  1492   00001B                     	ds	1
  1493   00001C                     ___awmod@sign:
  1494                           	callstack 0
  1495                           
  1496                           ; 1 bytes @ 0x1B
  1497   00001C                     	ds	1
  1498   00001D                     ?_rr_scheduler:
  1499                           	callstack 0
  1500                           
  1501                           ; 2 bytes @ 0x1C
  1502   00001D                     	ds	2
  1503   00001F                     ??_rr_scheduler:
  1504                           
  1505                           ; 1 bytes @ 0x1E
  1506   00001F                     	ds	2
  1507   000021                     rr_scheduler@idle_selected:
  1508                           	callstack 0
  1509                           
  1510                           ; 1 bytes @ 0x20
  1511   000021                     	ds	1
  1512   000022                     rr_scheduler@pos_task_running:
  1513                           	callstack 0
  1514                           
  1515                           ; 1 bytes @ 0x21
  1516   000022                     	ds	1
  1517   000023                     sem_wait@s:
  1518                           	callstack 0
  1519   000023                     
  1520                           ; 1 bytes @ 0x22
  1521   000023                     	ds	1
  1522   000024                     ??_sem_wait:
  1523                           
  1524                           ; 1 bytes @ 0x23
  1525   000024                     	ds	7
  1526   00002B                     ??_tarefa_1:
  1527                           
  1528                           ; 1 bytes @ 0x2A
  1529   00002B                     	ds	1
  1530                           
  1531 ;;
  1532 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1533 ;;
  1534 ;; *************** function _main *****************
  1535 ;; Defined at:
  1536 ;;		line 7 in file "main.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  2   16[None  ] int 
  1543 ;; Registers used:
  1544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1550 ;;      Params:         0       0       0       0       0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1553 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1554 ;;Total ram usage:        0 bytes
  1555 ;; Hardware stack levels required when called: 12
  1556 ;; This function calls:
  1557 ;;		_os_config
  1558 ;;		_os_create_task
  1559 ;;		_os_start
  1560 ;; This function is called by:
  1561 ;;		Startup code after reset
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text0
  1566   0011DA                     __ptext0:
  1567                           	callstack 0
  1568   0011DA                     _main:
  1569                           	callstack 19
  1570   0011DA                     
  1571                           ;main.c: 9:     os_config();
  1572   0011DA  EC99  F009         	call	_os_config	;wreg free
  1573                           
  1574                           ;main.c: 12:     os_create_task(100, tarefa_1, 5);
  1575   0011DE  0E84               	movlw	low _tarefa_1
  1576   0011E0  0100               	movlb	0	; () banked
  1577   0011E2  6F64               	movwf	os_create_task@task_f& (0+255),b
  1578   0011E4  0E12               	movlw	high _tarefa_1
  1579   0011E6  6F65               	movwf	(os_create_task@task_f+1)& (0+255),b
  1580   0011E8  0E05               	movlw	5
  1581   0011EA  6F66               	movwf	os_create_task@prior& (0+255),b
  1582   0011EC  0E64               	movlw	100
  1583   0011EE  ECC6  F008         	call	_os_create_task
  1584                           
  1585                           ;main.c: 13:     os_create_task(101, tarefa_2, 5);
  1586   0011F2  0E08               	movlw	low _tarefa_2
  1587   0011F4  0100               	movlb	0	; () banked
  1588   0011F6  6F64               	movwf	os_create_task@task_f& (0+255),b
  1589   0011F8  0E13               	movlw	high _tarefa_2
  1590   0011FA  6F65               	movwf	(os_create_task@task_f+1)& (0+255),b
  1591   0011FC  0E05               	movlw	5
  1592   0011FE  6F66               	movwf	os_create_task@prior& (0+255),b
  1593   001200  0E65               	movlw	101
  1594   001202  ECC6  F008         	call	_os_create_task
  1595                           
  1596                           ;main.c: 14:     os_create_task(102, tarefa_3, 5);
  1597   001206  0EB2               	movlw	low _tarefa_3
  1598   001208  0100               	movlb	0	; () banked
  1599   00120A  6F64               	movwf	os_create_task@task_f& (0+255),b
  1600   00120C  0E12               	movlw	high _tarefa_3
  1601   00120E  6F65               	movwf	(os_create_task@task_f+1)& (0+255),b
  1602   001210  0E05               	movlw	5
  1603   001212  6F66               	movwf	os_create_task@prior& (0+255),b
  1604   001214  0E66               	movlw	102
  1605   001216  ECC6  F008         	call	_os_create_task
  1606   00121A                     
  1607                           ;main.c: 16:     os_start();
  1608   00121A  ECC6  F009         	call	_os_start	;wreg free
  1609   00121E                     l17:
  1610   00121E  EF0F  F009         	goto	l17
  1611   001222  EF07  F000         	goto	start
  1612   001226                     __end_of_main:
  1613                           	callstack 0
  1614                           
  1615 ;; *************** function _os_start *****************
  1616 ;; Defined at:
  1617 ;;		line 22 in file "kernel.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;		None
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;		None
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1631 ;;      Params:         0       0       0       0       0       0       0       0       0
  1632 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1634 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1635 ;;Total ram usage:        0 bytes
  1636 ;; Hardware stack levels used: 1
  1637 ;; Hardware stack levels required when called: 11
  1638 ;; This function calls:
  1639 ;;		_conf_interrupts
  1640 ;;		_conf_timer_0
  1641 ;;		_config_app
  1642 ;; This function is called by:
  1643 ;;		_main
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text1
  1648   00138C                     __ptext1:
  1649                           	callstack 0
  1650   00138C                     _os_start:
  1651                           	callstack 19
  1652   00138C                     
  1653                           ;kernel.c: 25:     conf_interrupts();
  1654   00138C  ECDC  F009         	call	_conf_interrupts	;wreg free
  1655   001390                     
  1656                           ;kernel.c: 28:     config_app();
  1657   001390  ECBB  F009         	call	_config_app	;wreg free
  1658   001394                     
  1659                           ;kernel.c: 30:     conf_timer_0();
  1660   001394  ECAD  F009         	call	_conf_timer_0	;wreg free
  1661   001398                     
  1662                           ;kernel.c: 33:     (INTCONbits.GIE = 1);
  1663   001398  8EF2               	bsf	242,7,c	;volatile
  1664   00139A  0012               	return		;funcret
  1665   00139C                     __end_of_os_start:
  1666                           	callstack 0
  1667                           
  1668 ;; *************** function _config_app *****************
  1669 ;; Defined at:
  1670 ;;		line 9 in file "user_app.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;		None
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;		None
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      void 
  1677 ;; Registers used:
  1678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1684 ;;      Params:         0       0       0       0       0       0       0       0       0
  1685 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1687 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1688 ;;Total ram usage:        0 bytes
  1689 ;; Hardware stack levels used: 1
  1690 ;; Hardware stack levels required when called: 10
  1691 ;; This function calls:
  1692 ;;		_sem_init
  1693 ;; This function is called by:
  1694 ;;		_os_start
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           	psect	text2
  1699   001376                     __ptext2:
  1700                           	callstack 0
  1701   001376                     _config_app:
  1702                           	callstack 19
  1703   001376                     
  1704                           ;user_app.c: 11:     TRISDbits.RD0 = TRISDbits.RD1 = TRISDbits.RD2 = 0;
  1705   001376  9495               	bcf	149,2,c	;volatile
  1706   001378  9295               	bcf	149,1,c	;volatile
  1707   00137A  9095               	bcf	149,0,c	;volatile
  1708   00137C                     
  1709                           ;user_app.c: 13:     sem_init(&semaforo_teste, 0);
  1710   00137C  0E2C               	movlw	low _semaforo_teste
  1711   00137E  0100               	movlb	0	; () banked
  1712   001380  6F64               	movwf	sem_init@s& (0+255),b
  1713   001382  0E00               	movlw	0
  1714   001384  6F65               	movwf	sem_init@init_value& (0+255),b
  1715   001386  EC13  F009         	call	_sem_init	;# 
  1716   00138A  0012               	return		;funcret
  1717   00138C                     __end_of_config_app:
  1718                           	callstack 0
  1719                           
  1720 ;; *************** function _sem_init *****************
  1721 ;; Defined at:
  1722 ;;		line 10 in file "sync.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  s               1    4[BANK0 ] PTR struct semaphore
  1725 ;;		 -> semaforo_teste(14), 
  1726 ;;  init_value      1    5[BANK0 ] unsigned char 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;		None
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1738 ;;      Params:         0       2       0       0       0       0       0       0       0
  1739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1740 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1741 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1742 ;;Total ram usage:        4 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; Hardware stack levels required when called: 9
  1745 ;; This function calls:
  1746 ;;		Nothing
  1747 ;; This function is called by:
  1748 ;;		_config_app
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text3
  1753   001226                     __ptext3:
  1754                           	callstack 0
  1755   001226                     _sem_init:
  1756                           	callstack 19
  1757   001226                     
  1758                           ;sync.c: 10: void sem_init(sem_t *s, uint8_t init_value);sync.c: 11: {;sync.c: 12:     s
      +                          ->contador = init_value;
  1759   001226  0100               	movlb	0	; () banked
  1760   001228  5165               	movf	sem_init@init_value& (0+255),w,b
  1761   00122A  6F66               	movwf	??_sem_init& (0+255),b
  1762   00122C  6B67               	clrf	(??_sem_init+1)& (0+255),b
  1763   00122E  5164               	movf	sem_init@s& (0+255),w,b
  1764   001230  6ED9               	movwf	fsr2l,c
  1765   001232  6ADA               	clrf	fsr2h,c
  1766   001234  C066  FFDE         	movff	??_sem_init,postinc2
  1767   001238  C067  FFDD         	movff	??_sem_init+1,postdec2
  1768   00123C                     
  1769                           ; BSR set to: 0
  1770                           ;sync.c: 13:     s->sem_queue_in = 0;
  1771   00123C  5164               	movf	sem_init@s& (0+255),w,b
  1772   00123E  6ED9               	movwf	fsr2l,c
  1773   001240  6ADA               	clrf	fsr2h,c
  1774   001242  0E0C               	movlw	12
  1775   001244  26D9               	addwf	fsr2l,f,c
  1776   001246  6ADF               	clrf	indf2,c
  1777   001248                     
  1778                           ; BSR set to: 0
  1779                           ;sync.c: 14:     s->sem_queue_out = 0;
  1780   001248  5164               	movf	sem_init@s& (0+255),w,b
  1781   00124A  6ED9               	movwf	fsr2l,c
  1782   00124C  6ADA               	clrf	fsr2h,c
  1783   00124E  0E0D               	movlw	13
  1784   001250  26D9               	addwf	fsr2l,f,c
  1785   001252  6ADF               	clrf	indf2,c
  1786   001254                     
  1787                           ; BSR set to: 0
  1788   001254  0012               	return		;funcret
  1789   001256                     __end_of_sem_init:
  1790                           	callstack 0
  1791                           
  1792 ;; *************** function _conf_timer_0 *****************
  1793 ;; Defined at:
  1794 ;;		line 7 in file "hardware.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;		None
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1808 ;;      Params:         0       0       0       0       0       0       0       0       0
  1809 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1810 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1811 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1812 ;;Total ram usage:        0 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; Hardware stack levels required when called: 9
  1815 ;; This function calls:
  1816 ;;		Nothing
  1817 ;; This function is called by:
  1818 ;;		_os_start
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text4
  1823   00135A                     __ptext4:
  1824                           	callstack 0
  1825   00135A                     _conf_timer_0:
  1826                           	callstack 20
  1827   00135A                     
  1828                           ;hardware.c: 10:     T0CONbits.T0CS = 0;
  1829   00135A  9AD5               	bcf	213,5,c	;volatile
  1830                           
  1831                           ;hardware.c: 11:     T0CONbits.PSA = 0;
  1832   00135C  96D5               	bcf	213,3,c	;volatile
  1833   00135E                     
  1834                           ;hardware.c: 12:     T0CONbits.T0PS = 0b110;
  1835   00135E  50D5               	movf	213,w,c	;volatile
  1836   001360  0BF8               	andlw	-8
  1837   001362  0906               	iorlw	6
  1838   001364  6ED5               	movwf	213,c	;volatile
  1839                           
  1840                           ;hardware.c: 13:     TMR0 = 128;
  1841   001366  0E00               	movlw	0
  1842   001368  6ED7               	movwf	215,c	;volatile
  1843   00136A  0E80               	movlw	128
  1844   00136C  6ED6               	movwf	214,c	;volatile
  1845   00136E                     
  1846                           ;hardware.c: 14:     INTCONbits.TMR0IE = 1;
  1847   00136E  8AF2               	bsf	242,5,c	;volatile
  1848   001370                     
  1849                           ;hardware.c: 15:     INTCONbits.TMR0IF = 0;
  1850   001370  94F2               	bcf	242,2,c	;volatile
  1851   001372                     
  1852                           ;hardware.c: 16:     T0CONbits.TMR0ON = 1;
  1853   001372  8ED5               	bsf	213,7,c	;volatile
  1854   001374  0012               	return		;funcret
  1855   001376                     __end_of_conf_timer_0:
  1856                           	callstack 0
  1857                           
  1858 ;; *************** function _conf_interrupts *****************
  1859 ;; Defined at:
  1860 ;;		line 19 in file "hardware.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		None
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1874 ;;      Params:         0       0       0       0       0       0       0       0       0
  1875 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1877 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1878 ;;Total ram usage:        0 bytes
  1879 ;; Hardware stack levels used: 1
  1880 ;; Hardware stack levels required when called: 9
  1881 ;; This function calls:
  1882 ;;		Nothing
  1883 ;; This function is called by:
  1884 ;;		_os_start
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text5
  1889   0013B8                     __ptext5:
  1890                           	callstack 0
  1891   0013B8                     _conf_interrupts:
  1892                           	callstack 20
  1893   0013B8                     
  1894                           ;hardware.c: 21:     INTCONbits.PEIE = 1;
  1895   0013B8  8CF2               	bsf	242,6,c	;volatile
  1896   0013BA  0012               	return		;funcret
  1897   0013BC                     __end_of_conf_interrupts:
  1898                           	callstack 0
  1899                           
  1900 ;; *************** function _os_config *****************
  1901 ;; Defined at:
  1902 ;;		line 11 in file "kernel.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;		None
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1916 ;;      Params:         0       0       0       0       0       0       0       0       0
  1917 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1919 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1920 ;;Total ram usage:        0 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 10
  1923 ;; This function calls:
  1924 ;;		_os_create_task
  1925 ;; This function is called by:
  1926 ;;		_main
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text6
  1931   001332                     __ptext6:
  1932                           	callstack 0
  1933   001332                     _os_config:
  1934                           	callstack 20
  1935   001332                     
  1936                           ;kernel.c: 13:     readyQueue.readyQueueSize = 0;
  1937   001332  0E00               	movlw	0
  1938   001334  CFE8 F2E5          	movff	wreg,_readyQueue+530
  1939                           
  1940                           ;kernel.c: 14:     readyQueue.taskRunning = 0;
  1941   001338  0E00               	movlw	0
  1942   00133A  CFE8 F2E6          	movff	wreg,_readyQueue+531
  1943   00133E  0E00               	movlw	0
  1944   001340  CFE8 F2E7          	movff	wreg,_readyQueue+532
  1945   001344                     
  1946                           ;kernel.c: 17:     os_create_task(0, os_idle_task, 1);
  1947   001344  0E56               	movlw	low _os_idle_task
  1948   001346  0100               	movlb	0	; () banked
  1949   001348  6F64               	movwf	os_create_task@task_f& (0+255),b
  1950   00134A  0E12               	movlw	high _os_idle_task
  1951   00134C  6F65               	movwf	(os_create_task@task_f+1)& (0+255),b
  1952   00134E  0E01               	movlw	1
  1953   001350  6F66               	movwf	os_create_task@prior& (0+255),b
  1954   001352  0E00               	movlw	0
  1955   001354  ECC6  F008         	call	_os_create_task	;# 
  1956   001358  0012               	return		;funcret
  1957   00135A                     __end_of_os_config:
  1958                           	callstack 0
  1959                           
  1960 ;; *************** function _os_create_task *****************
  1961 ;; Defined at:
  1962 ;;		line 9 in file "syscall.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;  id              1    wreg     unsigned char 
  1965 ;;  task_f          2    4[BANK0 ] PTR FTN()void 
  1966 ;;		 -> os_idle_task(1), tarefa_3(1), tarefa_2(1), tarefa_1(1), 
  1967 ;;  prior           1    6[BANK0 ] unsigned char 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  id              1    8[BANK0 ] unsigned char 
  1970 ;;  new_task      106    9[BANK0 ] struct tcb
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1980 ;;      Params:         0       3       0       0       0       0       0       0       0
  1981 ;;      Locals:         0     107       0       0       0       0       0       0       0
  1982 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1983 ;;      Totals:         0     111       0       0       0       0       0       0       0
  1984 ;;Total ram usage:      111 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 9
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;;		_os_config
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text7
  1996   00118C                     __ptext7:
  1997                           	callstack 0
  1998   00118C                     _os_create_task:
  1999                           	callstack 21
  2000                           
  2001                           ;incstack = 0
  2002                           ;os_create_task@id stored from wreg
  2003   00118C  0100               	movlb	0	; () banked
  2004   00118E  6F68               	movwf	os_create_task@id& (0+255),b
  2005   001190                     
  2006                           ;syscall.c: 9: void os_create_task(uint8_t id, f_ptr task_f, uint8_t prior);syscall.c: 1
      +                          0: {;syscall.c: 11:     tcb_t new_task;;syscall.c: 13:     new_task.task_id = id;
  2007   001190  C068  F069         	movff	os_create_task@id,os_create_task@new_task
  2008   001194                     
  2009                           ;syscall.c: 14:     new_task.task_func = task_f;
  2010   001194  C064  F06A         	movff	os_create_task@task_f,os_create_task@new_task+1
  2011   001198  C065  F06B         	movff	os_create_task@task_f+1,os_create_task@new_task+2
  2012   00119C                     
  2013                           ;syscall.c: 15:     new_task.task_priority = prior;
  2014   00119C  C066  F06D         	movff	os_create_task@prior,os_create_task@new_task+4
  2015   0011A0                     
  2016                           ;syscall.c: 16:     new_task.task_state = READY;
  2017   0011A0  0100               	movlb	0	; () banked
  2018   0011A2  6B6C               	clrf	(os_create_task@new_task+3)& (0+255),b
  2019   0011A4                     
  2020                           ; BSR set to: 0
  2021                           ;syscall.c: 18:     new_task.BSR_reg = 0;
  2022   0011A4  6B6F               	clrf	(os_create_task@new_task+6)& (0+255),b
  2023   0011A6                     
  2024                           ; BSR set to: 0
  2025                           ;syscall.c: 19:     new_task.STATUS_reg = 0;
  2026   0011A6  6B71               	clrf	(os_create_task@new_task+8)& (0+255),b
  2027   0011A8                     
  2028                           ; BSR set to: 0
  2029                           ;syscall.c: 20:     new_task.WORK_reg = 0;
  2030   0011A8  6B70               	clrf	(os_create_task@new_task+7)& (0+255),b
  2031   0011AA                     
  2032                           ; BSR set to: 0
  2033                           ;syscall.c: 21:     new_task.task_sp = 0;
  2034   0011AA  6BD2               	clrf	(os_create_task@new_task+105)& (0+255),b
  2035   0011AC                     
  2036                           ; BSR set to: 0
  2037                           ;syscall.c: 24:     readyQueue.readyQueue[readyQueue.readyQueueSize++] = new_task;
  2038   0011AC  EE20  F069         	lfsr	2,os_create_task@new_task
  2039   0011B0  C2E5  F067         	movff	_readyQueue+530,??_os_create_task
  2040   0011B4  5167               	movf	??_os_create_task& (0+255),w,b
  2041   0011B6  0D6A               	mullw	106
  2042   0011B8  0ED3               	movlw	low _readyQueue
  2043   0011BA  24F3               	addwf	243,w,c
  2044   0011BC  6EE1               	movwf	fsr1l,c
  2045   0011BE  0E00               	movlw	high _readyQueue
  2046   0011C0  20F4               	addwfc	prodh,w,c
  2047   0011C2  6EE2               	movwf	fsr1h,c
  2048   0011C4  0E69               	movlw	105
  2049   0011C6                     u811:
  2050   0011C6  CFDB FFE3          	movff	plusw2,plusw1
  2051   0011CA  06E8               	decf	wreg,f,c
  2052   0011CC  E2FC               	bc	u811
  2053   0011CE                     
  2054                           ; BSR set to: 0
  2055   0011CE  C2E5  FFE8         	movff	_readyQueue+530,wreg
  2056   0011D2  0F01               	addlw	1
  2057   0011D4  CFE8 F2E5          	movff	wreg,_readyQueue+530
  2058   0011D8                     
  2059                           ; BSR set to: 0
  2060   0011D8  0012               	return		;funcret
  2061   0011DA                     __end_of_os_create_task:
  2062                           	callstack 0
  2063                           
  2064 ;; *************** function _os_idle_task *****************
  2065 ;; Defined at:
  2066 ;;		line 37 in file "kernel.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;		None
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;		None
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, status,0
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2080 ;;      Params:         0       0       0       0       0       0       0       0       0
  2081 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2082 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2083 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2084 ;;Total ram usage:        1 bytes
  2085 ;; Hardware stack levels used: 1
  2086 ;; Hardware stack levels required when called: 4
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_os_config
  2091 ;;		_rr_scheduler
  2092 ;;		i2_rr_scheduler
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           	psect	text8
  2097   001256                     __ptext8:
  2098                           	callstack 0
  2099   001256                     _os_idle_task:
  2100                           	callstack 23
  2101   001256                     
  2102                           ;kernel.c: 39:     TRISDbits.RD3 = 0;
  2103   001256  9695               	bcf	149,3,c	;volatile
  2104   001258                     l1219:
  2105                           
  2106                           ;kernel.c: 43:         LATDbits.LD3 = ~PORTDbits.RD3;
  2107   001258  B683               	btfsc	131,3,c	;volatile
  2108   00125A  EF31  F009         	goto	u35_21
  2109   00125E  EF34  F009         	goto	u35_20
  2110   001262                     u35_21:
  2111   001262  0E01               	movlw	1
  2112   001264  EF35  F009         	goto	u35_26
  2113   001268                     u35_20:
  2114   001268  0E00               	movlw	0
  2115   00126A                     u35_26:
  2116   00126A  0AFF               	xorlw	255
  2117   00126C  6E01               	movwf	??_os_idle_task^0,c
  2118   00126E  4601               	rlncf	??_os_idle_task^0,f,c
  2119   001270  4601               	rlncf	??_os_idle_task^0,f,c
  2120   001272  4601               	rlncf	??_os_idle_task^0,f,c
  2121   001274  508C               	movf	140,w,c	;volatile
  2122   001276  1801               	xorwf	??_os_idle_task^0,w,c
  2123   001278  0BF7               	andlw	-9
  2124   00127A  1801               	xorwf	??_os_idle_task^0,w,c
  2125   00127C  6E8C               	movwf	140,c	;volatile
  2126   00127E  EF2C  F009         	goto	l1219
  2127   001282  0012               	return		;funcret
  2128   001284                     __end_of_os_idle_task:
  2129                           	callstack 0
  2130                           
  2131 ;; *************** function _tarefa_1 *****************
  2132 ;; Defined at:
  2133 ;;		line 18 in file "user_app.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;		None
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2147 ;;      Params:         0       0       0       0       0       0       0       0       0
  2148 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2149 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2150 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2151 ;;Total ram usage:        1 bytes
  2152 ;; Hardware stack levels used: 1
  2153 ;; Hardware stack levels required when called: 8
  2154 ;; This function calls:
  2155 ;;		_sem_wait
  2156 ;; This function is called by:
  2157 ;;		_main
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text9
  2162   001284                     __ptext9:
  2163                           	callstack 0
  2164   001284                     _tarefa_1:
  2165                           	callstack 19
  2166   001284                     l85:
  2167   001284                     
  2168                           ;user_app.c: 21:         LATDbits.LD0 = ~PORTDbits.RD0;
  2169   001284  B083               	btfsc	131,0,c	;volatile
  2170   001286  EF47  F009         	goto	u92_21
  2171   00128A  EF4A  F009         	goto	u92_20
  2172   00128E                     u92_21:
  2173   00128E  0E01               	movlw	1
  2174   001290  EF4B  F009         	goto	u92_26
  2175   001294                     u92_20:
  2176   001294  0E00               	movlw	0
  2177   001296                     u92_26:
  2178   001296  0AFF               	xorlw	255
  2179   001298  6E2B               	movwf	??_tarefa_1^0,c
  2180   00129A  508C               	movf	140,w,c	;volatile
  2181   00129C  182B               	xorwf	??_tarefa_1^0,w,c
  2182   00129E  0BFE               	andlw	-2
  2183   0012A0  182B               	xorwf	??_tarefa_1^0,w,c
  2184   0012A2  6E8C               	movwf	140,c	;volatile
  2185   0012A4                     
  2186                           ;user_app.c: 22:         sem_wait(&semaforo_teste);
  2187   0012A4  0E2C               	movlw	low _semaforo_teste
  2188   0012A6  6E23               	movwf	sem_wait@s^0,c
  2189   0012A8  EC01  F004         	call	_sem_wait	;wreg free
  2190   0012AC  EF42  F009         	goto	l85
  2191   0012B0  0012               	return		;funcret
  2192   0012B2                     __end_of_tarefa_1:
  2193                           	callstack 0
  2194                           
  2195 ;; *************** function _sem_wait *****************
  2196 ;; Defined at:
  2197 ;;		line 17 in file "sync.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  s               1   34[COMRAM] PTR struct semaphore
  2200 ;;		 -> semaforo_teste(14), 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;		None
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2212 ;;      Params:         1       0       0       0       0       0       0       0       0
  2213 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2214 ;;      Temps:          7       0       0       0       0       0       0       0       0
  2215 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2216 ;;Total ram usage:        8 bytes
  2217 ;; Hardware stack levels used: 1
  2218 ;; Hardware stack levels required when called: 7
  2219 ;; This function calls:
  2220 ;;		___awmod
  2221 ;;		_scheduler
  2222 ;; This function is called by:
  2223 ;;		_tarefa_1
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text10
  2228   000802                     __ptext10:
  2229                           	callstack 0
  2230   000802                     _sem_wait:
  2231                           	callstack 19
  2232   000802                     
  2233                           ;sync.c: 17: void sem_wait(sem_t *s);sync.c: 18: {;sync.c: 19:     (INTCONbits.GIE = 0);
  2234   000802  9EF2               	bcf	242,7,c	;volatile
  2235   000804                     
  2236                           ;sync.c: 22:     s->contador--;
  2237   000804  5023               	movf	sem_wait@s^0,w,c
  2238   000806  6ED9               	movwf	fsr2l,c
  2239   000808  6ADA               	clrf	fsr2h,c
  2240   00080A  06DE               	decf	postinc2,f,c
  2241   00080C  0E00               	movlw	0
  2242   00080E  5ADD               	subwfb	postdec2,f,c
  2243                           
  2244                           ;sync.c: 24:     if (s->contador < 0) {
  2245   000810  5023               	movf	sem_wait@s^0,w,c
  2246   000812  6ED9               	movwf	fsr2l,c
  2247   000814  6ADA               	clrf	fsr2h,c
  2248   000816  0E01               	movlw	1
  2249   000818  BEDB               	btfsc	plusw2,7,c
  2250   00081A  EF13  F004         	goto	i1u86_20
  2251   00081E  EF11  F004         	goto	i1u86_21
  2252   000822                     i1u86_21:
  2253   000822  EF5F  F005         	goto	i1l1627
  2254   000826                     i1u86_20:
  2255   000826                     
  2256                           ;sync.c: 26:         s->sem_queue[s->sem_queue_in] = readyQueue.taskRunning;
  2257   000826  EE22  F0E6         	lfsr	2,_readyQueue+531
  2258   00082A  5023               	movf	sem_wait@s^0,w,c
  2259   00082C  6EE1               	movwf	fsr1l,c
  2260   00082E  6AE2               	clrf	fsr1h,c
  2261   000830  0E0C               	movlw	12
  2262   000832  26E1               	addwf	fsr1l,f,c
  2263   000834  50E7               	movf	indf1,w,c
  2264   000836  0D02               	mullw	2
  2265   000838  5023               	movf	sem_wait@s^0,w,c
  2266   00083A  24F3               	addwf	243,w,c
  2267   00083C  6EE1               	movwf	fsr1l,c
  2268   00083E  6AE2               	clrf	fsr1h,c
  2269   000840  0E02               	movlw	2
  2270   000842  26E1               	addwf	fsr1l,f,c
  2271   000844  CFDE FFE6          	movff	postinc2,postinc1
  2272   000848  CFDD FFE5          	movff	postdec2,postdec1
  2273   00084C                     
  2274                           ;sync.c: 27:         s->sem_queue_in = (s->sem_queue_in + 1) % 5;
  2275   00084C  5023               	movf	sem_wait@s^0,w,c
  2276   00084E  6ED9               	movwf	fsr2l,c
  2277   000850  6ADA               	clrf	fsr2h,c
  2278   000852  0E0C               	movlw	12
  2279   000854  26D9               	addwf	fsr2l,f,c
  2280   000856  5023               	movf	sem_wait@s^0,w,c
  2281   000858  6EE1               	movwf	fsr1l,c
  2282   00085A  6AE2               	clrf	fsr1h,c
  2283   00085C  0E0C               	movlw	12
  2284   00085E  26E1               	addwf	fsr1l,f,c
  2285   000860  50E7               	movf	indf1,w,c
  2286   000862  6E24               	movwf	??_sem_wait^0,c
  2287   000864  0E01               	movlw	1
  2288   000866  2424               	addwf	??_sem_wait^0,w,c
  2289   000868  6E17               	movwf	___awmod@dividend^0,c
  2290   00086A  6A18               	clrf	(___awmod@dividend+1)^0,c
  2291   00086C  0E00               	movlw	0
  2292   00086E  2218               	addwfc	(___awmod@dividend+1)^0,f,c
  2293   000870  0E00               	movlw	0
  2294   000872  6E1A               	movwf	(___awmod@divisor+1)^0,c
  2295   000874  0E05               	movlw	5
  2296   000876  6E19               	movwf	___awmod@divisor^0,c
  2297   000878  EC84  F007         	call	___awmod	;wreg free
  2298   00087C  5017               	movf	?___awmod^0,w,c
  2299   00087E  6EDF               	movwf	indf2,c
  2300   000880  EE22  F0E6         	lfsr	2,_readyQueue+531
  2301   000884  EE10 F003          	lfsr	1,3
  2302   000888  50DE               	movf	postinc2,w,c
  2303   00088A  26E1               	addwf	fsr1l,f,c
  2304   00088C  50DD               	movf	postdec2,w,c
  2305   00088E  22E2               	addwfc	fsr1h,f,c
  2306   000890  04E6               	decf	postinc1,w,c
  2307   000892  A4D8               	btfss	status,2,c
  2308   000894  EF4E  F004         	goto	i1u87_21
  2309   000898  EF50  F004         	goto	i1u87_20
  2310   00089C                     i1u87_21:
  2311   00089C  EFBD  F004         	goto	i1l1607
  2312   0008A0                     i1u87_20:
  2313   0008A0  EE22  F0E6         	lfsr	2,_readyQueue+531
  2314   0008A4  EE10 F006          	lfsr	1,6
  2315   0008A8  50DE               	movf	postinc2,w,c
  2316   0008AA  26E1               	addwf	fsr1l,f,c
  2317   0008AC  50DD               	movf	postdec2,w,c
  2318   0008AE  22E2               	addwfc	fsr1h,f,c
  2319   0008B0  CFE0 FFE7          	movff	bsr,indf1	;volatile
  2320   0008B4  EE22  F0E6         	lfsr	2,_readyQueue+531
  2321   0008B8  EE10 F008          	lfsr	1,8
  2322   0008BC  50DE               	movf	postinc2,w,c
  2323   0008BE  26E1               	addwf	fsr1l,f,c
  2324   0008C0  50DD               	movf	postdec2,w,c
  2325   0008C2  22E2               	addwfc	fsr1h,f,c
  2326   0008C4  CFD8 FFE7          	movff	status,indf1	;volatile
  2327   0008C8  EE22  F0E6         	lfsr	2,_readyQueue+531
  2328   0008CC  EE10 F007          	lfsr	1,7
  2329   0008D0  50DE               	movf	postinc2,w,c
  2330   0008D2  26E1               	addwf	fsr1l,f,c
  2331   0008D4  50DD               	movf	postdec2,w,c
  2332   0008D6  22E2               	addwfc	fsr1h,f,c
  2333   0008D8  CFE8 FFE7          	movff	wreg,indf1	;volatile
  2334   0008DC  EE22  F0E6         	lfsr	2,_readyQueue+531
  2335   0008E0  EE10 F069          	lfsr	1,105
  2336   0008E4  50DE               	movf	postinc2,w,c
  2337   0008E6  26E1               	addwf	fsr1l,f,c
  2338   0008E8  50DD               	movf	postdec2,w,c
  2339   0008EA  22E2               	addwfc	fsr1h,f,c
  2340   0008EC  6AE7               	clrf	indf1,c
  2341   0008EE  EFAB  F004         	goto	i1l1603
  2342   0008F2                     i1l1599:
  2343   0008F2  EE22  F0E6         	lfsr	2,_readyQueue+531
  2344   0008F6  EE10 F069          	lfsr	1,105
  2345   0008FA  50DE               	movf	postinc2,w,c
  2346   0008FC  26E1               	addwf	fsr1l,f,c
  2347   0008FE  50DD               	movf	postdec2,w,c
  2348   000900  22E2               	addwfc	fsr1h,f,c
  2349   000902  50E7               	movf	indf1,w,c
  2350   000904  6E24               	movwf	??_sem_wait^0,c
  2351   000906  5024               	movf	??_sem_wait^0,w,c
  2352   000908  0D03               	mullw	3
  2353   00090A  CFF3 F025          	movff	prodl,??_sem_wait+1
  2354   00090E  CFF4 F026          	movff	prodh,??_sem_wait+2
  2355   000912  EE22  F0E6         	lfsr	2,_readyQueue+531
  2356   000916  CFDE F027          	movff	postinc2,??_sem_wait+3
  2357   00091A  CFDD F028          	movff	postdec2,??_sem_wait+4
  2358   00091E  5025               	movf	(??_sem_wait+1)^0,w,c
  2359   000920  2427               	addwf	(??_sem_wait+3)^0,w,c
  2360   000922  6E29               	movwf	(??_sem_wait+5)^0,c
  2361   000924  5026               	movf	(??_sem_wait+2)^0,w,c
  2362   000926  2028               	addwfc	(??_sem_wait+4)^0,w,c
  2363   000928  6E2A               	movwf	(??_sem_wait+6)^0,c
  2364   00092A  0E09               	movlw	9
  2365   00092C  2429               	addwf	(??_sem_wait+5)^0,w,c
  2366   00092E  6ED9               	movwf	fsr2l,c
  2367   000930  0E00               	movlw	0
  2368   000932  202A               	addwfc	(??_sem_wait+6)^0,w,c
  2369   000934  6EDA               	movwf	fsr2h,c
  2370   000936  CFFD FFDE          	movff	tosl,postinc2	;volatile
  2371   00093A  CFFE FFDE          	movff	tosh,postinc2	;volatile
  2372   00093E  CFFF FFDE          	movff	tosu,postinc2	;volatile
  2373   000942  EE22  F0E6         	lfsr	2,_readyQueue+531
  2374   000946  EE10 F069          	lfsr	1,105
  2375   00094A  50DE               	movf	postinc2,w,c
  2376   00094C  26E1               	addwf	fsr1l,f,c
  2377   00094E  50DD               	movf	postdec2,w,c
  2378   000950  22E2               	addwfc	fsr1h,f,c
  2379   000952  2AE7               	incf	indf1,f,c
  2380   000954  0006               	pop		;# 
  2381   000956                     i1l1603:
  2382   000956  50FC               	movf	252,w,c	;volatile
  2383   000958  A4D8               	btfss	status,2,c
  2384   00095A  EFB1  F004         	goto	i1u88_21
  2385   00095E  EFB3  F004         	goto	i1u88_20
  2386   000962                     i1u88_21:
  2387   000962  EF79  F004         	goto	i1l1599
  2388   000966                     i1u88_20:
  2389   000966  EE22  F0E6         	lfsr	2,_readyQueue+531
  2390   00096A  EE10 F003          	lfsr	1,3
  2391   00096E  50DE               	movf	postinc2,w,c
  2392   000970  26E1               	addwf	fsr1l,f,c
  2393   000972  50DD               	movf	postdec2,w,c
  2394   000974  22E2               	addwfc	fsr1h,f,c
  2395   000976  0E03               	movlw	3
  2396   000978  6EE7               	movwf	indf1,c
  2397   00097A                     i1l1607:
  2398                           
  2399                           ;sync.c: 30:         scheduler();
  2400   00097A  ECCE  F009         	call	_scheduler	;wreg free
  2401   00097E  EE22  F0E6         	lfsr	2,_readyQueue+531
  2402   000982  EE10 F003          	lfsr	1,3
  2403   000986  50DE               	movf	postinc2,w,c
  2404   000988  26E1               	addwf	fsr1l,f,c
  2405   00098A  50DD               	movf	postdec2,w,c
  2406   00098C  22E2               	addwfc	fsr1h,f,c
  2407   00098E  50E7               	movf	indf1,w,c
  2408   000990  A4D8               	btfss	status,2,c
  2409   000992  EFCD  F004         	goto	i1u89_21
  2410   000996  EFCF  F004         	goto	i1u89_20
  2411   00099A                     i1u89_21:
  2412   00099A  EF5F  F005         	goto	i1l1627
  2413   00099E                     i1u89_20:
  2414   00099E  EE22  F0E6         	lfsr	2,_readyQueue+531
  2415   0009A2  EE10 F006          	lfsr	1,6
  2416   0009A6  50DE               	movf	postinc2,w,c
  2417   0009A8  26E1               	addwf	fsr1l,f,c
  2418   0009AA  50DD               	movf	postdec2,w,c
  2419   0009AC  22E2               	addwfc	fsr1h,f,c
  2420   0009AE  50E7               	movf	indf1,w,c
  2421   0009B0  6EE0               	movwf	224,c	;volatile
  2422   0009B2  EE22  F0E6         	lfsr	2,_readyQueue+531
  2423   0009B6  EE10 F008          	lfsr	1,8
  2424   0009BA  50DE               	movf	postinc2,w,c
  2425   0009BC  26E1               	addwf	fsr1l,f,c
  2426   0009BE  50DD               	movf	postdec2,w,c
  2427   0009C0  22E2               	addwfc	fsr1h,f,c
  2428   0009C2  50E7               	movf	indf1,w,c
  2429   0009C4  6ED8               	movwf	216,c	;volatile
  2430   0009C6  EE22  F0E6         	lfsr	2,_readyQueue+531
  2431   0009CA  EE10 F007          	lfsr	1,7
  2432   0009CE  50DE               	movf	postinc2,w,c
  2433   0009D0  26E1               	addwf	fsr1l,f,c
  2434   0009D2  50DD               	movf	postdec2,w,c
  2435   0009D4  22E2               	addwfc	fsr1h,f,c
  2436   0009D6  50E7               	movf	indf1,w,c
  2437   0009D8  6E24               	movwf	??_sem_wait^0,c
  2438   0009DA  5024               	movf	??_sem_wait^0,w,c
  2439   0009DC  6AFC               	clrf	252,c	;volatile
  2440   0009DE  EE22  F0E6         	lfsr	2,_readyQueue+531
  2441   0009E2  EE10 F069          	lfsr	1,105
  2442   0009E6  50DE               	movf	postinc2,w,c
  2443   0009E8  26E1               	addwf	fsr1l,f,c
  2444   0009EA  50DD               	movf	postdec2,w,c
  2445   0009EC  22E2               	addwfc	fsr1h,f,c
  2446   0009EE  50E7               	movf	indf1,w,c
  2447   0009F0  A4D8               	btfss	status,2,c
  2448   0009F2  EFFD  F004         	goto	i1u90_21
  2449   0009F6  EFFF  F004         	goto	i1u90_20
  2450   0009FA                     i1u90_21:
  2451   0009FA  EF13  F005         	goto	i1l266
  2452   0009FE                     i1u90_20:
  2453   0009FE  0005               	push		;# 
  2454   000A00  EE22  F0E6         	lfsr	2,_readyQueue+531
  2455   000A04  EE10 F001          	lfsr	1,1
  2456   000A08  50DE               	movf	postinc2,w,c
  2457   000A0A  26E1               	addwf	fsr1l,f,c
  2458   000A0C  50DD               	movf	postdec2,w,c
  2459   000A0E  22E2               	addwfc	fsr1h,f,c
  2460   000A10  CFE6 F024          	movff	postinc1,??_sem_wait
  2461   000A14  CFE5 F025          	movff	postdec1,??_sem_wait+1
  2462   000A18  C024  FFFD         	movff	??_sem_wait,tosl	;volatile
  2463   000A1C  C025  FFFE         	movff	??_sem_wait+1,tosh	;volatile
  2464   000A20  6AFF               	clrf	255,c	;volatile
  2465   000A22  EF55  F005         	goto	i1l1625
  2466   000A26                     i1l266:
  2467   000A26  0005               	push		;# 
  2468   000A28  EE22  F0E6         	lfsr	2,_readyQueue+531
  2469   000A2C  EE10 F069          	lfsr	1,105
  2470   000A30  50DE               	movf	postinc2,w,c
  2471   000A32  26E1               	addwf	fsr1l,f,c
  2472   000A34  50DD               	movf	postdec2,w,c
  2473   000A36  22E2               	addwfc	fsr1h,f,c
  2474   000A38  06E7               	decf	indf1,f,c
  2475   000A3A  EE22  F0E6         	lfsr	2,_readyQueue+531
  2476   000A3E  EE10 F069          	lfsr	1,105
  2477   000A42  50DE               	movf	postinc2,w,c
  2478   000A44  26E1               	addwf	fsr1l,f,c
  2479   000A46  50DD               	movf	postdec2,w,c
  2480   000A48  22E2               	addwfc	fsr1h,f,c
  2481   000A4A  50E7               	movf	indf1,w,c
  2482   000A4C  6E24               	movwf	??_sem_wait^0,c
  2483   000A4E  5024               	movf	??_sem_wait^0,w,c
  2484   000A50  0D03               	mullw	3
  2485   000A52  CFF3 F025          	movff	prodl,??_sem_wait+1
  2486   000A56  CFF4 F026          	movff	prodh,??_sem_wait+2
  2487   000A5A  EE22  F0E6         	lfsr	2,_readyQueue+531
  2488   000A5E  CFDE F027          	movff	postinc2,??_sem_wait+3
  2489   000A62  CFDD F028          	movff	postdec2,??_sem_wait+4
  2490   000A66  5025               	movf	(??_sem_wait+1)^0,w,c
  2491   000A68  2427               	addwf	(??_sem_wait+3)^0,w,c
  2492   000A6A  6E29               	movwf	(??_sem_wait+5)^0,c
  2493   000A6C  5026               	movf	(??_sem_wait+2)^0,w,c
  2494   000A6E  2028               	addwfc	(??_sem_wait+4)^0,w,c
  2495   000A70  6E2A               	movwf	(??_sem_wait+6)^0,c
  2496   000A72  0E09               	movlw	9
  2497   000A74  2429               	addwf	(??_sem_wait+5)^0,w,c
  2498   000A76  6ED9               	movwf	fsr2l,c
  2499   000A78  0E00               	movlw	0
  2500   000A7A  202A               	addwfc	(??_sem_wait+6)^0,w,c
  2501   000A7C  6EDA               	movwf	fsr2h,c
  2502   000A7E  CFDE FFFD          	movff	postinc2,tosl	;volatile
  2503   000A82  CFDE FFFE          	movff	postinc2,tosh	;volatile
  2504   000A86  CFDD FFFF          	movff	postdec2,tosu	;volatile
  2505   000A8A  EE22  F0E6         	lfsr	2,_readyQueue+531
  2506   000A8E  EE10 F069          	lfsr	1,105
  2507   000A92  50DE               	movf	postinc2,w,c
  2508   000A94  26E1               	addwf	fsr1l,f,c
  2509   000A96  50DD               	movf	postdec2,w,c
  2510   000A98  22E2               	addwfc	fsr1h,f,c
  2511   000A9A  50E7               	movf	indf1,w,c
  2512   000A9C  A4D8               	btfss	status,2,c
  2513   000A9E  EF53  F005         	goto	i1u91_21
  2514   000AA2  EF55  F005         	goto	i1u91_20
  2515   000AA6                     i1u91_21:
  2516   000AA6  EF13  F005         	goto	i1l266
  2517   000AAA                     i1u91_20:
  2518   000AAA                     i1l1625:
  2519   000AAA  EE22  F0E6         	lfsr	2,_readyQueue+531
  2520   000AAE  EE10 F003          	lfsr	1,3
  2521   000AB2  50DE               	movf	postinc2,w,c
  2522   000AB4  26E1               	addwf	fsr1l,f,c
  2523   000AB6  50DD               	movf	postdec2,w,c
  2524   000AB8  22E2               	addwfc	fsr1h,f,c
  2525   000ABA  0E01               	movlw	1
  2526   000ABC  6EE7               	movwf	indf1,c
  2527   000ABE                     i1l1627:
  2528                           
  2529                           ;sync.c: 34:     (INTCONbits.GIE = 1);
  2530   000ABE  8EF2               	bsf	242,7,c	;volatile
  2531   000AC0  0012               	return		;funcret
  2532   000AC2                     __end_of_sem_wait:
  2533                           	callstack 0
  2534                           
  2535 ;; *************** function _scheduler *****************
  2536 ;; Defined at:
  2537 ;;		line 37 in file "scheduler.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;		None
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      void 
  2544 ;; Registers used:
  2545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2551 ;;      Params:         0       0       0       0       0       0       0       0       0
  2552 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2553 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2554 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2555 ;;Total ram usage:        0 bytes
  2556 ;; Hardware stack levels used: 1
  2557 ;; Hardware stack levels required when called: 6
  2558 ;; This function calls:
  2559 ;;		_rr_scheduler
  2560 ;; This function is called by:
  2561 ;;		_sem_wait
  2562 ;;		_os_delay
  2563 ;;		_os_yield
  2564 ;;		_os_change_state
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text11
  2569   00139C                     __ptext11:
  2570                           	callstack 0
  2571   00139C                     _scheduler:
  2572                           	callstack 19
  2573   00139C                     
  2574                           ;scheduler.c: 40:     readyQueue.taskRunning = rr_scheduler();
  2575   00139C  ECA6  F006         	call	_rr_scheduler	;wreg free
  2576   0013A0  C01D  F2E6         	movff	?_rr_scheduler,_readyQueue+531
  2577   0013A4  C01E  F2E7         	movff	?_rr_scheduler+1,_readyQueue+532
  2578   0013A8  0012               	return		;funcret
  2579   0013AA                     __end_of_scheduler:
  2580                           	callstack 0
  2581                           
  2582 ;; *************** function _rr_scheduler *****************
  2583 ;; Defined at:
  2584 ;;		line 12 in file "scheduler.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;		None
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  pos_task_run    1   33[COMRAM] unsigned char 
  2589 ;;  idle_selecte    1   32[COMRAM] unsigned char 
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  2   28[COMRAM] PTR struct tcb
  2592 ;; Registers used:
  2593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2599 ;;      Params:         2       0       0       0       0       0       0       0       0
  2600 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2601 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2602 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2603 ;;Total ram usage:        6 bytes
  2604 ;; Hardware stack levels used: 1
  2605 ;; Hardware stack levels required when called: 5
  2606 ;; This function calls:
  2607 ;;		___awmod
  2608 ;;		_os_task_pos
  2609 ;; This function is called by:
  2610 ;;		_scheduler
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           	psect	text12
  2615   000D4C                     __ptext12:
  2616                           	callstack 0
  2617   000D4C                     _rr_scheduler:
  2618                           	callstack 19
  2619   000D4C                     
  2620                           ;scheduler.c: 14:     uint8_t pos_task_running = os_task_pos(readyQueue.taskRunning->tas
      +                          k_func);
  2621   000D4C  EE22  F0E6         	lfsr	2,_readyQueue+531
  2622   000D50  EE10 F001          	lfsr	1,1
  2623   000D54  50DE               	movf	postinc2,w,c
  2624   000D56  26E1               	addwf	fsr1l,f,c
  2625   000D58  50DD               	movf	postdec2,w,c
  2626   000D5A  22E2               	addwfc	fsr1h,f,c
  2627   000D5C  CFE6 F017          	movff	postinc1,os_task_pos@task
  2628   000D60  CFE5 F018          	movff	postdec1,os_task_pos@task+1
  2629   000D64  EC76  F008         	call	_os_task_pos	;wreg free
  2630   000D68  6E22               	movwf	rr_scheduler@pos_task_running^0,c
  2631   000D6A                     
  2632                           ;scheduler.c: 15:     uint8_t idle_selected = 0;
  2633   000D6A  6A21               	clrf	rr_scheduler@idle_selected^0,c
  2634   000D6C                     i1l1453:
  2635                           
  2636                           ;scheduler.c: 18:         pos_task_running = (pos_task_running+1) % readyQueue.readyQueu
      +                          eSize;
  2637   000D6C  0E01               	movlw	1
  2638   000D6E  2422               	addwf	rr_scheduler@pos_task_running^0,w,c
  2639   000D70  6E17               	movwf	___awmod@dividend^0,c
  2640   000D72  6A18               	clrf	(___awmod@dividend+1)^0,c
  2641   000D74  0E00               	movlw	0
  2642   000D76  2218               	addwfc	(___awmod@dividend+1)^0,f,c
  2643   000D78  C2E5  F01F         	movff	_readyQueue+530,??_rr_scheduler
  2644   000D7C  501F               	movf	??_rr_scheduler^0,w,c
  2645   000D7E  6E19               	movwf	___awmod@divisor^0,c
  2646   000D80  6A1A               	clrf	(___awmod@divisor+1)^0,c
  2647   000D82  EC84  F007         	call	___awmod	;wreg free
  2648   000D86  5017               	movf	?___awmod^0,w,c
  2649   000D88  6E22               	movwf	rr_scheduler@pos_task_running^0,c
  2650   000D8A                     
  2651                           ;scheduler.c: 19:         if (readyQueue.readyQueue[pos_task_running].task_func == os_id
      +                          le_task) {
  2652   000D8A  5022               	movf	rr_scheduler@pos_task_running^0,w,c
  2653   000D8C  0D6A               	mullw	106
  2654   000D8E  0ED4               	movlw	low (_readyQueue+1)
  2655   000D90  24F3               	addwf	243,w,c
  2656   000D92  6ED9               	movwf	fsr2l,c
  2657   000D94  0E00               	movlw	high (_readyQueue+1)
  2658   000D96  20F4               	addwfc	prodh,w,c
  2659   000D98  6EDA               	movwf	fsr2h,c
  2660   000D9A  0E56               	movlw	low _os_idle_task
  2661   000D9C  18DE               	xorwf	postinc2,w,c
  2662   000D9E  E107               	bnz	i1u69_21
  2663   000DA0  0E12               	movlw	high _os_idle_task
  2664   000DA2  18DE               	xorwf	postinc2,w,c
  2665   000DA4  A4D8               	btfss	status,2,c
  2666   000DA6  EFD7  F006         	goto	i1u69_21
  2667   000DAA  EFD9  F006         	goto	i1u69_20
  2668   000DAE                     i1u69_21:
  2669   000DAE  EFE8  F006         	goto	i1l1465
  2670   000DB2                     i1u69_20:
  2671   000DB2                     
  2672                           ;scheduler.c: 20:             idle_selected++;
  2673   000DB2  2A21               	incf	rr_scheduler@idle_selected^0,f,c
  2674   000DB4                     
  2675                           ;scheduler.c: 21:             if (idle_selected > 1) return &readyQueue.readyQueue[0];
  2676   000DB4  0E01               	movlw	1
  2677   000DB6  6421               	cpfsgt	rr_scheduler@idle_selected^0,c
  2678   000DB8  EFE0  F006         	goto	i1u70_21
  2679   000DBC  EFE2  F006         	goto	i1u70_20
  2680   000DC0                     i1u70_21:
  2681   000DC0  EFE8  F006         	goto	i1l1465
  2682   000DC4                     i1u70_20:
  2683   000DC4  0ED3               	movlw	low _readyQueue
  2684   000DC6  6E1D               	movwf	?_rr_scheduler^0,c
  2685   000DC8  0E00               	movlw	high _readyQueue
  2686   000DCA  6E1E               	movwf	(?_rr_scheduler+1)^0,c
  2687   000DCC  EF14  F007         	goto	i1l179
  2688   000DD0                     i1l1465:
  2689                           
  2690                           ;scheduler.c: 24:     } while (readyQueue.readyQueue[pos_task_running].task_state != REA
      +                          DY ||
  2691   000DD0  5022               	movf	rr_scheduler@pos_task_running^0,w,c
  2692   000DD2  0D6A               	mullw	106
  2693   000DD4  0ED6               	movlw	low (_readyQueue+3)
  2694   000DD6  24F3               	addwf	243,w,c
  2695   000DD8  6ED9               	movwf	fsr2l,c
  2696   000DDA  0E00               	movlw	high (_readyQueue+3)
  2697   000DDC  20F4               	addwfc	prodh,w,c
  2698   000DDE  6EDA               	movwf	fsr2h,c
  2699   000DE0  50DF               	movf	indf2,w,c
  2700   000DE2  A4D8               	btfss	status,2,c
  2701   000DE4  EFF6  F006         	goto	i1u71_21
  2702   000DE8  EFF8  F006         	goto	i1u71_20
  2703   000DEC                     i1u71_21:
  2704   000DEC  EFB6  F006         	goto	i1l1453
  2705   000DF0                     i1u71_20:
  2706   000DF0  5022               	movf	rr_scheduler@pos_task_running^0,w,c
  2707   000DF2  0D6A               	mullw	106
  2708   000DF4  0ED4               	movlw	low (_readyQueue+1)
  2709   000DF6  24F3               	addwf	243,w,c
  2710   000DF8  6ED9               	movwf	fsr2l,c
  2711   000DFA  0E00               	movlw	high (_readyQueue+1)
  2712   000DFC  20F4               	addwfc	prodh,w,c
  2713   000DFE  6EDA               	movwf	fsr2h,c
  2714   000E00  0E56               	movlw	low _os_idle_task
  2715   000E02  18DE               	xorwf	postinc2,w,c
  2716   000E04  E109               	bnz	i1u72_20
  2717   000E06  0E12               	movlw	high _os_idle_task
  2718   000E08  18DE               	xorwf	postinc2,w,c
  2719   000E0A  B4D8               	btfsc	status,2,c
  2720   000E0C  EF0A  F007         	goto	i1u72_21
  2721   000E10  EF0C  F007         	goto	i1u72_20
  2722   000E14                     i1u72_21:
  2723   000E14  EFB6  F006         	goto	i1l1453
  2724   000E18                     i1u72_20:
  2725   000E18                     
  2726                           ;scheduler.c: 27:     return &readyQueue.readyQueue[pos_task_running];
  2727   000E18  5022               	movf	rr_scheduler@pos_task_running^0,w,c
  2728   000E1A  0D6A               	mullw	106
  2729   000E1C  0ED3               	movlw	low _readyQueue
  2730   000E1E  24F3               	addwf	243,w,c
  2731   000E20  6E1D               	movwf	?_rr_scheduler^0,c
  2732   000E22  0E00               	movlw	high _readyQueue
  2733   000E24  20F4               	addwfc	prodh,w,c
  2734   000E26  6E1E               	movwf	(?_rr_scheduler+1)^0,c
  2735   000E28                     i1l179:
  2736   000E28  0012               	return		;funcret
  2737   000E2A                     __end_of_rr_scheduler:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function _os_task_pos *****************
  2741 ;; Defined at:
  2742 ;;		line 47 in file "kernel.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  task            2   22[COMRAM] PTR FTN()void 
  2745 ;;		 -> os_idle_task(1), tarefa_3(1), tarefa_2(1), tarefa_1(1), 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  i               1   26[COMRAM] unsigned char 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      unsigned char 
  2750 ;; Registers used:
  2751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2757 ;;      Params:         2       0       0       0       0       0       0       0       0
  2758 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2759 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2760 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2761 ;;Total ram usage:        5 bytes
  2762 ;; Hardware stack levels used: 1
  2763 ;; Hardware stack levels required when called: 4
  2764 ;; This function calls:
  2765 ;;		Nothing
  2766 ;; This function is called by:
  2767 ;;		_rr_scheduler
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text13
  2772   0010EC                     __ptext13:
  2773                           	callstack 0
  2774   0010EC                     _os_task_pos:
  2775                           	callstack 19
  2776   0010EC                     
  2777                           ;kernel.c: 47: uint8_t os_task_pos(f_ptr task);kernel.c: 48: {;kernel.c: 49:     for (ui
      +                          nt8_t i = 0; i < readyQueue.readyQueueSize; i++) {
  2778   0010EC  6A1B               	clrf	os_task_pos@i^0,c
  2779   0010EE  EF91  F008         	goto	i1l1401
  2780   0010F2                     i1l1393:
  2781                           
  2782                           ;kernel.c: 50:         if (readyQueue.readyQueue[i].task_func == task) return i;
  2783   0010F2  501B               	movf	os_task_pos@i^0,w,c
  2784   0010F4  0D6A               	mullw	106
  2785   0010F6  0ED4               	movlw	low (_readyQueue+1)
  2786   0010F8  24F3               	addwf	243,w,c
  2787   0010FA  6ED9               	movwf	fsr2l,c
  2788   0010FC  0E00               	movlw	high (_readyQueue+1)
  2789   0010FE  20F4               	addwfc	prodh,w,c
  2790   001100  6EDA               	movwf	fsr2h,c
  2791   001102  5017               	movf	os_task_pos@task^0,w,c
  2792   001104  18DE               	xorwf	postinc2,w,c
  2793   001106  E107               	bnz	i1u61_21
  2794   001108  5018               	movf	(os_task_pos@task+1)^0,w,c
  2795   00110A  18DE               	xorwf	postinc2,w,c
  2796   00110C  A4D8               	btfss	status,2,c
  2797   00110E  EF8B  F008         	goto	i1u61_21
  2798   001112  EF8D  F008         	goto	i1u61_20
  2799   001116                     i1u61_21:
  2800   001116  EF90  F008         	goto	i1l1399
  2801   00111A                     i1u61_20:
  2802   00111A  501B               	movf	os_task_pos@i^0,w,c
  2803   00111C  EF9D  F008         	goto	i1l58
  2804   001120                     i1l1399:
  2805                           
  2806                           ;kernel.c: 51:     }
  2807   001120  2A1B               	incf	os_task_pos@i^0,f,c
  2808   001122                     i1l1401:
  2809   001122  EE22  F0E5         	lfsr	2,_readyQueue+530
  2810   001126  50DE               	movf	postinc2,w,c
  2811   001128  5C1B               	subwf	os_task_pos@i^0,w,c
  2812   00112A  A0D8               	btfss	status,0,c
  2813   00112C  EF9A  F008         	goto	i1u62_21
  2814   001130  EF9C  F008         	goto	i1u62_20
  2815   001134                     i1u62_21:
  2816   001134  EF79  F008         	goto	i1l1393
  2817   001138                     i1u62_20:
  2818   001138                     
  2819                           ;kernel.c: 53:     return 0;
  2820   001138  0E00               	movlw	0
  2821   00113A                     i1l58:
  2822   00113A  0012               	return		;funcret
  2823   00113C                     __end_of_os_task_pos:
  2824                           	callstack 0
  2825                           
  2826 ;; *************** function ___awmod *****************
  2827 ;; Defined at:
  2828 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  dividend        2   22[COMRAM] int 
  2831 ;;  divisor         2   24[COMRAM] int 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  sign            1   27[COMRAM] unsigned char 
  2834 ;;  counter         1   26[COMRAM] unsigned char 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  2   22[COMRAM] int 
  2837 ;; Registers used:
  2838 ;;		wreg, status,2, status,0
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2844 ;;      Params:         4       0       0       0       0       0       0       0       0
  2845 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2847 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2848 ;;Total ram usage:        6 bytes
  2849 ;; Hardware stack levels used: 1
  2850 ;; Hardware stack levels required when called: 4
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		_rr_scheduler
  2855 ;;		_sem_wait
  2856 ;;		_sem_post
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           	psect	text14
  2861   000F08                     __ptext14:
  2862                           	callstack 0
  2863   000F08                     ___awmod:
  2864                           	callstack 19
  2865   000F08  6A1C               	clrf	___awmod@sign^0,c
  2866   000F0A  BE18               	btfsc	(___awmod@dividend+1)^0,7,c
  2867   000F0C  EF8C  F007         	goto	i1u63_20
  2868   000F10  EF8A  F007         	goto	i1u63_21
  2869   000F14                     i1u63_21:
  2870   000F14  EF92  F007         	goto	i1l1415
  2871   000F18                     i1u63_20:
  2872   000F18  6C17               	negf	___awmod@dividend^0,c
  2873   000F1A  1E18               	comf	(___awmod@dividend+1)^0,f,c
  2874   000F1C  B0D8               	btfsc	status,0,c
  2875   000F1E  2A18               	incf	(___awmod@dividend+1)^0,f,c
  2876   000F20  0E01               	movlw	1
  2877   000F22  6E1C               	movwf	___awmod@sign^0,c
  2878   000F24                     i1l1415:
  2879   000F24  BE1A               	btfsc	(___awmod@divisor+1)^0,7,c
  2880   000F26  EF99  F007         	goto	i1u64_20
  2881   000F2A  EF97  F007         	goto	i1u64_21
  2882   000F2E                     i1u64_21:
  2883   000F2E  EF9D  F007         	goto	i1l1419
  2884   000F32                     i1u64_20:
  2885   000F32  6C19               	negf	___awmod@divisor^0,c
  2886   000F34  1E1A               	comf	(___awmod@divisor+1)^0,f,c
  2887   000F36  B0D8               	btfsc	status,0,c
  2888   000F38  2A1A               	incf	(___awmod@divisor+1)^0,f,c
  2889   000F3A                     i1l1419:
  2890   000F3A  5019               	movf	___awmod@divisor^0,w,c
  2891   000F3C  101A               	iorwf	(___awmod@divisor+1)^0,w,c
  2892   000F3E  B4D8               	btfsc	status,2,c
  2893   000F40  EFA4  F007         	goto	i1u65_21
  2894   000F44  EFA6  F007         	goto	i1u65_20
  2895   000F48                     i1u65_21:
  2896   000F48  EFCA  F007         	goto	i1l1435
  2897   000F4C                     i1u65_20:
  2898   000F4C  0E01               	movlw	1
  2899   000F4E  6E1B               	movwf	___awmod@counter^0,c
  2900   000F50  EFAE  F007         	goto	i1l1425
  2901   000F54                     i1l1423:
  2902   000F54  90D8               	bcf	status,0,c
  2903   000F56  3619               	rlcf	___awmod@divisor^0,f,c
  2904   000F58  361A               	rlcf	(___awmod@divisor+1)^0,f,c
  2905   000F5A  2A1B               	incf	___awmod@counter^0,f,c
  2906   000F5C                     i1l1425:
  2907   000F5C  AE1A               	btfss	(___awmod@divisor+1)^0,7,c
  2908   000F5E  EFB3  F007         	goto	i1u66_21
  2909   000F62  EFB5  F007         	goto	i1u66_20
  2910   000F66                     i1u66_21:
  2911   000F66  EFAA  F007         	goto	i1l1423
  2912   000F6A                     i1u66_20:
  2913   000F6A                     i1l1427:
  2914   000F6A  5019               	movf	___awmod@divisor^0,w,c
  2915   000F6C  5C17               	subwf	___awmod@dividend^0,w,c
  2916   000F6E  501A               	movf	(___awmod@divisor+1)^0,w,c
  2917   000F70  5818               	subwfb	(___awmod@dividend+1)^0,w,c
  2918   000F72  A0D8               	btfss	status,0,c
  2919   000F74  EFBE  F007         	goto	i1u67_21
  2920   000F78  EFC0  F007         	goto	i1u67_20
  2921   000F7C                     i1u67_21:
  2922   000F7C  EFC4  F007         	goto	i1l1431
  2923   000F80                     i1u67_20:
  2924   000F80  5019               	movf	___awmod@divisor^0,w,c
  2925   000F82  5E17               	subwf	___awmod@dividend^0,f,c
  2926   000F84  501A               	movf	(___awmod@divisor+1)^0,w,c
  2927   000F86  5A18               	subwfb	(___awmod@dividend+1)^0,f,c
  2928   000F88                     i1l1431:
  2929   000F88  90D8               	bcf	status,0,c
  2930   000F8A  321A               	rrcf	(___awmod@divisor+1)^0,f,c
  2931   000F8C  3219               	rrcf	___awmod@divisor^0,f,c
  2932   000F8E  2E1B               	decfsz	___awmod@counter^0,f,c
  2933   000F90  EFB5  F007         	goto	i1l1427
  2934   000F94                     i1l1435:
  2935   000F94  501C               	movf	___awmod@sign^0,w,c
  2936   000F96  B4D8               	btfsc	status,2,c
  2937   000F98  EFD0  F007         	goto	i1u68_21
  2938   000F9C  EFD2  F007         	goto	i1u68_20
  2939   000FA0                     i1u68_21:
  2940   000FA0  EFD6  F007         	goto	i1l1439
  2941   000FA4                     i1u68_20:
  2942   000FA4  6C17               	negf	___awmod@dividend^0,c
  2943   000FA6  1E18               	comf	(___awmod@dividend+1)^0,f,c
  2944   000FA8  B0D8               	btfsc	status,0,c
  2945   000FAA  2A18               	incf	(___awmod@dividend+1)^0,f,c
  2946   000FAC                     i1l1439:
  2947   000FAC  C017  F017         	movff	___awmod@dividend,?___awmod
  2948   000FB0  C018  F018         	movff	___awmod@dividend+1,?___awmod+1
  2949   000FB4  0012               	return		;funcret
  2950   000FB6                     __end_of___awmod:
  2951                           	callstack 0
  2952                           
  2953 ;; *************** function _tarefa_2 *****************
  2954 ;; Defined at:
  2955 ;;		line 26 in file "user_app.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2971 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2972 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2973 ;;Total ram usage:        1 bytes
  2974 ;; Hardware stack levels used: 1
  2975 ;; Hardware stack levels required when called: 4
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_main
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text15
  2984   001308                     __ptext15:
  2985                           	callstack 0
  2986   001308                     _tarefa_2:
  2987                           	callstack 23
  2988   001308                     l91:
  2989   001308                     
  2990                           ;user_app.c: 29:         LATDbits.LD1 = ~PORTDbits.RD1;
  2991   001308  B283               	btfsc	131,1,c	;volatile
  2992   00130A  EF89  F009         	goto	u121_21
  2993   00130E  EF8C  F009         	goto	u121_20
  2994   001312                     u121_21:
  2995   001312  0E01               	movlw	1
  2996   001314  EF8D  F009         	goto	u121_26
  2997   001318                     u121_20:
  2998   001318  0E00               	movlw	0
  2999   00131A                     u121_26:
  3000   00131A  0AFF               	xorlw	255
  3001   00131C  0100               	movlb	0	; () banked
  3002   00131E  6F62               	movwf	??_tarefa_2& (0+255),b
  3003   001320  4762               	rlncf	??_tarefa_2& (0+255),f,b
  3004   001322  508C               	movf	140,w,c	;volatile
  3005   001324  1962               	xorwf	??_tarefa_2& (0+255),w,b
  3006   001326  0BFD               	andlw	-3
  3007   001328  1962               	xorwf	??_tarefa_2& (0+255),w,b
  3008   00132A  6E8C               	movwf	140,c	;volatile
  3009   00132C  EF84  F009         	goto	l91
  3010   001330  0012               	return		;funcret
  3011   001332                     __end_of_tarefa_2:
  3012                           	callstack 0
  3013                           
  3014 ;; *************** function _tarefa_3 *****************
  3015 ;; Defined at:
  3016 ;;		line 34 in file "user_app.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;		None
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;		None
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		wreg, status,2, status,0
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3030 ;;      Params:         0       0       0       0       0       0       0       0       0
  3031 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3032 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3033 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3034 ;;Total ram usage:        1 bytes
  3035 ;; Hardware stack levels used: 1
  3036 ;; Hardware stack levels required when called: 4
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_main
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text16
  3045   0012B2                     __ptext16:
  3046                           	callstack 0
  3047   0012B2                     _tarefa_3:
  3048                           	callstack 23
  3049   0012B2                     l97:
  3050   0012B2                     
  3051                           ;user_app.c: 37:         LATDbits.LD2 = ~PORTDbits.RD2;
  3052   0012B2  B483               	btfsc	131,2,c	;volatile
  3053   0012B4  EF5E  F009         	goto	u122_21
  3054   0012B8  EF61  F009         	goto	u122_20
  3055   0012BC                     u122_21:
  3056   0012BC  0E01               	movlw	1
  3057   0012BE  EF62  F009         	goto	u122_26
  3058   0012C2                     u122_20:
  3059   0012C2  0E00               	movlw	0
  3060   0012C4                     u122_26:
  3061   0012C4  0AFF               	xorlw	255
  3062   0012C6  0100               	movlb	0	; () banked
  3063   0012C8  6F63               	movwf	??_tarefa_3& (0+255),b
  3064   0012CA  4763               	rlncf	??_tarefa_3& (0+255),f,b
  3065   0012CC  4763               	rlncf	??_tarefa_3& (0+255),f,b
  3066   0012CE  508C               	movf	140,w,c	;volatile
  3067   0012D0  1963               	xorwf	??_tarefa_3& (0+255),w,b
  3068   0012D2  0BFB               	andlw	-5
  3069   0012D4  1963               	xorwf	??_tarefa_3& (0+255),w,b
  3070   0012D6  6E8C               	movwf	140,c	;volatile
  3071   0012D8  EF59  F009         	goto	l97
  3072   0012DC  0012               	return		;funcret
  3073   0012DE                     __end_of_tarefa_3:
  3074                           	callstack 0
  3075                           
  3076 ;; *************** function _ISR_TIMER_0 *****************
  3077 ;; Defined at:
  3078 ;;		line 25 in file "hardware.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;		None
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;		None
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3092 ;;      Params:         0       0       0       0       0       0       0       0       0
  3093 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3094 ;;      Temps:         13       0       0       0       0       0       0       0       0
  3095 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3096 ;;Total ram usage:       13 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 3
  3099 ;; This function calls:
  3100 ;;		_os_task_time_decrease
  3101 ;;		i2_scheduler
  3102 ;; This function is called by:
  3103 ;;		Interrupt level 2
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           	psect	intcode
  3108   000008                     __pintcode:
  3109                           	callstack 0
  3110   000008                     _ISR_TIMER_0:
  3111                           	callstack 19
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;incstack = 0
  3115   000008  823A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3116   00000A  ED61  F005         	call	int_func,f	;refresh shadow registers
  3117                           
  3118                           	psect	intcode_body
  3119   000AC2                     __pintcode_body:
  3120                           	callstack 19
  3121   000AC2                     int_func:
  3122                           	callstack 19
  3123   000AC2  0006               	pop		; remove dummy address from shadow register refresh
  3124   000AC4  CFE1 F014          	movff	fsr1l,??_ISR_TIMER_0+7
  3125   000AC8  CFE2 F015          	movff	fsr1h,??_ISR_TIMER_0+8
  3126   000ACC  CFD9 F016          	movff	fsr2l,??_ISR_TIMER_0+9
  3127   000AD0  CFDA F017          	movff	fsr2h,??_ISR_TIMER_0+10
  3128   000AD4  CFF3 F018          	movff	prodl,??_ISR_TIMER_0+11
  3129   000AD8  CFF4 F019          	movff	prodh,??_ISR_TIMER_0+12
  3130   000ADC                     
  3131                           ;hardware.c: 27:     (INTCONbits.GIE = 0);
  3132   000ADC  9EF2               	bcf	242,7,c	;volatile
  3133                           
  3134                           ;hardware.c: 29:     if (INTCONbits.TMR0IF == 1) {
  3135   000ADE  A4F2               	btfss	242,2,c	;volatile
  3136   000AE0  EF74  F005         	goto	i2u108_41
  3137   000AE4  EF76  F005         	goto	i2u108_40
  3138   000AE8                     i2u108_41:
  3139   000AE8  EF97  F006         	goto	i2l1785
  3140   000AEC                     i2u108_40:
  3141   000AEC                     
  3142                           ;hardware.c: 30:         INTCONbits.TMR0IF = 0;
  3143   000AEC  94F2               	bcf	242,2,c	;volatile
  3144   000AEE                     
  3145                           ;hardware.c: 33:         os_task_time_decrease();
  3146   000AEE  EC32  F008         	call	_os_task_time_decrease	;wreg free
  3147   000AF2  EE22  F0E6         	lfsr	2,_readyQueue+531
  3148   000AF6  EE10 F003          	lfsr	1,3
  3149   000AFA  50DE               	movf	postinc2,w,c
  3150   000AFC  26E1               	addwf	fsr1l,f,c
  3151   000AFE  50DD               	movf	postdec2,w,c
  3152   000B00  22E2               	addwfc	fsr1h,f,c
  3153   000B02  04E6               	decf	postinc1,w,c
  3154   000B04  A4D8               	btfss	status,2,c
  3155   000B06  EF87  F005         	goto	i2u109_41
  3156   000B0A  EF89  F005         	goto	i2u109_40
  3157   000B0E                     i2u109_41:
  3158   000B0E  EFF5  F005         	goto	i2l1765
  3159   000B12                     i2u109_40:
  3160   000B12  EE22  F0E6         	lfsr	2,_readyQueue+531
  3161   000B16  EE10 F006          	lfsr	1,6
  3162   000B1A  50DE               	movf	postinc2,w,c
  3163   000B1C  26E1               	addwf	fsr1l,f,c
  3164   000B1E  50DD               	movf	postdec2,w,c
  3165   000B20  22E2               	addwfc	fsr1h,f,c
  3166   000B22  CFE0 FFE7          	movff	bsr,indf1	;volatile
  3167   000B26  EE22  F0E6         	lfsr	2,_readyQueue+531
  3168   000B2A  EE10 F008          	lfsr	1,8
  3169   000B2E  50DE               	movf	postinc2,w,c
  3170   000B30  26E1               	addwf	fsr1l,f,c
  3171   000B32  50DD               	movf	postdec2,w,c
  3172   000B34  22E2               	addwfc	fsr1h,f,c
  3173   000B36  CFD8 FFE7          	movff	status,indf1	;volatile
  3174   000B3A  EE22  F0E6         	lfsr	2,_readyQueue+531
  3175   000B3E  EE10 F007          	lfsr	1,7
  3176   000B42  50DE               	movf	postinc2,w,c
  3177   000B44  26E1               	addwf	fsr1l,f,c
  3178   000B46  50DD               	movf	postdec2,w,c
  3179   000B48  22E2               	addwfc	fsr1h,f,c
  3180   000B4A  CFE8 FFE7          	movff	wreg,indf1	;volatile
  3181   000B4E  EE22  F0E6         	lfsr	2,_readyQueue+531
  3182   000B52  EE10 F069          	lfsr	1,105
  3183   000B56  50DE               	movf	postinc2,w,c
  3184   000B58  26E1               	addwf	fsr1l,f,c
  3185   000B5A  50DD               	movf	postdec2,w,c
  3186   000B5C  22E2               	addwfc	fsr1h,f,c
  3187   000B5E  6AE7               	clrf	indf1,c
  3188   000B60  EFE4  F005         	goto	i2l1761
  3189   000B64                     i2l1757:
  3190   000B64  EE22  F0E6         	lfsr	2,_readyQueue+531
  3191   000B68  EE10 F069          	lfsr	1,105
  3192   000B6C  50DE               	movf	postinc2,w,c
  3193   000B6E  26E1               	addwf	fsr1l,f,c
  3194   000B70  50DD               	movf	postdec2,w,c
  3195   000B72  22E2               	addwfc	fsr1h,f,c
  3196   000B74  50E7               	movf	indf1,w,c
  3197   000B76  6E0D               	movwf	??_ISR_TIMER_0^0,c
  3198   000B78  500D               	movf	??_ISR_TIMER_0^0,w,c
  3199   000B7A  0D03               	mullw	3
  3200   000B7C  CFF3 F00E          	movff	prodl,??_ISR_TIMER_0+1
  3201   000B80  CFF4 F00F          	movff	prodh,??_ISR_TIMER_0+2
  3202   000B84  EE22  F0E6         	lfsr	2,_readyQueue+531
  3203   000B88  CFDE F010          	movff	postinc2,??_ISR_TIMER_0+3
  3204   000B8C  CFDD F011          	movff	postdec2,??_ISR_TIMER_0+4
  3205   000B90  500E               	movf	(??_ISR_TIMER_0+1)^0,w,c
  3206   000B92  2410               	addwf	(??_ISR_TIMER_0+3)^0,w,c
  3207   000B94  6E12               	movwf	(??_ISR_TIMER_0+5)^0,c
  3208   000B96  500F               	movf	(??_ISR_TIMER_0+2)^0,w,c
  3209   000B98  2011               	addwfc	(??_ISR_TIMER_0+4)^0,w,c
  3210   000B9A  6E13               	movwf	(??_ISR_TIMER_0+6)^0,c
  3211   000B9C  0E09               	movlw	9
  3212   000B9E  2412               	addwf	(??_ISR_TIMER_0+5)^0,w,c
  3213   000BA0  6ED9               	movwf	fsr2l,c
  3214   000BA2  0E00               	movlw	0
  3215   000BA4  2013               	addwfc	(??_ISR_TIMER_0+6)^0,w,c
  3216   000BA6  6EDA               	movwf	fsr2h,c
  3217   000BA8  CFFD FFDE          	movff	tosl,postinc2	;volatile
  3218   000BAC  CFFE FFDE          	movff	tosh,postinc2	;volatile
  3219   000BB0  CFFF FFDE          	movff	tosu,postinc2	;volatile
  3220   000BB4  EE22  F0E6         	lfsr	2,_readyQueue+531
  3221   000BB8  EE10 F069          	lfsr	1,105
  3222   000BBC  50DE               	movf	postinc2,w,c
  3223   000BBE  26E1               	addwf	fsr1l,f,c
  3224   000BC0  50DD               	movf	postdec2,w,c
  3225   000BC2  22E2               	addwfc	fsr1h,f,c
  3226   000BC4  2AE7               	incf	indf1,f,c
  3227   000BC6  0006               	pop		;# 
  3228   000BC8                     i2l1761:
  3229   000BC8  50FC               	movf	252,w,c	;volatile
  3230   000BCA  A4D8               	btfss	status,2,c
  3231   000BCC  EFEA  F005         	goto	i2u110_41
  3232   000BD0  EFEC  F005         	goto	i2u110_40
  3233   000BD4                     i2u110_41:
  3234   000BD4  EFB2  F005         	goto	i2l1757
  3235   000BD8                     i2u110_40:
  3236   000BD8  EE22  F0E6         	lfsr	2,_readyQueue+531
  3237   000BDC  EE10 F003          	lfsr	1,3
  3238   000BE0  50DE               	movf	postinc2,w,c
  3239   000BE2  26E1               	addwf	fsr1l,f,c
  3240   000BE4  50DD               	movf	postdec2,w,c
  3241   000BE6  22E2               	addwfc	fsr1h,f,c
  3242   000BE8  6AE7               	clrf	indf1,c
  3243   000BEA                     i2l1765:
  3244                           
  3245                           ;hardware.c: 36:         scheduler();
  3246   000BEA  ECD5  F009         	call	i2_scheduler	;wreg free
  3247   000BEE  EE22  F0E6         	lfsr	2,_readyQueue+531
  3248   000BF2  EE10 F003          	lfsr	1,3
  3249   000BF6  50DE               	movf	postinc2,w,c
  3250   000BF8  26E1               	addwf	fsr1l,f,c
  3251   000BFA  50DD               	movf	postdec2,w,c
  3252   000BFC  22E2               	addwfc	fsr1h,f,c
  3253   000BFE  50E7               	movf	indf1,w,c
  3254   000C00  A4D8               	btfss	status,2,c
  3255   000C02  EF05  F006         	goto	i2u111_41
  3256   000C06  EF07  F006         	goto	i2u111_40
  3257   000C0A                     i2u111_41:
  3258   000C0A  EF97  F006         	goto	i2l1785
  3259   000C0E                     i2u111_40:
  3260   000C0E  EE22  F0E6         	lfsr	2,_readyQueue+531
  3261   000C12  EE10 F006          	lfsr	1,6
  3262   000C16  50DE               	movf	postinc2,w,c
  3263   000C18  26E1               	addwf	fsr1l,f,c
  3264   000C1A  50DD               	movf	postdec2,w,c
  3265   000C1C  22E2               	addwfc	fsr1h,f,c
  3266   000C1E  50E7               	movf	indf1,w,c
  3267   000C20  6EE0               	movwf	224,c	;volatile
  3268   000C22  EE22  F0E6         	lfsr	2,_readyQueue+531
  3269   000C26  EE10 F008          	lfsr	1,8
  3270   000C2A  50DE               	movf	postinc2,w,c
  3271   000C2C  26E1               	addwf	fsr1l,f,c
  3272   000C2E  50DD               	movf	postdec2,w,c
  3273   000C30  22E2               	addwfc	fsr1h,f,c
  3274   000C32  50E7               	movf	indf1,w,c
  3275   000C34  6ED8               	movwf	216,c	;volatile
  3276   000C36  EE22  F0E6         	lfsr	2,_readyQueue+531
  3277   000C3A  EE10 F007          	lfsr	1,7
  3278   000C3E  50DE               	movf	postinc2,w,c
  3279   000C40  26E1               	addwf	fsr1l,f,c
  3280   000C42  50DD               	movf	postdec2,w,c
  3281   000C44  22E2               	addwfc	fsr1h,f,c
  3282   000C46  50E7               	movf	indf1,w,c
  3283   000C48  6E0D               	movwf	??_ISR_TIMER_0^0,c
  3284   000C4A  500D               	movf	??_ISR_TIMER_0^0,w,c
  3285   000C4C  6AFC               	clrf	252,c	;volatile
  3286   000C4E  EE22  F0E6         	lfsr	2,_readyQueue+531
  3287   000C52  EE10 F069          	lfsr	1,105
  3288   000C56  50DE               	movf	postinc2,w,c
  3289   000C58  26E1               	addwf	fsr1l,f,c
  3290   000C5A  50DD               	movf	postdec2,w,c
  3291   000C5C  22E2               	addwfc	fsr1h,f,c
  3292   000C5E  50E7               	movf	indf1,w,c
  3293   000C60  A4D8               	btfss	status,2,c
  3294   000C62  EF35  F006         	goto	i2u112_41
  3295   000C66  EF37  F006         	goto	i2u112_40
  3296   000C6A                     i2u112_41:
  3297   000C6A  EF4B  F006         	goto	i2l230
  3298   000C6E                     i2u112_40:
  3299   000C6E  0005               	push		;# 
  3300   000C70  EE22  F0E6         	lfsr	2,_readyQueue+531
  3301   000C74  EE10 F001          	lfsr	1,1
  3302   000C78  50DE               	movf	postinc2,w,c
  3303   000C7A  26E1               	addwf	fsr1l,f,c
  3304   000C7C  50DD               	movf	postdec2,w,c
  3305   000C7E  22E2               	addwfc	fsr1h,f,c
  3306   000C80  CFE6 F00D          	movff	postinc1,??_ISR_TIMER_0
  3307   000C84  CFE5 F00E          	movff	postdec1,??_ISR_TIMER_0+1
  3308   000C88  C00D  FFFD         	movff	??_ISR_TIMER_0,tosl	;volatile
  3309   000C8C  C00E  FFFE         	movff	??_ISR_TIMER_0+1,tosh	;volatile
  3310   000C90  6AFF               	clrf	255,c	;volatile
  3311   000C92  EF8D  F006         	goto	i2l1783
  3312   000C96                     i2l230:
  3313   000C96  0005               	push		;# 
  3314   000C98  EE22  F0E6         	lfsr	2,_readyQueue+531
  3315   000C9C  EE10 F069          	lfsr	1,105
  3316   000CA0  50DE               	movf	postinc2,w,c
  3317   000CA2  26E1               	addwf	fsr1l,f,c
  3318   000CA4  50DD               	movf	postdec2,w,c
  3319   000CA6  22E2               	addwfc	fsr1h,f,c
  3320   000CA8  06E7               	decf	indf1,f,c
  3321   000CAA  EE22  F0E6         	lfsr	2,_readyQueue+531
  3322   000CAE  EE10 F069          	lfsr	1,105
  3323   000CB2  50DE               	movf	postinc2,w,c
  3324   000CB4  26E1               	addwf	fsr1l,f,c
  3325   000CB6  50DD               	movf	postdec2,w,c
  3326   000CB8  22E2               	addwfc	fsr1h,f,c
  3327   000CBA  50E7               	movf	indf1,w,c
  3328   000CBC  6E0D               	movwf	??_ISR_TIMER_0^0,c
  3329   000CBE  500D               	movf	??_ISR_TIMER_0^0,w,c
  3330   000CC0  0D03               	mullw	3
  3331   000CC2  CFF3 F00E          	movff	prodl,??_ISR_TIMER_0+1
  3332   000CC6  CFF4 F00F          	movff	prodh,??_ISR_TIMER_0+2
  3333   000CCA  EE22  F0E6         	lfsr	2,_readyQueue+531
  3334   000CCE  CFDE F010          	movff	postinc2,??_ISR_TIMER_0+3
  3335   000CD2  CFDD F011          	movff	postdec2,??_ISR_TIMER_0+4
  3336   000CD6  500E               	movf	(??_ISR_TIMER_0+1)^0,w,c
  3337   000CD8  2410               	addwf	(??_ISR_TIMER_0+3)^0,w,c
  3338   000CDA  6E12               	movwf	(??_ISR_TIMER_0+5)^0,c
  3339   000CDC  500F               	movf	(??_ISR_TIMER_0+2)^0,w,c
  3340   000CDE  2011               	addwfc	(??_ISR_TIMER_0+4)^0,w,c
  3341   000CE0  6E13               	movwf	(??_ISR_TIMER_0+6)^0,c
  3342   000CE2  0E09               	movlw	9
  3343   000CE4  2412               	addwf	(??_ISR_TIMER_0+5)^0,w,c
  3344   000CE6  6ED9               	movwf	fsr2l,c
  3345   000CE8  0E00               	movlw	0
  3346   000CEA  2013               	addwfc	(??_ISR_TIMER_0+6)^0,w,c
  3347   000CEC  6EDA               	movwf	fsr2h,c
  3348   000CEE  CFDE FFFD          	movff	postinc2,tosl	;volatile
  3349   000CF2  CFDE FFFE          	movff	postinc2,tosh	;volatile
  3350   000CF6  CFDD FFFF          	movff	postdec2,tosu	;volatile
  3351   000CFA  EE22  F0E6         	lfsr	2,_readyQueue+531
  3352   000CFE  EE10 F069          	lfsr	1,105
  3353   000D02  50DE               	movf	postinc2,w,c
  3354   000D04  26E1               	addwf	fsr1l,f,c
  3355   000D06  50DD               	movf	postdec2,w,c
  3356   000D08  22E2               	addwfc	fsr1h,f,c
  3357   000D0A  50E7               	movf	indf1,w,c
  3358   000D0C  A4D8               	btfss	status,2,c
  3359   000D0E  EF8B  F006         	goto	i2u113_41
  3360   000D12  EF8D  F006         	goto	i2u113_40
  3361   000D16                     i2u113_41:
  3362   000D16  EF4B  F006         	goto	i2l230
  3363   000D1A                     i2u113_40:
  3364   000D1A                     i2l1783:
  3365   000D1A  EE22  F0E6         	lfsr	2,_readyQueue+531
  3366   000D1E  EE10 F003          	lfsr	1,3
  3367   000D22  50DE               	movf	postinc2,w,c
  3368   000D24  26E1               	addwf	fsr1l,f,c
  3369   000D26  50DD               	movf	postdec2,w,c
  3370   000D28  22E2               	addwfc	fsr1h,f,c
  3371   000D2A  0E01               	movlw	1
  3372   000D2C  6EE7               	movwf	indf1,c
  3373   000D2E                     i2l1785:
  3374                           
  3375                           ;hardware.c: 40:     (INTCONbits.GIE = 1);
  3376   000D2E  8EF2               	bsf	242,7,c	;volatile
  3377   000D30  C019  FFF4         	movff	??_ISR_TIMER_0+12,prodh
  3378   000D34  C018  FFF3         	movff	??_ISR_TIMER_0+11,prodl
  3379   000D38  C017  FFDA         	movff	??_ISR_TIMER_0+10,fsr2h
  3380   000D3C  C016  FFD9         	movff	??_ISR_TIMER_0+9,fsr2l
  3381   000D40  C015  FFE2         	movff	??_ISR_TIMER_0+8,fsr1h
  3382   000D44  C014  FFE1         	movff	??_ISR_TIMER_0+7,fsr1l
  3383   000D48  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3384   000D4A  0011               	retfie		f
  3385   000D4C                     __end_of_ISR_TIMER_0:
  3386                           	callstack 0
  3387                           
  3388 ;; *************** function i2_scheduler *****************
  3389 ;; Defined at:
  3390 ;;		line 37 in file "scheduler.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;		None
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      void 
  3397 ;; Registers used:
  3398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3404 ;;      Params:         0       0       0       0       0       0       0       0       0
  3405 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3406 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3407 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3408 ;;Total ram usage:        0 bytes
  3409 ;; Hardware stack levels used: 1
  3410 ;; Hardware stack levels required when called: 2
  3411 ;; This function calls:
  3412 ;;		i2_rr_scheduler
  3413 ;; This function is called by:
  3414 ;;		_ISR_TIMER_0
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text18
  3419   0013AA                     __ptext18:
  3420                           	callstack 0
  3421   0013AA                     i2_scheduler:
  3422                           	callstack 19
  3423   0013AA                     
  3424                           ;scheduler.c: 40:     readyQueue.taskRunning = rr_scheduler();
  3425   0013AA  EC15  F007         	call	i2_rr_scheduler	;wreg free
  3426   0013AE  C007  F2E6         	movff	?i2_rr_scheduler,_readyQueue+531
  3427   0013B2  C008  F2E7         	movff	?i2_rr_scheduler+1,_readyQueue+532
  3428   0013B6  0012               	return		;funcret
  3429   0013B8                     __end_ofi2_scheduler:
  3430                           	callstack 0
  3431                           
  3432 ;; *************** function i2_rr_scheduler *****************
  3433 ;; Defined at:
  3434 ;;		line 12 in file "scheduler.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  pos_task_run    1   11[COMRAM] unsigned char 
  3439 ;;  idle_selecte    1   10[COMRAM] unsigned char 
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  2    6[COMRAM] PTR struct tcb
  3442 ;; Registers used:
  3443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3449 ;;      Params:         2       0       0       0       0       0       0       0       0
  3450 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3451 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3452 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3453 ;;Total ram usage:        6 bytes
  3454 ;; Hardware stack levels used: 1
  3455 ;; Hardware stack levels required when called: 1
  3456 ;; This function calls:
  3457 ;;		i2___awmod
  3458 ;;		i2_os_task_pos
  3459 ;; This function is called by:
  3460 ;;		i2_scheduler
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text19
  3465   000E2A                     __ptext19:
  3466                           	callstack 0
  3467   000E2A                     i2_rr_scheduler:
  3468                           	callstack 19
  3469   000E2A                     
  3470                           ;scheduler.c: 14:     uint8_t pos_task_running = os_task_pos(readyQueue.taskRunning->tas
      +                          k_func);
  3471   000E2A  EE22  F0E6         	lfsr	2,_readyQueue+531
  3472   000E2E  EE10 F001          	lfsr	1,1
  3473   000E32  50DE               	movf	postinc2,w,c
  3474   000E34  26E1               	addwf	fsr1l,f,c
  3475   000E36  50DD               	movf	postdec2,w,c
  3476   000E38  22E2               	addwfc	fsr1h,f,c
  3477   000E3A  CFE6 F001          	movff	postinc1,i2os_task_pos@task
  3478   000E3E  CFE5 F002          	movff	postdec1,i2os_task_pos@task+1
  3479   000E42  EC9E  F008         	call	i2_os_task_pos	;wreg free
  3480   000E46  6E0C               	movwf	i2rr_scheduler@pos_task_running^0,c
  3481   000E48                     
  3482                           ;scheduler.c: 15:     uint8_t idle_selected = 0;
  3483   000E48  6A0B               	clrf	i2rr_scheduler@idle_selected^0,c
  3484   000E4A                     i2l1555:
  3485                           
  3486                           ;scheduler.c: 18:         pos_task_running = (pos_task_running+1) % readyQueue.readyQueu
      +                          eSize;
  3487   000E4A  0E01               	movlw	1
  3488   000E4C  240C               	addwf	i2rr_scheduler@pos_task_running^0,w,c
  3489   000E4E  6E01               	movwf	i2___awmod@dividend^0,c
  3490   000E50  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  3491   000E52  0E00               	movlw	0
  3492   000E54  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
  3493   000E56  C2E5  F009         	movff	_readyQueue+530,??i2_rr_scheduler
  3494   000E5A  5009               	movf	??i2_rr_scheduler^0,w,c
  3495   000E5C  6E03               	movwf	i2___awmod@divisor^0,c
  3496   000E5E  6A04               	clrf	(i2___awmod@divisor+1)^0,c
  3497   000E60  ECDB  F007         	call	i2___awmod	;wreg free
  3498   000E64  5001               	movf	?i2___awmod^0,w,c
  3499   000E66  6E0C               	movwf	i2rr_scheduler@pos_task_running^0,c
  3500   000E68                     
  3501                           ;scheduler.c: 19:         if (readyQueue.readyQueue[pos_task_running].task_func == os_id
      +                          le_task) {
  3502   000E68  500C               	movf	i2rr_scheduler@pos_task_running^0,w,c
  3503   000E6A  0D6A               	mullw	106
  3504   000E6C  0ED4               	movlw	low (_readyQueue+1)
  3505   000E6E  24F3               	addwf	243,w,c
  3506   000E70  6ED9               	movwf	fsr2l,c
  3507   000E72  0E00               	movlw	high (_readyQueue+1)
  3508   000E74  20F4               	addwfc	prodh,w,c
  3509   000E76  6EDA               	movwf	fsr2h,c
  3510   000E78  0E56               	movlw	low _os_idle_task
  3511   000E7A  18DE               	xorwf	postinc2,w,c
  3512   000E7C  E107               	bnz	i2u82_41
  3513   000E7E  0E12               	movlw	high _os_idle_task
  3514   000E80  18DE               	xorwf	postinc2,w,c
  3515   000E82  A4D8               	btfss	status,2,c
  3516   000E84  EF46  F007         	goto	i2u82_41
  3517   000E88  EF48  F007         	goto	i2u82_40
  3518   000E8C                     i2u82_41:
  3519   000E8C  EF57  F007         	goto	i2l1567
  3520   000E90                     i2u82_40:
  3521   000E90                     
  3522                           ;scheduler.c: 20:             idle_selected++;
  3523   000E90  2A0B               	incf	i2rr_scheduler@idle_selected^0,f,c
  3524   000E92                     
  3525                           ;scheduler.c: 21:             if (idle_selected > 1) return &readyQueue.readyQueue[0];
  3526   000E92  0E01               	movlw	1
  3527   000E94  640B               	cpfsgt	i2rr_scheduler@idle_selected^0,c
  3528   000E96  EF4F  F007         	goto	i2u83_41
  3529   000E9A  EF51  F007         	goto	i2u83_40
  3530   000E9E                     i2u83_41:
  3531   000E9E  EF57  F007         	goto	i2l1567
  3532   000EA2                     i2u83_40:
  3533   000EA2  0ED3               	movlw	low _readyQueue
  3534   000EA4  6E07               	movwf	?i2_rr_scheduler^0,c
  3535   000EA6  0E00               	movlw	high _readyQueue
  3536   000EA8  6E08               	movwf	(?i2_rr_scheduler+1)^0,c
  3537   000EAA  EF83  F007         	goto	i2l179
  3538   000EAE                     i2l1567:
  3539                           
  3540                           ;scheduler.c: 24:     } while (readyQueue.readyQueue[pos_task_running].task_state != REA
      +                          DY ||
  3541   000EAE  500C               	movf	i2rr_scheduler@pos_task_running^0,w,c
  3542   000EB0  0D6A               	mullw	106
  3543   000EB2  0ED6               	movlw	low (_readyQueue+3)
  3544   000EB4  24F3               	addwf	243,w,c
  3545   000EB6  6ED9               	movwf	fsr2l,c
  3546   000EB8  0E00               	movlw	high (_readyQueue+3)
  3547   000EBA  20F4               	addwfc	prodh,w,c
  3548   000EBC  6EDA               	movwf	fsr2h,c
  3549   000EBE  50DF               	movf	indf2,w,c
  3550   000EC0  A4D8               	btfss	status,2,c
  3551   000EC2  EF65  F007         	goto	i2u84_41
  3552   000EC6  EF67  F007         	goto	i2u84_40
  3553   000ECA                     i2u84_41:
  3554   000ECA  EF25  F007         	goto	i2l1555
  3555   000ECE                     i2u84_40:
  3556   000ECE  500C               	movf	i2rr_scheduler@pos_task_running^0,w,c
  3557   000ED0  0D6A               	mullw	106
  3558   000ED2  0ED4               	movlw	low (_readyQueue+1)
  3559   000ED4  24F3               	addwf	243,w,c
  3560   000ED6  6ED9               	movwf	fsr2l,c
  3561   000ED8  0E00               	movlw	high (_readyQueue+1)
  3562   000EDA  20F4               	addwfc	prodh,w,c
  3563   000EDC  6EDA               	movwf	fsr2h,c
  3564   000EDE  0E56               	movlw	low _os_idle_task
  3565   000EE0  18DE               	xorwf	postinc2,w,c
  3566   000EE2  E109               	bnz	i2u85_40
  3567   000EE4  0E12               	movlw	high _os_idle_task
  3568   000EE6  18DE               	xorwf	postinc2,w,c
  3569   000EE8  B4D8               	btfsc	status,2,c
  3570   000EEA  EF79  F007         	goto	i2u85_41
  3571   000EEE  EF7B  F007         	goto	i2u85_40
  3572   000EF2                     i2u85_41:
  3573   000EF2  EF25  F007         	goto	i2l1555
  3574   000EF6                     i2u85_40:
  3575   000EF6                     
  3576                           ;scheduler.c: 27:     return &readyQueue.readyQueue[pos_task_running];
  3577   000EF6  500C               	movf	i2rr_scheduler@pos_task_running^0,w,c
  3578   000EF8  0D6A               	mullw	106
  3579   000EFA  0ED3               	movlw	low _readyQueue
  3580   000EFC  24F3               	addwf	243,w,c
  3581   000EFE  6E07               	movwf	?i2_rr_scheduler^0,c
  3582   000F00  0E00               	movlw	high _readyQueue
  3583   000F02  20F4               	addwfc	prodh,w,c
  3584   000F04  6E08               	movwf	(?i2_rr_scheduler+1)^0,c
  3585   000F06                     i2l179:
  3586   000F06  0012               	return		;funcret
  3587   000F08                     __end_ofi2_rr_scheduler:
  3588                           	callstack 0
  3589                           
  3590 ;; *************** function i2_os_task_pos *****************
  3591 ;; Defined at:
  3592 ;;		line 47 in file "kernel.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  task            2    0[COMRAM] PTR FTN()void 
  3595 ;;		 -> os_idle_task(1), tarefa_3(1), tarefa_2(1), tarefa_1(1), 
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;  i               1    4[COMRAM] unsigned char 
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      unsigned char 
  3600 ;; Registers used:
  3601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3607 ;;      Params:         2       0       0       0       0       0       0       0       0
  3608 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3609 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3610 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3611 ;;Total ram usage:        5 bytes
  3612 ;; Hardware stack levels used: 1
  3613 ;; This function calls:
  3614 ;;		Nothing
  3615 ;; This function is called by:
  3616 ;;		i2_rr_scheduler
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           	psect	text20
  3621   00113C                     __ptext20:
  3622                           	callstack 0
  3623   00113C                     i2_os_task_pos:
  3624                           	callstack 19
  3625   00113C                     
  3626                           ;kernel.c: 47: uint8_t os_task_pos(f_ptr task);kernel.c: 48: {;kernel.c: 49:     for (ui
      +                          nt8_t i = 0; i < readyQueue.readyQueueSize; i++) {
  3627   00113C  6A05               	clrf	i2os_task_pos@i^0,c
  3628   00113E  EFB9  F008         	goto	i2l1483
  3629   001142                     i2l1475:
  3630                           
  3631                           ;kernel.c: 50:         if (readyQueue.readyQueue[i].task_func == task) return i;
  3632   001142  5005               	movf	i2os_task_pos@i^0,w,c
  3633   001144  0D6A               	mullw	106
  3634   001146  0ED4               	movlw	low (_readyQueue+1)
  3635   001148  24F3               	addwf	243,w,c
  3636   00114A  6ED9               	movwf	fsr2l,c
  3637   00114C  0E00               	movlw	high (_readyQueue+1)
  3638   00114E  20F4               	addwfc	prodh,w,c
  3639   001150  6EDA               	movwf	fsr2h,c
  3640   001152  5001               	movf	i2os_task_pos@task^0,w,c
  3641   001154  18DE               	xorwf	postinc2,w,c
  3642   001156  E107               	bnz	i2u73_41
  3643   001158  5002               	movf	(i2os_task_pos@task+1)^0,w,c
  3644   00115A  18DE               	xorwf	postinc2,w,c
  3645   00115C  A4D8               	btfss	status,2,c
  3646   00115E  EFB3  F008         	goto	i2u73_41
  3647   001162  EFB5  F008         	goto	i2u73_40
  3648   001166                     i2u73_41:
  3649   001166  EFB8  F008         	goto	i2l1481
  3650   00116A                     i2u73_40:
  3651   00116A  5005               	movf	i2os_task_pos@i^0,w,c
  3652   00116C  EFC5  F008         	goto	i2l58
  3653   001170                     i2l1481:
  3654                           
  3655                           ;kernel.c: 51:     }
  3656   001170  2A05               	incf	i2os_task_pos@i^0,f,c
  3657   001172                     i2l1483:
  3658   001172  EE22  F0E5         	lfsr	2,_readyQueue+530
  3659   001176  50DE               	movf	postinc2,w,c
  3660   001178  5C05               	subwf	i2os_task_pos@i^0,w,c
  3661   00117A  A0D8               	btfss	status,0,c
  3662   00117C  EFC2  F008         	goto	i2u74_41
  3663   001180  EFC4  F008         	goto	i2u74_40
  3664   001184                     i2u74_41:
  3665   001184  EFA1  F008         	goto	i2l1475
  3666   001188                     i2u74_40:
  3667   001188                     
  3668                           ;kernel.c: 53:     return 0;
  3669   001188  0E00               	movlw	0
  3670   00118A                     i2l58:
  3671   00118A  0012               	return		;funcret
  3672   00118C                     __end_ofi2_os_task_pos:
  3673                           	callstack 0
  3674                           
  3675 ;; *************** function i2___awmod *****************
  3676 ;; Defined at:
  3677 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  dividend        2    0[COMRAM] int 
  3680 ;;  divisor         2    2[COMRAM] int 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  sign            1    5[COMRAM] unsigned char 
  3683 ;;  counter         1    4[COMRAM] unsigned char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  2    0[COMRAM] int 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3693 ;;      Params:         4       0       0       0       0       0       0       0       0
  3694 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3696 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3697 ;;Total ram usage:        6 bytes
  3698 ;; Hardware stack levels used: 1
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		i2_rr_scheduler
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           	psect	text21
  3707   000FB6                     __ptext21:
  3708                           	callstack 0
  3709   000FB6                     i2___awmod:
  3710                           	callstack 19
  3711   000FB6  6A06               	clrf	i2___awmod@sign^0,c
  3712   000FB8  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  3713   000FBA  EFE3  F007         	goto	i2u75_40
  3714   000FBE  EFE1  F007         	goto	i2u75_41
  3715   000FC2                     i2u75_41:
  3716   000FC2  EFE9  F007         	goto	i2l1497
  3717   000FC6                     i2u75_40:
  3718   000FC6  6C01               	negf	i2___awmod@dividend^0,c
  3719   000FC8  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  3720   000FCA  B0D8               	btfsc	status,0,c
  3721   000FCC  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  3722   000FCE  0E01               	movlw	1
  3723   000FD0  6E06               	movwf	i2___awmod@sign^0,c
  3724   000FD2                     i2l1497:
  3725   000FD2  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  3726   000FD4  EFF0  F007         	goto	i2u76_40
  3727   000FD8  EFEE  F007         	goto	i2u76_41
  3728   000FDC                     i2u76_41:
  3729   000FDC  EFF4  F007         	goto	i2l1501
  3730   000FE0                     i2u76_40:
  3731   000FE0  6C03               	negf	i2___awmod@divisor^0,c
  3732   000FE2  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  3733   000FE4  B0D8               	btfsc	status,0,c
  3734   000FE6  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  3735   000FE8                     i2l1501:
  3736   000FE8  5003               	movf	i2___awmod@divisor^0,w,c
  3737   000FEA  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  3738   000FEC  B4D8               	btfsc	status,2,c
  3739   000FEE  EFFB  F007         	goto	i2u77_41
  3740   000FF2  EFFD  F007         	goto	i2u77_40
  3741   000FF6                     i2u77_41:
  3742   000FF6  EF21  F008         	goto	i2l1517
  3743   000FFA                     i2u77_40:
  3744   000FFA  0E01               	movlw	1
  3745   000FFC  6E05               	movwf	i2___awmod@counter^0,c
  3746   000FFE  EF05  F008         	goto	i2l1507
  3747   001002                     i2l1505:
  3748   001002  90D8               	bcf	status,0,c
  3749   001004  3603               	rlcf	i2___awmod@divisor^0,f,c
  3750   001006  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  3751   001008  2A05               	incf	i2___awmod@counter^0,f,c
  3752   00100A                     i2l1507:
  3753   00100A  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  3754   00100C  EF0A  F008         	goto	i2u78_41
  3755   001010  EF0C  F008         	goto	i2u78_40
  3756   001014                     i2u78_41:
  3757   001014  EF01  F008         	goto	i2l1505
  3758   001018                     i2u78_40:
  3759   001018                     i2l1509:
  3760   001018  5003               	movf	i2___awmod@divisor^0,w,c
  3761   00101A  5C01               	subwf	i2___awmod@dividend^0,w,c
  3762   00101C  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  3763   00101E  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  3764   001020  A0D8               	btfss	status,0,c
  3765   001022  EF15  F008         	goto	i2u79_41
  3766   001026  EF17  F008         	goto	i2u79_40
  3767   00102A                     i2u79_41:
  3768   00102A  EF1B  F008         	goto	i2l1513
  3769   00102E                     i2u79_40:
  3770   00102E  5003               	movf	i2___awmod@divisor^0,w,c
  3771   001030  5E01               	subwf	i2___awmod@dividend^0,f,c
  3772   001032  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  3773   001034  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  3774   001036                     i2l1513:
  3775   001036  90D8               	bcf	status,0,c
  3776   001038  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  3777   00103A  3203               	rrcf	i2___awmod@divisor^0,f,c
  3778   00103C  2E05               	decfsz	i2___awmod@counter^0,f,c
  3779   00103E  EF0C  F008         	goto	i2l1509
  3780   001042                     i2l1517:
  3781   001042  5006               	movf	i2___awmod@sign^0,w,c
  3782   001044  B4D8               	btfsc	status,2,c
  3783   001046  EF27  F008         	goto	i2u80_41
  3784   00104A  EF29  F008         	goto	i2u80_40
  3785   00104E                     i2u80_41:
  3786   00104E  EF2D  F008         	goto	i2l1521
  3787   001052                     i2u80_40:
  3788   001052  6C01               	negf	i2___awmod@dividend^0,c
  3789   001054  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  3790   001056  B0D8               	btfsc	status,0,c
  3791   001058  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  3792   00105A                     i2l1521:
  3793   00105A  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  3794   00105E  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  3795   001062  0012               	return		;funcret
  3796   001064                     __end_ofi2___awmod:
  3797                           	callstack 0
  3798                           
  3799 ;; *************** function _os_task_time_decrease *****************
  3800 ;; Defined at:
  3801 ;;		line 56 in file "kernel.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;		None
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;  i               1    1[COMRAM] unsigned char 
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1    wreg      void 
  3808 ;; Registers used:
  3809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3815 ;;      Params:         0       0       0       0       0       0       0       0       0
  3816 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3817 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3818 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3819 ;;Total ram usage:        2 bytes
  3820 ;; Hardware stack levels used: 1
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_ISR_TIMER_0
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text22
  3829   001064                     __ptext22:
  3830                           	callstack 0
  3831   001064                     _os_task_time_decrease:
  3832                           	callstack 21
  3833   001064                     
  3834                           ;kernel.c: 58:     for (uint8_t i = 1; i < readyQueue.readyQueueSize; i++) {
  3835   001064  0E01               	movlw	1
  3836   001066  6E02               	movwf	os_task_time_decrease@i^0,c
  3837   001068  EF6A  F008         	goto	i2l1167
  3838   00106C                     i2l1159:
  3839                           
  3840                           ;kernel.c: 59:         if (readyQueue.readyQueue[i].task_state == WAITING) {
  3841   00106C  5002               	movf	os_task_time_decrease@i^0,w,c
  3842   00106E  0D6A               	mullw	106
  3843   001070  0ED6               	movlw	low (_readyQueue+3)
  3844   001072  24F3               	addwf	243,w,c
  3845   001074  6ED9               	movwf	fsr2l,c
  3846   001076  0E00               	movlw	high (_readyQueue+3)
  3847   001078  20F4               	addwfc	prodh,w,c
  3848   00107A  6EDA               	movwf	fsr2h,c
  3849   00107C  0E02               	movlw	2
  3850   00107E  18DE               	xorwf	postinc2,w,c
  3851   001080  A4D8               	btfss	status,2,c
  3852   001082  EF45  F008         	goto	i2u26_41
  3853   001086  EF47  F008         	goto	i2u26_40
  3854   00108A                     i2u26_41:
  3855   00108A  EF69  F008         	goto	i2l1165
  3856   00108E                     i2u26_40:
  3857   00108E                     
  3858                           ;kernel.c: 60:             readyQueue.readyQueue[i].task_time_to_waiting--;
  3859   00108E  5002               	movf	os_task_time_decrease@i^0,w,c
  3860   001090  0D6A               	mullw	106
  3861   001092  0ED8               	movlw	low (_readyQueue+5)
  3862   001094  24F3               	addwf	243,w,c
  3863   001096  6ED9               	movwf	fsr2l,c
  3864   001098  0E00               	movlw	high (_readyQueue+5)
  3865   00109A  20F4               	addwfc	prodh,w,c
  3866   00109C  6EDA               	movwf	fsr2h,c
  3867   00109E  06DF               	decf	indf2,f,c
  3868                           
  3869                           ;kernel.c: 61:             if (readyQueue.readyQueue[i].task_time_to_waiting == 0) {
  3870   0010A0  5002               	movf	os_task_time_decrease@i^0,w,c
  3871   0010A2  0D6A               	mullw	106
  3872   0010A4  0ED8               	movlw	low (_readyQueue+5)
  3873   0010A6  24F3               	addwf	243,w,c
  3874   0010A8  6ED9               	movwf	fsr2l,c
  3875   0010AA  0E00               	movlw	high (_readyQueue+5)
  3876   0010AC  20F4               	addwfc	prodh,w,c
  3877   0010AE  6EDA               	movwf	fsr2h,c
  3878   0010B0  50DF               	movf	indf2,w,c
  3879   0010B2  A4D8               	btfss	status,2,c
  3880   0010B4  EF5E  F008         	goto	i2u27_41
  3881   0010B8  EF60  F008         	goto	i2u27_40
  3882   0010BC                     i2u27_41:
  3883   0010BC  EF69  F008         	goto	i2l1165
  3884   0010C0                     i2u27_40:
  3885   0010C0                     
  3886                           ;kernel.c: 63:                 readyQueue.readyQueue[i].task_state = READY;
  3887   0010C0  5002               	movf	os_task_time_decrease@i^0,w,c
  3888   0010C2  0D6A               	mullw	106
  3889   0010C4  0ED6               	movlw	low (_readyQueue+3)
  3890   0010C6  24F3               	addwf	243,w,c
  3891   0010C8  6ED9               	movwf	fsr2l,c
  3892   0010CA  0E00               	movlw	high (_readyQueue+3)
  3893   0010CC  20F4               	addwfc	prodh,w,c
  3894   0010CE  6EDA               	movwf	fsr2h,c
  3895   0010D0  6ADF               	clrf	indf2,c
  3896   0010D2                     i2l1165:
  3897                           
  3898                           ;kernel.c: 66:     }
  3899   0010D2  2A02               	incf	os_task_time_decrease@i^0,f,c
  3900   0010D4                     i2l1167:
  3901   0010D4  EE22  F0E5         	lfsr	2,_readyQueue+530
  3902   0010D8  50DE               	movf	postinc2,w,c
  3903   0010DA  5C02               	subwf	os_task_time_decrease@i^0,w,c
  3904   0010DC  A0D8               	btfss	status,0,c
  3905   0010DE  EF73  F008         	goto	i2u28_41
  3906   0010E2  EF75  F008         	goto	i2u28_40
  3907   0010E6                     i2u28_41:
  3908   0010E6  EF36  F008         	goto	i2l1159
  3909   0010EA                     i2u28_40:
  3910   0010EA  0012               	return		;funcret
  3911   0010EC                     __end_of_os_task_time_decrease:
  3912                           	callstack 0
  3913                           
  3914                           	psect	smallconst
  3915   000800                     __psmallconst:
  3916                           	callstack 0
  3917   000800  00                 	db	0
  3918   000801  00                 	db	0	; dummy byte at the end
  3919   000800                     __smallconst    set	__psmallconst
  3920   000800                     __mediumconst   set	__psmallconst
  3921   000000                     __activetblptr  equ	0
  3922                           
  3923                           	psect	rparam
  3924   000001                     ___rparam_used  equ	1
  3925   000000                     ___param_bank   equ	0
  3926   000000                     __Lparam        equ	__Lrparam
  3927   000000                     __Hparam        equ	__Hrparam
  3928                           
  3929                           	psect	temp
  3930   00003A                     btemp:
  3931                           	callstack 0
  3932   00003A                     	ds	1
  3933   00003A                     int$flags       set	btemp
  3934   00003B                     wtemp8          set	btemp+1
  3935   00003B                     ttemp5          set	btemp+1
  3936   00003E                     ttemp6          set	btemp+4
  3937   000042                     ttemp7          set	btemp+8
  3938                           tosu	equ	0xFFF
  3939                           tosh	equ	0xFFE
  3940                           tosl	equ	0xFFD
  3941                           stkptr	equ	0xFFC
  3942                           pclatu	equ	0xFFB
  3943                           pclath	equ	0xFFA
  3944                           pcl	equ	0xFF9
  3945                           tblptru	equ	0xFF8
  3946                           tblptrh	equ	0xFF7
  3947                           tblptrl	equ	0xFF6
  3948                           tablat	equ	0xFF5
  3949                           prodh	equ	0xFF4
  3950                           prodl	equ	0xFF3
  3951                           indf0	equ	0xFEF
  3952                           postinc0	equ	0xFEE
  3953                           postdec0	equ	0xFED
  3954                           preinc0	equ	0xFEC
  3955                           plusw0	equ	0xFEB
  3956                           fsr0h	equ	0xFEA
  3957                           fsr0l	equ	0xFE9
  3958                           wreg	equ	0xFE8
  3959                           indf1	equ	0xFE7
  3960                           postinc1	equ	0xFE6
  3961                           postdec1	equ	0xFE5
  3962                           preinc1	equ	0xFE4
  3963                           plusw1	equ	0xFE3
  3964                           fsr1h	equ	0xFE2
  3965                           fsr1l	equ	0xFE1
  3966                           bsr	equ	0xFE0
  3967                           indf2	equ	0xFDF
  3968                           postinc2	equ	0xFDE
  3969                           postdec2	equ	0xFDD
  3970                           preinc2	equ	0xFDC
  3971                           plusw2	equ	0xFDB
  3972                           fsr2h	equ	0xFDA
  3973                           fsr2l	equ	0xFD9
  3974                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         547
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      57
    BANK0           160    115     115
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    new_task$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    os_create_task@task_f	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    os_task_pos@task	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    ?_priority_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    readyQueue$readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    readyQueue$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), NULL(NULL[0]), 

    readyQueue$taskRunning$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    ?_rr_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    ?_rr_scheduler$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    S346semaphore$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    S63tcb$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    S74f_aptos$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    sem_init@s	PTR struct semaphore size(1) Largest target is 14
		 -> semaforo_teste(COMRAM[14]), 

    sem_init@s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    sem_post@s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    sem_post@s$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    sem_wait@s	PTR struct semaphore size(1) Largest target is 14
		 -> semaforo_teste(COMRAM[14]), 

    sem_wait@s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    sem_wait@s$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    semaforo_teste$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    semaforo_teste$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    sp__priority_scheduler	PTR struct tcb size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__priority_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    sp__rr_scheduler	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _tarefa_1 in COMRAM

    _tarefa_1->_sem_wait
    _scheduler->_rr_scheduler
    _rr_scheduler->___awmod

Critical Paths under _tarefa_2 in COMRAM

    None.

Critical Paths under _tarefa_3 in COMRAM

    None.

Critical Paths under _tarefa_1 in COMRAM

    _tarefa_1->_sem_wait
    _scheduler->_rr_scheduler
    _rr_scheduler->___awmod

Critical Paths under _tarefa_2 in COMRAM

    None.

Critical Paths under _tarefa_3 in COMRAM

    None.

Critical Paths under _ISR_TIMER_0 in COMRAM

    i2_scheduler->i2_rr_scheduler
    i2_rr_scheduler->i2___awmod

Critical Paths under _main in BANK0

    _main->_os_create_task
    _config_app->_sem_init
    _os_config->_os_create_task

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _tarefa_1 in BANK0

    None.

Critical Paths under _tarefa_2 in BANK0

    None.

Critical Paths under _tarefa_3 in BANK0

    None.

Critical Paths under _tarefa_1 in BANK0

    None.

Critical Paths under _tarefa_2 in BANK0

    None.

Critical Paths under _tarefa_3 in BANK0

    None.

Critical Paths under _ISR_TIMER_0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _tarefa_1 in BANK1

    None.

Critical Paths under _tarefa_2 in BANK1

    None.

Critical Paths under _tarefa_3 in BANK1

    None.

Critical Paths under _tarefa_1 in BANK1

    None.

Critical Paths under _tarefa_2 in BANK1

    None.

Critical Paths under _tarefa_3 in BANK1

    None.

Critical Paths under _ISR_TIMER_0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _tarefa_1 in BANK2

    None.

Critical Paths under _tarefa_2 in BANK2

    None.

Critical Paths under _tarefa_3 in BANK2

    None.

Critical Paths under _tarefa_1 in BANK2

    None.

Critical Paths under _tarefa_2 in BANK2

    None.

Critical Paths under _tarefa_3 in BANK2

    None.

Critical Paths under _ISR_TIMER_0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _tarefa_1 in BANK3

    None.

Critical Paths under _tarefa_2 in BANK3

    None.

Critical Paths under _tarefa_3 in BANK3

    None.

Critical Paths under _tarefa_1 in BANK3

    None.

Critical Paths under _tarefa_2 in BANK3

    None.

Critical Paths under _tarefa_3 in BANK3

    None.

Critical Paths under _ISR_TIMER_0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _tarefa_1 in BANK4

    None.

Critical Paths under _tarefa_2 in BANK4

    None.

Critical Paths under _tarefa_3 in BANK4

    None.

Critical Paths under _tarefa_1 in BANK4

    None.

Critical Paths under _tarefa_2 in BANK4

    None.

Critical Paths under _tarefa_3 in BANK4

    None.

Critical Paths under _ISR_TIMER_0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _tarefa_1 in BANK5

    None.

Critical Paths under _tarefa_2 in BANK5

    None.

Critical Paths under _tarefa_3 in BANK5

    None.

Critical Paths under _tarefa_1 in BANK5

    None.

Critical Paths under _tarefa_2 in BANK5

    None.

Critical Paths under _tarefa_3 in BANK5

    None.

Critical Paths under _ISR_TIMER_0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _tarefa_1 in BANK6

    None.

Critical Paths under _tarefa_2 in BANK6

    None.

Critical Paths under _tarefa_3 in BANK6

    None.

Critical Paths under _tarefa_1 in BANK6

    None.

Critical Paths under _tarefa_2 in BANK6

    None.

Critical Paths under _tarefa_3 in BANK6

    None.

Critical Paths under _ISR_TIMER_0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _tarefa_1 in BANK7

    None.

Critical Paths under _tarefa_2 in BANK7

    None.

Critical Paths under _tarefa_3 in BANK7

    None.

Critical Paths under _tarefa_1 in BANK7

    None.

Critical Paths under _tarefa_2 in BANK7

    None.

Critical Paths under _tarefa_3 in BANK7

    None.

Critical Paths under _ISR_TIMER_0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     634
                          _os_config
                     _os_create_task
                           _os_start
 ---------------------------------------------------------------------------------
 (1) _os_start                                             0     0      0      90
                    _conf_interrupts
                       _conf_timer_0
                         _config_app
 ---------------------------------------------------------------------------------
 (2) _config_app                                           0     0      0      90
                           _sem_init
 ---------------------------------------------------------------------------------
 (3) _sem_init                                             4     2      2      90
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _conf_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _os_config                                            0     0      0     272
                     _os_create_task
 ---------------------------------------------------------------------------------
 (1) _os_create_task                                     111   108      3     272
                                              4 BANK0    111   108      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _os_idle_task                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _os_idle_task                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tarefa_1                                             1     1      0     964
                                             42 COMRAM     1     1      0
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             8     7      1     964
                                             34 COMRAM     8     7      1
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (6) _scheduler                                            0     0      0     529
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (7) _rr_scheduler                                         6     4      2     529
                                             28 COMRAM     6     4      2
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (8) _os_task_pos                                          5     3      2      91
                                             22 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     302
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tarefa_2                                             1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tarefa_3                                             1     1      0       0
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tarefa_1                                             1     1      0     964
                                             42 COMRAM     1     1      0
                           _sem_wait
 ---------------------------------------------------------------------------------
 (5) _sem_wait                                             8     7      1     964
                                             34 COMRAM     8     7      1
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (6) _scheduler                                            0     0      0     529
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (7) _rr_scheduler                                         6     4      2     529
                                             28 COMRAM     6     4      2
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (8) _os_task_pos                                          5     3      2      91
                                             22 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     302
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tarefa_2                                             1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tarefa_3                                             1     1      0       0
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_TIMER_0                                         13    13      0     600
                                             12 COMRAM    13    13      0
              _os_task_time_decrease
                        i2_scheduler
 ---------------------------------------------------------------------------------
 (10) i2_scheduler                                         0     0      0     525
                     i2_rr_scheduler
 ---------------------------------------------------------------------------------
 (11) i2_rr_scheduler                                      6     4      2     525
                                              6 COMRAM     6     4      2
                          i2___awmod
                      i2_os_task_pos
 ---------------------------------------------------------------------------------
 (12) i2_os_task_pos                                       5     3      2      91
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (12) i2___awmod                                           6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) _os_task_time_decrease                               2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _os_config
     _os_create_task
   _os_create_task
   _os_start
     _conf_interrupts
     _conf_timer_0
     _config_app
       _sem_init

 _os_idle_task (ROOT)

 _os_idle_task (ROOT)

 _tarefa_1 (ROOT)
   _sem_wait
     ___awmod
     _scheduler
       _rr_scheduler
         ___awmod
         _os_task_pos

 _tarefa_2 (ROOT)

 _tarefa_3 (ROOT)

 _tarefa_1 (ROOT)
   _sem_wait
     ___awmod
     _scheduler
       _rr_scheduler
         ___awmod
         _os_task_pos

 _tarefa_2 (ROOT)

 _tarefa_3 (ROOT)

 _ISR_TIMER_0 (ROOT)
   _os_task_time_decrease
   i2_scheduler
     i2_rr_scheduler
       i2___awmod
       i2_os_task_pos

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0     533     26.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160    115     115     71.9%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     43      57     60.6%
BITBIGSFRlh         91      0       0      0.0%
BITBIGSFRlll        35      0       0      0.0%
BITBIGSFRh          23      0       0      0.0%
BITBIGSFRllh         8      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     705      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Sep 17 15:41:13 2025

           __end_ofi2_scheduler 13B8                              l17 121E                              l18 121E  
                            l43 1358                              l46 139A                              l82 138A  
                            l91 1308                              l85 1284                              l97 12B2  
                           l211 1374                             l214 13BA                             l119 11D8  
                           l252 1254                             _BSR 0FE0   __end_of_os_task_time_decrease 10EC  
                           u811 11C6                             _TOS 0FFD                    ___awmod@sign 001C  
                           prod 0FF3                             wreg 0FE8                            l1217 1256  
                          l1219 1258                            l1531 11A0                            l1443 1226  
                          l1541 11AC                            l1533 11A4                            l1525 1190  
                          l1445 123C                            l1543 11CE                            l1535 11A6  
                          l1527 1194                            l1447 1248                            l1537 11A8  
                          l1529 119C                            l1801 137C                            l1635 1284  
                          l1539 11AA                            l1811 1372                            l1803 135A  
                          l1637 12A4                            l1813 1332                            l1805 135E  
                          l1821 1394                            l1815 1344                            l1807 136E  
                          l1823 1398                            l1809 1370                            l1817 138C  
                          l1819 1390                            l1851 121A                            l1853 1308  
                          l1855 12B2                            l1849 11DA                            l1797 13B8  
                          l1799 1376                            i1l58 113A                            i2l58 118A  
                          i2l67 10EA                            _TMR0 0FD6                            _WREG 0FE8  
                          _main 11DA                            fsr1h 0FE2                            fsr2h 0FDA  
                          indf1 0FE7                            indf2 0FDF                            fsr1l 0FE1  
                          fsr2l 0FD9                  ??_conf_timer_0 0064                            btemp 003A  
                          prodh 0FF4                            prodl 0FF3                            start 000E  
                  ___param_bank 0000           __end_ofi2_os_task_pos 118C                  i2os_task_pos@i 0005  
                         ?_main 0001                 __end_of___awmod 0FB6                           i1l520 0FB4  
                         i1l186 13A8                           i1l266 0A26                           i1l179 0E28  
                         i1l269 0AC0                           i2l230 0C96                           i2l233 0D30  
                         i2l520 1062                           i2l186 13B6                           i2l179 0F06  
                         u35_20 1268                           u35_21 1262                           u35_26 126A  
                         u92_20 1294                           u92_21 128E                           u92_26 1296  
                         plusw1 0FE3                           plusw2 0FDB                           ttemp5 003B  
                         ttemp6 003E                           ttemp7 0042                           status 0FD8  
                         wtemp8 003B                     i2_scheduler 13AA                 __initialization 12DE  
                  ?_ISR_TIMER_0 0001                    __end_of_main 1226                  i2_rr_scheduler 0E2A  
                        ??_main 00D3                   __activetblptr 0000                          i1l1401 1122  
                        i1l1411 0F18                          i1l1403 1138                          i1l1421 0F4C  
                        i1l1413 0F20                          i1l1431 0F88                          i1l1423 0F54  
                        i1l1415 0F24                          i1l1407 0F08                          i1l1433 0F8E  
                        i1l1425 0F5C                          i1l1417 0F32                          i1l1409 0F0A  
                        i1l1601 0942                          i1l1427 0F6A                          i1l1435 0F94  
                        i1l1419 0F3A                          i1l1451 0D6A                          i1l1611 099E  
                        i1l1603 0956                          i1l1437 0FA4                          i1l1429 0F80  
                        i1l1461 0DC4                          i1l1453 0D6C                          i1l1621 0A3A  
                        i1l1613 09DC                          i1l1605 0966                          i1l1439 0FAC  
                        i1l1391 10EC                          i1l1455 0D8A                          i1l1623 0A8A  
                        i1l1615 09FE                          i1l1607 097A                          u121_20 1318  
                        u121_21 1312                          i1l1393 10F2                          i1l1457 0DB2  
                        i1l1465 0DD0                          i1l1449 0D4C                          i1l1625 0AAA  
                        i1l1617 0A00                          i1l1609 097E                          i1l1395 111A  
                        i1l1467 0DF0                          i1l1459 0DB4                          i1l1619 0A28  
                        i1l1627 0ABE                          i1l1469 0E18                          i1l1549 139C  
                        u121_26 131A                          i1l1399 1120                          i1l1591 0826  
                        u122_20 12C2                          u122_21 12BC                          i1l1593 084C  
                        i1l1595 0880                          i1l1587 0802                          i1l1597 08A0  
                        i1l1589 0804                          u122_26 12C4                          i1l1599 08F2  
                        i2l1161 108E                          i2l1163 10C0                          i2l1165 10D2  
                        i2l1157 1064                          i2l1501 0FE8                          i2l1159 106C  
                        i2l1167 10D4                          i2l1511 102E                          i2l1503 0FFA  
                        i2l1521 105A                          i2l1513 1036                          i2l1505 1002  
                        i2l1515 103C                          i2l1507 100A                          i2l1509 1018  
                        i2l1517 1042                          i2l1519 1052                          i2l1551 0E2A  
                        i2l1481 1170                          i2l1473 113C                          i2l1561 0E92  
                        i2l1553 0E48                          i2l1491 0FB8                          i2l1475 1142  
                        i2l1483 1172                          i2l1571 0EF6                          i2l1563 0EA2  
                        i2l1555 0E4A                          i2l1493 0FC6                          i2l1485 1188  
                        i2l1477 116A                          i2l1557 0E68                          i2l1629 13AA  
                        i2l1495 0FCE                          i2l1559 0E90                          i2l1567 0EAE  
                        i2l1751 0AEE                          i2l1497 0FD2                          i2l1489 0FB6  
                        i2l1569 0ECE                          i2l1761 0BC8                          i2l1753 0AF2  
                        i2l1499 0FE0                          i2l1771 0C4C                          i2l1763 0BD8  
                        i2l1755 0B12                          i2l1747 0ADC                          i2l1781 0CFA  
                        i2l1773 0C6E                          i2l1757 0B64                          i2l1765 0BEA  
                        i2l1749 0AEC                          i2l1783 0D1A                          i2l1775 0C70  
                        i2l1767 0BEE                          i2l1759 0BB4                          i2l1777 0C98  
                        i2l1769 0C0E                          i2l1785 0D2E                          i2l1779 0CAA  
                        _STATUS 0FD8                          _STKPTR 0FFC                    ?_os_task_pos 0017  
                     ??___awmod 001B          __end_ofi2_rr_scheduler 0F08                          clear_0 12E6  
                        clear_1 12F8                 ___awmod@divisor 0019                          isa$std 0001  
               ___awmod@counter 001B                __end_of_tarefa_1 12B2                __end_of_tarefa_2 1332  
              __end_of_tarefa_3 12DE                __end_of_sem_init 1256                __end_of_sem_wait 0AC2  
          __end_of_conf_timer_0 1376               __end_ofi2___awmod 1064                __end_of_os_start 139C  
                  __mediumconst 0800                  i2___awmod@sign 0006                      __accesstop 0060  
       __end_of__initialization 12FE                   ___rparam_used 0001                  _os_create_task 118C  
                __pcstackCOMRAM 0001                  _semaforo_teste 002C                 ?i2_rr_scheduler 0007  
              os_create_task@id 0068          __end_of_os_create_task 11DA                   ?_os_idle_task 0001  
         _os_task_time_decrease 1064                      _config_app 1376                         i1u61_20 111A  
                       i1u61_21 1116                         i1u62_20 1138                         i1u70_20 0DC4  
                       i1u62_21 1134                         i1u70_21 0DC0                         i1u63_20 0F18  
                       i1u71_20 0DF0                         i1u63_21 0F14                         i1u71_21 0DEC  
                       i1u64_20 0F32                         i1u72_20 0E18                         i1u64_21 0F2E  
                       i1u72_21 0E14                         i1u65_20 0F4C                         i1u65_21 0F48  
                       i1u66_20 0F6A                         i1u90_20 09FE                         i1u66_21 0F66  
                       i1u90_21 09FA                         i2u26_40 108E                         i2u26_41 108A  
                       i1u67_20 0F80                         i1u91_20 0AAA                         i1u67_21 0F7C  
                       i1u91_21 0AA6                         i2u27_40 10C0                         i2u27_41 10BC  
                       i1u68_20 0FA4                         i1u68_21 0FA0                         i2u28_40 10EA  
                       i2u28_41 10E6                         i1u69_20 0DB2                         i1u69_21 0DAE  
                       i1u86_20 0826                         i1u86_21 0822                         i1u87_20 08A0  
                       i1u87_21 089C                         i1u88_20 0966                         i1u88_21 0962  
                       i2u80_40 1052                         i2u80_41 104E                         i1u89_20 099E  
                       i1u89_21 099A                         i2u73_40 116A                         i2u73_41 1166  
                       i2u74_40 1188                         i2u82_40 0E90                         i2u74_41 1184  
                       i2u82_41 0E8C                         i2u75_40 0FC6                         i2u83_40 0EA2  
                       i2u75_41 0FC2                         i2u83_41 0E9E                         i2u76_40 0FE0  
                       i2u84_40 0ECE                         i2u76_41 0FDC                         i2u84_41 0ECA  
                       i2u77_40 0FFA                         i2u85_40 0EF6                         i2u77_41 0FF6  
                       i2u85_41 0EF2                         i2u78_40 1018                         i2u78_41 1014  
                       i2u79_40 102E                         i2u79_41 102A                    ?i2_scheduler 0001  
               ?_os_create_task 0064                       ?_tarefa_1 0001                       ?_tarefa_2 0001  
                     ?_tarefa_3 0001                         __Hparam 0000                       ?_sem_init 0064  
                     ?_sem_wait 0023               ??_conf_interrupts 0064                         __Lparam 0000  
                     ?_os_start 0001                         ___awmod 0F08                    __psmallconst 0800  
                ??_os_idle_task 0001                         __pcinit 12DE                         __ramtop 0800  
                       __ptext0 11DA                         __ptext1 138C                         __ptext2 1376  
                       __ptext3 1226                         __ptext4 135A                         __ptext5 13B8  
                       __ptext6 1332                         __ptext7 118C                         __ptext8 1256  
                       __ptext9 1284                       _T0CONbits 0FD5                      _readyQueue 00D3  
              ___awmod@dividend 0017             os_create_task@prior 0066               __end_of_scheduler 13AA  
   i2rr_scheduler@idle_selected 000B                  __pintcode_body 0AC2            end_of_initialization 12FE  
             __end_of_os_config 135A                         int_func 0AC2                    _conf_timer_0 135A  
        os_create_task@new_task 0069                      ??_tarefa_1 002B                      ??_tarefa_2 0062  
                    ??_tarefa_3 0063                      ??_sem_init 0066                      ??_sem_wait 0024  
                    ??_os_start 0068                         postdec1 0FE5                         postdec2 0FDD  
                 ?_rr_scheduler 001D                         postinc0 0FEE                         postinc1 0FE6  
                       postinc2 0FDE                       _PORTDbits 0F83          ?_os_task_time_decrease 0001  
                   ?_config_app 0001                       _TRISDbits 0F95                       i2___awmod 0FB6  
              ??i2_rr_scheduler 0009                  ??_rr_scheduler 001F                   i2_os_task_pos 113C  
           start_initialization 12DE                      ?i2___awmod 0001            __end_of_os_idle_task 1284  
                ?i2_os_task_pos 0001                     __pbssBIGRAM 00D3    rr_scheduler@pos_task_running 0022  
                   __pbssCOMRAM 002C                   __pcstackBANK0 0060                 _conf_interrupts 13B8  
              ??_os_create_task 0067               i2os_task_pos@task 0001                   ??_ISR_TIMER_0 000D  
                     __pintcode 0008                        ?___awmod 0017                     __smallconst 0800  
          __end_of_rr_scheduler 0E2A                     ??i2___awmod 0005                       _scheduler 139C  
                      _LATDbits 0F8C                       _os_config 1332                 ??i2_os_task_pos 0003  
                      i2u110_40 0BD8                        i2u110_41 0BD4                        i2u111_40 0C0E  
                      i2u111_41 0C0A                        i2u112_40 0C6E                        i2u112_41 0C6A  
                      i2u113_40 0D1A                        i2u113_41 0D16                        i2u108_40 0AEC  
                      i2u108_41 0AE8                        i2u109_40 0B12                        i2u109_41 0B0E  
                 ??_os_task_pos 0019          os_task_time_decrease@i 0002         ??_os_task_time_decrease 0001  
           __end_of_ISR_TIMER_0 0D4C         __end_of_conf_interrupts 13BC                    ??_config_app 0068  
            i2___awmod@dividend 0001                      ?_scheduler 0001                      ?_os_config 0001  
                      __Hrparam 0000                        __Lrparam 0000              __end_of_config_app 138C  
           __end_of_os_task_pos 113C                    _os_idle_task 1256                        __ptext10 0802  
                      __ptext11 139C                        __ptext20 113C                        __ptext12 0D4C  
                      __ptext21 0FB6                        __ptext13 10EC                        __ptext22 1064  
                      __ptext14 0F08                        __ptext15 1308                        __ptext16 12B2  
                      __ptext18 13AA                        __ptext19 0E2A                       sem_init@s 0064  
                     sem_wait@s 0023                        _tarefa_1 1284                        _tarefa_2 1308  
                      _tarefa_3 12B2                        _sem_init 1226                        _sem_wait 0802  
          os_create_task@task_f 0064                        _os_start 138C                        isa$xinst 0000  
                   _ISR_TIMER_0 0008                        int$flags 003A                    os_task_pos@i 001B  
             i2___awmod@divisor 0003               i2___awmod@counter 0005                ?_conf_interrupts 0001  
                    _INTCONbits 0FF2                        intlevel1 0000                        intlevel2 0000  
                 ??i2_scheduler 000D                     ??_scheduler 0023  i2rr_scheduler@pos_task_running 000C  
                   ??_os_config 00D3                     _os_task_pos 10EC                    _rr_scheduler 0D4C  
     rr_scheduler@idle_selected 0021                   ?_conf_timer_0 0001                 os_task_pos@task 0017  
            sem_init@init_value 0065  
