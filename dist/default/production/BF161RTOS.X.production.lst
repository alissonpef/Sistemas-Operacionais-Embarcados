

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Sep 24 10:07:37 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    47   000000                     
    48                           ; Generated 17/01/2025 GMT
    49                           ; 
    50                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4550 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000FE0                     bsr             equ	4064
    83   000FE9                     fsr0            equ	4073
    84   000FEA                     fsr0h           equ	4074
    85   000FE9                     fsr0l           equ	4073
    86   000FE1                     fsr1            equ	4065
    87   000FE2                     fsr1h           equ	4066
    88   000FE1                     fsr1l           equ	4065
    89   000FD9                     fsr2            equ	4057
    90   000FDA                     fsr2h           equ	4058
    91   000FD9                     fsr2l           equ	4057
    92   000FEF                     indf0           equ	4079
    93   000FE7                     indf1           equ	4071
    94   000FDF                     indf2           equ	4063
    95   000FF2                     intcon          equ	4082
    96   000000                     nvmcon          equ	0
    97   000FF9                     pcl             equ	4089
    98   000FFA                     pclath          equ	4090
    99   000FFB                     pclatu          equ	4091
   100   000FEB                     plusw0          equ	4075
   101   000FE3                     plusw1          equ	4067
   102   000FDB                     plusw2          equ	4059
   103   000FED                     postdec0        equ	4077
   104   000FE5                     postdec1        equ	4069
   105   000FDD                     postdec2        equ	4061
   106   000FEE                     postinc0        equ	4078
   107   000FE6                     postinc1        equ	4070
   108   000FDE                     postinc2        equ	4062
   109   000FEC                     preinc0         equ	4076
   110   000FE4                     preinc1         equ	4068
   111   000FDC                     preinc2         equ	4060
   112   000FF3                     prod            equ	4083
   113   000FF4                     prodh           equ	4084
   114   000FF3                     prodl           equ	4083
   115   000FD8                     status          equ	4056
   116   000FF5                     tablat          equ	4085
   117   000FF6                     tblptr          equ	4086
   118   000FF7                     tblptrh         equ	4087
   119   000FF6                     tblptrl         equ	4086
   120   000FF8                     tblptru         equ	4088
   121   000FFD                     tosl            equ	4093
   122   000FE8                     wreg            equ	4072
   123   000F62                     SPPDATA         equ	3938	;# 
   124   000F63                     SPPCFG          equ	3939	;# 
   125   000F64                     SPPEPS          equ	3940	;# 
   126   000F65                     SPPCON          equ	3941	;# 
   127   000F66                     UFRM            equ	3942	;# 
   128   000F66                     UFRML           equ	3942	;# 
   129   000F67                     UFRMH           equ	3943	;# 
   130   000F68                     UIR             equ	3944	;# 
   131   000F69                     UIE             equ	3945	;# 
   132   000F6A                     UEIR            equ	3946	;# 
   133   000F6B                     UEIE            equ	3947	;# 
   134   000F6C                     USTAT           equ	3948	;# 
   135   000F6D                     UCON            equ	3949	;# 
   136   000F6E                     UADDR           equ	3950	;# 
   137   000F6F                     UCFG            equ	3951	;# 
   138   000F70                     UEP0            equ	3952	;# 
   139   000F71                     UEP1            equ	3953	;# 
   140   000F72                     UEP2            equ	3954	;# 
   141   000F73                     UEP3            equ	3955	;# 
   142   000F74                     UEP4            equ	3956	;# 
   143   000F75                     UEP5            equ	3957	;# 
   144   000F76                     UEP6            equ	3958	;# 
   145   000F77                     UEP7            equ	3959	;# 
   146   000F78                     UEP8            equ	3960	;# 
   147   000F79                     UEP9            equ	3961	;# 
   148   000F7A                     UEP10           equ	3962	;# 
   149   000F7B                     UEP11           equ	3963	;# 
   150   000F7C                     UEP12           equ	3964	;# 
   151   000F7D                     UEP13           equ	3965	;# 
   152   000F7E                     UEP14           equ	3966	;# 
   153   000F7F                     UEP15           equ	3967	;# 
   154   000F80                     PORTA           equ	3968	;# 
   155   000F81                     PORTB           equ	3969	;# 
   156   000F82                     PORTC           equ	3970	;# 
   157   000F83                     PORTD           equ	3971	;# 
   158   000F84                     PORTE           equ	3972	;# 
   159   000F89                     LATA            equ	3977	;# 
   160   000F8A                     LATB            equ	3978	;# 
   161   000F8B                     LATC            equ	3979	;# 
   162   000F8C                     LATD            equ	3980	;# 
   163   000F8D                     LATE            equ	3981	;# 
   164   000F92                     TRISA           equ	3986	;# 
   165   000F92                     DDRA            equ	3986	;# 
   166   000F93                     TRISB           equ	3987	;# 
   167   000F93                     DDRB            equ	3987	;# 
   168   000F94                     TRISC           equ	3988	;# 
   169   000F94                     DDRC            equ	3988	;# 
   170   000F95                     TRISD           equ	3989	;# 
   171   000F95                     DDRD            equ	3989	;# 
   172   000F96                     TRISE           equ	3990	;# 
   173   000F96                     DDRE            equ	3990	;# 
   174   000F9B                     OSCTUNE         equ	3995	;# 
   175   000F9D                     PIE1            equ	3997	;# 
   176   000F9E                     PIR1            equ	3998	;# 
   177   000F9F                     IPR1            equ	3999	;# 
   178   000FA0                     PIE2            equ	4000	;# 
   179   000FA1                     PIR2            equ	4001	;# 
   180   000FA2                     IPR2            equ	4002	;# 
   181   000FA6                     EECON1          equ	4006	;# 
   182   000FA7                     EECON2          equ	4007	;# 
   183   000FA8                     EEDATA          equ	4008	;# 
   184   000FA9                     EEADR           equ	4009	;# 
   185   000FAB                     RCSTA           equ	4011	;# 
   186   000FAB                     RCSTA1          equ	4011	;# 
   187   000FAC                     TXSTA           equ	4012	;# 
   188   000FAC                     TXSTA1          equ	4012	;# 
   189   000FAD                     TXREG           equ	4013	;# 
   190   000FAD                     TXREG1          equ	4013	;# 
   191   000FAE                     RCREG           equ	4014	;# 
   192   000FAE                     RCREG1          equ	4014	;# 
   193   000FAF                     SPBRG           equ	4015	;# 
   194   000FAF                     SPBRG1          equ	4015	;# 
   195   000FB0                     SPBRGH          equ	4016	;# 
   196   000FB1                     T3CON           equ	4017	;# 
   197   000FB2                     TMR3            equ	4018	;# 
   198   000FB2                     TMR3L           equ	4018	;# 
   199   000FB3                     TMR3H           equ	4019	;# 
   200   000FB4                     CMCON           equ	4020	;# 
   201   000FB5                     CVRCON          equ	4021	;# 
   202   000FB6                     ECCP1AS         equ	4022	;# 
   203   000FB6                     CCP1AS          equ	4022	;# 
   204   000FB7                     ECCP1DEL        equ	4023	;# 
   205   000FB7                     CCP1DEL         equ	4023	;# 
   206   000FB8                     BAUDCON         equ	4024	;# 
   207   000FB8                     BAUDCTL         equ	4024	;# 
   208   000FBA                     CCP2CON         equ	4026	;# 
   209   000FBB                     CCPR2           equ	4027	;# 
   210   000FBB                     CCPR2L          equ	4027	;# 
   211   000FBC                     CCPR2H          equ	4028	;# 
   212   000FBD                     CCP1CON         equ	4029	;# 
   213   000FBD                     ECCP1CON        equ	4029	;# 
   214   000FBE                     CCPR1           equ	4030	;# 
   215   000FBE                     CCPR1L          equ	4030	;# 
   216   000FBF                     CCPR1H          equ	4031	;# 
   217   000FC0                     ADCON2          equ	4032	;# 
   218   000FC1                     ADCON1          equ	4033	;# 
   219   000FC2                     ADCON0          equ	4034	;# 
   220   000FC3                     ADRES           equ	4035	;# 
   221   000FC3                     ADRESL          equ	4035	;# 
   222   000FC4                     ADRESH          equ	4036	;# 
   223   000FC5                     SSPCON2         equ	4037	;# 
   224   000FC6                     SSPCON1         equ	4038	;# 
   225   000FC7                     SSPSTAT         equ	4039	;# 
   226   000FC8                     SSPADD          equ	4040	;# 
   227   000FC9                     SSPBUF          equ	4041	;# 
   228   000FCA                     T2CON           equ	4042	;# 
   229   000FCB                     PR2             equ	4043	;# 
   230   000FCB                     MEMCON          equ	4043	;# 
   231   000FCC                     TMR2            equ	4044	;# 
   232   000FCD                     T1CON           equ	4045	;# 
   233   000FCE                     TMR1            equ	4046	;# 
   234   000FCE                     TMR1L           equ	4046	;# 
   235   000FCF                     TMR1H           equ	4047	;# 
   236   000FD0                     RCON            equ	4048	;# 
   237   000FD1                     WDTCON          equ	4049	;# 
   238   000FD2                     HLVDCON         equ	4050	;# 
   239   000FD2                     LVDCON          equ	4050	;# 
   240   000FD3                     OSCCON          equ	4051	;# 
   241   000FD5                     T0CON           equ	4053	;# 
   242   000FD6                     TMR0            equ	4054	;# 
   243   000FD6                     TMR0L           equ	4054	;# 
   244   000FD7                     TMR0H           equ	4055	;# 
   245   000FD8                     STATUS          equ	4056	;# 
   246   000FD9                     FSR2            equ	4057	;# 
   247   000FD9                     FSR2L           equ	4057	;# 
   248   000FDA                     FSR2H           equ	4058	;# 
   249   000FDB                     PLUSW2          equ	4059	;# 
   250   000FDC                     PREINC2         equ	4060	;# 
   251   000FDD                     POSTDEC2        equ	4061	;# 
   252   000FDE                     POSTINC2        equ	4062	;# 
   253   000FDF                     INDF2           equ	4063	;# 
   254   000FE0                     BSR             equ	4064	;# 
   255   000FE1                     FSR1            equ	4065	;# 
   256   000FE1                     FSR1L           equ	4065	;# 
   257   000FE2                     FSR1H           equ	4066	;# 
   258   000FE3                     PLUSW1          equ	4067	;# 
   259   000FE4                     PREINC1         equ	4068	;# 
   260   000FE5                     POSTDEC1        equ	4069	;# 
   261   000FE6                     POSTINC1        equ	4070	;# 
   262   000FE7                     INDF1           equ	4071	;# 
   263   000FE8                     WREG            equ	4072	;# 
   264   000FE9                     FSR0            equ	4073	;# 
   265   000FE9                     FSR0L           equ	4073	;# 
   266   000FEA                     FSR0H           equ	4074	;# 
   267   000FEB                     PLUSW0          equ	4075	;# 
   268   000FEC                     PREINC0         equ	4076	;# 
   269   000FED                     POSTDEC0        equ	4077	;# 
   270   000FEE                     POSTINC0        equ	4078	;# 
   271   000FEF                     INDF0           equ	4079	;# 
   272   000FF0                     INTCON3         equ	4080	;# 
   273   000FF1                     INTCON2         equ	4081	;# 
   274   000FF2                     INTCON          equ	4082	;# 
   275   000FF3                     PROD            equ	4083	;# 
   276   000FF3                     PRODL           equ	4083	;# 
   277   000FF4                     PRODH           equ	4084	;# 
   278   000FF5                     TABLAT          equ	4085	;# 
   279   000FF6                     TBLPTR          equ	4086	;# 
   280   000FF6                     TBLPTRL         equ	4086	;# 
   281   000FF7                     TBLPTRH         equ	4087	;# 
   282   000FF8                     TBLPTRU         equ	4088	;# 
   283   000FF9                     PCLAT           equ	4089	;# 
   284   000FF9                     PC              equ	4089	;# 
   285   000FF9                     PCL             equ	4089	;# 
   286   000FFA                     PCLATH          equ	4090	;# 
   287   000FFB                     PCLATU          equ	4091	;# 
   288   000FFC                     STKPTR          equ	4092	;# 
   289   000FFD                     TOS             equ	4093	;# 
   290   000FFD                     TOSL            equ	4093	;# 
   291   000FFE                     TOSH            equ	4094	;# 
   292   000FFF                     TOSU            equ	4095	;# 
   293   000F62                     SPPDATA         equ	3938	;# 
   294   000F63                     SPPCFG          equ	3939	;# 
   295   000F64                     SPPEPS          equ	3940	;# 
   296   000F65                     SPPCON          equ	3941	;# 
   297   000F66                     UFRM            equ	3942	;# 
   298   000F66                     UFRML           equ	3942	;# 
   299   000F67                     UFRMH           equ	3943	;# 
   300   000F68                     UIR             equ	3944	;# 
   301   000F69                     UIE             equ	3945	;# 
   302   000F6A                     UEIR            equ	3946	;# 
   303   000F6B                     UEIE            equ	3947	;# 
   304   000F6C                     USTAT           equ	3948	;# 
   305   000F6D                     UCON            equ	3949	;# 
   306   000F6E                     UADDR           equ	3950	;# 
   307   000F6F                     UCFG            equ	3951	;# 
   308   000F70                     UEP0            equ	3952	;# 
   309   000F71                     UEP1            equ	3953	;# 
   310   000F72                     UEP2            equ	3954	;# 
   311   000F73                     UEP3            equ	3955	;# 
   312   000F74                     UEP4            equ	3956	;# 
   313   000F75                     UEP5            equ	3957	;# 
   314   000F76                     UEP6            equ	3958	;# 
   315   000F77                     UEP7            equ	3959	;# 
   316   000F78                     UEP8            equ	3960	;# 
   317   000F79                     UEP9            equ	3961	;# 
   318   000F7A                     UEP10           equ	3962	;# 
   319   000F7B                     UEP11           equ	3963	;# 
   320   000F7C                     UEP12           equ	3964	;# 
   321   000F7D                     UEP13           equ	3965	;# 
   322   000F7E                     UEP14           equ	3966	;# 
   323   000F7F                     UEP15           equ	3967	;# 
   324   000F80                     PORTA           equ	3968	;# 
   325   000F81                     PORTB           equ	3969	;# 
   326   000F82                     PORTC           equ	3970	;# 
   327   000F83                     PORTD           equ	3971	;# 
   328   000F84                     PORTE           equ	3972	;# 
   329   000F89                     LATA            equ	3977	;# 
   330   000F8A                     LATB            equ	3978	;# 
   331   000F8B                     LATC            equ	3979	;# 
   332   000F8C                     LATD            equ	3980	;# 
   333   000F8D                     LATE            equ	3981	;# 
   334   000F92                     TRISA           equ	3986	;# 
   335   000F92                     DDRA            equ	3986	;# 
   336   000F93                     TRISB           equ	3987	;# 
   337   000F93                     DDRB            equ	3987	;# 
   338   000F94                     TRISC           equ	3988	;# 
   339   000F94                     DDRC            equ	3988	;# 
   340   000F95                     TRISD           equ	3989	;# 
   341   000F95                     DDRD            equ	3989	;# 
   342   000F96                     TRISE           equ	3990	;# 
   343   000F96                     DDRE            equ	3990	;# 
   344   000F9B                     OSCTUNE         equ	3995	;# 
   345   000F9D                     PIE1            equ	3997	;# 
   346   000F9E                     PIR1            equ	3998	;# 
   347   000F9F                     IPR1            equ	3999	;# 
   348   000FA0                     PIE2            equ	4000	;# 
   349   000FA1                     PIR2            equ	4001	;# 
   350   000FA2                     IPR2            equ	4002	;# 
   351   000FA6                     EECON1          equ	4006	;# 
   352   000FA7                     EECON2          equ	4007	;# 
   353   000FA8                     EEDATA          equ	4008	;# 
   354   000FA9                     EEADR           equ	4009	;# 
   355   000FAB                     RCSTA           equ	4011	;# 
   356   000FAB                     RCSTA1          equ	4011	;# 
   357   000FAC                     TXSTA           equ	4012	;# 
   358   000FAC                     TXSTA1          equ	4012	;# 
   359   000FAD                     TXREG           equ	4013	;# 
   360   000FAD                     TXREG1          equ	4013	;# 
   361   000FAE                     RCREG           equ	4014	;# 
   362   000FAE                     RCREG1          equ	4014	;# 
   363   000FAF                     SPBRG           equ	4015	;# 
   364   000FAF                     SPBRG1          equ	4015	;# 
   365   000FB0                     SPBRGH          equ	4016	;# 
   366   000FB1                     T3CON           equ	4017	;# 
   367   000FB2                     TMR3            equ	4018	;# 
   368   000FB2                     TMR3L           equ	4018	;# 
   369   000FB3                     TMR3H           equ	4019	;# 
   370   000FB4                     CMCON           equ	4020	;# 
   371   000FB5                     CVRCON          equ	4021	;# 
   372   000FB6                     ECCP1AS         equ	4022	;# 
   373   000FB6                     CCP1AS          equ	4022	;# 
   374   000FB7                     ECCP1DEL        equ	4023	;# 
   375   000FB7                     CCP1DEL         equ	4023	;# 
   376   000FB8                     BAUDCON         equ	4024	;# 
   377   000FB8                     BAUDCTL         equ	4024	;# 
   378   000FBA                     CCP2CON         equ	4026	;# 
   379   000FBB                     CCPR2           equ	4027	;# 
   380   000FBB                     CCPR2L          equ	4027	;# 
   381   000FBC                     CCPR2H          equ	4028	;# 
   382   000FBD                     CCP1CON         equ	4029	;# 
   383   000FBD                     ECCP1CON        equ	4029	;# 
   384   000FBE                     CCPR1           equ	4030	;# 
   385   000FBE                     CCPR1L          equ	4030	;# 
   386   000FBF                     CCPR1H          equ	4031	;# 
   387   000FC0                     ADCON2          equ	4032	;# 
   388   000FC1                     ADCON1          equ	4033	;# 
   389   000FC2                     ADCON0          equ	4034	;# 
   390   000FC3                     ADRES           equ	4035	;# 
   391   000FC3                     ADRESL          equ	4035	;# 
   392   000FC4                     ADRESH          equ	4036	;# 
   393   000FC5                     SSPCON2         equ	4037	;# 
   394   000FC6                     SSPCON1         equ	4038	;# 
   395   000FC7                     SSPSTAT         equ	4039	;# 
   396   000FC8                     SSPADD          equ	4040	;# 
   397   000FC9                     SSPBUF          equ	4041	;# 
   398   000FCA                     T2CON           equ	4042	;# 
   399   000FCB                     PR2             equ	4043	;# 
   400   000FCB                     MEMCON          equ	4043	;# 
   401   000FCC                     TMR2            equ	4044	;# 
   402   000FCD                     T1CON           equ	4045	;# 
   403   000FCE                     TMR1            equ	4046	;# 
   404   000FCE                     TMR1L           equ	4046	;# 
   405   000FCF                     TMR1H           equ	4047	;# 
   406   000FD0                     RCON            equ	4048	;# 
   407   000FD1                     WDTCON          equ	4049	;# 
   408   000FD2                     HLVDCON         equ	4050	;# 
   409   000FD2                     LVDCON          equ	4050	;# 
   410   000FD3                     OSCCON          equ	4051	;# 
   411   000FD5                     T0CON           equ	4053	;# 
   412   000FD6                     TMR0            equ	4054	;# 
   413   000FD6                     TMR0L           equ	4054	;# 
   414   000FD7                     TMR0H           equ	4055	;# 
   415   000FD8                     STATUS          equ	4056	;# 
   416   000FD9                     FSR2            equ	4057	;# 
   417   000FD9                     FSR2L           equ	4057	;# 
   418   000FDA                     FSR2H           equ	4058	;# 
   419   000FDB                     PLUSW2          equ	4059	;# 
   420   000FDC                     PREINC2         equ	4060	;# 
   421   000FDD                     POSTDEC2        equ	4061	;# 
   422   000FDE                     POSTINC2        equ	4062	;# 
   423   000FDF                     INDF2           equ	4063	;# 
   424   000FE0                     BSR             equ	4064	;# 
   425   000FE1                     FSR1            equ	4065	;# 
   426   000FE1                     FSR1L           equ	4065	;# 
   427   000FE2                     FSR1H           equ	4066	;# 
   428   000FE3                     PLUSW1          equ	4067	;# 
   429   000FE4                     PREINC1         equ	4068	;# 
   430   000FE5                     POSTDEC1        equ	4069	;# 
   431   000FE6                     POSTINC1        equ	4070	;# 
   432   000FE7                     INDF1           equ	4071	;# 
   433   000FE8                     WREG            equ	4072	;# 
   434   000FE9                     FSR0            equ	4073	;# 
   435   000FE9                     FSR0L           equ	4073	;# 
   436   000FEA                     FSR0H           equ	4074	;# 
   437   000FEB                     PLUSW0          equ	4075	;# 
   438   000FEC                     PREINC0         equ	4076	;# 
   439   000FED                     POSTDEC0        equ	4077	;# 
   440   000FEE                     POSTINC0        equ	4078	;# 
   441   000FEF                     INDF0           equ	4079	;# 
   442   000FF0                     INTCON3         equ	4080	;# 
   443   000FF1                     INTCON2         equ	4081	;# 
   444   000FF2                     INTCON          equ	4082	;# 
   445   000FF3                     PROD            equ	4083	;# 
   446   000FF3                     PRODL           equ	4083	;# 
   447   000FF4                     PRODH           equ	4084	;# 
   448   000FF5                     TABLAT          equ	4085	;# 
   449   000FF6                     TBLPTR          equ	4086	;# 
   450   000FF6                     TBLPTRL         equ	4086	;# 
   451   000FF7                     TBLPTRH         equ	4087	;# 
   452   000FF8                     TBLPTRU         equ	4088	;# 
   453   000FF9                     PCLAT           equ	4089	;# 
   454   000FF9                     PC              equ	4089	;# 
   455   000FF9                     PCL             equ	4089	;# 
   456   000FFA                     PCLATH          equ	4090	;# 
   457   000FFB                     PCLATU          equ	4091	;# 
   458   000FFC                     STKPTR          equ	4092	;# 
   459   000FFD                     TOS             equ	4093	;# 
   460   000FFD                     TOSL            equ	4093	;# 
   461   000FFE                     TOSH            equ	4094	;# 
   462   000FFF                     TOSU            equ	4095	;# 
   463   000F62                     SPPDATA         equ	3938	;# 
   464   000F63                     SPPCFG          equ	3939	;# 
   465   000F64                     SPPEPS          equ	3940	;# 
   466   000F65                     SPPCON          equ	3941	;# 
   467   000F66                     UFRM            equ	3942	;# 
   468   000F66                     UFRML           equ	3942	;# 
   469   000F67                     UFRMH           equ	3943	;# 
   470   000F68                     UIR             equ	3944	;# 
   471   000F69                     UIE             equ	3945	;# 
   472   000F6A                     UEIR            equ	3946	;# 
   473   000F6B                     UEIE            equ	3947	;# 
   474   000F6C                     USTAT           equ	3948	;# 
   475   000F6D                     UCON            equ	3949	;# 
   476   000F6E                     UADDR           equ	3950	;# 
   477   000F6F                     UCFG            equ	3951	;# 
   478   000F70                     UEP0            equ	3952	;# 
   479   000F71                     UEP1            equ	3953	;# 
   480   000F72                     UEP2            equ	3954	;# 
   481   000F73                     UEP3            equ	3955	;# 
   482   000F74                     UEP4            equ	3956	;# 
   483   000F75                     UEP5            equ	3957	;# 
   484   000F76                     UEP6            equ	3958	;# 
   485   000F77                     UEP7            equ	3959	;# 
   486   000F78                     UEP8            equ	3960	;# 
   487   000F79                     UEP9            equ	3961	;# 
   488   000F7A                     UEP10           equ	3962	;# 
   489   000F7B                     UEP11           equ	3963	;# 
   490   000F7C                     UEP12           equ	3964	;# 
   491   000F7D                     UEP13           equ	3965	;# 
   492   000F7E                     UEP14           equ	3966	;# 
   493   000F7F                     UEP15           equ	3967	;# 
   494   000F80                     PORTA           equ	3968	;# 
   495   000F81                     PORTB           equ	3969	;# 
   496   000F82                     PORTC           equ	3970	;# 
   497   000F83                     PORTD           equ	3971	;# 
   498   000F84                     PORTE           equ	3972	;# 
   499   000F89                     LATA            equ	3977	;# 
   500   000F8A                     LATB            equ	3978	;# 
   501   000F8B                     LATC            equ	3979	;# 
   502   000F8C                     LATD            equ	3980	;# 
   503   000F8D                     LATE            equ	3981	;# 
   504   000F92                     TRISA           equ	3986	;# 
   505   000F92                     DDRA            equ	3986	;# 
   506   000F93                     TRISB           equ	3987	;# 
   507   000F93                     DDRB            equ	3987	;# 
   508   000F94                     TRISC           equ	3988	;# 
   509   000F94                     DDRC            equ	3988	;# 
   510   000F95                     TRISD           equ	3989	;# 
   511   000F95                     DDRD            equ	3989	;# 
   512   000F96                     TRISE           equ	3990	;# 
   513   000F96                     DDRE            equ	3990	;# 
   514   000F9B                     OSCTUNE         equ	3995	;# 
   515   000F9D                     PIE1            equ	3997	;# 
   516   000F9E                     PIR1            equ	3998	;# 
   517   000F9F                     IPR1            equ	3999	;# 
   518   000FA0                     PIE2            equ	4000	;# 
   519   000FA1                     PIR2            equ	4001	;# 
   520   000FA2                     IPR2            equ	4002	;# 
   521   000FA6                     EECON1          equ	4006	;# 
   522   000FA7                     EECON2          equ	4007	;# 
   523   000FA8                     EEDATA          equ	4008	;# 
   524   000FA9                     EEADR           equ	4009	;# 
   525   000FAB                     RCSTA           equ	4011	;# 
   526   000FAB                     RCSTA1          equ	4011	;# 
   527   000FAC                     TXSTA           equ	4012	;# 
   528   000FAC                     TXSTA1          equ	4012	;# 
   529   000FAD                     TXREG           equ	4013	;# 
   530   000FAD                     TXREG1          equ	4013	;# 
   531   000FAE                     RCREG           equ	4014	;# 
   532   000FAE                     RCREG1          equ	4014	;# 
   533   000FAF                     SPBRG           equ	4015	;# 
   534   000FAF                     SPBRG1          equ	4015	;# 
   535   000FB0                     SPBRGH          equ	4016	;# 
   536   000FB1                     T3CON           equ	4017	;# 
   537   000FB2                     TMR3            equ	4018	;# 
   538   000FB2                     TMR3L           equ	4018	;# 
   539   000FB3                     TMR3H           equ	4019	;# 
   540   000FB4                     CMCON           equ	4020	;# 
   541   000FB5                     CVRCON          equ	4021	;# 
   542   000FB6                     ECCP1AS         equ	4022	;# 
   543   000FB6                     CCP1AS          equ	4022	;# 
   544   000FB7                     ECCP1DEL        equ	4023	;# 
   545   000FB7                     CCP1DEL         equ	4023	;# 
   546   000FB8                     BAUDCON         equ	4024	;# 
   547   000FB8                     BAUDCTL         equ	4024	;# 
   548   000FBA                     CCP2CON         equ	4026	;# 
   549   000FBB                     CCPR2           equ	4027	;# 
   550   000FBB                     CCPR2L          equ	4027	;# 
   551   000FBC                     CCPR2H          equ	4028	;# 
   552   000FBD                     CCP1CON         equ	4029	;# 
   553   000FBD                     ECCP1CON        equ	4029	;# 
   554   000FBE                     CCPR1           equ	4030	;# 
   555   000FBE                     CCPR1L          equ	4030	;# 
   556   000FBF                     CCPR1H          equ	4031	;# 
   557   000FC0                     ADCON2          equ	4032	;# 
   558   000FC1                     ADCON1          equ	4033	;# 
   559   000FC2                     ADCON0          equ	4034	;# 
   560   000FC3                     ADRES           equ	4035	;# 
   561   000FC3                     ADRESL          equ	4035	;# 
   562   000FC4                     ADRESH          equ	4036	;# 
   563   000FC5                     SSPCON2         equ	4037	;# 
   564   000FC6                     SSPCON1         equ	4038	;# 
   565   000FC7                     SSPSTAT         equ	4039	;# 
   566   000FC8                     SSPADD          equ	4040	;# 
   567   000FC9                     SSPBUF          equ	4041	;# 
   568   000FCA                     T2CON           equ	4042	;# 
   569   000FCB                     PR2             equ	4043	;# 
   570   000FCB                     MEMCON          equ	4043	;# 
   571   000FCC                     TMR2            equ	4044	;# 
   572   000FCD                     T1CON           equ	4045	;# 
   573   000FCE                     TMR1            equ	4046	;# 
   574   000FCE                     TMR1L           equ	4046	;# 
   575   000FCF                     TMR1H           equ	4047	;# 
   576   000FD0                     RCON            equ	4048	;# 
   577   000FD1                     WDTCON          equ	4049	;# 
   578   000FD2                     HLVDCON         equ	4050	;# 
   579   000FD2                     LVDCON          equ	4050	;# 
   580   000FD3                     OSCCON          equ	4051	;# 
   581   000FD5                     T0CON           equ	4053	;# 
   582   000FD6                     TMR0            equ	4054	;# 
   583   000FD6                     TMR0L           equ	4054	;# 
   584   000FD7                     TMR0H           equ	4055	;# 
   585   000FD8                     STATUS          equ	4056	;# 
   586   000FD9                     FSR2            equ	4057	;# 
   587   000FD9                     FSR2L           equ	4057	;# 
   588   000FDA                     FSR2H           equ	4058	;# 
   589   000FDB                     PLUSW2          equ	4059	;# 
   590   000FDC                     PREINC2         equ	4060	;# 
   591   000FDD                     POSTDEC2        equ	4061	;# 
   592   000FDE                     POSTINC2        equ	4062	;# 
   593   000FDF                     INDF2           equ	4063	;# 
   594   000FE0                     BSR             equ	4064	;# 
   595   000FE1                     FSR1            equ	4065	;# 
   596   000FE1                     FSR1L           equ	4065	;# 
   597   000FE2                     FSR1H           equ	4066	;# 
   598   000FE3                     PLUSW1          equ	4067	;# 
   599   000FE4                     PREINC1         equ	4068	;# 
   600   000FE5                     POSTDEC1        equ	4069	;# 
   601   000FE6                     POSTINC1        equ	4070	;# 
   602   000FE7                     INDF1           equ	4071	;# 
   603   000FE8                     WREG            equ	4072	;# 
   604   000FE9                     FSR0            equ	4073	;# 
   605   000FE9                     FSR0L           equ	4073	;# 
   606   000FEA                     FSR0H           equ	4074	;# 
   607   000FEB                     PLUSW0          equ	4075	;# 
   608   000FEC                     PREINC0         equ	4076	;# 
   609   000FED                     POSTDEC0        equ	4077	;# 
   610   000FEE                     POSTINC0        equ	4078	;# 
   611   000FEF                     INDF0           equ	4079	;# 
   612   000FF0                     INTCON3         equ	4080	;# 
   613   000FF1                     INTCON2         equ	4081	;# 
   614   000FF2                     INTCON          equ	4082	;# 
   615   000FF3                     PROD            equ	4083	;# 
   616   000FF3                     PRODL           equ	4083	;# 
   617   000FF4                     PRODH           equ	4084	;# 
   618   000FF5                     TABLAT          equ	4085	;# 
   619   000FF6                     TBLPTR          equ	4086	;# 
   620   000FF6                     TBLPTRL         equ	4086	;# 
   621   000FF7                     TBLPTRH         equ	4087	;# 
   622   000FF8                     TBLPTRU         equ	4088	;# 
   623   000FF9                     PCLAT           equ	4089	;# 
   624   000FF9                     PC              equ	4089	;# 
   625   000FF9                     PCL             equ	4089	;# 
   626   000FFA                     PCLATH          equ	4090	;# 
   627   000FFB                     PCLATU          equ	4091	;# 
   628   000FFC                     STKPTR          equ	4092	;# 
   629   000FFD                     TOS             equ	4093	;# 
   630   000FFD                     TOSL            equ	4093	;# 
   631   000FFE                     TOSH            equ	4094	;# 
   632   000FFF                     TOSU            equ	4095	;# 
   633   000F62                     SPPDATA         equ	3938	;# 
   634   000F63                     SPPCFG          equ	3939	;# 
   635   000F64                     SPPEPS          equ	3940	;# 
   636   000F65                     SPPCON          equ	3941	;# 
   637   000F66                     UFRM            equ	3942	;# 
   638   000F66                     UFRML           equ	3942	;# 
   639   000F67                     UFRMH           equ	3943	;# 
   640   000F68                     UIR             equ	3944	;# 
   641   000F69                     UIE             equ	3945	;# 
   642   000F6A                     UEIR            equ	3946	;# 
   643   000F6B                     UEIE            equ	3947	;# 
   644   000F6C                     USTAT           equ	3948	;# 
   645   000F6D                     UCON            equ	3949	;# 
   646   000F6E                     UADDR           equ	3950	;# 
   647   000F6F                     UCFG            equ	3951	;# 
   648   000F70                     UEP0            equ	3952	;# 
   649   000F71                     UEP1            equ	3953	;# 
   650   000F72                     UEP2            equ	3954	;# 
   651   000F73                     UEP3            equ	3955	;# 
   652   000F74                     UEP4            equ	3956	;# 
   653   000F75                     UEP5            equ	3957	;# 
   654   000F76                     UEP6            equ	3958	;# 
   655   000F77                     UEP7            equ	3959	;# 
   656   000F78                     UEP8            equ	3960	;# 
   657   000F79                     UEP9            equ	3961	;# 
   658   000F7A                     UEP10           equ	3962	;# 
   659   000F7B                     UEP11           equ	3963	;# 
   660   000F7C                     UEP12           equ	3964	;# 
   661   000F7D                     UEP13           equ	3965	;# 
   662   000F7E                     UEP14           equ	3966	;# 
   663   000F7F                     UEP15           equ	3967	;# 
   664   000F80                     PORTA           equ	3968	;# 
   665   000F81                     PORTB           equ	3969	;# 
   666   000F82                     PORTC           equ	3970	;# 
   667   000F83                     PORTD           equ	3971	;# 
   668   000F84                     PORTE           equ	3972	;# 
   669   000F89                     LATA            equ	3977	;# 
   670   000F8A                     LATB            equ	3978	;# 
   671   000F8B                     LATC            equ	3979	;# 
   672   000F8C                     LATD            equ	3980	;# 
   673   000F8D                     LATE            equ	3981	;# 
   674   000F92                     TRISA           equ	3986	;# 
   675   000F92                     DDRA            equ	3986	;# 
   676   000F93                     TRISB           equ	3987	;# 
   677   000F93                     DDRB            equ	3987	;# 
   678   000F94                     TRISC           equ	3988	;# 
   679   000F94                     DDRC            equ	3988	;# 
   680   000F95                     TRISD           equ	3989	;# 
   681   000F95                     DDRD            equ	3989	;# 
   682   000F96                     TRISE           equ	3990	;# 
   683   000F96                     DDRE            equ	3990	;# 
   684   000F9B                     OSCTUNE         equ	3995	;# 
   685   000F9D                     PIE1            equ	3997	;# 
   686   000F9E                     PIR1            equ	3998	;# 
   687   000F9F                     IPR1            equ	3999	;# 
   688   000FA0                     PIE2            equ	4000	;# 
   689   000FA1                     PIR2            equ	4001	;# 
   690   000FA2                     IPR2            equ	4002	;# 
   691   000FA6                     EECON1          equ	4006	;# 
   692   000FA7                     EECON2          equ	4007	;# 
   693   000FA8                     EEDATA          equ	4008	;# 
   694   000FA9                     EEADR           equ	4009	;# 
   695   000FAB                     RCSTA           equ	4011	;# 
   696   000FAB                     RCSTA1          equ	4011	;# 
   697   000FAC                     TXSTA           equ	4012	;# 
   698   000FAC                     TXSTA1          equ	4012	;# 
   699   000FAD                     TXREG           equ	4013	;# 
   700   000FAD                     TXREG1          equ	4013	;# 
   701   000FAE                     RCREG           equ	4014	;# 
   702   000FAE                     RCREG1          equ	4014	;# 
   703   000FAF                     SPBRG           equ	4015	;# 
   704   000FAF                     SPBRG1          equ	4015	;# 
   705   000FB0                     SPBRGH          equ	4016	;# 
   706   000FB1                     T3CON           equ	4017	;# 
   707   000FB2                     TMR3            equ	4018	;# 
   708   000FB2                     TMR3L           equ	4018	;# 
   709   000FB3                     TMR3H           equ	4019	;# 
   710   000FB4                     CMCON           equ	4020	;# 
   711   000FB5                     CVRCON          equ	4021	;# 
   712   000FB6                     ECCP1AS         equ	4022	;# 
   713   000FB6                     CCP1AS          equ	4022	;# 
   714   000FB7                     ECCP1DEL        equ	4023	;# 
   715   000FB7                     CCP1DEL         equ	4023	;# 
   716   000FB8                     BAUDCON         equ	4024	;# 
   717   000FB8                     BAUDCTL         equ	4024	;# 
   718   000FBA                     CCP2CON         equ	4026	;# 
   719   000FBB                     CCPR2           equ	4027	;# 
   720   000FBB                     CCPR2L          equ	4027	;# 
   721   000FBC                     CCPR2H          equ	4028	;# 
   722   000FBD                     CCP1CON         equ	4029	;# 
   723   000FBD                     ECCP1CON        equ	4029	;# 
   724   000FBE                     CCPR1           equ	4030	;# 
   725   000FBE                     CCPR1L          equ	4030	;# 
   726   000FBF                     CCPR1H          equ	4031	;# 
   727   000FC0                     ADCON2          equ	4032	;# 
   728   000FC1                     ADCON1          equ	4033	;# 
   729   000FC2                     ADCON0          equ	4034	;# 
   730   000FC3                     ADRES           equ	4035	;# 
   731   000FC3                     ADRESL          equ	4035	;# 
   732   000FC4                     ADRESH          equ	4036	;# 
   733   000FC5                     SSPCON2         equ	4037	;# 
   734   000FC6                     SSPCON1         equ	4038	;# 
   735   000FC7                     SSPSTAT         equ	4039	;# 
   736   000FC8                     SSPADD          equ	4040	;# 
   737   000FC9                     SSPBUF          equ	4041	;# 
   738   000FCA                     T2CON           equ	4042	;# 
   739   000FCB                     PR2             equ	4043	;# 
   740   000FCB                     MEMCON          equ	4043	;# 
   741   000FCC                     TMR2            equ	4044	;# 
   742   000FCD                     T1CON           equ	4045	;# 
   743   000FCE                     TMR1            equ	4046	;# 
   744   000FCE                     TMR1L           equ	4046	;# 
   745   000FCF                     TMR1H           equ	4047	;# 
   746   000FD0                     RCON            equ	4048	;# 
   747   000FD1                     WDTCON          equ	4049	;# 
   748   000FD2                     HLVDCON         equ	4050	;# 
   749   000FD2                     LVDCON          equ	4050	;# 
   750   000FD3                     OSCCON          equ	4051	;# 
   751   000FD5                     T0CON           equ	4053	;# 
   752   000FD6                     TMR0            equ	4054	;# 
   753   000FD6                     TMR0L           equ	4054	;# 
   754   000FD7                     TMR0H           equ	4055	;# 
   755   000FD8                     STATUS          equ	4056	;# 
   756   000FD9                     FSR2            equ	4057	;# 
   757   000FD9                     FSR2L           equ	4057	;# 
   758   000FDA                     FSR2H           equ	4058	;# 
   759   000FDB                     PLUSW2          equ	4059	;# 
   760   000FDC                     PREINC2         equ	4060	;# 
   761   000FDD                     POSTDEC2        equ	4061	;# 
   762   000FDE                     POSTINC2        equ	4062	;# 
   763   000FDF                     INDF2           equ	4063	;# 
   764   000FE0                     BSR             equ	4064	;# 
   765   000FE1                     FSR1            equ	4065	;# 
   766   000FE1                     FSR1L           equ	4065	;# 
   767   000FE2                     FSR1H           equ	4066	;# 
   768   000FE3                     PLUSW1          equ	4067	;# 
   769   000FE4                     PREINC1         equ	4068	;# 
   770   000FE5                     POSTDEC1        equ	4069	;# 
   771   000FE6                     POSTINC1        equ	4070	;# 
   772   000FE7                     INDF1           equ	4071	;# 
   773   000FE8                     WREG            equ	4072	;# 
   774   000FE9                     FSR0            equ	4073	;# 
   775   000FE9                     FSR0L           equ	4073	;# 
   776   000FEA                     FSR0H           equ	4074	;# 
   777   000FEB                     PLUSW0          equ	4075	;# 
   778   000FEC                     PREINC0         equ	4076	;# 
   779   000FED                     POSTDEC0        equ	4077	;# 
   780   000FEE                     POSTINC0        equ	4078	;# 
   781   000FEF                     INDF0           equ	4079	;# 
   782   000FF0                     INTCON3         equ	4080	;# 
   783   000FF1                     INTCON2         equ	4081	;# 
   784   000FF2                     INTCON          equ	4082	;# 
   785   000FF3                     PROD            equ	4083	;# 
   786   000FF3                     PRODL           equ	4083	;# 
   787   000FF4                     PRODH           equ	4084	;# 
   788   000FF5                     TABLAT          equ	4085	;# 
   789   000FF6                     TBLPTR          equ	4086	;# 
   790   000FF6                     TBLPTRL         equ	4086	;# 
   791   000FF7                     TBLPTRH         equ	4087	;# 
   792   000FF8                     TBLPTRU         equ	4088	;# 
   793   000FF9                     PCLAT           equ	4089	;# 
   794   000FF9                     PC              equ	4089	;# 
   795   000FF9                     PCL             equ	4089	;# 
   796   000FFA                     PCLATH          equ	4090	;# 
   797   000FFB                     PCLATU          equ	4091	;# 
   798   000FFC                     STKPTR          equ	4092	;# 
   799   000FFD                     TOS             equ	4093	;# 
   800   000FFD                     TOSL            equ	4093	;# 
   801   000FFE                     TOSH            equ	4094	;# 
   802   000FFF                     TOSU            equ	4095	;# 
   803   000F62                     SPPDATA         equ	3938	;# 
   804   000F63                     SPPCFG          equ	3939	;# 
   805   000F64                     SPPEPS          equ	3940	;# 
   806   000F65                     SPPCON          equ	3941	;# 
   807   000F66                     UFRM            equ	3942	;# 
   808   000F66                     UFRML           equ	3942	;# 
   809   000F67                     UFRMH           equ	3943	;# 
   810   000F68                     UIR             equ	3944	;# 
   811   000F69                     UIE             equ	3945	;# 
   812   000F6A                     UEIR            equ	3946	;# 
   813   000F6B                     UEIE            equ	3947	;# 
   814   000F6C                     USTAT           equ	3948	;# 
   815   000F6D                     UCON            equ	3949	;# 
   816   000F6E                     UADDR           equ	3950	;# 
   817   000F6F                     UCFG            equ	3951	;# 
   818   000F70                     UEP0            equ	3952	;# 
   819   000F71                     UEP1            equ	3953	;# 
   820   000F72                     UEP2            equ	3954	;# 
   821   000F73                     UEP3            equ	3955	;# 
   822   000F74                     UEP4            equ	3956	;# 
   823   000F75                     UEP5            equ	3957	;# 
   824   000F76                     UEP6            equ	3958	;# 
   825   000F77                     UEP7            equ	3959	;# 
   826   000F78                     UEP8            equ	3960	;# 
   827   000F79                     UEP9            equ	3961	;# 
   828   000F7A                     UEP10           equ	3962	;# 
   829   000F7B                     UEP11           equ	3963	;# 
   830   000F7C                     UEP12           equ	3964	;# 
   831   000F7D                     UEP13           equ	3965	;# 
   832   000F7E                     UEP14           equ	3966	;# 
   833   000F7F                     UEP15           equ	3967	;# 
   834   000F80                     PORTA           equ	3968	;# 
   835   000F81                     PORTB           equ	3969	;# 
   836   000F82                     PORTC           equ	3970	;# 
   837   000F83                     PORTD           equ	3971	;# 
   838   000F84                     PORTE           equ	3972	;# 
   839   000F89                     LATA            equ	3977	;# 
   840   000F8A                     LATB            equ	3978	;# 
   841   000F8B                     LATC            equ	3979	;# 
   842   000F8C                     LATD            equ	3980	;# 
   843   000F8D                     LATE            equ	3981	;# 
   844   000F92                     TRISA           equ	3986	;# 
   845   000F92                     DDRA            equ	3986	;# 
   846   000F93                     TRISB           equ	3987	;# 
   847   000F93                     DDRB            equ	3987	;# 
   848   000F94                     TRISC           equ	3988	;# 
   849   000F94                     DDRC            equ	3988	;# 
   850   000F95                     TRISD           equ	3989	;# 
   851   000F95                     DDRD            equ	3989	;# 
   852   000F96                     TRISE           equ	3990	;# 
   853   000F96                     DDRE            equ	3990	;# 
   854   000F9B                     OSCTUNE         equ	3995	;# 
   855   000F9D                     PIE1            equ	3997	;# 
   856   000F9E                     PIR1            equ	3998	;# 
   857   000F9F                     IPR1            equ	3999	;# 
   858   000FA0                     PIE2            equ	4000	;# 
   859   000FA1                     PIR2            equ	4001	;# 
   860   000FA2                     IPR2            equ	4002	;# 
   861   000FA6                     EECON1          equ	4006	;# 
   862   000FA7                     EECON2          equ	4007	;# 
   863   000FA8                     EEDATA          equ	4008	;# 
   864   000FA9                     EEADR           equ	4009	;# 
   865   000FAB                     RCSTA           equ	4011	;# 
   866   000FAB                     RCSTA1          equ	4011	;# 
   867   000FAC                     TXSTA           equ	4012	;# 
   868   000FAC                     TXSTA1          equ	4012	;# 
   869   000FAD                     TXREG           equ	4013	;# 
   870   000FAD                     TXREG1          equ	4013	;# 
   871   000FAE                     RCREG           equ	4014	;# 
   872   000FAE                     RCREG1          equ	4014	;# 
   873   000FAF                     SPBRG           equ	4015	;# 
   874   000FAF                     SPBRG1          equ	4015	;# 
   875   000FB0                     SPBRGH          equ	4016	;# 
   876   000FB1                     T3CON           equ	4017	;# 
   877   000FB2                     TMR3            equ	4018	;# 
   878   000FB2                     TMR3L           equ	4018	;# 
   879   000FB3                     TMR3H           equ	4019	;# 
   880   000FB4                     CMCON           equ	4020	;# 
   881   000FB5                     CVRCON          equ	4021	;# 
   882   000FB6                     ECCP1AS         equ	4022	;# 
   883   000FB6                     CCP1AS          equ	4022	;# 
   884   000FB7                     ECCP1DEL        equ	4023	;# 
   885   000FB7                     CCP1DEL         equ	4023	;# 
   886   000FB8                     BAUDCON         equ	4024	;# 
   887   000FB8                     BAUDCTL         equ	4024	;# 
   888   000FBA                     CCP2CON         equ	4026	;# 
   889   000FBB                     CCPR2           equ	4027	;# 
   890   000FBB                     CCPR2L          equ	4027	;# 
   891   000FBC                     CCPR2H          equ	4028	;# 
   892   000FBD                     CCP1CON         equ	4029	;# 
   893   000FBD                     ECCP1CON        equ	4029	;# 
   894   000FBE                     CCPR1           equ	4030	;# 
   895   000FBE                     CCPR1L          equ	4030	;# 
   896   000FBF                     CCPR1H          equ	4031	;# 
   897   000FC0                     ADCON2          equ	4032	;# 
   898   000FC1                     ADCON1          equ	4033	;# 
   899   000FC2                     ADCON0          equ	4034	;# 
   900   000FC3                     ADRES           equ	4035	;# 
   901   000FC3                     ADRESL          equ	4035	;# 
   902   000FC4                     ADRESH          equ	4036	;# 
   903   000FC5                     SSPCON2         equ	4037	;# 
   904   000FC6                     SSPCON1         equ	4038	;# 
   905   000FC7                     SSPSTAT         equ	4039	;# 
   906   000FC8                     SSPADD          equ	4040	;# 
   907   000FC9                     SSPBUF          equ	4041	;# 
   908   000FCA                     T2CON           equ	4042	;# 
   909   000FCB                     PR2             equ	4043	;# 
   910   000FCB                     MEMCON          equ	4043	;# 
   911   000FCC                     TMR2            equ	4044	;# 
   912   000FCD                     T1CON           equ	4045	;# 
   913   000FCE                     TMR1            equ	4046	;# 
   914   000FCE                     TMR1L           equ	4046	;# 
   915   000FCF                     TMR1H           equ	4047	;# 
   916   000FD0                     RCON            equ	4048	;# 
   917   000FD1                     WDTCON          equ	4049	;# 
   918   000FD2                     HLVDCON         equ	4050	;# 
   919   000FD2                     LVDCON          equ	4050	;# 
   920   000FD3                     OSCCON          equ	4051	;# 
   921   000FD5                     T0CON           equ	4053	;# 
   922   000FD6                     TMR0            equ	4054	;# 
   923   000FD6                     TMR0L           equ	4054	;# 
   924   000FD7                     TMR0H           equ	4055	;# 
   925   000FD8                     STATUS          equ	4056	;# 
   926   000FD9                     FSR2            equ	4057	;# 
   927   000FD9                     FSR2L           equ	4057	;# 
   928   000FDA                     FSR2H           equ	4058	;# 
   929   000FDB                     PLUSW2          equ	4059	;# 
   930   000FDC                     PREINC2         equ	4060	;# 
   931   000FDD                     POSTDEC2        equ	4061	;# 
   932   000FDE                     POSTINC2        equ	4062	;# 
   933   000FDF                     INDF2           equ	4063	;# 
   934   000FE0                     BSR             equ	4064	;# 
   935   000FE1                     FSR1            equ	4065	;# 
   936   000FE1                     FSR1L           equ	4065	;# 
   937   000FE2                     FSR1H           equ	4066	;# 
   938   000FE3                     PLUSW1          equ	4067	;# 
   939   000FE4                     PREINC1         equ	4068	;# 
   940   000FE5                     POSTDEC1        equ	4069	;# 
   941   000FE6                     POSTINC1        equ	4070	;# 
   942   000FE7                     INDF1           equ	4071	;# 
   943   000FE8                     WREG            equ	4072	;# 
   944   000FE9                     FSR0            equ	4073	;# 
   945   000FE9                     FSR0L           equ	4073	;# 
   946   000FEA                     FSR0H           equ	4074	;# 
   947   000FEB                     PLUSW0          equ	4075	;# 
   948   000FEC                     PREINC0         equ	4076	;# 
   949   000FED                     POSTDEC0        equ	4077	;# 
   950   000FEE                     POSTINC0        equ	4078	;# 
   951   000FEF                     INDF0           equ	4079	;# 
   952   000FF0                     INTCON3         equ	4080	;# 
   953   000FF1                     INTCON2         equ	4081	;# 
   954   000FF2                     INTCON          equ	4082	;# 
   955   000FF3                     PROD            equ	4083	;# 
   956   000FF3                     PRODL           equ	4083	;# 
   957   000FF4                     PRODH           equ	4084	;# 
   958   000FF5                     TABLAT          equ	4085	;# 
   959   000FF6                     TBLPTR          equ	4086	;# 
   960   000FF6                     TBLPTRL         equ	4086	;# 
   961   000FF7                     TBLPTRH         equ	4087	;# 
   962   000FF8                     TBLPTRU         equ	4088	;# 
   963   000FF9                     PCLAT           equ	4089	;# 
   964   000FF9                     PC              equ	4089	;# 
   965   000FF9                     PCL             equ	4089	;# 
   966   000FFA                     PCLATH          equ	4090	;# 
   967   000FFB                     PCLATU          equ	4091	;# 
   968   000FFC                     STKPTR          equ	4092	;# 
   969   000FFD                     TOS             equ	4093	;# 
   970   000FFD                     TOSL            equ	4093	;# 
   971   000FFE                     TOSH            equ	4094	;# 
   972   000FFF                     TOSU            equ	4095	;# 
   973   000F62                     SPPDATA         equ	3938	;# 
   974   000F63                     SPPCFG          equ	3939	;# 
   975   000F64                     SPPEPS          equ	3940	;# 
   976   000F65                     SPPCON          equ	3941	;# 
   977   000F66                     UFRM            equ	3942	;# 
   978   000F66                     UFRML           equ	3942	;# 
   979   000F67                     UFRMH           equ	3943	;# 
   980   000F68                     UIR             equ	3944	;# 
   981   000F69                     UIE             equ	3945	;# 
   982   000F6A                     UEIR            equ	3946	;# 
   983   000F6B                     UEIE            equ	3947	;# 
   984   000F6C                     USTAT           equ	3948	;# 
   985   000F6D                     UCON            equ	3949	;# 
   986   000F6E                     UADDR           equ	3950	;# 
   987   000F6F                     UCFG            equ	3951	;# 
   988   000F70                     UEP0            equ	3952	;# 
   989   000F71                     UEP1            equ	3953	;# 
   990   000F72                     UEP2            equ	3954	;# 
   991   000F73                     UEP3            equ	3955	;# 
   992   000F74                     UEP4            equ	3956	;# 
   993   000F75                     UEP5            equ	3957	;# 
   994   000F76                     UEP6            equ	3958	;# 
   995   000F77                     UEP7            equ	3959	;# 
   996   000F78                     UEP8            equ	3960	;# 
   997   000F79                     UEP9            equ	3961	;# 
   998   000F7A                     UEP10           equ	3962	;# 
   999   000F7B                     UEP11           equ	3963	;# 
  1000   000F7C                     UEP12           equ	3964	;# 
  1001   000F7D                     UEP13           equ	3965	;# 
  1002   000F7E                     UEP14           equ	3966	;# 
  1003   000F7F                     UEP15           equ	3967	;# 
  1004   000F80                     PORTA           equ	3968	;# 
  1005   000F81                     PORTB           equ	3969	;# 
  1006   000F82                     PORTC           equ	3970	;# 
  1007   000F83                     PORTD           equ	3971	;# 
  1008   000F84                     PORTE           equ	3972	;# 
  1009   000F89                     LATA            equ	3977	;# 
  1010   000F8A                     LATB            equ	3978	;# 
  1011   000F8B                     LATC            equ	3979	;# 
  1012   000F8C                     LATD            equ	3980	;# 
  1013   000F8D                     LATE            equ	3981	;# 
  1014   000F92                     TRISA           equ	3986	;# 
  1015   000F92                     DDRA            equ	3986	;# 
  1016   000F93                     TRISB           equ	3987	;# 
  1017   000F93                     DDRB            equ	3987	;# 
  1018   000F94                     TRISC           equ	3988	;# 
  1019   000F94                     DDRC            equ	3988	;# 
  1020   000F95                     TRISD           equ	3989	;# 
  1021   000F95                     DDRD            equ	3989	;# 
  1022   000F96                     TRISE           equ	3990	;# 
  1023   000F96                     DDRE            equ	3990	;# 
  1024   000F9B                     OSCTUNE         equ	3995	;# 
  1025   000F9D                     PIE1            equ	3997	;# 
  1026   000F9E                     PIR1            equ	3998	;# 
  1027   000F9F                     IPR1            equ	3999	;# 
  1028   000FA0                     PIE2            equ	4000	;# 
  1029   000FA1                     PIR2            equ	4001	;# 
  1030   000FA2                     IPR2            equ	4002	;# 
  1031   000FA6                     EECON1          equ	4006	;# 
  1032   000FA7                     EECON2          equ	4007	;# 
  1033   000FA8                     EEDATA          equ	4008	;# 
  1034   000FA9                     EEADR           equ	4009	;# 
  1035   000FAB                     RCSTA           equ	4011	;# 
  1036   000FAB                     RCSTA1          equ	4011	;# 
  1037   000FAC                     TXSTA           equ	4012	;# 
  1038   000FAC                     TXSTA1          equ	4012	;# 
  1039   000FAD                     TXREG           equ	4013	;# 
  1040   000FAD                     TXREG1          equ	4013	;# 
  1041   000FAE                     RCREG           equ	4014	;# 
  1042   000FAE                     RCREG1          equ	4014	;# 
  1043   000FAF                     SPBRG           equ	4015	;# 
  1044   000FAF                     SPBRG1          equ	4015	;# 
  1045   000FB0                     SPBRGH          equ	4016	;# 
  1046   000FB1                     T3CON           equ	4017	;# 
  1047   000FB2                     TMR3            equ	4018	;# 
  1048   000FB2                     TMR3L           equ	4018	;# 
  1049   000FB3                     TMR3H           equ	4019	;# 
  1050   000FB4                     CMCON           equ	4020	;# 
  1051   000FB5                     CVRCON          equ	4021	;# 
  1052   000FB6                     ECCP1AS         equ	4022	;# 
  1053   000FB6                     CCP1AS          equ	4022	;# 
  1054   000FB7                     ECCP1DEL        equ	4023	;# 
  1055   000FB7                     CCP1DEL         equ	4023	;# 
  1056   000FB8                     BAUDCON         equ	4024	;# 
  1057   000FB8                     BAUDCTL         equ	4024	;# 
  1058   000FBA                     CCP2CON         equ	4026	;# 
  1059   000FBB                     CCPR2           equ	4027	;# 
  1060   000FBB                     CCPR2L          equ	4027	;# 
  1061   000FBC                     CCPR2H          equ	4028	;# 
  1062   000FBD                     CCP1CON         equ	4029	;# 
  1063   000FBD                     ECCP1CON        equ	4029	;# 
  1064   000FBE                     CCPR1           equ	4030	;# 
  1065   000FBE                     CCPR1L          equ	4030	;# 
  1066   000FBF                     CCPR1H          equ	4031	;# 
  1067   000FC0                     ADCON2          equ	4032	;# 
  1068   000FC1                     ADCON1          equ	4033	;# 
  1069   000FC2                     ADCON0          equ	4034	;# 
  1070   000FC3                     ADRES           equ	4035	;# 
  1071   000FC3                     ADRESL          equ	4035	;# 
  1072   000FC4                     ADRESH          equ	4036	;# 
  1073   000FC5                     SSPCON2         equ	4037	;# 
  1074   000FC6                     SSPCON1         equ	4038	;# 
  1075   000FC7                     SSPSTAT         equ	4039	;# 
  1076   000FC8                     SSPADD          equ	4040	;# 
  1077   000FC9                     SSPBUF          equ	4041	;# 
  1078   000FCA                     T2CON           equ	4042	;# 
  1079   000FCB                     PR2             equ	4043	;# 
  1080   000FCB                     MEMCON          equ	4043	;# 
  1081   000FCC                     TMR2            equ	4044	;# 
  1082   000FCD                     T1CON           equ	4045	;# 
  1083   000FCE                     TMR1            equ	4046	;# 
  1084   000FCE                     TMR1L           equ	4046	;# 
  1085   000FCF                     TMR1H           equ	4047	;# 
  1086   000FD0                     RCON            equ	4048	;# 
  1087   000FD1                     WDTCON          equ	4049	;# 
  1088   000FD2                     HLVDCON         equ	4050	;# 
  1089   000FD2                     LVDCON          equ	4050	;# 
  1090   000FD3                     OSCCON          equ	4051	;# 
  1091   000FD5                     T0CON           equ	4053	;# 
  1092   000FD6                     TMR0            equ	4054	;# 
  1093   000FD6                     TMR0L           equ	4054	;# 
  1094   000FD7                     TMR0H           equ	4055	;# 
  1095   000FD8                     STATUS          equ	4056	;# 
  1096   000FD9                     FSR2            equ	4057	;# 
  1097   000FD9                     FSR2L           equ	4057	;# 
  1098   000FDA                     FSR2H           equ	4058	;# 
  1099   000FDB                     PLUSW2          equ	4059	;# 
  1100   000FDC                     PREINC2         equ	4060	;# 
  1101   000FDD                     POSTDEC2        equ	4061	;# 
  1102   000FDE                     POSTINC2        equ	4062	;# 
  1103   000FDF                     INDF2           equ	4063	;# 
  1104   000FE0                     BSR             equ	4064	;# 
  1105   000FE1                     FSR1            equ	4065	;# 
  1106   000FE1                     FSR1L           equ	4065	;# 
  1107   000FE2                     FSR1H           equ	4066	;# 
  1108   000FE3                     PLUSW1          equ	4067	;# 
  1109   000FE4                     PREINC1         equ	4068	;# 
  1110   000FE5                     POSTDEC1        equ	4069	;# 
  1111   000FE6                     POSTINC1        equ	4070	;# 
  1112   000FE7                     INDF1           equ	4071	;# 
  1113   000FE8                     WREG            equ	4072	;# 
  1114   000FE9                     FSR0            equ	4073	;# 
  1115   000FE9                     FSR0L           equ	4073	;# 
  1116   000FEA                     FSR0H           equ	4074	;# 
  1117   000FEB                     PLUSW0          equ	4075	;# 
  1118   000FEC                     PREINC0         equ	4076	;# 
  1119   000FED                     POSTDEC0        equ	4077	;# 
  1120   000FEE                     POSTINC0        equ	4078	;# 
  1121   000FEF                     INDF0           equ	4079	;# 
  1122   000FF0                     INTCON3         equ	4080	;# 
  1123   000FF1                     INTCON2         equ	4081	;# 
  1124   000FF2                     INTCON          equ	4082	;# 
  1125   000FF3                     PROD            equ	4083	;# 
  1126   000FF3                     PRODL           equ	4083	;# 
  1127   000FF4                     PRODH           equ	4084	;# 
  1128   000FF5                     TABLAT          equ	4085	;# 
  1129   000FF6                     TBLPTR          equ	4086	;# 
  1130   000FF6                     TBLPTRL         equ	4086	;# 
  1131   000FF7                     TBLPTRH         equ	4087	;# 
  1132   000FF8                     TBLPTRU         equ	4088	;# 
  1133   000FF9                     PCLAT           equ	4089	;# 
  1134   000FF9                     PC              equ	4089	;# 
  1135   000FF9                     PCL             equ	4089	;# 
  1136   000FFA                     PCLATH          equ	4090	;# 
  1137   000FFB                     PCLATU          equ	4091	;# 
  1138   000FFC                     STKPTR          equ	4092	;# 
  1139   000FFD                     TOS             equ	4093	;# 
  1140   000FFD                     TOSL            equ	4093	;# 
  1141   000FFE                     TOSH            equ	4094	;# 
  1142   000FFF                     TOSU            equ	4095	;# 
  1143   000F62                     SPPDATA         equ	3938	;# 
  1144   000F63                     SPPCFG          equ	3939	;# 
  1145   000F64                     SPPEPS          equ	3940	;# 
  1146   000F65                     SPPCON          equ	3941	;# 
  1147   000F66                     UFRM            equ	3942	;# 
  1148   000F66                     UFRML           equ	3942	;# 
  1149   000F67                     UFRMH           equ	3943	;# 
  1150   000F68                     UIR             equ	3944	;# 
  1151   000F69                     UIE             equ	3945	;# 
  1152   000F6A                     UEIR            equ	3946	;# 
  1153   000F6B                     UEIE            equ	3947	;# 
  1154   000F6C                     USTAT           equ	3948	;# 
  1155   000F6D                     UCON            equ	3949	;# 
  1156   000F6E                     UADDR           equ	3950	;# 
  1157   000F6F                     UCFG            equ	3951	;# 
  1158   000F70                     UEP0            equ	3952	;# 
  1159   000F71                     UEP1            equ	3953	;# 
  1160   000F72                     UEP2            equ	3954	;# 
  1161   000F73                     UEP3            equ	3955	;# 
  1162   000F74                     UEP4            equ	3956	;# 
  1163   000F75                     UEP5            equ	3957	;# 
  1164   000F76                     UEP6            equ	3958	;# 
  1165   000F77                     UEP7            equ	3959	;# 
  1166   000F78                     UEP8            equ	3960	;# 
  1167   000F79                     UEP9            equ	3961	;# 
  1168   000F7A                     UEP10           equ	3962	;# 
  1169   000F7B                     UEP11           equ	3963	;# 
  1170   000F7C                     UEP12           equ	3964	;# 
  1171   000F7D                     UEP13           equ	3965	;# 
  1172   000F7E                     UEP14           equ	3966	;# 
  1173   000F7F                     UEP15           equ	3967	;# 
  1174   000F80                     PORTA           equ	3968	;# 
  1175   000F81                     PORTB           equ	3969	;# 
  1176   000F82                     PORTC           equ	3970	;# 
  1177   000F83                     PORTD           equ	3971	;# 
  1178   000F84                     PORTE           equ	3972	;# 
  1179   000F89                     LATA            equ	3977	;# 
  1180   000F8A                     LATB            equ	3978	;# 
  1181   000F8B                     LATC            equ	3979	;# 
  1182   000F8C                     LATD            equ	3980	;# 
  1183   000F8D                     LATE            equ	3981	;# 
  1184   000F92                     TRISA           equ	3986	;# 
  1185   000F92                     DDRA            equ	3986	;# 
  1186   000F93                     TRISB           equ	3987	;# 
  1187   000F93                     DDRB            equ	3987	;# 
  1188   000F94                     TRISC           equ	3988	;# 
  1189   000F94                     DDRC            equ	3988	;# 
  1190   000F95                     TRISD           equ	3989	;# 
  1191   000F95                     DDRD            equ	3989	;# 
  1192   000F96                     TRISE           equ	3990	;# 
  1193   000F96                     DDRE            equ	3990	;# 
  1194   000F9B                     OSCTUNE         equ	3995	;# 
  1195   000F9D                     PIE1            equ	3997	;# 
  1196   000F9E                     PIR1            equ	3998	;# 
  1197   000F9F                     IPR1            equ	3999	;# 
  1198   000FA0                     PIE2            equ	4000	;# 
  1199   000FA1                     PIR2            equ	4001	;# 
  1200   000FA2                     IPR2            equ	4002	;# 
  1201   000FA6                     EECON1          equ	4006	;# 
  1202   000FA7                     EECON2          equ	4007	;# 
  1203   000FA8                     EEDATA          equ	4008	;# 
  1204   000FA9                     EEADR           equ	4009	;# 
  1205   000FAB                     RCSTA           equ	4011	;# 
  1206   000FAB                     RCSTA1          equ	4011	;# 
  1207   000FAC                     TXSTA           equ	4012	;# 
  1208   000FAC                     TXSTA1          equ	4012	;# 
  1209   000FAD                     TXREG           equ	4013	;# 
  1210   000FAD                     TXREG1          equ	4013	;# 
  1211   000FAE                     RCREG           equ	4014	;# 
  1212   000FAE                     RCREG1          equ	4014	;# 
  1213   000FAF                     SPBRG           equ	4015	;# 
  1214   000FAF                     SPBRG1          equ	4015	;# 
  1215   000FB0                     SPBRGH          equ	4016	;# 
  1216   000FB1                     T3CON           equ	4017	;# 
  1217   000FB2                     TMR3            equ	4018	;# 
  1218   000FB2                     TMR3L           equ	4018	;# 
  1219   000FB3                     TMR3H           equ	4019	;# 
  1220   000FB4                     CMCON           equ	4020	;# 
  1221   000FB5                     CVRCON          equ	4021	;# 
  1222   000FB6                     ECCP1AS         equ	4022	;# 
  1223   000FB6                     CCP1AS          equ	4022	;# 
  1224   000FB7                     ECCP1DEL        equ	4023	;# 
  1225   000FB7                     CCP1DEL         equ	4023	;# 
  1226   000FB8                     BAUDCON         equ	4024	;# 
  1227   000FB8                     BAUDCTL         equ	4024	;# 
  1228   000FBA                     CCP2CON         equ	4026	;# 
  1229   000FBB                     CCPR2           equ	4027	;# 
  1230   000FBB                     CCPR2L          equ	4027	;# 
  1231   000FBC                     CCPR2H          equ	4028	;# 
  1232   000FBD                     CCP1CON         equ	4029	;# 
  1233   000FBD                     ECCP1CON        equ	4029	;# 
  1234   000FBE                     CCPR1           equ	4030	;# 
  1235   000FBE                     CCPR1L          equ	4030	;# 
  1236   000FBF                     CCPR1H          equ	4031	;# 
  1237   000FC0                     ADCON2          equ	4032	;# 
  1238   000FC1                     ADCON1          equ	4033	;# 
  1239   000FC2                     ADCON0          equ	4034	;# 
  1240   000FC3                     ADRES           equ	4035	;# 
  1241   000FC3                     ADRESL          equ	4035	;# 
  1242   000FC4                     ADRESH          equ	4036	;# 
  1243   000FC5                     SSPCON2         equ	4037	;# 
  1244   000FC6                     SSPCON1         equ	4038	;# 
  1245   000FC7                     SSPSTAT         equ	4039	;# 
  1246   000FC8                     SSPADD          equ	4040	;# 
  1247   000FC9                     SSPBUF          equ	4041	;# 
  1248   000FCA                     T2CON           equ	4042	;# 
  1249   000FCB                     PR2             equ	4043	;# 
  1250   000FCB                     MEMCON          equ	4043	;# 
  1251   000FCC                     TMR2            equ	4044	;# 
  1252   000FCD                     T1CON           equ	4045	;# 
  1253   000FCE                     TMR1            equ	4046	;# 
  1254   000FCE                     TMR1L           equ	4046	;# 
  1255   000FCF                     TMR1H           equ	4047	;# 
  1256   000FD0                     RCON            equ	4048	;# 
  1257   000FD1                     WDTCON          equ	4049	;# 
  1258   000FD2                     HLVDCON         equ	4050	;# 
  1259   000FD2                     LVDCON          equ	4050	;# 
  1260   000FD3                     OSCCON          equ	4051	;# 
  1261   000FD5                     T0CON           equ	4053	;# 
  1262   000FD6                     TMR0            equ	4054	;# 
  1263   000FD6                     TMR0L           equ	4054	;# 
  1264   000FD7                     TMR0H           equ	4055	;# 
  1265   000FD8                     STATUS          equ	4056	;# 
  1266   000FD9                     FSR2            equ	4057	;# 
  1267   000FD9                     FSR2L           equ	4057	;# 
  1268   000FDA                     FSR2H           equ	4058	;# 
  1269   000FDB                     PLUSW2          equ	4059	;# 
  1270   000FDC                     PREINC2         equ	4060	;# 
  1271   000FDD                     POSTDEC2        equ	4061	;# 
  1272   000FDE                     POSTINC2        equ	4062	;# 
  1273   000FDF                     INDF2           equ	4063	;# 
  1274   000FE0                     BSR             equ	4064	;# 
  1275   000FE1                     FSR1            equ	4065	;# 
  1276   000FE1                     FSR1L           equ	4065	;# 
  1277   000FE2                     FSR1H           equ	4066	;# 
  1278   000FE3                     PLUSW1          equ	4067	;# 
  1279   000FE4                     PREINC1         equ	4068	;# 
  1280   000FE5                     POSTDEC1        equ	4069	;# 
  1281   000FE6                     POSTINC1        equ	4070	;# 
  1282   000FE7                     INDF1           equ	4071	;# 
  1283   000FE8                     WREG            equ	4072	;# 
  1284   000FE9                     FSR0            equ	4073	;# 
  1285   000FE9                     FSR0L           equ	4073	;# 
  1286   000FEA                     FSR0H           equ	4074	;# 
  1287   000FEB                     PLUSW0          equ	4075	;# 
  1288   000FEC                     PREINC0         equ	4076	;# 
  1289   000FED                     POSTDEC0        equ	4077	;# 
  1290   000FEE                     POSTINC0        equ	4078	;# 
  1291   000FEF                     INDF0           equ	4079	;# 
  1292   000FF0                     INTCON3         equ	4080	;# 
  1293   000FF1                     INTCON2         equ	4081	;# 
  1294   000FF2                     INTCON          equ	4082	;# 
  1295   000FF3                     PROD            equ	4083	;# 
  1296   000FF3                     PRODL           equ	4083	;# 
  1297   000FF4                     PRODH           equ	4084	;# 
  1298   000FF5                     TABLAT          equ	4085	;# 
  1299   000FF6                     TBLPTR          equ	4086	;# 
  1300   000FF6                     TBLPTRL         equ	4086	;# 
  1301   000FF7                     TBLPTRH         equ	4087	;# 
  1302   000FF8                     TBLPTRU         equ	4088	;# 
  1303   000FF9                     PCLAT           equ	4089	;# 
  1304   000FF9                     PC              equ	4089	;# 
  1305   000FF9                     PCL             equ	4089	;# 
  1306   000FFA                     PCLATH          equ	4090	;# 
  1307   000FFB                     PCLATU          equ	4091	;# 
  1308   000FFC                     STKPTR          equ	4092	;# 
  1309   000FFD                     TOS             equ	4093	;# 
  1310   000FFD                     TOSL            equ	4093	;# 
  1311   000FFE                     TOSH            equ	4094	;# 
  1312   000FFF                     TOSU            equ	4095	;# 
  1313   000F62                     SPPDATA         equ	3938	;# 
  1314   000F63                     SPPCFG          equ	3939	;# 
  1315   000F64                     SPPEPS          equ	3940	;# 
  1316   000F65                     SPPCON          equ	3941	;# 
  1317   000F66                     UFRM            equ	3942	;# 
  1318   000F66                     UFRML           equ	3942	;# 
  1319   000F67                     UFRMH           equ	3943	;# 
  1320   000F68                     UIR             equ	3944	;# 
  1321   000F69                     UIE             equ	3945	;# 
  1322   000F6A                     UEIR            equ	3946	;# 
  1323   000F6B                     UEIE            equ	3947	;# 
  1324   000F6C                     USTAT           equ	3948	;# 
  1325   000F6D                     UCON            equ	3949	;# 
  1326   000F6E                     UADDR           equ	3950	;# 
  1327   000F6F                     UCFG            equ	3951	;# 
  1328   000F70                     UEP0            equ	3952	;# 
  1329   000F71                     UEP1            equ	3953	;# 
  1330   000F72                     UEP2            equ	3954	;# 
  1331   000F73                     UEP3            equ	3955	;# 
  1332   000F74                     UEP4            equ	3956	;# 
  1333   000F75                     UEP5            equ	3957	;# 
  1334   000F76                     UEP6            equ	3958	;# 
  1335   000F77                     UEP7            equ	3959	;# 
  1336   000F78                     UEP8            equ	3960	;# 
  1337   000F79                     UEP9            equ	3961	;# 
  1338   000F7A                     UEP10           equ	3962	;# 
  1339   000F7B                     UEP11           equ	3963	;# 
  1340   000F7C                     UEP12           equ	3964	;# 
  1341   000F7D                     UEP13           equ	3965	;# 
  1342   000F7E                     UEP14           equ	3966	;# 
  1343   000F7F                     UEP15           equ	3967	;# 
  1344   000F80                     PORTA           equ	3968	;# 
  1345   000F81                     PORTB           equ	3969	;# 
  1346   000F82                     PORTC           equ	3970	;# 
  1347   000F83                     PORTD           equ	3971	;# 
  1348   000F84                     PORTE           equ	3972	;# 
  1349   000F89                     LATA            equ	3977	;# 
  1350   000F8A                     LATB            equ	3978	;# 
  1351   000F8B                     LATC            equ	3979	;# 
  1352   000F8C                     LATD            equ	3980	;# 
  1353   000F8D                     LATE            equ	3981	;# 
  1354   000F92                     TRISA           equ	3986	;# 
  1355   000F92                     DDRA            equ	3986	;# 
  1356   000F93                     TRISB           equ	3987	;# 
  1357   000F93                     DDRB            equ	3987	;# 
  1358   000F94                     TRISC           equ	3988	;# 
  1359   000F94                     DDRC            equ	3988	;# 
  1360   000F95                     TRISD           equ	3989	;# 
  1361   000F95                     DDRD            equ	3989	;# 
  1362   000F96                     TRISE           equ	3990	;# 
  1363   000F96                     DDRE            equ	3990	;# 
  1364   000F9B                     OSCTUNE         equ	3995	;# 
  1365   000F9D                     PIE1            equ	3997	;# 
  1366   000F9E                     PIR1            equ	3998	;# 
  1367   000F9F                     IPR1            equ	3999	;# 
  1368   000FA0                     PIE2            equ	4000	;# 
  1369   000FA1                     PIR2            equ	4001	;# 
  1370   000FA2                     IPR2            equ	4002	;# 
  1371   000FA6                     EECON1          equ	4006	;# 
  1372   000FA7                     EECON2          equ	4007	;# 
  1373   000FA8                     EEDATA          equ	4008	;# 
  1374   000FA9                     EEADR           equ	4009	;# 
  1375   000FAB                     RCSTA           equ	4011	;# 
  1376   000FAB                     RCSTA1          equ	4011	;# 
  1377   000FAC                     TXSTA           equ	4012	;# 
  1378   000FAC                     TXSTA1          equ	4012	;# 
  1379   000FAD                     TXREG           equ	4013	;# 
  1380   000FAD                     TXREG1          equ	4013	;# 
  1381   000FAE                     RCREG           equ	4014	;# 
  1382   000FAE                     RCREG1          equ	4014	;# 
  1383   000FAF                     SPBRG           equ	4015	;# 
  1384   000FAF                     SPBRG1          equ	4015	;# 
  1385   000FB0                     SPBRGH          equ	4016	;# 
  1386   000FB1                     T3CON           equ	4017	;# 
  1387   000FB2                     TMR3            equ	4018	;# 
  1388   000FB2                     TMR3L           equ	4018	;# 
  1389   000FB3                     TMR3H           equ	4019	;# 
  1390   000FB4                     CMCON           equ	4020	;# 
  1391   000FB5                     CVRCON          equ	4021	;# 
  1392   000FB6                     ECCP1AS         equ	4022	;# 
  1393   000FB6                     CCP1AS          equ	4022	;# 
  1394   000FB7                     ECCP1DEL        equ	4023	;# 
  1395   000FB7                     CCP1DEL         equ	4023	;# 
  1396   000FB8                     BAUDCON         equ	4024	;# 
  1397   000FB8                     BAUDCTL         equ	4024	;# 
  1398   000FBA                     CCP2CON         equ	4026	;# 
  1399   000FBB                     CCPR2           equ	4027	;# 
  1400   000FBB                     CCPR2L          equ	4027	;# 
  1401   000FBC                     CCPR2H          equ	4028	;# 
  1402   000FBD                     CCP1CON         equ	4029	;# 
  1403   000FBD                     ECCP1CON        equ	4029	;# 
  1404   000FBE                     CCPR1           equ	4030	;# 
  1405   000FBE                     CCPR1L          equ	4030	;# 
  1406   000FBF                     CCPR1H          equ	4031	;# 
  1407   000FC0                     ADCON2          equ	4032	;# 
  1408   000FC1                     ADCON1          equ	4033	;# 
  1409   000FC2                     ADCON0          equ	4034	;# 
  1410   000FC3                     ADRES           equ	4035	;# 
  1411   000FC3                     ADRESL          equ	4035	;# 
  1412   000FC4                     ADRESH          equ	4036	;# 
  1413   000FC5                     SSPCON2         equ	4037	;# 
  1414   000FC6                     SSPCON1         equ	4038	;# 
  1415   000FC7                     SSPSTAT         equ	4039	;# 
  1416   000FC8                     SSPADD          equ	4040	;# 
  1417   000FC9                     SSPBUF          equ	4041	;# 
  1418   000FCA                     T2CON           equ	4042	;# 
  1419   000FCB                     PR2             equ	4043	;# 
  1420   000FCB                     MEMCON          equ	4043	;# 
  1421   000FCC                     TMR2            equ	4044	;# 
  1422   000FCD                     T1CON           equ	4045	;# 
  1423   000FCE                     TMR1            equ	4046	;# 
  1424   000FCE                     TMR1L           equ	4046	;# 
  1425   000FCF                     TMR1H           equ	4047	;# 
  1426   000FD0                     RCON            equ	4048	;# 
  1427   000FD1                     WDTCON          equ	4049	;# 
  1428   000FD2                     HLVDCON         equ	4050	;# 
  1429   000FD2                     LVDCON          equ	4050	;# 
  1430   000FD3                     OSCCON          equ	4051	;# 
  1431   000FD5                     T0CON           equ	4053	;# 
  1432   000FD6                     TMR0            equ	4054	;# 
  1433   000FD6                     TMR0L           equ	4054	;# 
  1434   000FD7                     TMR0H           equ	4055	;# 
  1435   000FD8                     STATUS          equ	4056	;# 
  1436   000FD9                     FSR2            equ	4057	;# 
  1437   000FD9                     FSR2L           equ	4057	;# 
  1438   000FDA                     FSR2H           equ	4058	;# 
  1439   000FDB                     PLUSW2          equ	4059	;# 
  1440   000FDC                     PREINC2         equ	4060	;# 
  1441   000FDD                     POSTDEC2        equ	4061	;# 
  1442   000FDE                     POSTINC2        equ	4062	;# 
  1443   000FDF                     INDF2           equ	4063	;# 
  1444   000FE0                     BSR             equ	4064	;# 
  1445   000FE1                     FSR1            equ	4065	;# 
  1446   000FE1                     FSR1L           equ	4065	;# 
  1447   000FE2                     FSR1H           equ	4066	;# 
  1448   000FE3                     PLUSW1          equ	4067	;# 
  1449   000FE4                     PREINC1         equ	4068	;# 
  1450   000FE5                     POSTDEC1        equ	4069	;# 
  1451   000FE6                     POSTINC1        equ	4070	;# 
  1452   000FE7                     INDF1           equ	4071	;# 
  1453   000FE8                     WREG            equ	4072	;# 
  1454   000FE9                     FSR0            equ	4073	;# 
  1455   000FE9                     FSR0L           equ	4073	;# 
  1456   000FEA                     FSR0H           equ	4074	;# 
  1457   000FEB                     PLUSW0          equ	4075	;# 
  1458   000FEC                     PREINC0         equ	4076	;# 
  1459   000FED                     POSTDEC0        equ	4077	;# 
  1460   000FEE                     POSTINC0        equ	4078	;# 
  1461   000FEF                     INDF0           equ	4079	;# 
  1462   000FF0                     INTCON3         equ	4080	;# 
  1463   000FF1                     INTCON2         equ	4081	;# 
  1464   000FF2                     INTCON          equ	4082	;# 
  1465   000FF3                     PROD            equ	4083	;# 
  1466   000FF3                     PRODL           equ	4083	;# 
  1467   000FF4                     PRODH           equ	4084	;# 
  1468   000FF5                     TABLAT          equ	4085	;# 
  1469   000FF6                     TBLPTR          equ	4086	;# 
  1470   000FF6                     TBLPTRL         equ	4086	;# 
  1471   000FF7                     TBLPTRH         equ	4087	;# 
  1472   000FF8                     TBLPTRU         equ	4088	;# 
  1473   000FF9                     PCLAT           equ	4089	;# 
  1474   000FF9                     PC              equ	4089	;# 
  1475   000FF9                     PCL             equ	4089	;# 
  1476   000FFA                     PCLATH          equ	4090	;# 
  1477   000FFB                     PCLATU          equ	4091	;# 
  1478   000FFC                     STKPTR          equ	4092	;# 
  1479   000FFD                     TOS             equ	4093	;# 
  1480   000FFD                     TOSL            equ	4093	;# 
  1481   000FFE                     TOSH            equ	4094	;# 
  1482   000FFF                     TOSU            equ	4095	;# 
  1483                           
  1484                           	psect	idataBANK0
  1485   0018A8                     __pidataBANK0:
  1486                           	callstack 0
  1487                           
  1488                           ;initializer for tarefa_1@F3416
  1489   0018A8  61                 	db	97
  1490   0018A9  62                 	db	98
  1491   0018AA  63                 	db	99
  1492   000FFD                     _TOS            set	4093
  1493   000FD6                     _TMR0           set	4054
  1494   000FD5                     _T0CONbits      set	4053
  1495   000FFC                     _STKPTR         set	4092
  1496   000FE8                     _WREG           set	4072
  1497   000FD8                     _STATUS         set	4056
  1498   000FE0                     _BSR            set	4064
  1499   000F8B                     _LATCbits       set	3979
  1500   000F94                     _TRISCbits      set	3988
  1501   000F83                     _PORTDbits      set	3971
  1502   000F8C                     _LATDbits       set	3980
  1503   000F95                     _TRISDbits      set	3989
  1504   000FF2                     _INTCONbits     set	4082
  1505                           
  1506                           ; #config settings
  1507                           
  1508                           	psect	cinit
  1509   001714                     __pcinit:
  1510                           	callstack 0
  1511   001714                     start_initialization:
  1512                           	callstack 0
  1513   001714                     __initialization:
  1514                           	callstack 0
  1515                           
  1516                           ; Initialize objects allocated to BANK0 (3 bytes)
  1517                           ; load TBLPTR registers with __pidataBANK0
  1518   001714  0EA8               	movlw	low __pidataBANK0
  1519   001716  6EF6               	movwf	tblptrl,c
  1520   001718  0E18               	movlw	high __pidataBANK0
  1521   00171A  6EF7               	movwf	tblptrh,c
  1522   00171C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1523   00171E  6EF8               	movwf	tblptru,c
  1524   001720  0009               	tblrd		*+	;fetch initializer
  1525   001722  CFF5 F08F          	movff	tablat,__pdataBANK0
  1526   001726  0009               	tblrd		*+	;fetch initializer
  1527   001728  CFF5 F090          	movff	tablat,__pdataBANK0+1
  1528   00172C  0009               	tblrd		*+	;fetch initializer
  1529   00172E  CFF5 F091          	movff	tablat,__pdataBANK0+2
  1530                           
  1531                           ; Clear objects allocated to BIGRAM (533 bytes)
  1532   001732  EE02  F06B         	lfsr	0,__pbssBIGRAM
  1533   001736  EE12 F015          	lfsr	1,533
  1534   00173A                     clear_0:
  1535   00173A  6AEE               	clrf	postinc0,c
  1536   00173C  50E5               	movf	postdec1,w,c
  1537   00173E  50E1               	movf	fsr1l,w,c
  1538   001740  E1FC               	bnz	clear_0
  1539   001742  50E2               	movf	fsr1h,w,c
  1540   001744  E1FA               	bnz	clear_0
  1541                           
  1542                           ; Clear objects allocated to BANK0 (33 bytes)
  1543   001746  EE00  F060         	lfsr	0,__pbssBANK0
  1544   00174A  0E21               	movlw	33
  1545   00174C                     clear_1:
  1546   00174C  6AEE               	clrf	postinc0,c
  1547   00174E  06E8               	decf	wreg,f,c
  1548   001750  E1FD               	bnz	clear_1
  1549   001752                     end_of_initialization:
  1550                           	callstack 0
  1551   001752                     __end_of__initialization:
  1552                           	callstack 0
  1553   001752  901A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1554   001754  921A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1555   001756  0100               	movlb	0
  1556   001758  EF64  F00B         	goto	_main	;jump to C main() function
  1557                           
  1558                           	psect	bssBANK0
  1559   000060                     __pbssBANK0:
  1560                           	callstack 0
  1561   000060                     _canal:
  1562                           	callstack 0
  1563   000060                     	ds	33
  1564                           
  1565                           	psect	dataBANK0
  1566   00008F                     __pdataBANK0:
  1567                           	callstack 0
  1568   00008F                     tarefa_1@F3416:
  1569                           	callstack 0
  1570   00008F                     	ds	3
  1571                           
  1572                           	psect	bssBIGRAM
  1573   00026B                     __pbssBIGRAM:
  1574                           	callstack 0
  1575   00026B                     _readyQueue:
  1576                           	callstack 0
  1577   00026B                     	ds	533
  1578                           
  1579                           	psect	cstackBANK2
  1580   000200                     __pcstackBANK2:
  1581                           	callstack 0
  1582   000200                     os_create_task@id:
  1583                           	callstack 0
  1584                           
  1585                           ; 1 bytes @ 0x0
  1586   000200                     	ds	1
  1587   000201                     os_create_task@new_task:
  1588                           	callstack 0
  1589                           
  1590                           ; 106 bytes @ 0x1
  1591   000201                     	ds	106
  1592                           
  1593                           	psect	cstackBANK1
  1594   000100                     __pcstackBANK1:
  1595                           	callstack 0
  1596   000100                     	ds	73
  1597   000149                     ??_tarefa_1:
  1598                           
  1599                           ; 1 bytes @ 0x49
  1600   000149                     	ds	1
  1601   00014A                     tarefa_1@dados:
  1602                           	callstack 0
  1603                           
  1604                           ; 3 bytes @ 0x4A
  1605   00014A                     	ds	3
  1606   00014D                     tarefa_1@index:
  1607                           	callstack 0
  1608                           
  1609                           ; 2 bytes @ 0x4D
  1610   00014D                     	ds	2
  1611   00014F                     ?___awmod:
  1612                           	callstack 0
  1613   00014F                     os_task_pos@task:
  1614                           	callstack 0
  1615   00014F                     ___awmod@dividend:
  1616                           	callstack 0
  1617                           
  1618                           ; 2 bytes @ 0x4F
  1619   00014F                     	ds	2
  1620   000151                     ___awmod@divisor:
  1621                           	callstack 0
  1622   000151                     
  1623                           ; 1 bytes @ 0x51
  1624   000151                     	ds	2
  1625   000153                     os_task_pos@i:
  1626                           	callstack 0
  1627   000153                     ___awmod@counter:
  1628                           	callstack 0
  1629   000153                     
  1630                           ; 1 bytes @ 0x53
  1631   000153                     	ds	1
  1632   000154                     ___awmod@sign:
  1633                           	callstack 0
  1634                           
  1635                           ; 1 bytes @ 0x54
  1636   000154                     	ds	1
  1637   000155                     ?_rr_scheduler:
  1638                           	callstack 0
  1639   000155                     sem_post@s:
  1640                           	callstack 0
  1641                           
  1642                           ; 1 bytes @ 0x55
  1643   000155                     	ds	1
  1644   000156                     ??_sem_post:
  1645                           
  1646                           ; 1 bytes @ 0x56
  1647   000156                     	ds	1
  1648   000157                     ??_rr_scheduler:
  1649                           
  1650                           ; 1 bytes @ 0x57
  1651   000157                     	ds	2
  1652   000159                     rr_scheduler@idle_selected:
  1653                           	callstack 0
  1654                           
  1655                           ; 1 bytes @ 0x59
  1656   000159                     	ds	1
  1657   00015A                     rr_scheduler@pos_task_running:
  1658                           	callstack 0
  1659                           
  1660                           ; 1 bytes @ 0x5A
  1661   00015A                     	ds	1
  1662   00015B                     sem_wait@s:
  1663                           	callstack 0
  1664   00015B                     
  1665                           ; 1 bytes @ 0x5B
  1666   00015B                     	ds	1
  1667   00015C                     ??_sem_wait:
  1668                           
  1669                           ; 1 bytes @ 0x5C
  1670   00015C                     	ds	7
  1671   000163                     read_pipe@p:
  1672                           	callstack 0
  1673                           
  1674                           ; 1 bytes @ 0x63
  1675   000163                     	ds	1
  1676   000164                     read_pipe@buffer:
  1677                           	callstack 0
  1678                           
  1679                           ; 2 bytes @ 0x64
  1680   000164                     	ds	2
  1681   000166                     ??_read_pipe:
  1682                           
  1683                           ; 1 bytes @ 0x66
  1684   000166                     	ds	1
  1685   000167                     ??_tarefa_2:
  1686                           
  1687                           ; 1 bytes @ 0x67
  1688   000167                     	ds	1
  1689   000168                     tarefa_2@dado:
  1690                           	callstack 0
  1691                           
  1692                           ; 1 bytes @ 0x68
  1693   000168                     	ds	1
  1694   000169                     ??_tarefa_3:
  1695                           
  1696                           ; 1 bytes @ 0x69
  1697   000169                     	ds	1
  1698   00016A                     sem_init@s:
  1699                           	callstack 0
  1700   00016A                     os_create_task@task_f:
  1701                           	callstack 0
  1702   00016A                     
  1703                           ; 1 bytes @ 0x6A
  1704   00016A                     	ds	1
  1705   00016B                     sem_init@init_value:
  1706                           	callstack 0
  1707                           
  1708                           ; 1 bytes @ 0x6B
  1709   00016B                     	ds	1
  1710   00016C                     os_create_task@prior:
  1711                           	callstack 0
  1712   00016C                     ??_sem_init:
  1713                           
  1714                           ; 1 bytes @ 0x6C
  1715   00016C                     	ds	1
  1716   00016D                     ??_os_create_task:
  1717                           
  1718                           ; 1 bytes @ 0x6D
  1719   00016D                     	ds	1
  1720   00016E                     create_pipe@p:
  1721                           	callstack 0
  1722   00016E                     
  1723                           ; 1 bytes @ 0x6E
  1724   00016E                     	ds	1
  1725   00016F                     
  1726                           ; 1 bytes @ 0x6F
  1727                           
  1728                           	psect	cstackBANK0
  1729   000081                     __pcstackBANK0:
  1730                           	callstack 0
  1731   000081                     	ds	7
  1732   000088                     ??_os_delay:
  1733                           
  1734                           ; 1 bytes @ 0x7
  1735   000088                     	ds	7
  1736                           
  1737                           	psect	cstackCOMRAM
  1738   000001                     __pcstackCOMRAM:
  1739                           	callstack 0
  1740   000001                     ?i2___awmod:
  1741                           	callstack 0
  1742   000001                     i2os_task_pos@task:
  1743                           	callstack 0
  1744   000001                     i2___awmod@dividend:
  1745                           	callstack 0
  1746   000001                     ??_os_idle_task:
  1747   000001                     
  1748                           ; 1 bytes @ 0x0
  1749   000001                     	ds	1
  1750   000002                     os_task_time_decrease@i:
  1751                           	callstack 0
  1752                           
  1753                           ; 1 bytes @ 0x1
  1754   000002                     	ds	1
  1755   000003                     i2___awmod@divisor:
  1756                           	callstack 0
  1757   000003                     
  1758                           ; 1 bytes @ 0x2
  1759   000003                     	ds	2
  1760   000005                     os_delay@time:
  1761                           	callstack 0
  1762   000005                     write_pipe@p:
  1763                           	callstack 0
  1764   000005                     i2os_task_pos@i:
  1765                           	callstack 0
  1766   000005                     i2___awmod@counter:
  1767                           	callstack 0
  1768   000005                     
  1769                           ; 1 bytes @ 0x4
  1770   000005                     	ds	1
  1771   000006                     write_pipe@buffer:
  1772                           	callstack 0
  1773   000006                     i2___awmod@sign:
  1774                           	callstack 0
  1775                           
  1776                           ; 1 bytes @ 0x5
  1777   000006                     	ds	1
  1778   000007                     ?i2_rr_scheduler:
  1779                           	callstack 0
  1780   000007                     ??_write_pipe:
  1781                           
  1782                           ; 1 bytes @ 0x6
  1783   000007                     	ds	2
  1784   000009                     ??i2_rr_scheduler:
  1785                           
  1786                           ; 1 bytes @ 0x8
  1787   000009                     	ds	2
  1788   00000B                     i2rr_scheduler@idle_selected:
  1789                           	callstack 0
  1790                           
  1791                           ; 1 bytes @ 0xA
  1792   00000B                     	ds	1
  1793   00000C                     i2rr_scheduler@pos_task_running:
  1794                           	callstack 0
  1795                           
  1796                           ; 1 bytes @ 0xB
  1797   00000C                     	ds	1
  1798   00000D                     ??_ISR_TIMER_0:
  1799   00000D                     
  1800                           ; 1 bytes @ 0xC
  1801   00000D                     	ds	13
  1802                           
  1803 ;;
  1804 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1805 ;;
  1806 ;; *************** function _main *****************
  1807 ;; Defined at:
  1808 ;;		line 7 in file "main.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  2   16[None  ] int 
  1815 ;; Registers used:
  1816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1822 ;;      Params:         0       0       0       0       0       0       0       0       0
  1823 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1824 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1825 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1826 ;;Total ram usage:        0 bytes
  1827 ;; Hardware stack levels required when called: 14
  1828 ;; This function calls:
  1829 ;;		_os_config
  1830 ;;		_os_create_task
  1831 ;;		_os_start
  1832 ;; This function is called by:
  1833 ;;		Startup code after reset
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           	psect	text0
  1838   0016C8                     __ptext0:
  1839                           	callstack 0
  1840   0016C8                     _main:
  1841                           	callstack 17
  1842   0016C8                     
  1843                           ;main.c: 9:     os_config();
  1844   0016C8  EC0E  F00C         	call	_os_config	;wreg free
  1845                           
  1846                           ;main.c: 12:     os_create_task(100, tarefa_1, 5);
  1847   0016CC  0E78               	movlw	low _tarefa_1
  1848   0016CE  0101               	movlb	1	; () banked
  1849   0016D0  6F6A               	movwf	os_create_task@task_f& (0+255),b
  1850   0016D2  0E14               	movlw	high _tarefa_1
  1851   0016D4  6F6B               	movwf	(os_create_task@task_f+1)& (0+255),b
  1852   0016D6  0E05               	movlw	5
  1853   0016D8  6F6C               	movwf	os_create_task@prior& (0+255),b
  1854   0016DA  0E64               	movlw	100
  1855   0016DC  EC14  F00B         	call	_os_create_task
  1856                           
  1857                           ;main.c: 13:     os_create_task(101, tarefa_2, 5);
  1858   0016E0  0EF2               	movlw	low _tarefa_2
  1859   0016E2  0101               	movlb	1	; () banked
  1860   0016E4  6F6A               	movwf	os_create_task@task_f& (0+255),b
  1861   0016E6  0E13               	movlw	high _tarefa_2
  1862   0016E8  6F6B               	movwf	(os_create_task@task_f+1)& (0+255),b
  1863   0016EA  0E05               	movlw	5
  1864   0016EC  6F6C               	movwf	os_create_task@prior& (0+255),b
  1865   0016EE  0E65               	movlw	101
  1866   0016F0  EC14  F00B         	call	_os_create_task
  1867                           
  1868                           ;main.c: 14:     os_create_task(102, tarefa_3, 5);
  1869   0016F4  0EF0               	movlw	low _tarefa_3
  1870   0016F6  0101               	movlb	1	; () banked
  1871   0016F8  6F6A               	movwf	os_create_task@task_f& (0+255),b
  1872   0016FA  0E17               	movlw	high _tarefa_3
  1873   0016FC  6F6B               	movwf	(os_create_task@task_f+1)& (0+255),b
  1874   0016FE  0E05               	movlw	5
  1875   001700  6F6C               	movwf	os_create_task@prior& (0+255),b
  1876   001702  0E66               	movlw	102
  1877   001704  EC14  F00B         	call	_os_create_task
  1878   001708                     
  1879                           ;main.c: 16:     os_start();
  1880   001708  EC3B  F00C         	call	_os_start	;wreg free
  1881   00170C                     l17:
  1882   00170C  EF86  F00B         	goto	l17
  1883   001710  EF07  F000         	goto	start
  1884   001714                     __end_of_main:
  1885                           	callstack 0
  1886                           
  1887 ;; *************** function _os_start *****************
  1888 ;; Defined at:
  1889 ;;		line 22 in file "kernel.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1903 ;;      Params:         0       0       0       0       0       0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1906 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1907 ;;Total ram usage:        0 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 13
  1910 ;; This function calls:
  1911 ;;		_conf_interrupts
  1912 ;;		_conf_timer_0
  1913 ;;		_config_app
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text1
  1920   001876                     __ptext1:
  1921                           	callstack 0
  1922   001876                     _os_start:
  1923                           	callstack 17
  1924   001876                     
  1925                           ;kernel.c: 25:     conf_interrupts();
  1926   001876  EC52  F00C         	call	_conf_interrupts	;wreg free
  1927   00187A                     
  1928                           ;kernel.c: 28:     config_app();
  1929   00187A  EC30  F00C         	call	_config_app	;wreg free
  1930   00187E                     
  1931                           ;kernel.c: 30:     conf_timer_0();
  1932   00187E  EC22  F00C         	call	_conf_timer_0	;wreg free
  1933   001882                     
  1934                           ;kernel.c: 33:     (INTCONbits.GIE = 1);
  1935   001882  8EF2               	bsf	242,7,c	;volatile
  1936   001884  0012               	return		;funcret
  1937   001886                     __end_of_os_start:
  1938                           	callstack 0
  1939                           
  1940 ;; *************** function _config_app *****************
  1941 ;; Defined at:
  1942 ;;		line 11 in file "user_app.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1956 ;;      Params:         0       0       0       0       0       0       0       0       0
  1957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1959 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; Hardware stack levels required when called: 12
  1963 ;; This function calls:
  1964 ;;		_create_pipe
  1965 ;; This function is called by:
  1966 ;;		_os_start
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text2
  1971   001860                     __ptext2:
  1972                           	callstack 0
  1973   001860                     _config_app:
  1974                           	callstack 17
  1975   001860                     
  1976                           ;user_app.c: 13:     TRISDbits.RD0 = TRISDbits.RD1 = TRISDbits.RD2 = 0;
  1977   001860  9495               	bcf	149,2,c	;volatile
  1978   001862  9295               	bcf	149,1,c	;volatile
  1979   001864  9095               	bcf	149,0,c	;volatile
  1980                           
  1981                           ;user_app.c: 15:     TRISCbits.RC0 = TRISCbits.RC1 = 0;
  1982   001866  9294               	bcf	148,1,c	;volatile
  1983   001868  9094               	bcf	148,0,c	;volatile
  1984   00186A                     
  1985                           ;user_app.c: 18:     create_pipe(&canal);
  1986   00186A  0E60               	movlw	low _canal
  1987   00186C  0101               	movlb	1	; () banked
  1988   00186E  6F6E               	movwf	create_pipe@p& (0+255),b
  1989   001870  ECAE  F00B         	call	_create_pipe	;# 
  1990   001874  0012               	return		;funcret
  1991   001876                     __end_of_config_app:
  1992                           	callstack 0
  1993                           
  1994 ;; *************** function _create_pipe *****************
  1995 ;; Defined at:
  1996 ;;		line 5 in file "pipe.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  p               1  110[BANK1 ] PTR struct pipe
  1999 ;;		 -> canal(33), 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2011 ;;      Params:         0       0       1       0       0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2014 ;;      Totals:         0       0       1       0       0       0       0       0       0
  2015 ;;Total ram usage:        1 bytes
  2016 ;; Hardware stack levels used: 1
  2017 ;; Hardware stack levels required when called: 11
  2018 ;; This function calls:
  2019 ;;		_sem_init
  2020 ;; This function is called by:
  2021 ;;		_config_app
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           	psect	text3
  2026   00175C                     __ptext3:
  2027                           	callstack 0
  2028   00175C                     _create_pipe:
  2029                           	callstack 17
  2030   00175C                     
  2031                           ;pipe.c: 5: void create_pipe(pipe_t *p);pipe.c: 6: {;pipe.c: 7:     p->pipe_pos_read = 0
      +                          ;
  2032   00175C  0101               	movlb	1	; () banked
  2033   00175E  516E               	movf	create_pipe@p& (0+255),w,b
  2034   001760  6ED9               	movwf	fsr2l,c
  2035   001762  6ADA               	clrf	fsr2h,c
  2036   001764  6ADF               	clrf	indf2,c
  2037   001766                     
  2038                           ; BSR set to: 1
  2039                           ;pipe.c: 8:     p->pipe_pos_write = 0;
  2040   001766  516E               	movf	create_pipe@p& (0+255),w,b
  2041   001768  6ED9               	movwf	fsr2l,c
  2042   00176A  6ADA               	clrf	fsr2h,c
  2043   00176C  0E01               	movlw	1
  2044   00176E  26D9               	addwf	fsr2l,f,c
  2045   001770  6ADF               	clrf	indf2,c
  2046   001772                     
  2047                           ; BSR set to: 1
  2048                           ;pipe.c: 10:     sem_init(&p->pipe_sem_read, 0);
  2049   001772  516E               	movf	create_pipe@p& (0+255),w,b
  2050   001774  0F05               	addlw	5
  2051   001776  6F6A               	movwf	sem_init@s& (0+255),b
  2052   001778  0E00               	movlw	0
  2053   00177A  6F6B               	movwf	sem_init@init_value& (0+255),b
  2054   00177C  ECC9  F00B         	call	_sem_init	;wreg free
  2055   001780                     
  2056                           ;pipe.c: 11:     sem_init(&p->pipe_sem_write, 3);
  2057   001780  0101               	movlb	1	; () banked
  2058   001782  516E               	movf	create_pipe@p& (0+255),w,b
  2059   001784  0F13               	addlw	19
  2060   001786  6F6A               	movwf	sem_init@s& (0+255),b
  2061   001788  0E03               	movlw	3
  2062   00178A  6F6B               	movwf	sem_init@init_value& (0+255),b
  2063   00178C  ECC9  F00B         	call	_sem_init	;wreg free
  2064   001790  0012               	return		;funcret
  2065   001792                     __end_of_create_pipe:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _sem_init *****************
  2069 ;; Defined at:
  2070 ;;		line 10 in file "sync.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  s               1  106[BANK1 ] PTR struct semaphore
  2073 ;;		 -> canal(33), 
  2074 ;;  init_value      1  107[BANK1 ] unsigned char 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2086 ;;      Params:         0       0       2       0       0       0       0       0       0
  2087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2088 ;;      Temps:          0       0       2       0       0       0       0       0       0
  2089 ;;      Totals:         0       0       4       0       0       0       0       0       0
  2090 ;;Total ram usage:        4 bytes
  2091 ;; Hardware stack levels used: 1
  2092 ;; Hardware stack levels required when called: 10
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_create_pipe
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text4
  2101   001792                     __ptext4:
  2102                           	callstack 0
  2103   001792                     _sem_init:
  2104                           	callstack 17
  2105   001792                     
  2106                           ;sync.c: 10: void sem_init(sem_t *s, uint8_t init_value);sync.c: 11: {;sync.c: 12:     s
      +                          ->contador = init_value;
  2107   001792  0101               	movlb	1	; () banked
  2108   001794  516B               	movf	sem_init@init_value& (0+255),w,b
  2109   001796  6F6C               	movwf	??_sem_init& (0+255),b
  2110   001798  6B6D               	clrf	(??_sem_init+1)& (0+255),b
  2111   00179A  516A               	movf	sem_init@s& (0+255),w,b
  2112   00179C  6ED9               	movwf	fsr2l,c
  2113   00179E  6ADA               	clrf	fsr2h,c
  2114   0017A0  C16C  FFDE         	movff	??_sem_init,postinc2
  2115   0017A4  C16D  FFDD         	movff	??_sem_init+1,postdec2
  2116   0017A8                     
  2117                           ; BSR set to: 1
  2118                           ;sync.c: 13:     s->sem_queue_in = 0;
  2119   0017A8  516A               	movf	sem_init@s& (0+255),w,b
  2120   0017AA  6ED9               	movwf	fsr2l,c
  2121   0017AC  6ADA               	clrf	fsr2h,c
  2122   0017AE  0E0C               	movlw	12
  2123   0017B0  26D9               	addwf	fsr2l,f,c
  2124   0017B2  6ADF               	clrf	indf2,c
  2125   0017B4                     
  2126                           ; BSR set to: 1
  2127                           ;sync.c: 14:     s->sem_queue_out = 0;
  2128   0017B4  516A               	movf	sem_init@s& (0+255),w,b
  2129   0017B6  6ED9               	movwf	fsr2l,c
  2130   0017B8  6ADA               	clrf	fsr2h,c
  2131   0017BA  0E0D               	movlw	13
  2132   0017BC  26D9               	addwf	fsr2l,f,c
  2133   0017BE  6ADF               	clrf	indf2,c
  2134   0017C0                     
  2135                           ; BSR set to: 1
  2136   0017C0  0012               	return		;funcret
  2137   0017C2                     __end_of_sem_init:
  2138                           	callstack 0
  2139                           
  2140 ;; *************** function _conf_timer_0 *****************
  2141 ;; Defined at:
  2142 ;;		line 7 in file "hardware.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2156 ;;      Params:         0       0       0       0       0       0       0       0       0
  2157 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2159 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2160 ;;Total ram usage:        0 bytes
  2161 ;; Hardware stack levels used: 1
  2162 ;; Hardware stack levels required when called: 10
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_os_start
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text5
  2171   001844                     __ptext5:
  2172                           	callstack 0
  2173   001844                     _conf_timer_0:
  2174                           	callstack 19
  2175   001844                     
  2176                           ;hardware.c: 10:     T0CONbits.T0CS = 0;
  2177   001844  9AD5               	bcf	213,5,c	;volatile
  2178                           
  2179                           ;hardware.c: 11:     T0CONbits.PSA = 0;
  2180   001846  96D5               	bcf	213,3,c	;volatile
  2181   001848                     
  2182                           ;hardware.c: 12:     T0CONbits.T0PS = 0b110;
  2183   001848  50D5               	movf	213,w,c	;volatile
  2184   00184A  0BF8               	andlw	-8
  2185   00184C  0906               	iorlw	6
  2186   00184E  6ED5               	movwf	213,c	;volatile
  2187                           
  2188                           ;hardware.c: 13:     TMR0 = 128;
  2189   001850  0E00               	movlw	0
  2190   001852  6ED7               	movwf	215,c	;volatile
  2191   001854  0E80               	movlw	128
  2192   001856  6ED6               	movwf	214,c	;volatile
  2193   001858                     
  2194                           ;hardware.c: 14:     INTCONbits.TMR0IE = 1;
  2195   001858  8AF2               	bsf	242,5,c	;volatile
  2196   00185A                     
  2197                           ;hardware.c: 15:     INTCONbits.TMR0IF = 0;
  2198   00185A  94F2               	bcf	242,2,c	;volatile
  2199   00185C                     
  2200                           ;hardware.c: 16:     T0CONbits.TMR0ON = 1;
  2201   00185C  8ED5               	bsf	213,7,c	;volatile
  2202   00185E  0012               	return		;funcret
  2203   001860                     __end_of_conf_timer_0:
  2204                           	callstack 0
  2205                           
  2206 ;; *************** function _conf_interrupts *****************
  2207 ;; Defined at:
  2208 ;;		line 19 in file "hardware.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;		None
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		None
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2222 ;;      Params:         0       0       0       0       0       0       0       0       0
  2223 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2225 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2226 ;;Total ram usage:        0 bytes
  2227 ;; Hardware stack levels used: 1
  2228 ;; Hardware stack levels required when called: 10
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_os_start
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text6
  2237   0018A4                     __ptext6:
  2238                           	callstack 0
  2239   0018A4                     _conf_interrupts:
  2240                           	callstack 19
  2241   0018A4                     
  2242                           ;hardware.c: 21:     INTCONbits.PEIE = 1;
  2243   0018A4  8CF2               	bsf	242,6,c	;volatile
  2244   0018A6  0012               	return		;funcret
  2245   0018A8                     __end_of_conf_interrupts:
  2246                           	callstack 0
  2247                           
  2248 ;; *************** function _os_config *****************
  2249 ;; Defined at:
  2250 ;;		line 11 in file "kernel.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2264 ;;      Params:         0       0       0       0       0       0       0       0       0
  2265 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2267 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2268 ;;Total ram usage:        0 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 11
  2271 ;; This function calls:
  2272 ;;		_os_create_task
  2273 ;; This function is called by:
  2274 ;;		_main
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text7
  2279   00181C                     __ptext7:
  2280                           	callstack 0
  2281   00181C                     _os_config:
  2282                           	callstack 19
  2283   00181C                     
  2284                           ;kernel.c: 13:     readyQueue.readyQueueSize = 0;
  2285   00181C  0E00               	movlw	0
  2286   00181E  CFE8 F47D          	movff	wreg,_readyQueue+530
  2287                           
  2288                           ;kernel.c: 14:     readyQueue.taskRunning = 0;
  2289   001822  0E00               	movlw	0
  2290   001824  CFE8 F47E          	movff	wreg,_readyQueue+531
  2291   001828  0E00               	movlw	0
  2292   00182A  CFE8 F47F          	movff	wreg,_readyQueue+532
  2293   00182E                     
  2294                           ;kernel.c: 17:     os_create_task(0, os_idle_task, 1);
  2295   00182E  0EC2               	movlw	low _os_idle_task
  2296   001830  0101               	movlb	1	; () banked
  2297   001832  6F6A               	movwf	os_create_task@task_f& (0+255),b
  2298   001834  0E17               	movlw	high _os_idle_task
  2299   001836  6F6B               	movwf	(os_create_task@task_f+1)& (0+255),b
  2300   001838  0E01               	movlw	1
  2301   00183A  6F6C               	movwf	os_create_task@prior& (0+255),b
  2302   00183C  0E00               	movlw	0
  2303   00183E  EC14  F00B         	call	_os_create_task	;# 
  2304   001842  0012               	return		;funcret
  2305   001844                     __end_of_os_config:
  2306                           	callstack 0
  2307                           
  2308 ;; *************** function _os_create_task *****************
  2309 ;; Defined at:
  2310 ;;		line 9 in file "syscall.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  id              1    wreg     unsigned char 
  2313 ;;  task_f          2  106[BANK1 ] PTR FTN()void 
  2314 ;;		 -> os_idle_task(1), tarefa_3(1), tarefa_2(1), tarefa_1(1), 
  2315 ;;  prior           1  108[BANK1 ] unsigned char 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  id              1    0[BANK2 ] unsigned char 
  2318 ;;  new_task      106    1[BANK2 ] struct tcb
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2328 ;;      Params:         0       0       3       0       0       0       0       0       0
  2329 ;;      Locals:         0       0       0     107       0       0       0       0       0
  2330 ;;      Temps:          0       0       1       0       0       0       0       0       0
  2331 ;;      Totals:         0       0       4     107       0       0       0       0       0
  2332 ;;Total ram usage:      111 bytes
  2333 ;; Hardware stack levels used: 1
  2334 ;; Hardware stack levels required when called: 10
  2335 ;; This function calls:
  2336 ;;		Nothing
  2337 ;; This function is called by:
  2338 ;;		_main
  2339 ;;		_os_config
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text8
  2344   001628                     __ptext8:
  2345                           	callstack 0
  2346   001628                     _os_create_task:
  2347                           	callstack 20
  2348                           
  2349                           ;incstack = 0
  2350                           ;os_create_task@id stored from wreg
  2351   001628  0102               	movlb	2	; () banked
  2352   00162A  6F00               	movwf	os_create_task@id& (0+255),b
  2353   00162C                     
  2354                           ;syscall.c: 9: void os_create_task(uint8_t id, f_ptr task_f, uint8_t prior);syscall.c: 1
      +                          0: {;syscall.c: 11:     tcb_t new_task;;syscall.c: 13:     new_task.task_id = id;
  2355   00162C  C200  F201         	movff	os_create_task@id,os_create_task@new_task
  2356   001630                     
  2357                           ;syscall.c: 14:     new_task.task_func = task_f;
  2358   001630  C16A  F202         	movff	os_create_task@task_f,os_create_task@new_task+1
  2359   001634  C16B  F203         	movff	os_create_task@task_f+1,os_create_task@new_task+2
  2360   001638                     
  2361                           ;syscall.c: 15:     new_task.task_priority = prior;
  2362   001638  C16C  F205         	movff	os_create_task@prior,os_create_task@new_task+4
  2363   00163C                     
  2364                           ;syscall.c: 16:     new_task.task_state = READY;
  2365   00163C  0102               	movlb	2	; () banked
  2366   00163E  6B04               	clrf	(os_create_task@new_task+3)& (0+255),b
  2367   001640                     
  2368                           ; BSR set to: 2
  2369                           ;syscall.c: 18:     new_task.BSR_reg = 0;
  2370   001640  6B07               	clrf	(os_create_task@new_task+6)& (0+255),b
  2371   001642                     
  2372                           ; BSR set to: 2
  2373                           ;syscall.c: 19:     new_task.STATUS_reg = 0;
  2374   001642  6B09               	clrf	(os_create_task@new_task+8)& (0+255),b
  2375   001644                     
  2376                           ; BSR set to: 2
  2377                           ;syscall.c: 20:     new_task.WORK_reg = 0;
  2378   001644  6B08               	clrf	(os_create_task@new_task+7)& (0+255),b
  2379   001646                     
  2380                           ; BSR set to: 2
  2381                           ;syscall.c: 21:     new_task.task_sp = 0;
  2382   001646  6B6A               	clrf	(os_create_task@new_task+105)& (0+255),b
  2383   001648                     
  2384                           ; BSR set to: 2
  2385                           ;syscall.c: 24:     readyQueue.readyQueue[readyQueue.readyQueueSize++] = new_task;
  2386   001648  EE22  F001         	lfsr	2,os_create_task@new_task
  2387   00164C  C47D  F16D         	movff	_readyQueue+530,??_os_create_task
  2388   001650  0101               	movlb	1	; () banked
  2389   001652  516D               	movf	??_os_create_task& (0+255),w,b
  2390   001654  0D6A               	mullw	106
  2391   001656  0E6B               	movlw	low _readyQueue
  2392   001658  24F3               	addwf	243,w,c
  2393   00165A  6EE1               	movwf	fsr1l,c
  2394   00165C  0E02               	movlw	high _readyQueue
  2395   00165E  20F4               	addwfc	prodh,w,c
  2396   001660  6EE2               	movwf	fsr1h,c
  2397   001662  0E69               	movlw	105
  2398   001664                     u3241:
  2399   001664  CFDB FFE3          	movff	plusw2,plusw1
  2400   001668  06E8               	decf	wreg,f,c
  2401   00166A  E2FC               	bc	u3241
  2402   00166C                     
  2403                           ; BSR set to: 1
  2404   00166C  C47D  FFE8         	movff	_readyQueue+530,wreg
  2405   001670  0F01               	addlw	1
  2406   001672  CFE8 F47D          	movff	wreg,_readyQueue+530
  2407   001676                     
  2408                           ; BSR set to: 1
  2409   001676  0012               	return		;funcret
  2410   001678                     __end_of_os_create_task:
  2411                           	callstack 0
  2412                           
  2413 ;; *************** function _os_idle_task *****************
  2414 ;; Defined at:
  2415 ;;		line 37 in file "kernel.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;		None
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;		None
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2429 ;;      Params:         0       0       0       0       0       0       0       0       0
  2430 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2431 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2432 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2433 ;;Total ram usage:        1 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; Hardware stack levels required when called: 4
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_os_config
  2440 ;;		_rr_scheduler
  2441 ;;		i2_rr_scheduler
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text9
  2446   0017C2                     __ptext9:
  2447                           	callstack 0
  2448   0017C2                     _os_idle_task:
  2449                           	callstack 22
  2450   0017C2                     
  2451                           ;kernel.c: 39:     TRISDbits.RD3 = 0;
  2452   0017C2  9695               	bcf	149,3,c	;volatile
  2453   0017C4                     l1329:
  2454                           
  2455                           ;kernel.c: 43:         LATDbits.LD3 = ~PORTDbits.RD3;
  2456   0017C4  B683               	btfsc	131,3,c	;volatile
  2457   0017C6  EFE7  F00B         	goto	u41_21
  2458   0017CA  EFEA  F00B         	goto	u41_20
  2459   0017CE                     u41_21:
  2460   0017CE  0E01               	movlw	1
  2461   0017D0  EFEB  F00B         	goto	u41_26
  2462   0017D4                     u41_20:
  2463   0017D4  0E00               	movlw	0
  2464   0017D6                     u41_26:
  2465   0017D6  0AFF               	xorlw	255
  2466   0017D8  6E01               	movwf	??_os_idle_task^0,c
  2467   0017DA  4601               	rlncf	??_os_idle_task^0,f,c
  2468   0017DC  4601               	rlncf	??_os_idle_task^0,f,c
  2469   0017DE  4601               	rlncf	??_os_idle_task^0,f,c
  2470   0017E0  508C               	movf	140,w,c	;volatile
  2471   0017E2  1801               	xorwf	??_os_idle_task^0,w,c
  2472   0017E4  0BF7               	andlw	-9
  2473   0017E6  1801               	xorwf	??_os_idle_task^0,w,c
  2474   0017E8  6E8C               	movwf	140,c	;volatile
  2475   0017EA  EFE2  F00B         	goto	l1329
  2476   0017EE  0012               	return		;funcret
  2477   0017F0                     __end_of_os_idle_task:
  2478                           	callstack 0
  2479                           
  2480 ;; *************** function _tarefa_1 *****************
  2481 ;; Defined at:
  2482 ;;		line 23 in file "user_app.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;		None
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  dados           3   74[BANK1 ] unsigned char [3]
  2487 ;;  index           2   77[BANK1 ] int 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      void 
  2490 ;; Registers used:
  2491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2497 ;;      Params:         0       0       0       0       0       0       0       0       0
  2498 ;;      Locals:         0       0       5       0       0       0       0       0       0
  2499 ;;      Temps:          0       0       1       0       0       0       0       0       0
  2500 ;;      Totals:         0       0       6       0       0       0       0       0       0
  2501 ;;Total ram usage:        6 bytes
  2502 ;; Hardware stack levels used: 1
  2503 ;; Hardware stack levels required when called: 9
  2504 ;; This function calls:
  2505 ;;		___awmod
  2506 ;;		_os_delay
  2507 ;;		_write_pipe
  2508 ;; This function is called by:
  2509 ;;		_main
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text10
  2514   001478                     __ptext10:
  2515                           	callstack 0
  2516   001478                     _tarefa_1:
  2517                           	callstack 17
  2518   001478                     
  2519                           ;user_app.c: 25:     char dados[] = {'a', 'b', 'c'};
  2520   001478  C08F  F14A         	movff	tarefa_1@F3416,tarefa_1@dados
  2521   00147C  C090  F14B         	movff	tarefa_1@F3416+1,tarefa_1@dados+1
  2522   001480  C091  F14C         	movff	tarefa_1@F3416+2,tarefa_1@dados+2
  2523   001484                     
  2524                           ;user_app.c: 26:     int index = 0;
  2525   001484  0E00               	movlw	0
  2526   001486  0101               	movlb	1	; () banked
  2527   001488  6F4E               	movwf	(tarefa_1@index+1)& (0+255),b
  2528   00148A  0E00               	movlw	0
  2529   00148C  6F4D               	movwf	tarefa_1@index& (0+255),b
  2530   00148E                     l3421:
  2531                           
  2532                           ;user_app.c: 28:         LATDbits.LD0 = ~PORTDbits.RD0;
  2533   00148E  B083               	btfsc	131,0,c	;volatile
  2534   001490  EF4C  F00A         	goto	u308_21
  2535   001494  EF4F  F00A         	goto	u308_20
  2536   001498                     u308_21:
  2537   001498  0E01               	movlw	1
  2538   00149A  EF50  F00A         	goto	u308_26
  2539   00149E                     u308_20:
  2540   00149E  0E00               	movlw	0
  2541   0014A0                     u308_26:
  2542   0014A0  0AFF               	xorlw	255
  2543   0014A2  0101               	movlb	1	; () banked
  2544   0014A4  6F49               	movwf	??_tarefa_1& (0+255),b
  2545   0014A6  508C               	movf	140,w,c	;volatile
  2546   0014A8  1949               	xorwf	??_tarefa_1& (0+255),w,b
  2547   0014AA  0BFE               	andlw	-2
  2548   0014AC  1949               	xorwf	??_tarefa_1& (0+255),w,b
  2549   0014AE  6E8C               	movwf	140,c	;volatile
  2550   0014B0                     
  2551                           ; BSR set to: 1
  2552                           ;user_app.c: 30:         write_pipe(&canal, dados[index]);
  2553   0014B0  0E60               	movlw	low _canal
  2554   0014B2  6E05               	movwf	write_pipe@p^0,c
  2555   0014B4  0E4A               	movlw	low tarefa_1@dados
  2556   0014B6  254D               	addwf	tarefa_1@index& (0+255),w,b
  2557   0014B8  6ED9               	movwf	fsr2l,c
  2558   0014BA  0E01               	movlw	high tarefa_1@dados
  2559   0014BC  214E               	addwfc	(tarefa_1@index+1)& (0+255),w,b
  2560   0014BE  6EDA               	movwf	fsr2h,c
  2561   0014C0  50DF               	movf	indf2,w,c
  2562   0014C2  6E06               	movwf	write_pipe@buffer^0,c
  2563   0014C4  EC7B  F00A         	call	_write_pipe	;wreg free
  2564   0014C8                     
  2565                           ;user_app.c: 31:         index = (index + 1) % 3;
  2566   0014C8  0E01               	movlw	1
  2567   0014CA  0101               	movlb	1	; () banked
  2568   0014CC  254D               	addwf	tarefa_1@index& (0+255),w,b
  2569   0014CE  6F4F               	movwf	___awmod@dividend& (0+255),b
  2570   0014D0  0E00               	movlw	0
  2571   0014D2  214E               	addwfc	(tarefa_1@index+1)& (0+255),w,b
  2572   0014D4  6F50               	movwf	(___awmod@dividend+1)& (0+255),b
  2573   0014D6  0E00               	movlw	0
  2574   0014D8  6F52               	movwf	(___awmod@divisor+1)& (0+255),b
  2575   0014DA  0E03               	movlw	3
  2576   0014DC  6F51               	movwf	___awmod@divisor& (0+255),b
  2577   0014DE  ECBB  F008         	call	___awmod	;wreg free
  2578   0014E2  C14F  F14D         	movff	?___awmod,tarefa_1@index
  2579   0014E6  C150  F14E         	movff	?___awmod+1,tarefa_1@index+1
  2580   0014EA                     
  2581                           ;user_app.c: 32:         os_delay(50);
  2582   0014EA  0E32               	movlw	50
  2583   0014EC  ECAB  F006         	call	_os_delay
  2584   0014F0  EF47  F00A         	goto	l3421
  2585   0014F4  0012               	return		;funcret
  2586   0014F6                     __end_of_tarefa_1:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function _write_pipe *****************
  2590 ;; Defined at:
  2591 ;;		line 30 in file "pipe.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  p               1    4[COMRAM] PTR struct pipe
  2594 ;;		 -> canal(33), 
  2595 ;;  buffer          1    5[COMRAM] unsigned char 
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2607 ;;      Params:         2       0       0       0       0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2609 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2610 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2611 ;;Total ram usage:        3 bytes
  2612 ;; Hardware stack levels used: 1
  2613 ;; Hardware stack levels required when called: 8
  2614 ;; This function calls:
  2615 ;;		___awmod
  2616 ;;		_sem_post
  2617 ;;		_sem_wait
  2618 ;; This function is called by:
  2619 ;;		_tarefa_1
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text11
  2624   0014F6                     __ptext11:
  2625                           	callstack 0
  2626   0014F6                     _write_pipe:
  2627                           	callstack 17
  2628   0014F6                     
  2629                           ;pipe.c: 30: void write_pipe(pipe_t *p, char buffer);pipe.c: 31: {;pipe.c: 32:     (INTC
      +                          ONbits.GIE = 0);
  2630   0014F6  9EF2               	bcf	242,7,c	;volatile
  2631   0014F8                     
  2632                           ;pipe.c: 35:     sem_wait(&p->pipe_sem_write);
  2633   0014F8  5005               	movf	write_pipe@p^0,w,c
  2634   0014FA  0F13               	addlw	19
  2635   0014FC  0101               	movlb	1	; () banked
  2636   0014FE  6F5B               	movwf	sem_wait@s& (0+255),b
  2637   001500  EC01  F004         	call	_sem_wait	;wreg free
  2638   001504                     
  2639                           ;pipe.c: 37:     p->pipe_data[p->pipe_pos_write] = buffer;
  2640   001504  5005               	movf	write_pipe@p^0,w,c
  2641   001506  6ED9               	movwf	fsr2l,c
  2642   001508  6ADA               	clrf	fsr2h,c
  2643   00150A  0E01               	movlw	1
  2644   00150C  26D9               	addwf	fsr2l,f,c
  2645   00150E  50DF               	movf	indf2,w,c
  2646   001510  6E07               	movwf	??_write_pipe^0,c
  2647   001512  5005               	movf	write_pipe@p^0,w,c
  2648   001514  2407               	addwf	??_write_pipe^0,w,c
  2649   001516  6ED9               	movwf	fsr2l,c
  2650   001518  6ADA               	clrf	fsr2h,c
  2651   00151A  0E02               	movlw	2
  2652   00151C  26D9               	addwf	fsr2l,f,c
  2653   00151E  C006  FFDF         	movff	write_pipe@buffer,indf2
  2654   001522                     
  2655                           ;pipe.c: 38:     p->pipe_pos_write = (p->pipe_pos_write + 1) % 3;
  2656   001522  5005               	movf	write_pipe@p^0,w,c
  2657   001524  6ED9               	movwf	fsr2l,c
  2658   001526  6ADA               	clrf	fsr2h,c
  2659   001528  0E01               	movlw	1
  2660   00152A  26D9               	addwf	fsr2l,f,c
  2661   00152C  5005               	movf	write_pipe@p^0,w,c
  2662   00152E  6EE1               	movwf	fsr1l,c
  2663   001530  6AE2               	clrf	fsr1h,c
  2664   001532  0E01               	movlw	1
  2665   001534  26E1               	addwf	fsr1l,f,c
  2666   001536  50E7               	movf	indf1,w,c
  2667   001538  6E07               	movwf	??_write_pipe^0,c
  2668   00153A  0E01               	movlw	1
  2669   00153C  2407               	addwf	??_write_pipe^0,w,c
  2670   00153E  0101               	movlb	1	; () banked
  2671   001540  6F4F               	movwf	___awmod@dividend& (0+255),b
  2672   001542  6B50               	clrf	(___awmod@dividend+1)& (0+255),b
  2673   001544  0E00               	movlw	0
  2674   001546  2350               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  2675   001548  0E00               	movlw	0
  2676   00154A  6F52               	movwf	(___awmod@divisor+1)& (0+255),b
  2677   00154C  0E03               	movlw	3
  2678   00154E  6F51               	movwf	___awmod@divisor& (0+255),b
  2679   001550  ECBB  F008         	call	___awmod	;wreg free
  2680   001554  0101               	movlb	1	; () banked
  2681   001556  514F               	movf	?___awmod& (0+255),w,b
  2682   001558  6EDF               	movwf	indf2,c
  2683   00155A                     
  2684                           ; BSR set to: 1
  2685                           ;pipe.c: 41:     sem_post(&p->pipe_sem_read);
  2686   00155A  5005               	movf	write_pipe@p^0,w,c
  2687   00155C  0F05               	addlw	5
  2688   00155E  6F55               	movwf	sem_post@s& (0+255),b
  2689   001560  EC6A  F009         	call	_sem_post	;wreg free
  2690   001564                     
  2691                           ;pipe.c: 43:     (INTCONbits.GIE = 1);
  2692   001564  8EF2               	bsf	242,7,c	;volatile
  2693   001566  0012               	return		;funcret
  2694   001568                     __end_of_write_pipe:
  2695                           	callstack 0
  2696                           
  2697 ;; *************** function _sem_wait *****************
  2698 ;; Defined at:
  2699 ;;		line 17 in file "sync.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  s               1   91[BANK1 ] PTR struct semaphore
  2702 ;;		 -> canal(33), 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2714 ;;      Params:         0       0       1       0       0       0       0       0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2716 ;;      Temps:          0       0       7       0       0       0       0       0       0
  2717 ;;      Totals:         0       0       8       0       0       0       0       0       0
  2718 ;;Total ram usage:        8 bytes
  2719 ;; Hardware stack levels used: 1
  2720 ;; Hardware stack levels required when called: 7
  2721 ;; This function calls:
  2722 ;;		___awmod
  2723 ;;		_scheduler
  2724 ;; This function is called by:
  2725 ;;		_read_pipe
  2726 ;;		_write_pipe
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text12
  2731   000802                     __ptext12:
  2732                           	callstack 0
  2733   000802                     _sem_wait:
  2734                           	callstack 17
  2735   000802                     
  2736                           ;sync.c: 17: void sem_wait(sem_t *s);sync.c: 18: {;sync.c: 19:     (INTCONbits.GIE = 0);
  2737   000802  9EF2               	bcf	242,7,c	;volatile
  2738   000804                     
  2739                           ;sync.c: 22:     s->contador--;
  2740   000804  0101               	movlb	1	; () banked
  2741   000806  515B               	movf	sem_wait@s& (0+255),w,b
  2742   000808  6ED9               	movwf	fsr2l,c
  2743   00080A  6ADA               	clrf	fsr2h,c
  2744   00080C  06DE               	decf	postinc2,f,c
  2745   00080E  0E00               	movlw	0
  2746   000810  5ADD               	subwfb	postdec2,f,c
  2747                           
  2748                           ;sync.c: 24:     if (s->contador < 0) {
  2749   000812  515B               	movf	sem_wait@s& (0+255),w,b
  2750   000814  6ED9               	movwf	fsr2l,c
  2751   000816  6ADA               	clrf	fsr2h,c
  2752   000818  0E01               	movlw	1
  2753   00081A  BEDB               	btfsc	plusw2,7,c
  2754   00081C  EF14  F004         	goto	i1u296_20
  2755   000820  EF12  F004         	goto	i1u296_21
  2756   000824                     i1u296_21:
  2757   000824  EF64  F005         	goto	i1l3329
  2758   000828                     i1u296_20:
  2759   000828                     
  2760                           ; BSR set to: 1
  2761                           ;sync.c: 26:         s->sem_queue[s->sem_queue_in] = readyQueue.taskRunning;
  2762   000828  EE24  F07E         	lfsr	2,_readyQueue+531
  2763   00082C  515B               	movf	sem_wait@s& (0+255),w,b
  2764   00082E  6EE1               	movwf	fsr1l,c
  2765   000830  6AE2               	clrf	fsr1h,c
  2766   000832  0E0C               	movlw	12
  2767   000834  26E1               	addwf	fsr1l,f,c
  2768   000836  50E7               	movf	indf1,w,c
  2769   000838  0D02               	mullw	2
  2770   00083A  515B               	movf	sem_wait@s& (0+255),w,b
  2771   00083C  24F3               	addwf	243,w,c
  2772   00083E  6EE1               	movwf	fsr1l,c
  2773   000840  6AE2               	clrf	fsr1h,c
  2774   000842  0E02               	movlw	2
  2775   000844  26E1               	addwf	fsr1l,f,c
  2776   000846  CFDE FFE6          	movff	postinc2,postinc1
  2777   00084A  CFDD FFE5          	movff	postdec2,postdec1
  2778   00084E                     
  2779                           ; BSR set to: 1
  2780                           ;sync.c: 27:         s->sem_queue_in = (s->sem_queue_in + 1) % 5;
  2781   00084E  515B               	movf	sem_wait@s& (0+255),w,b
  2782   000850  6ED9               	movwf	fsr2l,c
  2783   000852  6ADA               	clrf	fsr2h,c
  2784   000854  0E0C               	movlw	12
  2785   000856  26D9               	addwf	fsr2l,f,c
  2786   000858  515B               	movf	sem_wait@s& (0+255),w,b
  2787   00085A  6EE1               	movwf	fsr1l,c
  2788   00085C  6AE2               	clrf	fsr1h,c
  2789   00085E  0E0C               	movlw	12
  2790   000860  26E1               	addwf	fsr1l,f,c
  2791   000862  50E7               	movf	indf1,w,c
  2792   000864  6F5C               	movwf	??_sem_wait& (0+255),b
  2793   000866  0E01               	movlw	1
  2794   000868  255C               	addwf	??_sem_wait& (0+255),w,b
  2795   00086A  6F4F               	movwf	___awmod@dividend& (0+255),b
  2796   00086C  6B50               	clrf	(___awmod@dividend+1)& (0+255),b
  2797   00086E  0E00               	movlw	0
  2798   000870  2350               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  2799   000872  0E00               	movlw	0
  2800   000874  6F52               	movwf	(___awmod@divisor+1)& (0+255),b
  2801   000876  0E05               	movlw	5
  2802   000878  6F51               	movwf	___awmod@divisor& (0+255),b
  2803   00087A  ECBB  F008         	call	___awmod	;wreg free
  2804   00087E  0101               	movlb	1	; () banked
  2805   000880  514F               	movf	?___awmod& (0+255),w,b
  2806   000882  6EDF               	movwf	indf2,c
  2807   000884                     
  2808                           ; BSR set to: 1
  2809   000884  EE24  F07E         	lfsr	2,_readyQueue+531
  2810   000888  EE10 F003          	lfsr	1,3
  2811   00088C  50DE               	movf	postinc2,w,c
  2812   00088E  26E1               	addwf	fsr1l,f,c
  2813   000890  50DD               	movf	postdec2,w,c
  2814   000892  22E2               	addwfc	fsr1h,f,c
  2815   000894  04E6               	decf	postinc1,w,c
  2816   000896  A4D8               	btfss	status,2,c
  2817   000898  EF50  F004         	goto	i1u297_21
  2818   00089C  EF52  F004         	goto	i1u297_20
  2819   0008A0                     i1u297_21:
  2820   0008A0  EFC0  F004         	goto	i1l3309
  2821   0008A4                     i1u297_20:
  2822   0008A4                     
  2823                           ; BSR set to: 1
  2824   0008A4  EE24  F07E         	lfsr	2,_readyQueue+531
  2825   0008A8  EE10 F006          	lfsr	1,6
  2826   0008AC  50DE               	movf	postinc2,w,c
  2827   0008AE  26E1               	addwf	fsr1l,f,c
  2828   0008B0  50DD               	movf	postdec2,w,c
  2829   0008B2  22E2               	addwfc	fsr1h,f,c
  2830   0008B4  CFE0 FFE7          	movff	bsr,indf1	;volatile
  2831   0008B8  EE24  F07E         	lfsr	2,_readyQueue+531
  2832   0008BC  EE10 F008          	lfsr	1,8
  2833   0008C0  50DE               	movf	postinc2,w,c
  2834   0008C2  26E1               	addwf	fsr1l,f,c
  2835   0008C4  50DD               	movf	postdec2,w,c
  2836   0008C6  22E2               	addwfc	fsr1h,f,c
  2837   0008C8  CFD8 FFE7          	movff	status,indf1	;volatile
  2838   0008CC  EE24  F07E         	lfsr	2,_readyQueue+531
  2839   0008D0  EE10 F007          	lfsr	1,7
  2840   0008D4  50DE               	movf	postinc2,w,c
  2841   0008D6  26E1               	addwf	fsr1l,f,c
  2842   0008D8  50DD               	movf	postdec2,w,c
  2843   0008DA  22E2               	addwfc	fsr1h,f,c
  2844   0008DC  CFE8 FFE7          	movff	wreg,indf1	;volatile
  2845   0008E0  EE24  F07E         	lfsr	2,_readyQueue+531
  2846   0008E4  EE10 F069          	lfsr	1,105
  2847   0008E8  50DE               	movf	postinc2,w,c
  2848   0008EA  26E1               	addwf	fsr1l,f,c
  2849   0008EC  50DD               	movf	postdec2,w,c
  2850   0008EE  22E2               	addwfc	fsr1h,f,c
  2851   0008F0  6AE7               	clrf	indf1,c
  2852   0008F2  EFAE  F004         	goto	i1l3305
  2853   0008F6                     i1l3301:
  2854   0008F6  EE24  F07E         	lfsr	2,_readyQueue+531
  2855   0008FA  EE10 F069          	lfsr	1,105
  2856   0008FE  50DE               	movf	postinc2,w,c
  2857   000900  26E1               	addwf	fsr1l,f,c
  2858   000902  50DD               	movf	postdec2,w,c
  2859   000904  22E2               	addwfc	fsr1h,f,c
  2860   000906  50E7               	movf	indf1,w,c
  2861   000908  0101               	movlb	1	; () banked
  2862   00090A  6F5C               	movwf	??_sem_wait& (0+255),b
  2863   00090C  515C               	movf	??_sem_wait& (0+255),w,b
  2864   00090E  0D03               	mullw	3
  2865   000910  CFF3 F15D          	movff	prodl,??_sem_wait+1
  2866   000914  CFF4 F15E          	movff	prodh,??_sem_wait+2
  2867   000918  EE24  F07E         	lfsr	2,_readyQueue+531
  2868   00091C  CFDE F15F          	movff	postinc2,??_sem_wait+3
  2869   000920  CFDD F160          	movff	postdec2,??_sem_wait+4
  2870   000924  515D               	movf	(??_sem_wait+1)& (0+255),w,b
  2871   000926  255F               	addwf	(??_sem_wait+3)& (0+255),w,b
  2872   000928  6F61               	movwf	(??_sem_wait+5)& (0+255),b
  2873   00092A  515E               	movf	(??_sem_wait+2)& (0+255),w,b
  2874   00092C  2160               	addwfc	(??_sem_wait+4)& (0+255),w,b
  2875   00092E  6F62               	movwf	(??_sem_wait+6)& (0+255),b
  2876   000930  0E09               	movlw	9
  2877   000932  2561               	addwf	(??_sem_wait+5)& (0+255),w,b
  2878   000934  6ED9               	movwf	fsr2l,c
  2879   000936  0E00               	movlw	0
  2880   000938  2162               	addwfc	(??_sem_wait+6)& (0+255),w,b
  2881   00093A  6EDA               	movwf	fsr2h,c
  2882   00093C  CFFD FFDE          	movff	tosl,postinc2	;volatile
  2883   000940  CFFE FFDE          	movff	tosh,postinc2	;volatile
  2884   000944  CFFF FFDE          	movff	tosu,postinc2	;volatile
  2885   000948                     
  2886                           ; BSR set to: 1
  2887   000948  EE24  F07E         	lfsr	2,_readyQueue+531
  2888   00094C  EE10 F069          	lfsr	1,105
  2889   000950  50DE               	movf	postinc2,w,c
  2890   000952  26E1               	addwf	fsr1l,f,c
  2891   000954  50DD               	movf	postdec2,w,c
  2892   000956  22E2               	addwfc	fsr1h,f,c
  2893   000958  2AE7               	incf	indf1,f,c
  2894   00095A  0006               	pop		;# 
  2895   00095C                     i1l3305:
  2896   00095C  50FC               	movf	252,w,c	;volatile
  2897   00095E  A4D8               	btfss	status,2,c
  2898   000960  EFB4  F004         	goto	i1u298_21
  2899   000964  EFB6  F004         	goto	i1u298_20
  2900   000968                     i1u298_21:
  2901   000968  EF7B  F004         	goto	i1l3301
  2902   00096C                     i1u298_20:
  2903   00096C  EE24  F07E         	lfsr	2,_readyQueue+531
  2904   000970  EE10 F003          	lfsr	1,3
  2905   000974  50DE               	movf	postinc2,w,c
  2906   000976  26E1               	addwf	fsr1l,f,c
  2907   000978  50DD               	movf	postdec2,w,c
  2908   00097A  22E2               	addwfc	fsr1h,f,c
  2909   00097C  0E03               	movlw	3
  2910   00097E  6EE7               	movwf	indf1,c
  2911   000980                     i1l3309:
  2912                           
  2913                           ;sync.c: 30:         scheduler();
  2914   000980  EC43  F00C         	call	_scheduler	;wreg free
  2915   000984  EE24  F07E         	lfsr	2,_readyQueue+531
  2916   000988  EE10 F003          	lfsr	1,3
  2917   00098C  50DE               	movf	postinc2,w,c
  2918   00098E  26E1               	addwf	fsr1l,f,c
  2919   000990  50DD               	movf	postdec2,w,c
  2920   000992  22E2               	addwfc	fsr1h,f,c
  2921   000994  50E7               	movf	indf1,w,c
  2922   000996  A4D8               	btfss	status,2,c
  2923   000998  EFD0  F004         	goto	i1u299_21
  2924   00099C  EFD2  F004         	goto	i1u299_20
  2925   0009A0                     i1u299_21:
  2926   0009A0  EF64  F005         	goto	i1l3329
  2927   0009A4                     i1u299_20:
  2928   0009A4  EE24  F07E         	lfsr	2,_readyQueue+531
  2929   0009A8  EE10 F006          	lfsr	1,6
  2930   0009AC  50DE               	movf	postinc2,w,c
  2931   0009AE  26E1               	addwf	fsr1l,f,c
  2932   0009B0  50DD               	movf	postdec2,w,c
  2933   0009B2  22E2               	addwfc	fsr1h,f,c
  2934   0009B4  50E7               	movf	indf1,w,c
  2935   0009B6  6EE0               	movwf	224,c	;volatile
  2936   0009B8  EE24  F07E         	lfsr	2,_readyQueue+531
  2937   0009BC  EE10 F008          	lfsr	1,8
  2938   0009C0  50DE               	movf	postinc2,w,c
  2939   0009C2  26E1               	addwf	fsr1l,f,c
  2940   0009C4  50DD               	movf	postdec2,w,c
  2941   0009C6  22E2               	addwfc	fsr1h,f,c
  2942   0009C8  50E7               	movf	indf1,w,c
  2943   0009CA  6ED8               	movwf	216,c	;volatile
  2944   0009CC  EE24  F07E         	lfsr	2,_readyQueue+531
  2945   0009D0  EE10 F007          	lfsr	1,7
  2946   0009D4  50DE               	movf	postinc2,w,c
  2947   0009D6  26E1               	addwf	fsr1l,f,c
  2948   0009D8  50DD               	movf	postdec2,w,c
  2949   0009DA  22E2               	addwfc	fsr1h,f,c
  2950   0009DC  50E7               	movf	indf1,w,c
  2951   0009DE  0101               	movlb	1	; () banked
  2952   0009E0  6F5C               	movwf	??_sem_wait& (0+255),b
  2953   0009E2  515C               	movf	??_sem_wait& (0+255),w,b
  2954   0009E4                     
  2955                           ; BSR set to: 1
  2956   0009E4  6AFC               	clrf	252,c	;volatile
  2957   0009E6  EE24  F07E         	lfsr	2,_readyQueue+531
  2958   0009EA  EE10 F069          	lfsr	1,105
  2959   0009EE  50DE               	movf	postinc2,w,c
  2960   0009F0  26E1               	addwf	fsr1l,f,c
  2961   0009F2  50DD               	movf	postdec2,w,c
  2962   0009F4  22E2               	addwfc	fsr1h,f,c
  2963   0009F6  50E7               	movf	indf1,w,c
  2964   0009F8  A4D8               	btfss	status,2,c
  2965   0009FA  EF01  F005         	goto	i1u300_21
  2966   0009FE  EF03  F005         	goto	i1u300_20
  2967   000A02                     i1u300_21:
  2968   000A02  EF17  F005         	goto	i1l281
  2969   000A06                     i1u300_20:
  2970   000A06                     
  2971                           ; BSR set to: 1
  2972   000A06  0005               	push		;# 
  2973   000A08  EE24  F07E         	lfsr	2,_readyQueue+531
  2974   000A0C  EE10 F001          	lfsr	1,1
  2975   000A10  50DE               	movf	postinc2,w,c
  2976   000A12  26E1               	addwf	fsr1l,f,c
  2977   000A14  50DD               	movf	postdec2,w,c
  2978   000A16  22E2               	addwfc	fsr1h,f,c
  2979   000A18  CFE6 F15C          	movff	postinc1,??_sem_wait
  2980   000A1C  CFE5 F15D          	movff	postdec1,??_sem_wait+1
  2981   000A20  C15C  FFFD         	movff	??_sem_wait,tosl	;volatile
  2982   000A24  C15D  FFFE         	movff	??_sem_wait+1,tosh	;volatile
  2983   000A28  6AFF               	clrf	255,c	;volatile
  2984   000A2A  EF5A  F005         	goto	i1l3327
  2985   000A2E                     i1l281:
  2986                           
  2987                           ; BSR set to: 1
  2988   000A2E  0005               	push		;# 
  2989   000A30  EE24  F07E         	lfsr	2,_readyQueue+531
  2990   000A34  EE10 F069          	lfsr	1,105
  2991   000A38  50DE               	movf	postinc2,w,c
  2992   000A3A  26E1               	addwf	fsr1l,f,c
  2993   000A3C  50DD               	movf	postdec2,w,c
  2994   000A3E  22E2               	addwfc	fsr1h,f,c
  2995   000A40  06E7               	decf	indf1,f,c
  2996   000A42  EE24  F07E         	lfsr	2,_readyQueue+531
  2997   000A46  EE10 F069          	lfsr	1,105
  2998   000A4A  50DE               	movf	postinc2,w,c
  2999   000A4C  26E1               	addwf	fsr1l,f,c
  3000   000A4E  50DD               	movf	postdec2,w,c
  3001   000A50  22E2               	addwfc	fsr1h,f,c
  3002   000A52  50E7               	movf	indf1,w,c
  3003   000A54  0101               	movlb	1	; () banked
  3004   000A56  6F5C               	movwf	??_sem_wait& (0+255),b
  3005   000A58  515C               	movf	??_sem_wait& (0+255),w,b
  3006   000A5A  0D03               	mullw	3
  3007   000A5C  CFF3 F15D          	movff	prodl,??_sem_wait+1
  3008   000A60  CFF4 F15E          	movff	prodh,??_sem_wait+2
  3009   000A64  EE24  F07E         	lfsr	2,_readyQueue+531
  3010   000A68  CFDE F15F          	movff	postinc2,??_sem_wait+3
  3011   000A6C  CFDD F160          	movff	postdec2,??_sem_wait+4
  3012   000A70  515D               	movf	(??_sem_wait+1)& (0+255),w,b
  3013   000A72  255F               	addwf	(??_sem_wait+3)& (0+255),w,b
  3014   000A74  6F61               	movwf	(??_sem_wait+5)& (0+255),b
  3015   000A76  515E               	movf	(??_sem_wait+2)& (0+255),w,b
  3016   000A78  2160               	addwfc	(??_sem_wait+4)& (0+255),w,b
  3017   000A7A  6F62               	movwf	(??_sem_wait+6)& (0+255),b
  3018   000A7C  0E09               	movlw	9
  3019   000A7E  2561               	addwf	(??_sem_wait+5)& (0+255),w,b
  3020   000A80  6ED9               	movwf	fsr2l,c
  3021   000A82  0E00               	movlw	0
  3022   000A84  2162               	addwfc	(??_sem_wait+6)& (0+255),w,b
  3023   000A86  6EDA               	movwf	fsr2h,c
  3024   000A88  CFDE FFFD          	movff	postinc2,tosl	;volatile
  3025   000A8C  CFDE FFFE          	movff	postinc2,tosh	;volatile
  3026   000A90  CFDD FFFF          	movff	postdec2,tosu	;volatile
  3027   000A94                     
  3028                           ; BSR set to: 1
  3029   000A94  EE24  F07E         	lfsr	2,_readyQueue+531
  3030   000A98  EE10 F069          	lfsr	1,105
  3031   000A9C  50DE               	movf	postinc2,w,c
  3032   000A9E  26E1               	addwf	fsr1l,f,c
  3033   000AA0  50DD               	movf	postdec2,w,c
  3034   000AA2  22E2               	addwfc	fsr1h,f,c
  3035   000AA4  50E7               	movf	indf1,w,c
  3036   000AA6  A4D8               	btfss	status,2,c
  3037   000AA8  EF58  F005         	goto	i1u301_21
  3038   000AAC  EF5A  F005         	goto	i1u301_20
  3039   000AB0                     i1u301_21:
  3040   000AB0  EF17  F005         	goto	i1l281
  3041   000AB4                     i1u301_20:
  3042   000AB4                     i1l3327:
  3043   000AB4  EE24  F07E         	lfsr	2,_readyQueue+531
  3044   000AB8  EE10 F003          	lfsr	1,3
  3045   000ABC  50DE               	movf	postinc2,w,c
  3046   000ABE  26E1               	addwf	fsr1l,f,c
  3047   000AC0  50DD               	movf	postdec2,w,c
  3048   000AC2  22E2               	addwfc	fsr1h,f,c
  3049   000AC4  0E01               	movlw	1
  3050   000AC6  6EE7               	movwf	indf1,c
  3051   000AC8                     i1l3329:
  3052                           
  3053                           ;sync.c: 34:     (INTCONbits.GIE = 1);
  3054   000AC8  8EF2               	bsf	242,7,c	;volatile
  3055   000ACA  0012               	return		;funcret
  3056   000ACC                     __end_of_sem_wait:
  3057                           	callstack 0
  3058                           
  3059 ;; *************** function _sem_post *****************
  3060 ;; Defined at:
  3061 ;;		line 37 in file "sync.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  s               1   85[BANK1 ] PTR struct semaphore
  3064 ;;		 -> canal(33), 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;		None
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3076 ;;      Params:         0       0       1       0       0       0       0       0       0
  3077 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3078 ;;      Temps:          0       0       2       0       0       0       0       0       0
  3079 ;;      Totals:         0       0       3       0       0       0       0       0       0
  3080 ;;Total ram usage:        3 bytes
  3081 ;; Hardware stack levels used: 1
  3082 ;; Hardware stack levels required when called: 5
  3083 ;; This function calls:
  3084 ;;		___awmod
  3085 ;; This function is called by:
  3086 ;;		_read_pipe
  3087 ;;		_write_pipe
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text13
  3092   0012D4                     __ptext13:
  3093                           	callstack 0
  3094   0012D4                     _sem_post:
  3095                           	callstack 19
  3096   0012D4                     
  3097                           ;sync.c: 37: void sem_post(sem_t *s);sync.c: 38: {;sync.c: 39:     (INTCONbits.GIE = 0);
  3098   0012D4  9EF2               	bcf	242,7,c	;volatile
  3099   0012D6                     
  3100                           ;sync.c: 41:     s->contador++;
  3101   0012D6  0101               	movlb	1	; () banked
  3102   0012D8  5155               	movf	sem_post@s& (0+255),w,b
  3103   0012DA  6ED9               	movwf	fsr2l,c
  3104   0012DC  6ADA               	clrf	fsr2h,c
  3105   0012DE  2ADE               	incf	postinc2,f,c
  3106   0012E0  0E00               	movlw	0
  3107   0012E2  22DD               	addwfc	postdec2,f,c
  3108                           
  3109                           ;sync.c: 43:     if (s->contador <= 0) {
  3110   0012E4  5155               	movf	sem_post@s& (0+255),w,b
  3111   0012E6  6ED9               	movwf	fsr2l,c
  3112   0012E8  6ADA               	clrf	fsr2h,c
  3113   0012EA  0E01               	movlw	1
  3114   0012EC  BEDB               	btfsc	plusw2,7,c
  3115   0012EE  EF84  F009         	goto	i1u302_20
  3116   0012F2  0E01               	movlw	1
  3117   0012F4  50DB               	movf	plusw2,w,c
  3118   0012F6  E106               	bnz	i1u302_21
  3119   0012F8  04DE               	decf	postinc2,w,c
  3120   0012FA  B0D8               	btfsc	status,0,c
  3121   0012FC  EF82  F009         	goto	i1u302_21
  3122   001300  EF84  F009         	goto	i1u302_20
  3123   001304                     i1u302_21:
  3124   001304  EFB3  F009         	goto	i1l3339
  3125   001308                     i1u302_20:
  3126   001308                     
  3127                           ; BSR set to: 1
  3128                           ;sync.c: 44:         s->sem_queue[s->sem_queue_out]->task_state = READY;
  3129   001308  5155               	movf	sem_post@s& (0+255),w,b
  3130   00130A  6ED9               	movwf	fsr2l,c
  3131   00130C  6ADA               	clrf	fsr2h,c
  3132   00130E  0E0D               	movlw	13
  3133   001310  26D9               	addwf	fsr2l,f,c
  3134   001312  50DF               	movf	indf2,w,c
  3135   001314  0D02               	mullw	2
  3136   001316  5155               	movf	sem_post@s& (0+255),w,b
  3137   001318  24F3               	addwf	243,w,c
  3138   00131A  6ED9               	movwf	fsr2l,c
  3139   00131C  6ADA               	clrf	fsr2h,c
  3140   00131E  0E02               	movlw	2
  3141   001320  26D9               	addwf	fsr2l,f,c
  3142   001322  EE10 F003          	lfsr	1,3
  3143   001326  50DE               	movf	postinc2,w,c
  3144   001328  26E1               	addwf	fsr1l,f,c
  3145   00132A  50DD               	movf	postdec2,w,c
  3146   00132C  22E2               	addwfc	fsr1h,f,c
  3147   00132E  6AE7               	clrf	indf1,c
  3148   001330                     
  3149                           ; BSR set to: 1
  3150                           ;sync.c: 45:         s->sem_queue_out = (s->sem_queue_out + 1) % 5;
  3151   001330  5155               	movf	sem_post@s& (0+255),w,b
  3152   001332  6ED9               	movwf	fsr2l,c
  3153   001334  6ADA               	clrf	fsr2h,c
  3154   001336  0E0D               	movlw	13
  3155   001338  26D9               	addwf	fsr2l,f,c
  3156   00133A  5155               	movf	sem_post@s& (0+255),w,b
  3157   00133C  6EE1               	movwf	fsr1l,c
  3158   00133E  6AE2               	clrf	fsr1h,c
  3159   001340  0E0D               	movlw	13
  3160   001342  26E1               	addwf	fsr1l,f,c
  3161   001344  50E7               	movf	indf1,w,c
  3162   001346  6F56               	movwf	??_sem_post& (0+255),b
  3163   001348  0E01               	movlw	1
  3164   00134A  2556               	addwf	??_sem_post& (0+255),w,b
  3165   00134C  6F4F               	movwf	___awmod@dividend& (0+255),b
  3166   00134E  6B50               	clrf	(___awmod@dividend+1)& (0+255),b
  3167   001350  0E00               	movlw	0
  3168   001352  2350               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3169   001354  0E00               	movlw	0
  3170   001356  6F52               	movwf	(___awmod@divisor+1)& (0+255),b
  3171   001358  0E05               	movlw	5
  3172   00135A  6F51               	movwf	___awmod@divisor& (0+255),b
  3173   00135C  ECBB  F008         	call	___awmod	;wreg free
  3174   001360  0101               	movlb	1	; () banked
  3175   001362  514F               	movf	?___awmod& (0+255),w,b
  3176   001364  6EDF               	movwf	indf2,c
  3177   001366                     i1l3339:
  3178                           
  3179                           ; BSR set to: 1
  3180                           ;sync.c: 48:     (INTCONbits.GIE = 1);
  3181   001366  8EF2               	bsf	242,7,c	;volatile
  3182   001368                     
  3183                           ; BSR set to: 1
  3184   001368  0012               	return		;funcret
  3185   00136A                     __end_of_sem_post:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function _os_delay *****************
  3189 ;; Defined at:
  3190 ;;		line 27 in file "syscall.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  time            1    wreg     unsigned char 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  time            1    4[COMRAM] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3204 ;;      Params:         0       0       0       0       0       0       0       0       0
  3205 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3206 ;;      Temps:          0       7       0       0       0       0       0       0       0
  3207 ;;      Totals:         1       7       0       0       0       0       0       0       0
  3208 ;;Total ram usage:        8 bytes
  3209 ;; Hardware stack levels used: 1
  3210 ;; Hardware stack levels required when called: 7
  3211 ;; This function calls:
  3212 ;;		_scheduler
  3213 ;; This function is called by:
  3214 ;;		_tarefa_1
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text14
  3219   000D56                     __ptext14:
  3220                           	callstack 0
  3221   000D56                     _os_delay:
  3222                           	callstack 18
  3223                           
  3224                           ; BSR set to: 1
  3225                           ;incstack = 0
  3226                           ;os_delay@time stored from wreg
  3227   000D56  6E05               	movwf	os_delay@time^0,c
  3228   000D58                     
  3229                           ;syscall.c: 27: void os_delay(uint8_t time);syscall.c: 28: {;syscall.c: 29:     (INTCONb
      +                          its.GIE = 0);
  3230   000D58  9EF2               	bcf	242,7,c	;volatile
  3231   000D5A                     
  3232                           ;syscall.c: 31:     readyQueue.taskRunning->task_time_to_waiting = time;
  3233   000D5A  EE24  F07E         	lfsr	2,_readyQueue+531
  3234   000D5E  EE10 F005          	lfsr	1,5
  3235   000D62  50DE               	movf	postinc2,w,c
  3236   000D64  26E1               	addwf	fsr1l,f,c
  3237   000D66  50DD               	movf	postdec2,w,c
  3238   000D68  22E2               	addwfc	fsr1h,f,c
  3239   000D6A  C005  FFE7         	movff	os_delay@time,indf1
  3240   000D6E  EE24  F07E         	lfsr	2,_readyQueue+531
  3241   000D72  EE10 F003          	lfsr	1,3
  3242   000D76  50DE               	movf	postinc2,w,c
  3243   000D78  26E1               	addwf	fsr1l,f,c
  3244   000D7A  50DD               	movf	postdec2,w,c
  3245   000D7C  22E2               	addwfc	fsr1h,f,c
  3246   000D7E  04E6               	decf	postinc1,w,c
  3247   000D80  A4D8               	btfss	status,2,c
  3248   000D82  EFC5  F006         	goto	i1u303_21
  3249   000D86  EFC7  F006         	goto	i1u303_20
  3250   000D8A                     i1u303_21:
  3251   000D8A  EF35  F007         	goto	i1l3379
  3252   000D8E                     i1u303_20:
  3253   000D8E  EE24  F07E         	lfsr	2,_readyQueue+531
  3254   000D92  EE10 F006          	lfsr	1,6
  3255   000D96  50DE               	movf	postinc2,w,c
  3256   000D98  26E1               	addwf	fsr1l,f,c
  3257   000D9A  50DD               	movf	postdec2,w,c
  3258   000D9C  22E2               	addwfc	fsr1h,f,c
  3259   000D9E  CFE0 FFE7          	movff	bsr,indf1	;volatile
  3260   000DA2  EE24  F07E         	lfsr	2,_readyQueue+531
  3261   000DA6  EE10 F008          	lfsr	1,8
  3262   000DAA  50DE               	movf	postinc2,w,c
  3263   000DAC  26E1               	addwf	fsr1l,f,c
  3264   000DAE  50DD               	movf	postdec2,w,c
  3265   000DB0  22E2               	addwfc	fsr1h,f,c
  3266   000DB2  CFD8 FFE7          	movff	status,indf1	;volatile
  3267   000DB6  EE24  F07E         	lfsr	2,_readyQueue+531
  3268   000DBA  EE10 F007          	lfsr	1,7
  3269   000DBE  50DE               	movf	postinc2,w,c
  3270   000DC0  26E1               	addwf	fsr1l,f,c
  3271   000DC2  50DD               	movf	postdec2,w,c
  3272   000DC4  22E2               	addwfc	fsr1h,f,c
  3273   000DC6  CFE8 FFE7          	movff	wreg,indf1	;volatile
  3274   000DCA  EE24  F07E         	lfsr	2,_readyQueue+531
  3275   000DCE  EE10 F069          	lfsr	1,105
  3276   000DD2  50DE               	movf	postinc2,w,c
  3277   000DD4  26E1               	addwf	fsr1l,f,c
  3278   000DD6  50DD               	movf	postdec2,w,c
  3279   000DD8  22E2               	addwfc	fsr1h,f,c
  3280   000DDA  6AE7               	clrf	indf1,c
  3281   000DDC  EF23  F007         	goto	i1l3375
  3282   000DE0                     i1l3371:
  3283   000DE0  EE24  F07E         	lfsr	2,_readyQueue+531
  3284   000DE4  EE10 F069          	lfsr	1,105
  3285   000DE8  50DE               	movf	postinc2,w,c
  3286   000DEA  26E1               	addwf	fsr1l,f,c
  3287   000DEC  50DD               	movf	postdec2,w,c
  3288   000DEE  22E2               	addwfc	fsr1h,f,c
  3289   000DF0  50E7               	movf	indf1,w,c
  3290   000DF2  0100               	movlb	0	; () banked
  3291   000DF4  6F88               	movwf	??_os_delay& (0+255),b
  3292   000DF6  5188               	movf	??_os_delay& (0+255),w,b
  3293   000DF8  0D03               	mullw	3
  3294   000DFA  CFF3 F089          	movff	prodl,??_os_delay+1
  3295   000DFE  CFF4 F08A          	movff	prodh,??_os_delay+2
  3296   000E02  EE24  F07E         	lfsr	2,_readyQueue+531
  3297   000E06  CFDE F08B          	movff	postinc2,??_os_delay+3
  3298   000E0A  CFDD F08C          	movff	postdec2,??_os_delay+4
  3299   000E0E  5189               	movf	(??_os_delay+1)& (0+255),w,b
  3300   000E10  258B               	addwf	(??_os_delay+3)& (0+255),w,b
  3301   000E12  6F8D               	movwf	(??_os_delay+5)& (0+255),b
  3302   000E14  518A               	movf	(??_os_delay+2)& (0+255),w,b
  3303   000E16  218C               	addwfc	(??_os_delay+4)& (0+255),w,b
  3304   000E18  6F8E               	movwf	(??_os_delay+6)& (0+255),b
  3305   000E1A  0E09               	movlw	9
  3306   000E1C  258D               	addwf	(??_os_delay+5)& (0+255),w,b
  3307   000E1E  6ED9               	movwf	fsr2l,c
  3308   000E20  0E00               	movlw	0
  3309   000E22  218E               	addwfc	(??_os_delay+6)& (0+255),w,b
  3310   000E24  6EDA               	movwf	fsr2h,c
  3311   000E26  CFFD FFDE          	movff	tosl,postinc2	;volatile
  3312   000E2A  CFFE FFDE          	movff	tosh,postinc2	;volatile
  3313   000E2E  CFFF FFDE          	movff	tosu,postinc2	;volatile
  3314   000E32                     
  3315                           ; BSR set to: 0
  3316   000E32  EE24  F07E         	lfsr	2,_readyQueue+531
  3317   000E36  EE10 F069          	lfsr	1,105
  3318   000E3A  50DE               	movf	postinc2,w,c
  3319   000E3C  26E1               	addwf	fsr1l,f,c
  3320   000E3E  50DD               	movf	postdec2,w,c
  3321   000E40  22E2               	addwfc	fsr1h,f,c
  3322   000E42  2AE7               	incf	indf1,f,c
  3323   000E44  0006               	pop		;# 
  3324   000E46                     i1l3375:
  3325   000E46  50FC               	movf	252,w,c	;volatile
  3326   000E48  A4D8               	btfss	status,2,c
  3327   000E4A  EF29  F007         	goto	i1u304_21
  3328   000E4E  EF2B  F007         	goto	i1u304_20
  3329   000E52                     i1u304_21:
  3330   000E52  EFF0  F006         	goto	i1l3371
  3331   000E56                     i1u304_20:
  3332   000E56  EE24  F07E         	lfsr	2,_readyQueue+531
  3333   000E5A  EE10 F003          	lfsr	1,3
  3334   000E5E  50DE               	movf	postinc2,w,c
  3335   000E60  26E1               	addwf	fsr1l,f,c
  3336   000E62  50DD               	movf	postdec2,w,c
  3337   000E64  22E2               	addwfc	fsr1h,f,c
  3338   000E66  0E02               	movlw	2
  3339   000E68  6EE7               	movwf	indf1,c
  3340   000E6A                     i1l3379:
  3341                           
  3342                           ;syscall.c: 34:     scheduler();
  3343   000E6A  EC43  F00C         	call	_scheduler	;wreg free
  3344   000E6E  EE24  F07E         	lfsr	2,_readyQueue+531
  3345   000E72  EE10 F003          	lfsr	1,3
  3346   000E76  50DE               	movf	postinc2,w,c
  3347   000E78  26E1               	addwf	fsr1l,f,c
  3348   000E7A  50DD               	movf	postdec2,w,c
  3349   000E7C  22E2               	addwfc	fsr1h,f,c
  3350   000E7E  50E7               	movf	indf1,w,c
  3351   000E80  A4D8               	btfss	status,2,c
  3352   000E82  EF45  F007         	goto	i1u305_21
  3353   000E86  EF47  F007         	goto	i1u305_20
  3354   000E8A                     i1u305_21:
  3355   000E8A  EFD9  F007         	goto	i1l3399
  3356   000E8E                     i1u305_20:
  3357   000E8E  EE24  F07E         	lfsr	2,_readyQueue+531
  3358   000E92  EE10 F006          	lfsr	1,6
  3359   000E96  50DE               	movf	postinc2,w,c
  3360   000E98  26E1               	addwf	fsr1l,f,c
  3361   000E9A  50DD               	movf	postdec2,w,c
  3362   000E9C  22E2               	addwfc	fsr1h,f,c
  3363   000E9E  50E7               	movf	indf1,w,c
  3364   000EA0  6EE0               	movwf	224,c	;volatile
  3365   000EA2  EE24  F07E         	lfsr	2,_readyQueue+531
  3366   000EA6  EE10 F008          	lfsr	1,8
  3367   000EAA  50DE               	movf	postinc2,w,c
  3368   000EAC  26E1               	addwf	fsr1l,f,c
  3369   000EAE  50DD               	movf	postdec2,w,c
  3370   000EB0  22E2               	addwfc	fsr1h,f,c
  3371   000EB2  50E7               	movf	indf1,w,c
  3372   000EB4  6ED8               	movwf	216,c	;volatile
  3373   000EB6  EE24  F07E         	lfsr	2,_readyQueue+531
  3374   000EBA  EE10 F007          	lfsr	1,7
  3375   000EBE  50DE               	movf	postinc2,w,c
  3376   000EC0  26E1               	addwf	fsr1l,f,c
  3377   000EC2  50DD               	movf	postdec2,w,c
  3378   000EC4  22E2               	addwfc	fsr1h,f,c
  3379   000EC6  50E7               	movf	indf1,w,c
  3380   000EC8  0100               	movlb	0	; () banked
  3381   000ECA  6F88               	movwf	??_os_delay& (0+255),b
  3382   000ECC  5188               	movf	??_os_delay& (0+255),w,b
  3383   000ECE                     
  3384                           ; BSR set to: 0
  3385   000ECE  6AFC               	clrf	252,c	;volatile
  3386   000ED0  EE24  F07E         	lfsr	2,_readyQueue+531
  3387   000ED4  EE10 F069          	lfsr	1,105
  3388   000ED8  50DE               	movf	postinc2,w,c
  3389   000EDA  26E1               	addwf	fsr1l,f,c
  3390   000EDC  50DD               	movf	postdec2,w,c
  3391   000EDE  22E2               	addwfc	fsr1h,f,c
  3392   000EE0  50E7               	movf	indf1,w,c
  3393   000EE2  A4D8               	btfss	status,2,c
  3394   000EE4  EF76  F007         	goto	i1u306_21
  3395   000EE8  EF78  F007         	goto	i1u306_20
  3396   000EEC                     i1u306_21:
  3397   000EEC  EF8C  F007         	goto	i1l147
  3398   000EF0                     i1u306_20:
  3399   000EF0                     
  3400                           ; BSR set to: 0
  3401   000EF0  0005               	push		;# 
  3402   000EF2  EE24  F07E         	lfsr	2,_readyQueue+531
  3403   000EF6  EE10 F001          	lfsr	1,1
  3404   000EFA  50DE               	movf	postinc2,w,c
  3405   000EFC  26E1               	addwf	fsr1l,f,c
  3406   000EFE  50DD               	movf	postdec2,w,c
  3407   000F00  22E2               	addwfc	fsr1h,f,c
  3408   000F02  CFE6 F088          	movff	postinc1,??_os_delay
  3409   000F06  CFE5 F089          	movff	postdec1,??_os_delay+1
  3410   000F0A  C088  FFFD         	movff	??_os_delay,tosl	;volatile
  3411   000F0E  C089  FFFE         	movff	??_os_delay+1,tosh	;volatile
  3412   000F12  6AFF               	clrf	255,c	;volatile
  3413   000F14  EFCF  F007         	goto	i1l3397
  3414   000F18                     i1l147:
  3415                           
  3416                           ; BSR set to: 0
  3417   000F18  0005               	push		;# 
  3418   000F1A  EE24  F07E         	lfsr	2,_readyQueue+531
  3419   000F1E  EE10 F069          	lfsr	1,105
  3420   000F22  50DE               	movf	postinc2,w,c
  3421   000F24  26E1               	addwf	fsr1l,f,c
  3422   000F26  50DD               	movf	postdec2,w,c
  3423   000F28  22E2               	addwfc	fsr1h,f,c
  3424   000F2A  06E7               	decf	indf1,f,c
  3425   000F2C  EE24  F07E         	lfsr	2,_readyQueue+531
  3426   000F30  EE10 F069          	lfsr	1,105
  3427   000F34  50DE               	movf	postinc2,w,c
  3428   000F36  26E1               	addwf	fsr1l,f,c
  3429   000F38  50DD               	movf	postdec2,w,c
  3430   000F3A  22E2               	addwfc	fsr1h,f,c
  3431   000F3C  50E7               	movf	indf1,w,c
  3432   000F3E  0100               	movlb	0	; () banked
  3433   000F40  6F88               	movwf	??_os_delay& (0+255),b
  3434   000F42  5188               	movf	??_os_delay& (0+255),w,b
  3435   000F44  0D03               	mullw	3
  3436   000F46  CFF3 F089          	movff	prodl,??_os_delay+1
  3437   000F4A  CFF4 F08A          	movff	prodh,??_os_delay+2
  3438   000F4E  EE24  F07E         	lfsr	2,_readyQueue+531
  3439   000F52  CFDE F08B          	movff	postinc2,??_os_delay+3
  3440   000F56  CFDD F08C          	movff	postdec2,??_os_delay+4
  3441   000F5A  5189               	movf	(??_os_delay+1)& (0+255),w,b
  3442   000F5C  258B               	addwf	(??_os_delay+3)& (0+255),w,b
  3443   000F5E  6F8D               	movwf	(??_os_delay+5)& (0+255),b
  3444   000F60  518A               	movf	(??_os_delay+2)& (0+255),w,b
  3445   000F62  218C               	addwfc	(??_os_delay+4)& (0+255),w,b
  3446   000F64  6F8E               	movwf	(??_os_delay+6)& (0+255),b
  3447   000F66  0E09               	movlw	9
  3448   000F68  258D               	addwf	(??_os_delay+5)& (0+255),w,b
  3449   000F6A  6ED9               	movwf	fsr2l,c
  3450   000F6C  0E00               	movlw	0
  3451   000F6E  218E               	addwfc	(??_os_delay+6)& (0+255),w,b
  3452   000F70  6EDA               	movwf	fsr2h,c
  3453   000F72  CFDE FFFD          	movff	postinc2,tosl	;volatile
  3454   000F76  CFDE FFFE          	movff	postinc2,tosh	;volatile
  3455   000F7A  CFDD FFFF          	movff	postdec2,tosu	;volatile
  3456   000F7E                     
  3457                           ; BSR set to: 0
  3458   000F7E  EE24  F07E         	lfsr	2,_readyQueue+531
  3459   000F82  EE10 F069          	lfsr	1,105
  3460   000F86  50DE               	movf	postinc2,w,c
  3461   000F88  26E1               	addwf	fsr1l,f,c
  3462   000F8A  50DD               	movf	postdec2,w,c
  3463   000F8C  22E2               	addwfc	fsr1h,f,c
  3464   000F8E  50E7               	movf	indf1,w,c
  3465   000F90  A4D8               	btfss	status,2,c
  3466   000F92  EFCD  F007         	goto	i1u307_21
  3467   000F96  EFCF  F007         	goto	i1u307_20
  3468   000F9A                     i1u307_21:
  3469   000F9A  EF8C  F007         	goto	i1l147
  3470   000F9E                     i1u307_20:
  3471   000F9E                     i1l3397:
  3472   000F9E  EE24  F07E         	lfsr	2,_readyQueue+531
  3473   000FA2  EE10 F003          	lfsr	1,3
  3474   000FA6  50DE               	movf	postinc2,w,c
  3475   000FA8  26E1               	addwf	fsr1l,f,c
  3476   000FAA  50DD               	movf	postdec2,w,c
  3477   000FAC  22E2               	addwfc	fsr1h,f,c
  3478   000FAE  0E01               	movlw	1
  3479   000FB0  6EE7               	movwf	indf1,c
  3480   000FB2                     i1l3399:
  3481                           
  3482                           ;syscall.c: 37:     (INTCONbits.GIE = 1);
  3483   000FB2  8EF2               	bsf	242,7,c	;volatile
  3484   000FB4  0012               	return		;funcret
  3485   000FB6                     __end_of_os_delay:
  3486                           	callstack 0
  3487                           
  3488 ;; *************** function _scheduler *****************
  3489 ;; Defined at:
  3490 ;;		line 37 in file "scheduler.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;		None
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;		None
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3504 ;;      Params:         0       0       0       0       0       0       0       0       0
  3505 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3506 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3507 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3508 ;;Total ram usage:        0 bytes
  3509 ;; Hardware stack levels used: 1
  3510 ;; Hardware stack levels required when called: 6
  3511 ;; This function calls:
  3512 ;;		_rr_scheduler
  3513 ;; This function is called by:
  3514 ;;		_os_delay
  3515 ;;		_sem_wait
  3516 ;;		_os_yield
  3517 ;;		_os_change_state
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521                           	psect	text15
  3522   001886                     __ptext15:
  3523                           	callstack 0
  3524   001886                     _scheduler:
  3525                           	callstack 17
  3526   001886                     
  3527                           ;scheduler.c: 40:     readyQueue.taskRunning = rr_scheduler();
  3528   001886  ECDB  F007         	call	_rr_scheduler	;wreg free
  3529   00188A  0101               	movlb	1	; () banked
  3530   00188C  C155  F47E         	movff	?_rr_scheduler,_readyQueue+531
  3531   001890  C156  F47F         	movff	?_rr_scheduler+1,_readyQueue+532
  3532   001894                     
  3533                           ; BSR set to: 1
  3534   001894  0012               	return		;funcret
  3535   001896                     __end_of_scheduler:
  3536                           	callstack 0
  3537                           
  3538 ;; *************** function _rr_scheduler *****************
  3539 ;; Defined at:
  3540 ;;		line 12 in file "scheduler.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  pos_task_run    1   90[BANK1 ] unsigned char 
  3545 ;;  idle_selecte    1   89[BANK1 ] unsigned char 
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  2   85[BANK1 ] PTR struct tcb
  3548 ;; Registers used:
  3549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3555 ;;      Params:         0       0       2       0       0       0       0       0       0
  3556 ;;      Locals:         0       0       2       0       0       0       0       0       0
  3557 ;;      Temps:          0       0       2       0       0       0       0       0       0
  3558 ;;      Totals:         0       0       6       0       0       0       0       0       0
  3559 ;;Total ram usage:        6 bytes
  3560 ;; Hardware stack levels used: 1
  3561 ;; Hardware stack levels required when called: 5
  3562 ;; This function calls:
  3563 ;;		___awmod
  3564 ;;		_os_task_pos
  3565 ;; This function is called by:
  3566 ;;		_scheduler
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text16
  3571   000FB6                     __ptext16:
  3572                           	callstack 0
  3573   000FB6                     _rr_scheduler:
  3574                           	callstack 17
  3575   000FB6                     
  3576                           ;scheduler.c: 14:     uint8_t pos_task_running = os_task_pos(readyQueue.taskRunning->tas
      +                          k_func);
  3577   000FB6  EE24  F07E         	lfsr	2,_readyQueue+531
  3578   000FBA  EE10 F001          	lfsr	1,1
  3579   000FBE  50DE               	movf	postinc2,w,c
  3580   000FC0  26E1               	addwf	fsr1l,f,c
  3581   000FC2  50DD               	movf	postdec2,w,c
  3582   000FC4  22E2               	addwfc	fsr1h,f,c
  3583   000FC6  CFE6 F14F          	movff	postinc1,os_task_pos@task
  3584   000FCA  CFE5 F150          	movff	postdec1,os_task_pos@task+1
  3585   000FCE  ECEB  F00A         	call	_os_task_pos	;wreg free
  3586   000FD2  0101               	movlb	1	; () banked
  3587   000FD4  6F5A               	movwf	rr_scheduler@pos_task_running& (0+255),b
  3588   000FD6                     
  3589                           ; BSR set to: 1
  3590                           ;scheduler.c: 15:     uint8_t idle_selected = 0;
  3591   000FD6  6B59               	clrf	rr_scheduler@idle_selected& (0+255),b
  3592   000FD8                     i1l3243:
  3593                           
  3594                           ; BSR set to: 1
  3595                           ;scheduler.c: 18:         pos_task_running = (pos_task_running+1) % readyQueue.readyQueu
      +                          eSize;
  3596   000FD8  0E01               	movlw	1
  3597   000FDA  255A               	addwf	rr_scheduler@pos_task_running& (0+255),w,b
  3598   000FDC  6F4F               	movwf	___awmod@dividend& (0+255),b
  3599   000FDE  6B50               	clrf	(___awmod@dividend+1)& (0+255),b
  3600   000FE0  0E00               	movlw	0
  3601   000FE2  2350               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3602   000FE4  C47D  F157         	movff	_readyQueue+530,??_rr_scheduler
  3603   000FE8  5157               	movf	??_rr_scheduler& (0+255),w,b
  3604   000FEA  6F51               	movwf	___awmod@divisor& (0+255),b
  3605   000FEC  6B52               	clrf	(___awmod@divisor+1)& (0+255),b
  3606   000FEE  ECBB  F008         	call	___awmod	;wreg free
  3607   000FF2  0101               	movlb	1	; () banked
  3608   000FF4  514F               	movf	?___awmod& (0+255),w,b
  3609   000FF6  6F5A               	movwf	rr_scheduler@pos_task_running& (0+255),b
  3610   000FF8                     
  3611                           ; BSR set to: 1
  3612                           ;scheduler.c: 19:         if (readyQueue.readyQueue[pos_task_running].task_func == os_id
      +                          le_task) {
  3613   000FF8  515A               	movf	rr_scheduler@pos_task_running& (0+255),w,b
  3614   000FFA  0D6A               	mullw	106
  3615   000FFC  0E6C               	movlw	low (_readyQueue+1)
  3616   000FFE  24F3               	addwf	243,w,c
  3617   001000  6ED9               	movwf	fsr2l,c
  3618   001002  0E02               	movlw	high (_readyQueue+1)
  3619   001004  20F4               	addwfc	prodh,w,c
  3620   001006  6EDA               	movwf	fsr2h,c
  3621   001008  0EC2               	movlw	low _os_idle_task
  3622   00100A  18DE               	xorwf	postinc2,w,c
  3623   00100C  E107               	bnz	i1u292_21
  3624   00100E  0E17               	movlw	high _os_idle_task
  3625   001010  18DE               	xorwf	postinc2,w,c
  3626   001012  A4D8               	btfss	status,2,c
  3627   001014  EF0E  F008         	goto	i1u292_21
  3628   001018  EF10  F008         	goto	i1u292_20
  3629   00101C                     i1u292_21:
  3630   00101C  EF1F  F008         	goto	i1l3255
  3631   001020                     i1u292_20:
  3632   001020                     
  3633                           ; BSR set to: 1
  3634                           ;scheduler.c: 20:             idle_selected++;
  3635   001020  2B59               	incf	rr_scheduler@idle_selected& (0+255),f,b
  3636   001022                     
  3637                           ; BSR set to: 1
  3638                           ;scheduler.c: 21:             if (idle_selected > 1) return &readyQueue.readyQueue[0];
  3639   001022  0E01               	movlw	1
  3640   001024  6559               	cpfsgt	rr_scheduler@idle_selected& (0+255),b
  3641   001026  EF17  F008         	goto	i1u293_21
  3642   00102A  EF19  F008         	goto	i1u293_20
  3643   00102E                     i1u293_21:
  3644   00102E  EF1F  F008         	goto	i1l3255
  3645   001032                     i1u293_20:
  3646   001032                     
  3647                           ; BSR set to: 1
  3648   001032  0E6B               	movlw	low _readyQueue
  3649   001034  6F55               	movwf	?_rr_scheduler& (0+255),b
  3650   001036  0E02               	movlw	high _readyQueue
  3651   001038  6F56               	movwf	(?_rr_scheduler+1)& (0+255),b
  3652   00103A  EF4B  F008         	goto	i1l194
  3653   00103E                     i1l3255:
  3654                           
  3655                           ; BSR set to: 1
  3656                           ;scheduler.c: 24:     } while (readyQueue.readyQueue[pos_task_running].task_state != REA
      +                          DY ||
  3657   00103E  515A               	movf	rr_scheduler@pos_task_running& (0+255),w,b
  3658   001040  0D6A               	mullw	106
  3659   001042  0E6E               	movlw	low (_readyQueue+3)
  3660   001044  24F3               	addwf	243,w,c
  3661   001046  6ED9               	movwf	fsr2l,c
  3662   001048  0E02               	movlw	high (_readyQueue+3)
  3663   00104A  20F4               	addwfc	prodh,w,c
  3664   00104C  6EDA               	movwf	fsr2h,c
  3665   00104E  50DF               	movf	indf2,w,c
  3666   001050  A4D8               	btfss	status,2,c
  3667   001052  EF2D  F008         	goto	i1u294_21
  3668   001056  EF2F  F008         	goto	i1u294_20
  3669   00105A                     i1u294_21:
  3670   00105A  EFEC  F007         	goto	i1l3243
  3671   00105E                     i1u294_20:
  3672   00105E                     
  3673                           ; BSR set to: 1
  3674   00105E  515A               	movf	rr_scheduler@pos_task_running& (0+255),w,b
  3675   001060  0D6A               	mullw	106
  3676   001062  0E6C               	movlw	low (_readyQueue+1)
  3677   001064  24F3               	addwf	243,w,c
  3678   001066  6ED9               	movwf	fsr2l,c
  3679   001068  0E02               	movlw	high (_readyQueue+1)
  3680   00106A  20F4               	addwfc	prodh,w,c
  3681   00106C  6EDA               	movwf	fsr2h,c
  3682   00106E  0EC2               	movlw	low _os_idle_task
  3683   001070  18DE               	xorwf	postinc2,w,c
  3684   001072  E109               	bnz	i1u295_20
  3685   001074  0E17               	movlw	high _os_idle_task
  3686   001076  18DE               	xorwf	postinc2,w,c
  3687   001078  B4D8               	btfsc	status,2,c
  3688   00107A  EF41  F008         	goto	i1u295_21
  3689   00107E  EF43  F008         	goto	i1u295_20
  3690   001082                     i1u295_21:
  3691   001082  EFEC  F007         	goto	i1l3243
  3692   001086                     i1u295_20:
  3693   001086                     
  3694                           ; BSR set to: 1
  3695                           ;scheduler.c: 27:     return &readyQueue.readyQueue[pos_task_running];
  3696   001086  515A               	movf	rr_scheduler@pos_task_running& (0+255),w,b
  3697   001088  0D6A               	mullw	106
  3698   00108A  0E6B               	movlw	low _readyQueue
  3699   00108C  24F3               	addwf	243,w,c
  3700   00108E  6F55               	movwf	?_rr_scheduler& (0+255),b
  3701   001090  0E02               	movlw	high _readyQueue
  3702   001092  20F4               	addwfc	prodh,w,c
  3703   001094  6F56               	movwf	(?_rr_scheduler+1)& (0+255),b
  3704   001096                     i1l194:
  3705                           
  3706                           ; BSR set to: 1
  3707   001096  0012               	return		;funcret
  3708   001098                     __end_of_rr_scheduler:
  3709                           	callstack 0
  3710                           
  3711 ;; *************** function _os_task_pos *****************
  3712 ;; Defined at:
  3713 ;;		line 47 in file "kernel.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  task            2   79[BANK1 ] PTR FTN()void 
  3716 ;;		 -> os_idle_task(1), tarefa_3(1), tarefa_2(1), tarefa_1(1), 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  i               1   83[BANK1 ] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      unsigned char 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3728 ;;      Params:         0       0       2       0       0       0       0       0       0
  3729 ;;      Locals:         0       0       1       0       0       0       0       0       0
  3730 ;;      Temps:          0       0       2       0       0       0       0       0       0
  3731 ;;      Totals:         0       0       5       0       0       0       0       0       0
  3732 ;;Total ram usage:        5 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; Hardware stack levels required when called: 4
  3735 ;; This function calls:
  3736 ;;		Nothing
  3737 ;; This function is called by:
  3738 ;;		_rr_scheduler
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text17
  3743   0015D6                     __ptext17:
  3744                           	callstack 0
  3745   0015D6                     _os_task_pos:
  3746                           	callstack 17
  3747   0015D6                     
  3748                           ;kernel.c: 47: uint8_t os_task_pos(f_ptr task);kernel.c: 48: {;kernel.c: 49:     for (ui
      +                          nt8_t i = 0; i < readyQueue.readyQueueSize; i++) {
  3749   0015D6  0101               	movlb	1	; () banked
  3750   0015D8  6B53               	clrf	os_task_pos@i& (0+255),b
  3751   0015DA  EF07  F00B         	goto	i1l3197
  3752   0015DE                     i1l3189:
  3753                           
  3754                           ; BSR set to: 1
  3755                           ;kernel.c: 50:         if (readyQueue.readyQueue[i].task_func == task) return i;
  3756   0015DE  5153               	movf	os_task_pos@i& (0+255),w,b
  3757   0015E0  0D6A               	mullw	106
  3758   0015E2  0E6C               	movlw	low (_readyQueue+1)
  3759   0015E4  24F3               	addwf	243,w,c
  3760   0015E6  6ED9               	movwf	fsr2l,c
  3761   0015E8  0E02               	movlw	high (_readyQueue+1)
  3762   0015EA  20F4               	addwfc	prodh,w,c
  3763   0015EC  6EDA               	movwf	fsr2h,c
  3764   0015EE  514F               	movf	os_task_pos@task& (0+255),w,b
  3765   0015F0  18DE               	xorwf	postinc2,w,c
  3766   0015F2  E107               	bnz	i1u284_21
  3767   0015F4  5150               	movf	(os_task_pos@task+1)& (0+255),w,b
  3768   0015F6  18DE               	xorwf	postinc2,w,c
  3769   0015F8  A4D8               	btfss	status,2,c
  3770   0015FA  EF01  F00B         	goto	i1u284_21
  3771   0015FE  EF03  F00B         	goto	i1u284_20
  3772   001602                     i1u284_21:
  3773   001602  EF06  F00B         	goto	i1l3195
  3774   001606                     i1u284_20:
  3775   001606                     
  3776                           ; BSR set to: 1
  3777   001606  5153               	movf	os_task_pos@i& (0+255),w,b
  3778   001608  EF13  F00B         	goto	i1l58
  3779   00160C                     i1l3195:
  3780                           
  3781                           ; BSR set to: 1
  3782                           ;kernel.c: 51:     }
  3783   00160C  2B53               	incf	os_task_pos@i& (0+255),f,b
  3784   00160E                     i1l3197:
  3785                           
  3786                           ; BSR set to: 1
  3787   00160E  EE24  F07D         	lfsr	2,_readyQueue+530
  3788   001612  50DE               	movf	postinc2,w,c
  3789   001614  5D53               	subwf	os_task_pos@i& (0+255),w,b
  3790   001616  A0D8               	btfss	status,0,c
  3791   001618  EF10  F00B         	goto	i1u285_21
  3792   00161C  EF12  F00B         	goto	i1u285_20
  3793   001620                     i1u285_21:
  3794   001620  EFEF  F00A         	goto	i1l3189
  3795   001624                     i1u285_20:
  3796   001624                     
  3797                           ; BSR set to: 1
  3798                           ;kernel.c: 53:     return 0;
  3799   001624  0E00               	movlw	0
  3800   001626                     i1l58:
  3801                           
  3802                           ; BSR set to: 1
  3803   001626  0012               	return		;funcret
  3804   001628                     __end_of_os_task_pos:
  3805                           	callstack 0
  3806                           
  3807 ;; *************** function ___awmod *****************
  3808 ;; Defined at:
  3809 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;  dividend        2   79[BANK1 ] int 
  3812 ;;  divisor         2   81[BANK1 ] int 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  sign            1   84[BANK1 ] unsigned char 
  3815 ;;  counter         1   83[BANK1 ] unsigned char 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  2   79[BANK1 ] int 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2, status,0
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3825 ;;      Params:         0       0       4       0       0       0       0       0       0
  3826 ;;      Locals:         0       0       2       0       0       0       0       0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3828 ;;      Totals:         0       0       6       0       0       0       0       0       0
  3829 ;;Total ram usage:        6 bytes
  3830 ;; Hardware stack levels used: 1
  3831 ;; Hardware stack levels required when called: 4
  3832 ;; This function calls:
  3833 ;;		Nothing
  3834 ;; This function is called by:
  3835 ;;		_tarefa_1
  3836 ;;		_rr_scheduler
  3837 ;;		_sem_wait
  3838 ;;		_sem_post
  3839 ;;		_read_pipe
  3840 ;;		_write_pipe
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           	psect	text18
  3845   001176                     __ptext18:
  3846                           	callstack 0
  3847   001176                     ___awmod:
  3848                           	callstack 17
  3849   001176  0101               	movlb	1	; () banked
  3850   001178  6B54               	clrf	___awmod@sign& (0+255),b
  3851   00117A                     
  3852                           ; BSR set to: 1
  3853   00117A  BF50               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  3854   00117C  EFC4  F008         	goto	i1u286_20
  3855   001180  EFC2  F008         	goto	i1u286_21
  3856   001184                     i1u286_21:
  3857   001184  EFCA  F008         	goto	i1l3211
  3858   001188                     i1u286_20:
  3859   001188                     
  3860                           ; BSR set to: 1
  3861   001188  6D4F               	negf	___awmod@dividend& (0+255),b
  3862   00118A  1F50               	comf	(___awmod@dividend+1)& (0+255),f,b
  3863   00118C  B0D8               	btfsc	status,0,c
  3864   00118E  2B50               	incf	(___awmod@dividend+1)& (0+255),f,b
  3865   001190                     
  3866                           ; BSR set to: 1
  3867   001190  0E01               	movlw	1
  3868   001192  6F54               	movwf	___awmod@sign& (0+255),b
  3869   001194                     i1l3211:
  3870                           
  3871                           ; BSR set to: 1
  3872   001194  BF52               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  3873   001196  EFD1  F008         	goto	i1u287_20
  3874   00119A  EFCF  F008         	goto	i1u287_21
  3875   00119E                     i1u287_21:
  3876   00119E  EFD5  F008         	goto	i1l3215
  3877   0011A2                     i1u287_20:
  3878   0011A2                     
  3879                           ; BSR set to: 1
  3880   0011A2  6D51               	negf	___awmod@divisor& (0+255),b
  3881   0011A4  1F52               	comf	(___awmod@divisor+1)& (0+255),f,b
  3882   0011A6  B0D8               	btfsc	status,0,c
  3883   0011A8  2B52               	incf	(___awmod@divisor+1)& (0+255),f,b
  3884   0011AA                     i1l3215:
  3885                           
  3886                           ; BSR set to: 1
  3887   0011AA  5151               	movf	___awmod@divisor& (0+255),w,b
  3888   0011AC  1152               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3889   0011AE  B4D8               	btfsc	status,2,c
  3890   0011B0  EFDC  F008         	goto	i1u288_21
  3891   0011B4  EFDE  F008         	goto	i1u288_20
  3892   0011B8                     i1u288_21:
  3893   0011B8  EF02  F009         	goto	i1l3231
  3894   0011BC                     i1u288_20:
  3895   0011BC                     
  3896                           ; BSR set to: 1
  3897   0011BC  0E01               	movlw	1
  3898   0011BE  6F53               	movwf	___awmod@counter& (0+255),b
  3899   0011C0  EFE6  F008         	goto	i1l3221
  3900   0011C4                     i1l3219:
  3901                           
  3902                           ; BSR set to: 1
  3903   0011C4  90D8               	bcf	status,0,c
  3904   0011C6  3751               	rlcf	___awmod@divisor& (0+255),f,b
  3905   0011C8  3752               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3906   0011CA  2B53               	incf	___awmod@counter& (0+255),f,b
  3907   0011CC                     i1l3221:
  3908                           
  3909                           ; BSR set to: 1
  3910   0011CC  AF52               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3911   0011CE  EFEB  F008         	goto	i1u289_21
  3912   0011D2  EFED  F008         	goto	i1u289_20
  3913   0011D6                     i1u289_21:
  3914   0011D6  EFE2  F008         	goto	i1l3219
  3915   0011DA                     i1u289_20:
  3916   0011DA                     i1l3223:
  3917                           
  3918                           ; BSR set to: 1
  3919   0011DA  5151               	movf	___awmod@divisor& (0+255),w,b
  3920   0011DC  5D4F               	subwf	___awmod@dividend& (0+255),w,b
  3921   0011DE  5152               	movf	(___awmod@divisor+1)& (0+255),w,b
  3922   0011E0  5950               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3923   0011E2  A0D8               	btfss	status,0,c
  3924   0011E4  EFF6  F008         	goto	i1u290_21
  3925   0011E8  EFF8  F008         	goto	i1u290_20
  3926   0011EC                     i1u290_21:
  3927   0011EC  EFFC  F008         	goto	i1l3227
  3928   0011F0                     i1u290_20:
  3929   0011F0                     
  3930                           ; BSR set to: 1
  3931   0011F0  5151               	movf	___awmod@divisor& (0+255),w,b
  3932   0011F2  5F4F               	subwf	___awmod@dividend& (0+255),f,b
  3933   0011F4  5152               	movf	(___awmod@divisor+1)& (0+255),w,b
  3934   0011F6  5B50               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3935   0011F8                     i1l3227:
  3936                           
  3937                           ; BSR set to: 1
  3938   0011F8  90D8               	bcf	status,0,c
  3939   0011FA  3352               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3940   0011FC  3351               	rrcf	___awmod@divisor& (0+255),f,b
  3941   0011FE                     
  3942                           ; BSR set to: 1
  3943   0011FE  2F53               	decfsz	___awmod@counter& (0+255),f,b
  3944   001200  EFED  F008         	goto	i1l3223
  3945   001204                     i1l3231:
  3946                           
  3947                           ; BSR set to: 1
  3948   001204  5154               	movf	___awmod@sign& (0+255),w,b
  3949   001206  B4D8               	btfsc	status,2,c
  3950   001208  EF08  F009         	goto	i1u291_21
  3951   00120C  EF0A  F009         	goto	i1u291_20
  3952   001210                     i1u291_21:
  3953   001210  EF0E  F009         	goto	i1l3235
  3954   001214                     i1u291_20:
  3955   001214                     
  3956                           ; BSR set to: 1
  3957   001214  6D4F               	negf	___awmod@dividend& (0+255),b
  3958   001216  1F50               	comf	(___awmod@dividend+1)& (0+255),f,b
  3959   001218  B0D8               	btfsc	status,0,c
  3960   00121A  2B50               	incf	(___awmod@dividend+1)& (0+255),f,b
  3961   00121C                     i1l3235:
  3962                           
  3963                           ; BSR set to: 1
  3964   00121C  C14F  F14F         	movff	___awmod@dividend,?___awmod
  3965   001220  C150  F150         	movff	___awmod@dividend+1,?___awmod+1
  3966   001224                     
  3967                           ; BSR set to: 1
  3968   001224  0012               	return		;funcret
  3969   001226                     __end_of___awmod:
  3970                           	callstack 0
  3971                           
  3972 ;; *************** function _tarefa_2 *****************
  3973 ;; Defined at:
  3974 ;;		line 36 in file "user_app.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;		None
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;  dado            1  104[BANK1 ] unsigned char 
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1    wreg      void 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3988 ;;      Params:         0       0       0       0       0       0       0       0       0
  3989 ;;      Locals:         0       0       1       0       0       0       0       0       0
  3990 ;;      Temps:          0       0       1       0       0       0       0       0       0
  3991 ;;      Totals:         0       0       2       0       0       0       0       0       0
  3992 ;;Total ram usage:        2 bytes
  3993 ;; Hardware stack levels used: 1
  3994 ;; Hardware stack levels required when called: 9
  3995 ;; This function calls:
  3996 ;;		_read_pipe
  3997 ;; This function is called by:
  3998 ;;		_main
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text19
  4003   0013F2                     __ptext19:
  4004                           	callstack 0
  4005   0013F2                     _tarefa_2:
  4006                           	callstack 17
  4007   0013F2                     l101:
  4008   0013F2                     
  4009                           ;user_app.c: 41:         LATDbits.LD1 = ~PORTDbits.RD1;
  4010   0013F2  B283               	btfsc	131,1,c	;volatile
  4011   0013F4  EFFE  F009         	goto	u309_21
  4012   0013F8  EF01  F00A         	goto	u309_20
  4013   0013FC                     u309_21:
  4014   0013FC  0E01               	movlw	1
  4015   0013FE  EF02  F00A         	goto	u309_26
  4016   001402                     u309_20:
  4017   001402  0E00               	movlw	0
  4018   001404                     u309_26:
  4019   001404  0AFF               	xorlw	255
  4020   001406  0101               	movlb	1	; () banked
  4021   001408  6F67               	movwf	??_tarefa_2& (0+255),b
  4022   00140A  4767               	rlncf	??_tarefa_2& (0+255),f,b
  4023   00140C  508C               	movf	140,w,c	;volatile
  4024   00140E  1967               	xorwf	??_tarefa_2& (0+255),w,b
  4025   001410  0BFD               	andlw	-3
  4026   001412  1967               	xorwf	??_tarefa_2& (0+255),w,b
  4027   001414  6E8C               	movwf	140,c	;volatile
  4028   001416                     
  4029                           ; BSR set to: 1
  4030                           ;user_app.c: 43:         read_pipe(&canal, &dado);
  4031   001416  0E60               	movlw	low _canal
  4032   001418  6F63               	movwf	read_pipe@p& (0+255),b
  4033   00141A  0E68               	movlw	low tarefa_2@dado
  4034   00141C  6F64               	movwf	read_pipe@buffer& (0+255),b
  4035   00141E  0E01               	movlw	high tarefa_2@dado
  4036   001420  6F65               	movwf	(read_pipe@buffer+1)& (0+255),b
  4037   001422  ECB4  F00A         	call	_read_pipe	;wreg free
  4038   001426                     
  4039                           ;user_app.c: 44:         if (dado == 'a') {
  4040   001426  0E61               	movlw	97
  4041   001428  0101               	movlb	1	; () banked
  4042   00142A  1968               	xorwf	tarefa_2@dado& (0+255),w,b
  4043   00142C  A4D8               	btfss	status,2,c
  4044   00142E  EF1B  F00A         	goto	u310_21
  4045   001432  EF1D  F00A         	goto	u310_20
  4046   001436                     u310_21:
  4047   001436  EF20  F00A         	goto	l3437
  4048   00143A                     u310_20:
  4049   00143A                     
  4050                           ; BSR set to: 1
  4051                           ;user_app.c: 45:             LATCbits.LATC0 = 1;
  4052   00143A  808B               	bsf	139,0,c	;volatile
  4053                           
  4054                           ;user_app.c: 46:         }
  4055   00143C  EFF9  F009         	goto	l101
  4056   001440                     l3437:
  4057                           
  4058                           ; BSR set to: 1
  4059   001440  0E62               	movlw	98
  4060   001442  1968               	xorwf	tarefa_2@dado& (0+255),w,b
  4061   001444  A4D8               	btfss	status,2,c
  4062   001446  EF27  F00A         	goto	u311_21
  4063   00144A  EF29  F00A         	goto	u311_20
  4064   00144E                     u311_21:
  4065   00144E  EF2C  F00A         	goto	l3441
  4066   001452                     u311_20:
  4067   001452                     
  4068                           ; BSR set to: 1
  4069                           ;user_app.c: 48:             LATCbits.LATC1 = 1;
  4070   001452  828B               	bsf	139,1,c	;volatile
  4071                           
  4072                           ;user_app.c: 49:         }
  4073   001454  EFF9  F009         	goto	l101
  4074   001458                     l3441:
  4075                           
  4076                           ; BSR set to: 1
  4077   001458  0E63               	movlw	99
  4078   00145A  1968               	xorwf	tarefa_2@dado& (0+255),w,b
  4079   00145C  A4D8               	btfss	status,2,c
  4080   00145E  EF33  F00A         	goto	u312_21
  4081   001462  EF35  F00A         	goto	u312_20
  4082   001466                     u312_21:
  4083   001466  EF39  F00A         	goto	l103
  4084   00146A                     u312_20:
  4085   00146A                     
  4086                           ; BSR set to: 1
  4087                           ;user_app.c: 51:             LATCbits.LATC0 = 0;
  4088   00146A  908B               	bcf	139,0,c	;volatile
  4089                           
  4090                           ;user_app.c: 52:             LATCbits.LATC1 = 0;
  4091   00146C  928B               	bcf	139,1,c	;volatile
  4092   00146E  EFF9  F009         	goto	l101
  4093   001472                     l103:
  4094                           
  4095                           ; BSR set to: 1
  4096   001472  EFF9  F009         	goto	l101
  4097   001476  0012               	return		;funcret
  4098   001478                     __end_of_tarefa_2:
  4099                           	callstack 0
  4100                           
  4101 ;; *************** function _read_pipe *****************
  4102 ;; Defined at:
  4103 ;;		line 14 in file "pipe.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;  p               1   99[BANK1 ] PTR struct pipe
  4106 ;;		 -> canal(33), 
  4107 ;;  buffer          2  100[BANK1 ] PTR unsigned char 
  4108 ;;		 -> tarefa_2@dado(1), 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;		None
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  1    wreg      void 
  4113 ;; Registers used:
  4114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4120 ;;      Params:         0       0       3       0       0       0       0       0       0
  4121 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4122 ;;      Temps:          0       0       1       0       0       0       0       0       0
  4123 ;;      Totals:         0       0       4       0       0       0       0       0       0
  4124 ;;Total ram usage:        4 bytes
  4125 ;; Hardware stack levels used: 1
  4126 ;; Hardware stack levels required when called: 8
  4127 ;; This function calls:
  4128 ;;		___awmod
  4129 ;;		_sem_post
  4130 ;;		_sem_wait
  4131 ;; This function is called by:
  4132 ;;		_tarefa_2
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           	psect	text20
  4137   001568                     __ptext20:
  4138                           	callstack 0
  4139   001568                     _read_pipe:
  4140                           	callstack 17
  4141   001568                     
  4142                           ;pipe.c: 14: void read_pipe(pipe_t *p, char *buffer);pipe.c: 15: {;pipe.c: 16:     (INTC
      +                          ONbits.GIE = 0);
  4143   001568  9EF2               	bcf	242,7,c	;volatile
  4144   00156A                     
  4145                           ;pipe.c: 19:     sem_wait(&p->pipe_sem_read);
  4146   00156A  0101               	movlb	1	; () banked
  4147   00156C  5163               	movf	read_pipe@p& (0+255),w,b
  4148   00156E  0F05               	addlw	5
  4149   001570  6F5B               	movwf	sem_wait@s& (0+255),b
  4150   001572  EC01  F004         	call	_sem_wait	;wreg free
  4151   001576                     
  4152                           ;pipe.c: 21:     *buffer = p->pipe_data[p->pipe_pos_read];
  4153   001576  0101               	movlb	1	; () banked
  4154   001578  5163               	movf	read_pipe@p& (0+255),w,b
  4155   00157A  6ED9               	movwf	fsr2l,c
  4156   00157C  6ADA               	clrf	fsr2h,c
  4157   00157E  50DF               	movf	indf2,w,c
  4158   001580  6F66               	movwf	??_read_pipe& (0+255),b
  4159   001582  5163               	movf	read_pipe@p& (0+255),w,b
  4160   001584  2566               	addwf	??_read_pipe& (0+255),w,b
  4161   001586  6ED9               	movwf	fsr2l,c
  4162   001588  6ADA               	clrf	fsr2h,c
  4163   00158A  0E02               	movlw	2
  4164   00158C  26D9               	addwf	fsr2l,f,c
  4165   00158E  C164  FFE1         	movff	read_pipe@buffer,fsr1l
  4166   001592  C165  FFE2         	movff	read_pipe@buffer+1,fsr1h
  4167   001596  CFDF FFE7          	movff	indf2,indf1
  4168   00159A                     
  4169                           ; BSR set to: 1
  4170                           ;pipe.c: 22:     p->pipe_pos_read = (p->pipe_pos_read + 1) % 3;
  4171   00159A  5163               	movf	read_pipe@p& (0+255),w,b
  4172   00159C  6ED9               	movwf	fsr2l,c
  4173   00159E  6ADA               	clrf	fsr2h,c
  4174   0015A0  5163               	movf	read_pipe@p& (0+255),w,b
  4175   0015A2  6EE1               	movwf	fsr1l,c
  4176   0015A4  6AE2               	clrf	fsr1h,c
  4177   0015A6  50E7               	movf	indf1,w,c
  4178   0015A8  6F66               	movwf	??_read_pipe& (0+255),b
  4179   0015AA  0E01               	movlw	1
  4180   0015AC  2566               	addwf	??_read_pipe& (0+255),w,b
  4181   0015AE  6F4F               	movwf	___awmod@dividend& (0+255),b
  4182   0015B0  6B50               	clrf	(___awmod@dividend+1)& (0+255),b
  4183   0015B2  0E00               	movlw	0
  4184   0015B4  2350               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4185   0015B6  0E00               	movlw	0
  4186   0015B8  6F52               	movwf	(___awmod@divisor+1)& (0+255),b
  4187   0015BA  0E03               	movlw	3
  4188   0015BC  6F51               	movwf	___awmod@divisor& (0+255),b
  4189   0015BE  ECBB  F008         	call	___awmod	;wreg free
  4190   0015C2  0101               	movlb	1	; () banked
  4191   0015C4  514F               	movf	?___awmod& (0+255),w,b
  4192   0015C6  6EDF               	movwf	indf2,c
  4193   0015C8                     
  4194                           ; BSR set to: 1
  4195                           ;pipe.c: 25:     sem_post(&p->pipe_sem_write);
  4196   0015C8  5163               	movf	read_pipe@p& (0+255),w,b
  4197   0015CA  0F13               	addlw	19
  4198   0015CC  6F55               	movwf	sem_post@s& (0+255),b
  4199   0015CE  EC6A  F009         	call	_sem_post	;wreg free
  4200   0015D2                     
  4201                           ;pipe.c: 27:     (INTCONbits.GIE = 1);
  4202   0015D2  8EF2               	bsf	242,7,c	;volatile
  4203   0015D4  0012               	return		;funcret
  4204   0015D6                     __end_of_read_pipe:
  4205                           	callstack 0
  4206                           
  4207 ;; *************** function _tarefa_3 *****************
  4208 ;; Defined at:
  4209 ;;		line 57 in file "user_app.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;		None
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      void 
  4216 ;; Registers used:
  4217 ;;		wreg, status,2, status,0
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4223 ;;      Params:         0       0       0       0       0       0       0       0       0
  4224 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4225 ;;      Temps:          0       0       1       0       0       0       0       0       0
  4226 ;;      Totals:         0       0       1       0       0       0       0       0       0
  4227 ;;Total ram usage:        1 bytes
  4228 ;; Hardware stack levels used: 1
  4229 ;; Hardware stack levels required when called: 4
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_main
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text21
  4238   0017F0                     __ptext21:
  4239                           	callstack 0
  4240   0017F0                     _tarefa_3:
  4241                           	callstack 22
  4242   0017F0                     l112:
  4243   0017F0                     
  4244                           ;user_app.c: 60:         LATDbits.LD2 = ~PORTDbits.RD2;
  4245   0017F0  B483               	btfsc	131,2,c	;volatile
  4246   0017F2  EFFD  F00B         	goto	u313_21
  4247   0017F6  EF00  F00C         	goto	u313_20
  4248   0017FA                     u313_21:
  4249   0017FA  0E01               	movlw	1
  4250   0017FC  EF01  F00C         	goto	u313_26
  4251   001800                     u313_20:
  4252   001800  0E00               	movlw	0
  4253   001802                     u313_26:
  4254   001802  0AFF               	xorlw	255
  4255   001804  0101               	movlb	1	; () banked
  4256   001806  6F69               	movwf	??_tarefa_3& (0+255),b
  4257   001808  4769               	rlncf	??_tarefa_3& (0+255),f,b
  4258   00180A  4769               	rlncf	??_tarefa_3& (0+255),f,b
  4259   00180C  508C               	movf	140,w,c	;volatile
  4260   00180E  1969               	xorwf	??_tarefa_3& (0+255),w,b
  4261   001810  0BFB               	andlw	-5
  4262   001812  1969               	xorwf	??_tarefa_3& (0+255),w,b
  4263   001814  6E8C               	movwf	140,c	;volatile
  4264   001816  EFF8  F00B         	goto	l112
  4265   00181A  0012               	return		;funcret
  4266   00181C                     __end_of_tarefa_3:
  4267                           	callstack 0
  4268                           
  4269 ;; *************** function _ISR_TIMER_0 *****************
  4270 ;; Defined at:
  4271 ;;		line 25 in file "hardware.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;		None
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;		None
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      void 
  4278 ;; Registers used:
  4279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4285 ;;      Params:         0       0       0       0       0       0       0       0       0
  4286 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4287 ;;      Temps:         13       0       0       0       0       0       0       0       0
  4288 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4289 ;;Total ram usage:       13 bytes
  4290 ;; Hardware stack levels used: 1
  4291 ;; Hardware stack levels required when called: 3
  4292 ;; This function calls:
  4293 ;;		_os_task_time_decrease
  4294 ;;		i2_scheduler
  4295 ;; This function is called by:
  4296 ;;		Interrupt level 2
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           	psect	intcode
  4301   000008                     __pintcode:
  4302                           	callstack 0
  4303   000008                     _ISR_TIMER_0:
  4304                           	callstack 17
  4305                           
  4306                           ; BSR set to: 1
  4307                           ;incstack = 0
  4308   000008  821A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4309   00000A  ED66  F005         	call	int_func,f	;refresh shadow registers
  4310                           
  4311                           	psect	intcode_body
  4312   000ACC                     __pintcode_body:
  4313                           	callstack 17
  4314   000ACC                     int_func:
  4315                           	callstack 17
  4316   000ACC  0006               	pop		; remove dummy address from shadow register refresh
  4317   000ACE  CFE1 F014          	movff	fsr1l,??_ISR_TIMER_0+7
  4318   000AD2  CFE2 F015          	movff	fsr1h,??_ISR_TIMER_0+8
  4319   000AD6  CFD9 F016          	movff	fsr2l,??_ISR_TIMER_0+9
  4320   000ADA  CFDA F017          	movff	fsr2h,??_ISR_TIMER_0+10
  4321   000ADE  CFF3 F018          	movff	prodl,??_ISR_TIMER_0+11
  4322   000AE2  CFF4 F019          	movff	prodh,??_ISR_TIMER_0+12
  4323   000AE6                     
  4324                           ;hardware.c: 27:     (INTCONbits.GIE = 0);
  4325   000AE6  9EF2               	bcf	242,7,c	;volatile
  4326                           
  4327                           ;hardware.c: 29:     if (INTCONbits.TMR0IF == 1) {
  4328   000AE8  A4F2               	btfss	242,2,c	;volatile
  4329   000AEA  EF79  F005         	goto	i2u117_41
  4330   000AEE  EF7B  F005         	goto	i2u117_40
  4331   000AF2                     i2u117_41:
  4332   000AF2  EF9C  F006         	goto	i2l1951
  4333   000AF6                     i2u117_40:
  4334   000AF6                     
  4335                           ;hardware.c: 30:         INTCONbits.TMR0IF = 0;
  4336   000AF6  94F2               	bcf	242,2,c	;volatile
  4337   000AF8                     
  4338                           ;hardware.c: 33:         os_task_time_decrease();
  4339   000AF8  ECB5  F009         	call	_os_task_time_decrease	;wreg free
  4340   000AFC  EE24  F07E         	lfsr	2,_readyQueue+531
  4341   000B00  EE10 F003          	lfsr	1,3
  4342   000B04  50DE               	movf	postinc2,w,c
  4343   000B06  26E1               	addwf	fsr1l,f,c
  4344   000B08  50DD               	movf	postdec2,w,c
  4345   000B0A  22E2               	addwfc	fsr1h,f,c
  4346   000B0C  04E6               	decf	postinc1,w,c
  4347   000B0E  A4D8               	btfss	status,2,c
  4348   000B10  EF8C  F005         	goto	i2u118_41
  4349   000B14  EF8E  F005         	goto	i2u118_40
  4350   000B18                     i2u118_41:
  4351   000B18  EFFA  F005         	goto	i2l1931
  4352   000B1C                     i2u118_40:
  4353   000B1C  EE24  F07E         	lfsr	2,_readyQueue+531
  4354   000B20  EE10 F006          	lfsr	1,6
  4355   000B24  50DE               	movf	postinc2,w,c
  4356   000B26  26E1               	addwf	fsr1l,f,c
  4357   000B28  50DD               	movf	postdec2,w,c
  4358   000B2A  22E2               	addwfc	fsr1h,f,c
  4359   000B2C  CFE0 FFE7          	movff	bsr,indf1	;volatile
  4360   000B30  EE24  F07E         	lfsr	2,_readyQueue+531
  4361   000B34  EE10 F008          	lfsr	1,8
  4362   000B38  50DE               	movf	postinc2,w,c
  4363   000B3A  26E1               	addwf	fsr1l,f,c
  4364   000B3C  50DD               	movf	postdec2,w,c
  4365   000B3E  22E2               	addwfc	fsr1h,f,c
  4366   000B40  CFD8 FFE7          	movff	status,indf1	;volatile
  4367   000B44  EE24  F07E         	lfsr	2,_readyQueue+531
  4368   000B48  EE10 F007          	lfsr	1,7
  4369   000B4C  50DE               	movf	postinc2,w,c
  4370   000B4E  26E1               	addwf	fsr1l,f,c
  4371   000B50  50DD               	movf	postdec2,w,c
  4372   000B52  22E2               	addwfc	fsr1h,f,c
  4373   000B54  CFE8 FFE7          	movff	wreg,indf1	;volatile
  4374   000B58  EE24  F07E         	lfsr	2,_readyQueue+531
  4375   000B5C  EE10 F069          	lfsr	1,105
  4376   000B60  50DE               	movf	postinc2,w,c
  4377   000B62  26E1               	addwf	fsr1l,f,c
  4378   000B64  50DD               	movf	postdec2,w,c
  4379   000B66  22E2               	addwfc	fsr1h,f,c
  4380   000B68  6AE7               	clrf	indf1,c
  4381   000B6A  EFE9  F005         	goto	i2l1927
  4382   000B6E                     i2l1923:
  4383   000B6E  EE24  F07E         	lfsr	2,_readyQueue+531
  4384   000B72  EE10 F069          	lfsr	1,105
  4385   000B76  50DE               	movf	postinc2,w,c
  4386   000B78  26E1               	addwf	fsr1l,f,c
  4387   000B7A  50DD               	movf	postdec2,w,c
  4388   000B7C  22E2               	addwfc	fsr1h,f,c
  4389   000B7E  50E7               	movf	indf1,w,c
  4390   000B80  6E0D               	movwf	??_ISR_TIMER_0^0,c
  4391   000B82  500D               	movf	??_ISR_TIMER_0^0,w,c
  4392   000B84  0D03               	mullw	3
  4393   000B86  CFF3 F00E          	movff	prodl,??_ISR_TIMER_0+1
  4394   000B8A  CFF4 F00F          	movff	prodh,??_ISR_TIMER_0+2
  4395   000B8E  EE24  F07E         	lfsr	2,_readyQueue+531
  4396   000B92  CFDE F010          	movff	postinc2,??_ISR_TIMER_0+3
  4397   000B96  CFDD F011          	movff	postdec2,??_ISR_TIMER_0+4
  4398   000B9A  500E               	movf	(??_ISR_TIMER_0+1)^0,w,c
  4399   000B9C  2410               	addwf	(??_ISR_TIMER_0+3)^0,w,c
  4400   000B9E  6E12               	movwf	(??_ISR_TIMER_0+5)^0,c
  4401   000BA0  500F               	movf	(??_ISR_TIMER_0+2)^0,w,c
  4402   000BA2  2011               	addwfc	(??_ISR_TIMER_0+4)^0,w,c
  4403   000BA4  6E13               	movwf	(??_ISR_TIMER_0+6)^0,c
  4404   000BA6  0E09               	movlw	9
  4405   000BA8  2412               	addwf	(??_ISR_TIMER_0+5)^0,w,c
  4406   000BAA  6ED9               	movwf	fsr2l,c
  4407   000BAC  0E00               	movlw	0
  4408   000BAE  2013               	addwfc	(??_ISR_TIMER_0+6)^0,w,c
  4409   000BB0  6EDA               	movwf	fsr2h,c
  4410   000BB2  CFFD FFDE          	movff	tosl,postinc2	;volatile
  4411   000BB6  CFFE FFDE          	movff	tosh,postinc2	;volatile
  4412   000BBA  CFFF FFDE          	movff	tosu,postinc2	;volatile
  4413   000BBE  EE24  F07E         	lfsr	2,_readyQueue+531
  4414   000BC2  EE10 F069          	lfsr	1,105
  4415   000BC6  50DE               	movf	postinc2,w,c
  4416   000BC8  26E1               	addwf	fsr1l,f,c
  4417   000BCA  50DD               	movf	postdec2,w,c
  4418   000BCC  22E2               	addwfc	fsr1h,f,c
  4419   000BCE  2AE7               	incf	indf1,f,c
  4420   000BD0  0006               	pop		;# 
  4421   000BD2                     i2l1927:
  4422   000BD2  50FC               	movf	252,w,c	;volatile
  4423   000BD4  A4D8               	btfss	status,2,c
  4424   000BD6  EFEF  F005         	goto	i2u119_41
  4425   000BDA  EFF1  F005         	goto	i2u119_40
  4426   000BDE                     i2u119_41:
  4427   000BDE  EFB7  F005         	goto	i2l1923
  4428   000BE2                     i2u119_40:
  4429   000BE2  EE24  F07E         	lfsr	2,_readyQueue+531
  4430   000BE6  EE10 F003          	lfsr	1,3
  4431   000BEA  50DE               	movf	postinc2,w,c
  4432   000BEC  26E1               	addwf	fsr1l,f,c
  4433   000BEE  50DD               	movf	postdec2,w,c
  4434   000BF0  22E2               	addwfc	fsr1h,f,c
  4435   000BF2  6AE7               	clrf	indf1,c
  4436   000BF4                     i2l1931:
  4437                           
  4438                           ;hardware.c: 36:         scheduler();
  4439   000BF4  EC4B  F00C         	call	i2_scheduler	;wreg free
  4440   000BF8  EE24  F07E         	lfsr	2,_readyQueue+531
  4441   000BFC  EE10 F003          	lfsr	1,3
  4442   000C00  50DE               	movf	postinc2,w,c
  4443   000C02  26E1               	addwf	fsr1l,f,c
  4444   000C04  50DD               	movf	postdec2,w,c
  4445   000C06  22E2               	addwfc	fsr1h,f,c
  4446   000C08  50E7               	movf	indf1,w,c
  4447   000C0A  A4D8               	btfss	status,2,c
  4448   000C0C  EF0A  F006         	goto	i2u120_41
  4449   000C10  EF0C  F006         	goto	i2u120_40
  4450   000C14                     i2u120_41:
  4451   000C14  EF9C  F006         	goto	i2l1951
  4452   000C18                     i2u120_40:
  4453   000C18  EE24  F07E         	lfsr	2,_readyQueue+531
  4454   000C1C  EE10 F006          	lfsr	1,6
  4455   000C20  50DE               	movf	postinc2,w,c
  4456   000C22  26E1               	addwf	fsr1l,f,c
  4457   000C24  50DD               	movf	postdec2,w,c
  4458   000C26  22E2               	addwfc	fsr1h,f,c
  4459   000C28  50E7               	movf	indf1,w,c
  4460   000C2A  6EE0               	movwf	224,c	;volatile
  4461   000C2C  EE24  F07E         	lfsr	2,_readyQueue+531
  4462   000C30  EE10 F008          	lfsr	1,8
  4463   000C34  50DE               	movf	postinc2,w,c
  4464   000C36  26E1               	addwf	fsr1l,f,c
  4465   000C38  50DD               	movf	postdec2,w,c
  4466   000C3A  22E2               	addwfc	fsr1h,f,c
  4467   000C3C  50E7               	movf	indf1,w,c
  4468   000C3E  6ED8               	movwf	216,c	;volatile
  4469   000C40  EE24  F07E         	lfsr	2,_readyQueue+531
  4470   000C44  EE10 F007          	lfsr	1,7
  4471   000C48  50DE               	movf	postinc2,w,c
  4472   000C4A  26E1               	addwf	fsr1l,f,c
  4473   000C4C  50DD               	movf	postdec2,w,c
  4474   000C4E  22E2               	addwfc	fsr1h,f,c
  4475   000C50  50E7               	movf	indf1,w,c
  4476   000C52  6E0D               	movwf	??_ISR_TIMER_0^0,c
  4477   000C54  500D               	movf	??_ISR_TIMER_0^0,w,c
  4478   000C56  6AFC               	clrf	252,c	;volatile
  4479   000C58  EE24  F07E         	lfsr	2,_readyQueue+531
  4480   000C5C  EE10 F069          	lfsr	1,105
  4481   000C60  50DE               	movf	postinc2,w,c
  4482   000C62  26E1               	addwf	fsr1l,f,c
  4483   000C64  50DD               	movf	postdec2,w,c
  4484   000C66  22E2               	addwfc	fsr1h,f,c
  4485   000C68  50E7               	movf	indf1,w,c
  4486   000C6A  A4D8               	btfss	status,2,c
  4487   000C6C  EF3A  F006         	goto	i2u121_41
  4488   000C70  EF3C  F006         	goto	i2u121_40
  4489   000C74                     i2u121_41:
  4490   000C74  EF50  F006         	goto	i2l245
  4491   000C78                     i2u121_40:
  4492   000C78  0005               	push		;# 
  4493   000C7A  EE24  F07E         	lfsr	2,_readyQueue+531
  4494   000C7E  EE10 F001          	lfsr	1,1
  4495   000C82  50DE               	movf	postinc2,w,c
  4496   000C84  26E1               	addwf	fsr1l,f,c
  4497   000C86  50DD               	movf	postdec2,w,c
  4498   000C88  22E2               	addwfc	fsr1h,f,c
  4499   000C8A  CFE6 F00D          	movff	postinc1,??_ISR_TIMER_0
  4500   000C8E  CFE5 F00E          	movff	postdec1,??_ISR_TIMER_0+1
  4501   000C92  C00D  FFFD         	movff	??_ISR_TIMER_0,tosl	;volatile
  4502   000C96  C00E  FFFE         	movff	??_ISR_TIMER_0+1,tosh	;volatile
  4503   000C9A  6AFF               	clrf	255,c	;volatile
  4504   000C9C  EF92  F006         	goto	i2l1949
  4505   000CA0                     i2l245:
  4506   000CA0  0005               	push		;# 
  4507   000CA2  EE24  F07E         	lfsr	2,_readyQueue+531
  4508   000CA6  EE10 F069          	lfsr	1,105
  4509   000CAA  50DE               	movf	postinc2,w,c
  4510   000CAC  26E1               	addwf	fsr1l,f,c
  4511   000CAE  50DD               	movf	postdec2,w,c
  4512   000CB0  22E2               	addwfc	fsr1h,f,c
  4513   000CB2  06E7               	decf	indf1,f,c
  4514   000CB4  EE24  F07E         	lfsr	2,_readyQueue+531
  4515   000CB8  EE10 F069          	lfsr	1,105
  4516   000CBC  50DE               	movf	postinc2,w,c
  4517   000CBE  26E1               	addwf	fsr1l,f,c
  4518   000CC0  50DD               	movf	postdec2,w,c
  4519   000CC2  22E2               	addwfc	fsr1h,f,c
  4520   000CC4  50E7               	movf	indf1,w,c
  4521   000CC6  6E0D               	movwf	??_ISR_TIMER_0^0,c
  4522   000CC8  500D               	movf	??_ISR_TIMER_0^0,w,c
  4523   000CCA  0D03               	mullw	3
  4524   000CCC  CFF3 F00E          	movff	prodl,??_ISR_TIMER_0+1
  4525   000CD0  CFF4 F00F          	movff	prodh,??_ISR_TIMER_0+2
  4526   000CD4  EE24  F07E         	lfsr	2,_readyQueue+531
  4527   000CD8  CFDE F010          	movff	postinc2,??_ISR_TIMER_0+3
  4528   000CDC  CFDD F011          	movff	postdec2,??_ISR_TIMER_0+4
  4529   000CE0  500E               	movf	(??_ISR_TIMER_0+1)^0,w,c
  4530   000CE2  2410               	addwf	(??_ISR_TIMER_0+3)^0,w,c
  4531   000CE4  6E12               	movwf	(??_ISR_TIMER_0+5)^0,c
  4532   000CE6  500F               	movf	(??_ISR_TIMER_0+2)^0,w,c
  4533   000CE8  2011               	addwfc	(??_ISR_TIMER_0+4)^0,w,c
  4534   000CEA  6E13               	movwf	(??_ISR_TIMER_0+6)^0,c
  4535   000CEC  0E09               	movlw	9
  4536   000CEE  2412               	addwf	(??_ISR_TIMER_0+5)^0,w,c
  4537   000CF0  6ED9               	movwf	fsr2l,c
  4538   000CF2  0E00               	movlw	0
  4539   000CF4  2013               	addwfc	(??_ISR_TIMER_0+6)^0,w,c
  4540   000CF6  6EDA               	movwf	fsr2h,c
  4541   000CF8  CFDE FFFD          	movff	postinc2,tosl	;volatile
  4542   000CFC  CFDE FFFE          	movff	postinc2,tosh	;volatile
  4543   000D00  CFDD FFFF          	movff	postdec2,tosu	;volatile
  4544   000D04  EE24  F07E         	lfsr	2,_readyQueue+531
  4545   000D08  EE10 F069          	lfsr	1,105
  4546   000D0C  50DE               	movf	postinc2,w,c
  4547   000D0E  26E1               	addwf	fsr1l,f,c
  4548   000D10  50DD               	movf	postdec2,w,c
  4549   000D12  22E2               	addwfc	fsr1h,f,c
  4550   000D14  50E7               	movf	indf1,w,c
  4551   000D16  A4D8               	btfss	status,2,c
  4552   000D18  EF90  F006         	goto	i2u122_41
  4553   000D1C  EF92  F006         	goto	i2u122_40
  4554   000D20                     i2u122_41:
  4555   000D20  EF50  F006         	goto	i2l245
  4556   000D24                     i2u122_40:
  4557   000D24                     i2l1949:
  4558   000D24  EE24  F07E         	lfsr	2,_readyQueue+531
  4559   000D28  EE10 F003          	lfsr	1,3
  4560   000D2C  50DE               	movf	postinc2,w,c
  4561   000D2E  26E1               	addwf	fsr1l,f,c
  4562   000D30  50DD               	movf	postdec2,w,c
  4563   000D32  22E2               	addwfc	fsr1h,f,c
  4564   000D34  0E01               	movlw	1
  4565   000D36  6EE7               	movwf	indf1,c
  4566   000D38                     i2l1951:
  4567                           
  4568                           ;hardware.c: 40:     (INTCONbits.GIE = 1);
  4569   000D38  8EF2               	bsf	242,7,c	;volatile
  4570   000D3A  C019  FFF4         	movff	??_ISR_TIMER_0+12,prodh
  4571   000D3E  C018  FFF3         	movff	??_ISR_TIMER_0+11,prodl
  4572   000D42  C017  FFDA         	movff	??_ISR_TIMER_0+10,fsr2h
  4573   000D46  C016  FFD9         	movff	??_ISR_TIMER_0+9,fsr2l
  4574   000D4A  C015  FFE2         	movff	??_ISR_TIMER_0+8,fsr1h
  4575   000D4E  C014  FFE1         	movff	??_ISR_TIMER_0+7,fsr1l
  4576   000D52  921A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4577   000D54  0011               	retfie		f
  4578   000D56                     __end_of_ISR_TIMER_0:
  4579                           	callstack 0
  4580                           
  4581 ;; *************** function i2_scheduler *****************
  4582 ;; Defined at:
  4583 ;;		line 37 in file "scheduler.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;		None
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      void 
  4590 ;; Registers used:
  4591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4597 ;;      Params:         0       0       0       0       0       0       0       0       0
  4598 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4600 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4601 ;;Total ram usage:        0 bytes
  4602 ;; Hardware stack levels used: 1
  4603 ;; Hardware stack levels required when called: 2
  4604 ;; This function calls:
  4605 ;;		i2_rr_scheduler
  4606 ;; This function is called by:
  4607 ;;		_ISR_TIMER_0
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text23
  4612   001896                     __ptext23:
  4613                           	callstack 0
  4614   001896                     i2_scheduler:
  4615                           	callstack 17
  4616   001896                     
  4617                           ;scheduler.c: 40:     readyQueue.taskRunning = rr_scheduler();
  4618   001896  EC4C  F008         	call	i2_rr_scheduler	;wreg free
  4619   00189A  C007  F47E         	movff	?i2_rr_scheduler,_readyQueue+531
  4620   00189E  C008  F47F         	movff	?i2_rr_scheduler+1,_readyQueue+532
  4621   0018A2  0012               	return		;funcret
  4622   0018A4                     __end_ofi2_scheduler:
  4623                           	callstack 0
  4624                           
  4625 ;; *************** function i2_rr_scheduler *****************
  4626 ;; Defined at:
  4627 ;;		line 12 in file "scheduler.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;		None
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  pos_task_run    1   11[COMRAM] unsigned char 
  4632 ;;  idle_selecte    1   10[COMRAM] unsigned char 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  2    6[COMRAM] PTR struct tcb
  4635 ;; Registers used:
  4636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4642 ;;      Params:         2       0       0       0       0       0       0       0       0
  4643 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4644 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4645 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4646 ;;Total ram usage:        6 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; Hardware stack levels required when called: 1
  4649 ;; This function calls:
  4650 ;;		i2___awmod
  4651 ;;		i2_os_task_pos
  4652 ;; This function is called by:
  4653 ;;		i2_scheduler
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           	psect	text24
  4658   001098                     __ptext24:
  4659                           	callstack 0
  4660   001098                     i2_rr_scheduler:
  4661                           	callstack 17
  4662   001098                     
  4663                           ;scheduler.c: 14:     uint8_t pos_task_running = os_task_pos(readyQueue.taskRunning->tas
      +                          k_func);
  4664   001098  EE24  F07E         	lfsr	2,_readyQueue+531
  4665   00109C  EE10 F001          	lfsr	1,1
  4666   0010A0  50DE               	movf	postinc2,w,c
  4667   0010A2  26E1               	addwf	fsr1l,f,c
  4668   0010A4  50DD               	movf	postdec2,w,c
  4669   0010A6  22E2               	addwfc	fsr1h,f,c
  4670   0010A8  CFE6 F001          	movff	postinc1,i2os_task_pos@task
  4671   0010AC  CFE5 F002          	movff	postdec1,i2os_task_pos@task+1
  4672   0010B0  EC3C  F00B         	call	i2_os_task_pos	;wreg free
  4673   0010B4  6E0C               	movwf	i2rr_scheduler@pos_task_running^0,c
  4674   0010B6                     
  4675                           ;scheduler.c: 15:     uint8_t idle_selected = 0;
  4676   0010B6  6A0B               	clrf	i2rr_scheduler@idle_selected^0,c
  4677   0010B8                     i2l1713:
  4678                           
  4679                           ;scheduler.c: 18:         pos_task_running = (pos_task_running+1) % readyQueue.readyQueu
      +                          eSize;
  4680   0010B8  0E01               	movlw	1
  4681   0010BA  240C               	addwf	i2rr_scheduler@pos_task_running^0,w,c
  4682   0010BC  6E01               	movwf	i2___awmod@dividend^0,c
  4683   0010BE  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  4684   0010C0  0E00               	movlw	0
  4685   0010C2  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
  4686   0010C4  C47D  F009         	movff	_readyQueue+530,??i2_rr_scheduler
  4687   0010C8  5009               	movf	??i2_rr_scheduler^0,w,c
  4688   0010CA  6E03               	movwf	i2___awmod@divisor^0,c
  4689   0010CC  6A04               	clrf	(i2___awmod@divisor+1)^0,c
  4690   0010CE  EC13  F009         	call	i2___awmod	;wreg free
  4691   0010D2  5001               	movf	?i2___awmod^0,w,c
  4692   0010D4  6E0C               	movwf	i2rr_scheduler@pos_task_running^0,c
  4693   0010D6                     
  4694                           ;scheduler.c: 19:         if (readyQueue.readyQueue[pos_task_running].task_func == os_id
      +                          le_task) {
  4695   0010D6  500C               	movf	i2rr_scheduler@pos_task_running^0,w,c
  4696   0010D8  0D6A               	mullw	106
  4697   0010DA  0E6C               	movlw	low (_readyQueue+1)
  4698   0010DC  24F3               	addwf	243,w,c
  4699   0010DE  6ED9               	movwf	fsr2l,c
  4700   0010E0  0E02               	movlw	high (_readyQueue+1)
  4701   0010E2  20F4               	addwfc	prodh,w,c
  4702   0010E4  6EDA               	movwf	fsr2h,c
  4703   0010E6  0EC2               	movlw	low _os_idle_task
  4704   0010E8  18DE               	xorwf	postinc2,w,c
  4705   0010EA  E107               	bnz	i2u92_41
  4706   0010EC  0E17               	movlw	high _os_idle_task
  4707   0010EE  18DE               	xorwf	postinc2,w,c
  4708   0010F0  A4D8               	btfss	status,2,c
  4709   0010F2  EF7D  F008         	goto	i2u92_41
  4710   0010F6  EF7F  F008         	goto	i2u92_40
  4711   0010FA                     i2u92_41:
  4712   0010FA  EF8E  F008         	goto	i2l1725
  4713   0010FE                     i2u92_40:
  4714   0010FE                     
  4715                           ;scheduler.c: 20:             idle_selected++;
  4716   0010FE  2A0B               	incf	i2rr_scheduler@idle_selected^0,f,c
  4717   001100                     
  4718                           ;scheduler.c: 21:             if (idle_selected > 1) return &readyQueue.readyQueue[0];
  4719   001100  0E01               	movlw	1
  4720   001102  640B               	cpfsgt	i2rr_scheduler@idle_selected^0,c
  4721   001104  EF86  F008         	goto	i2u93_41
  4722   001108  EF88  F008         	goto	i2u93_40
  4723   00110C                     i2u93_41:
  4724   00110C  EF8E  F008         	goto	i2l1725
  4725   001110                     i2u93_40:
  4726   001110  0E6B               	movlw	low _readyQueue
  4727   001112  6E07               	movwf	?i2_rr_scheduler^0,c
  4728   001114  0E02               	movlw	high _readyQueue
  4729   001116  6E08               	movwf	(?i2_rr_scheduler+1)^0,c
  4730   001118  EFBA  F008         	goto	i2l194
  4731   00111C                     i2l1725:
  4732                           
  4733                           ;scheduler.c: 24:     } while (readyQueue.readyQueue[pos_task_running].task_state != REA
      +                          DY ||
  4734   00111C  500C               	movf	i2rr_scheduler@pos_task_running^0,w,c
  4735   00111E  0D6A               	mullw	106
  4736   001120  0E6E               	movlw	low (_readyQueue+3)
  4737   001122  24F3               	addwf	243,w,c
  4738   001124  6ED9               	movwf	fsr2l,c
  4739   001126  0E02               	movlw	high (_readyQueue+3)
  4740   001128  20F4               	addwfc	prodh,w,c
  4741   00112A  6EDA               	movwf	fsr2h,c
  4742   00112C  50DF               	movf	indf2,w,c
  4743   00112E  A4D8               	btfss	status,2,c
  4744   001130  EF9C  F008         	goto	i2u94_41
  4745   001134  EF9E  F008         	goto	i2u94_40
  4746   001138                     i2u94_41:
  4747   001138  EF5C  F008         	goto	i2l1713
  4748   00113C                     i2u94_40:
  4749   00113C  500C               	movf	i2rr_scheduler@pos_task_running^0,w,c
  4750   00113E  0D6A               	mullw	106
  4751   001140  0E6C               	movlw	low (_readyQueue+1)
  4752   001142  24F3               	addwf	243,w,c
  4753   001144  6ED9               	movwf	fsr2l,c
  4754   001146  0E02               	movlw	high (_readyQueue+1)
  4755   001148  20F4               	addwfc	prodh,w,c
  4756   00114A  6EDA               	movwf	fsr2h,c
  4757   00114C  0EC2               	movlw	low _os_idle_task
  4758   00114E  18DE               	xorwf	postinc2,w,c
  4759   001150  E109               	bnz	i2u95_40
  4760   001152  0E17               	movlw	high _os_idle_task
  4761   001154  18DE               	xorwf	postinc2,w,c
  4762   001156  B4D8               	btfsc	status,2,c
  4763   001158  EFB0  F008         	goto	i2u95_41
  4764   00115C  EFB2  F008         	goto	i2u95_40
  4765   001160                     i2u95_41:
  4766   001160  EF5C  F008         	goto	i2l1713
  4767   001164                     i2u95_40:
  4768   001164                     
  4769                           ;scheduler.c: 27:     return &readyQueue.readyQueue[pos_task_running];
  4770   001164  500C               	movf	i2rr_scheduler@pos_task_running^0,w,c
  4771   001166  0D6A               	mullw	106
  4772   001168  0E6B               	movlw	low _readyQueue
  4773   00116A  24F3               	addwf	243,w,c
  4774   00116C  6E07               	movwf	?i2_rr_scheduler^0,c
  4775   00116E  0E02               	movlw	high _readyQueue
  4776   001170  20F4               	addwfc	prodh,w,c
  4777   001172  6E08               	movwf	(?i2_rr_scheduler+1)^0,c
  4778   001174                     i2l194:
  4779   001174  0012               	return		;funcret
  4780   001176                     __end_ofi2_rr_scheduler:
  4781                           	callstack 0
  4782                           
  4783 ;; *************** function i2_os_task_pos *****************
  4784 ;; Defined at:
  4785 ;;		line 47 in file "kernel.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  task            2    0[COMRAM] PTR FTN()void 
  4788 ;;		 -> os_idle_task(1), tarefa_3(1), tarefa_2(1), tarefa_1(1), 
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;  i               1    4[COMRAM] unsigned char 
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  1    wreg      unsigned char 
  4793 ;; Registers used:
  4794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4800 ;;      Params:         2       0       0       0       0       0       0       0       0
  4801 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4802 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4803 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4804 ;;Total ram usage:        5 bytes
  4805 ;; Hardware stack levels used: 1
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		i2_rr_scheduler
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text25
  4814   001678                     __ptext25:
  4815                           	callstack 0
  4816   001678                     i2_os_task_pos:
  4817                           	callstack 17
  4818   001678                     
  4819                           ;kernel.c: 47: uint8_t os_task_pos(f_ptr task);kernel.c: 48: {;kernel.c: 49:     for (ui
      +                          nt8_t i = 0; i < readyQueue.readyQueueSize; i++) {
  4820   001678  6A05               	clrf	i2os_task_pos@i^0,c
  4821   00167A  EF57  F00B         	goto	i2l1579
  4822   00167E                     i2l1571:
  4823                           
  4824                           ;kernel.c: 50:         if (readyQueue.readyQueue[i].task_func == task) return i;
  4825   00167E  5005               	movf	i2os_task_pos@i^0,w,c
  4826   001680  0D6A               	mullw	106
  4827   001682  0E6C               	movlw	low (_readyQueue+1)
  4828   001684  24F3               	addwf	243,w,c
  4829   001686  6ED9               	movwf	fsr2l,c
  4830   001688  0E02               	movlw	high (_readyQueue+1)
  4831   00168A  20F4               	addwfc	prodh,w,c
  4832   00168C  6EDA               	movwf	fsr2h,c
  4833   00168E  5001               	movf	i2os_task_pos@task^0,w,c
  4834   001690  18DE               	xorwf	postinc2,w,c
  4835   001692  E107               	bnz	i2u76_41
  4836   001694  5002               	movf	(i2os_task_pos@task+1)^0,w,c
  4837   001696  18DE               	xorwf	postinc2,w,c
  4838   001698  A4D8               	btfss	status,2,c
  4839   00169A  EF51  F00B         	goto	i2u76_41
  4840   00169E  EF53  F00B         	goto	i2u76_40
  4841   0016A2                     i2u76_41:
  4842   0016A2  EF56  F00B         	goto	i2l1577
  4843   0016A6                     i2u76_40:
  4844   0016A6  5005               	movf	i2os_task_pos@i^0,w,c
  4845   0016A8  EF63  F00B         	goto	i2l58
  4846   0016AC                     i2l1577:
  4847                           
  4848                           ;kernel.c: 51:     }
  4849   0016AC  2A05               	incf	i2os_task_pos@i^0,f,c
  4850   0016AE                     i2l1579:
  4851   0016AE  EE24  F07D         	lfsr	2,_readyQueue+530
  4852   0016B2  50DE               	movf	postinc2,w,c
  4853   0016B4  5C05               	subwf	i2os_task_pos@i^0,w,c
  4854   0016B6  A0D8               	btfss	status,0,c
  4855   0016B8  EF60  F00B         	goto	i2u77_41
  4856   0016BC  EF62  F00B         	goto	i2u77_40
  4857   0016C0                     i2u77_41:
  4858   0016C0  EF3F  F00B         	goto	i2l1571
  4859   0016C4                     i2u77_40:
  4860   0016C4                     
  4861                           ;kernel.c: 53:     return 0;
  4862   0016C4  0E00               	movlw	0
  4863   0016C6                     i2l58:
  4864   0016C6  0012               	return		;funcret
  4865   0016C8                     __end_ofi2_os_task_pos:
  4866                           	callstack 0
  4867                           
  4868 ;; *************** function i2___awmod *****************
  4869 ;; Defined at:
  4870 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;  dividend        2    0[COMRAM] int 
  4873 ;;  divisor         2    2[COMRAM] int 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  sign            1    5[COMRAM] unsigned char 
  4876 ;;  counter         1    4[COMRAM] unsigned char 
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  2    0[COMRAM] int 
  4879 ;; Registers used:
  4880 ;;		wreg, status,2, status,0
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4886 ;;      Params:         4       0       0       0       0       0       0       0       0
  4887 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4888 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4889 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4890 ;;Total ram usage:        6 bytes
  4891 ;; Hardware stack levels used: 1
  4892 ;; This function calls:
  4893 ;;		Nothing
  4894 ;; This function is called by:
  4895 ;;		i2_rr_scheduler
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           	psect	text26
  4900   001226                     __ptext26:
  4901                           	callstack 0
  4902   001226                     i2___awmod:
  4903                           	callstack 17
  4904   001226  6A06               	clrf	i2___awmod@sign^0,c
  4905   001228  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  4906   00122A  EF1B  F009         	goto	i2u78_40
  4907   00122E  EF19  F009         	goto	i2u78_41
  4908   001232                     i2u78_41:
  4909   001232  EF21  F009         	goto	i2l1593
  4910   001236                     i2u78_40:
  4911   001236  6C01               	negf	i2___awmod@dividend^0,c
  4912   001238  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  4913   00123A  B0D8               	btfsc	status,0,c
  4914   00123C  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  4915   00123E  0E01               	movlw	1
  4916   001240  6E06               	movwf	i2___awmod@sign^0,c
  4917   001242                     i2l1593:
  4918   001242  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  4919   001244  EF28  F009         	goto	i2u79_40
  4920   001248  EF26  F009         	goto	i2u79_41
  4921   00124C                     i2u79_41:
  4922   00124C  EF2C  F009         	goto	i2l1597
  4923   001250                     i2u79_40:
  4924   001250  6C03               	negf	i2___awmod@divisor^0,c
  4925   001252  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  4926   001254  B0D8               	btfsc	status,0,c
  4927   001256  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  4928   001258                     i2l1597:
  4929   001258  5003               	movf	i2___awmod@divisor^0,w,c
  4930   00125A  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  4931   00125C  B4D8               	btfsc	status,2,c
  4932   00125E  EF33  F009         	goto	i2u80_41
  4933   001262  EF35  F009         	goto	i2u80_40
  4934   001266                     i2u80_41:
  4935   001266  EF59  F009         	goto	i2l1613
  4936   00126A                     i2u80_40:
  4937   00126A  0E01               	movlw	1
  4938   00126C  6E05               	movwf	i2___awmod@counter^0,c
  4939   00126E  EF3D  F009         	goto	i2l1603
  4940   001272                     i2l1601:
  4941   001272  90D8               	bcf	status,0,c
  4942   001274  3603               	rlcf	i2___awmod@divisor^0,f,c
  4943   001276  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  4944   001278  2A05               	incf	i2___awmod@counter^0,f,c
  4945   00127A                     i2l1603:
  4946   00127A  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  4947   00127C  EF42  F009         	goto	i2u81_41
  4948   001280  EF44  F009         	goto	i2u81_40
  4949   001284                     i2u81_41:
  4950   001284  EF39  F009         	goto	i2l1601
  4951   001288                     i2u81_40:
  4952   001288                     i2l1605:
  4953   001288  5003               	movf	i2___awmod@divisor^0,w,c
  4954   00128A  5C01               	subwf	i2___awmod@dividend^0,w,c
  4955   00128C  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  4956   00128E  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  4957   001290  A0D8               	btfss	status,0,c
  4958   001292  EF4D  F009         	goto	i2u82_41
  4959   001296  EF4F  F009         	goto	i2u82_40
  4960   00129A                     i2u82_41:
  4961   00129A  EF53  F009         	goto	i2l1609
  4962   00129E                     i2u82_40:
  4963   00129E  5003               	movf	i2___awmod@divisor^0,w,c
  4964   0012A0  5E01               	subwf	i2___awmod@dividend^0,f,c
  4965   0012A2  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  4966   0012A4  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  4967   0012A6                     i2l1609:
  4968   0012A6  90D8               	bcf	status,0,c
  4969   0012A8  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  4970   0012AA  3203               	rrcf	i2___awmod@divisor^0,f,c
  4971   0012AC  2E05               	decfsz	i2___awmod@counter^0,f,c
  4972   0012AE  EF44  F009         	goto	i2l1605
  4973   0012B2                     i2l1613:
  4974   0012B2  5006               	movf	i2___awmod@sign^0,w,c
  4975   0012B4  B4D8               	btfsc	status,2,c
  4976   0012B6  EF5F  F009         	goto	i2u83_41
  4977   0012BA  EF61  F009         	goto	i2u83_40
  4978   0012BE                     i2u83_41:
  4979   0012BE  EF65  F009         	goto	i2l1617
  4980   0012C2                     i2u83_40:
  4981   0012C2  6C01               	negf	i2___awmod@dividend^0,c
  4982   0012C4  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  4983   0012C6  B0D8               	btfsc	status,0,c
  4984   0012C8  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  4985   0012CA                     i2l1617:
  4986   0012CA  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  4987   0012CE  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  4988   0012D2  0012               	return		;funcret
  4989   0012D4                     __end_ofi2___awmod:
  4990                           	callstack 0
  4991                           
  4992 ;; *************** function _os_task_time_decrease *****************
  4993 ;; Defined at:
  4994 ;;		line 56 in file "kernel.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;		None
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;  i               1    1[COMRAM] unsigned char 
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  1    wreg      void 
  5001 ;; Registers used:
  5002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5008 ;;      Params:         0       0       0       0       0       0       0       0       0
  5009 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5010 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5011 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5012 ;;Total ram usage:        2 bytes
  5013 ;; Hardware stack levels used: 1
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_ISR_TIMER_0
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text27
  5022   00136A                     __ptext27:
  5023                           	callstack 0
  5024   00136A                     _os_task_time_decrease:
  5025                           	callstack 19
  5026   00136A                     
  5027                           ;kernel.c: 58:     for (uint8_t i = 1; i < readyQueue.readyQueueSize; i++) {
  5028   00136A  0E01               	movlw	1
  5029   00136C  6E02               	movwf	os_task_time_decrease@i^0,c
  5030   00136E  EFED  F009         	goto	i2l1259
  5031   001372                     i2l1251:
  5032                           
  5033                           ;kernel.c: 59:         if (readyQueue.readyQueue[i].task_state == WAITING) {
  5034   001372  5002               	movf	os_task_time_decrease@i^0,w,c
  5035   001374  0D6A               	mullw	106
  5036   001376  0E6E               	movlw	low (_readyQueue+3)
  5037   001378  24F3               	addwf	243,w,c
  5038   00137A  6ED9               	movwf	fsr2l,c
  5039   00137C  0E02               	movlw	high (_readyQueue+3)
  5040   00137E  20F4               	addwfc	prodh,w,c
  5041   001380  6EDA               	movwf	fsr2h,c
  5042   001382  0E02               	movlw	2
  5043   001384  18DE               	xorwf	postinc2,w,c
  5044   001386  A4D8               	btfss	status,2,c
  5045   001388  EFC8  F009         	goto	i2u33_41
  5046   00138C  EFCA  F009         	goto	i2u33_40
  5047   001390                     i2u33_41:
  5048   001390  EFEC  F009         	goto	i2l1257
  5049   001394                     i2u33_40:
  5050   001394                     
  5051                           ;kernel.c: 60:             readyQueue.readyQueue[i].task_time_to_waiting--;
  5052   001394  5002               	movf	os_task_time_decrease@i^0,w,c
  5053   001396  0D6A               	mullw	106
  5054   001398  0E70               	movlw	low (_readyQueue+5)
  5055   00139A  24F3               	addwf	243,w,c
  5056   00139C  6ED9               	movwf	fsr2l,c
  5057   00139E  0E02               	movlw	high (_readyQueue+5)
  5058   0013A0  20F4               	addwfc	prodh,w,c
  5059   0013A2  6EDA               	movwf	fsr2h,c
  5060   0013A4  06DF               	decf	indf2,f,c
  5061                           
  5062                           ;kernel.c: 61:             if (readyQueue.readyQueue[i].task_time_to_waiting == 0) {
  5063   0013A6  5002               	movf	os_task_time_decrease@i^0,w,c
  5064   0013A8  0D6A               	mullw	106
  5065   0013AA  0E70               	movlw	low (_readyQueue+5)
  5066   0013AC  24F3               	addwf	243,w,c
  5067   0013AE  6ED9               	movwf	fsr2l,c
  5068   0013B0  0E02               	movlw	high (_readyQueue+5)
  5069   0013B2  20F4               	addwfc	prodh,w,c
  5070   0013B4  6EDA               	movwf	fsr2h,c
  5071   0013B6  50DF               	movf	indf2,w,c
  5072   0013B8  A4D8               	btfss	status,2,c
  5073   0013BA  EFE1  F009         	goto	i2u34_41
  5074   0013BE  EFE3  F009         	goto	i2u34_40
  5075   0013C2                     i2u34_41:
  5076   0013C2  EFEC  F009         	goto	i2l1257
  5077   0013C6                     i2u34_40:
  5078   0013C6                     
  5079                           ;kernel.c: 63:                 readyQueue.readyQueue[i].task_state = READY;
  5080   0013C6  5002               	movf	os_task_time_decrease@i^0,w,c
  5081   0013C8  0D6A               	mullw	106
  5082   0013CA  0E6E               	movlw	low (_readyQueue+3)
  5083   0013CC  24F3               	addwf	243,w,c
  5084   0013CE  6ED9               	movwf	fsr2l,c
  5085   0013D0  0E02               	movlw	high (_readyQueue+3)
  5086   0013D2  20F4               	addwfc	prodh,w,c
  5087   0013D4  6EDA               	movwf	fsr2h,c
  5088   0013D6  6ADF               	clrf	indf2,c
  5089   0013D8                     i2l1257:
  5090                           
  5091                           ;kernel.c: 66:     }
  5092   0013D8  2A02               	incf	os_task_time_decrease@i^0,f,c
  5093   0013DA                     i2l1259:
  5094   0013DA  EE24  F07D         	lfsr	2,_readyQueue+530
  5095   0013DE  50DE               	movf	postinc2,w,c
  5096   0013E0  5C02               	subwf	os_task_time_decrease@i^0,w,c
  5097   0013E2  A0D8               	btfss	status,0,c
  5098   0013E4  EFF6  F009         	goto	i2u35_41
  5099   0013E8  EFF8  F009         	goto	i2u35_40
  5100   0013EC                     i2u35_41:
  5101   0013EC  EFB9  F009         	goto	i2l1251
  5102   0013F0                     i2u35_40:
  5103   0013F0  0012               	return		;funcret
  5104   0013F2                     __end_of_os_task_time_decrease:
  5105                           	callstack 0
  5106                           
  5107                           	psect	smallconst
  5108   000800                     __psmallconst:
  5109                           	callstack 0
  5110   000800  00                 	db	0
  5111   000801  00                 	db	0	; dummy byte at the end
  5112   000800                     __smallconst    set	__psmallconst
  5113   000800                     __mediumconst   set	__psmallconst
  5114   000000                     __activetblptr  equ	0
  5115                           
  5116                           	psect	rparam
  5117   000001                     ___rparam_used  equ	1
  5118   000000                     ___param_bank   equ	0
  5119   000000                     __Lparam        equ	__Lrparam
  5120   000000                     __Hparam        equ	__Hrparam
  5121                           
  5122                           	psect	temp
  5123   00001A                     btemp:
  5124                           	callstack 0
  5125   00001A                     	ds	1
  5126   00001A                     int$flags       set	btemp
  5127   00001B                     wtemp8          set	btemp+1
  5128   00001B                     ttemp5          set	btemp+1
  5129   00001E                     ttemp6          set	btemp+4
  5130   000022                     ttemp7          set	btemp+8
  5131                           tosu	equ	0xFFF
  5132                           tosh	equ	0xFFE
  5133                           tosl	equ	0xFFD
  5134                           stkptr	equ	0xFFC
  5135                           pclatu	equ	0xFFB
  5136                           pclath	equ	0xFFA
  5137                           pcl	equ	0xFF9
  5138                           tblptru	equ	0xFF8
  5139                           tblptrh	equ	0xFF7
  5140                           tblptrl	equ	0xFF6
  5141                           tablat	equ	0xFF5
  5142                           prodh	equ	0xFF4
  5143                           prodl	equ	0xFF3
  5144                           indf0	equ	0xFEF
  5145                           postinc0	equ	0xFEE
  5146                           postdec0	equ	0xFED
  5147                           preinc0	equ	0xFEC
  5148                           plusw0	equ	0xFEB
  5149                           fsr0h	equ	0xFEA
  5150                           fsr0l	equ	0xFE9
  5151                           wreg	equ	0xFE8
  5152                           indf1	equ	0xFE7
  5153                           postinc1	equ	0xFE6
  5154                           postdec1	equ	0xFE5
  5155                           preinc1	equ	0xFE4
  5156                           plusw1	equ	0xFE3
  5157                           fsr1h	equ	0xFE2
  5158                           fsr1l	equ	0xFE1
  5159                           bsr	equ	0xFE0
  5160                           indf2	equ	0xFDF
  5161                           postinc2	equ	0xFDE
  5162                           postdec2	equ	0xFDD
  5163                           preinc2	equ	0xFDC
  5164                           plusw2	equ	0xFDB
  5165                           fsr2h	equ	0xFDA
  5166                           fsr2l	equ	0xFD9
  5167                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         566
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      26
    BANK0           160     14      50
    BANK1           256    111     111
    BANK2           256    107     107
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    canal$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    canal$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    canal$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    canal$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    create_pipe@p	PTR struct pipe size(1) Largest target is 33
		 -> canal(BANK0[33]), 

    create_pipe@p$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    create_pipe@p$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    new_task$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    os_create_task@task_f	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    os_task_pos@task	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    ?_priority_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    read_pipe@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> tarefa_2@dado(BANK1[1]), 

    read_pipe@p	PTR struct pipe size(1) Largest target is 33
		 -> canal(BANK0[33]), 

    read_pipe@p$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    read_pipe@p$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    readyQueue$readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    readyQueue$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), NULL(NULL[0]), 

    readyQueue$taskRunning$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    ?_rr_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    ?_rr_scheduler$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    S346semaphore$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    S63tcb$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    S74f_aptos$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    sem_init@s	PTR struct semaphore size(1) Largest target is 33
		 -> canal(BANK0[33]), 

    sem_init@s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    sem_post@s	PTR struct semaphore size(1) Largest target is 33
		 -> canal(BANK0[33]), 

    sem_post@s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    sem_post@s$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    sem_wait@s	PTR struct semaphore size(1) Largest target is 33
		 -> canal(BANK0[33]), 

    sem_wait@s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    sem_wait@s$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    sp__priority_scheduler	PTR struct tcb size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__priority_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    sp__rr_scheduler	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 

    write_pipe@p	PTR struct pipe size(1) Largest target is 33
		 -> canal(BANK0[33]), 

    write_pipe@p$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    write_pipe@p$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _tarefa_1 in COMRAM

    _tarefa_1->_write_pipe

Critical Paths under _tarefa_2 in COMRAM

    None.

Critical Paths under _tarefa_3 in COMRAM

    None.

Critical Paths under _tarefa_1 in COMRAM

    _tarefa_1->_write_pipe

Critical Paths under _tarefa_2 in COMRAM

    None.

Critical Paths under _tarefa_3 in COMRAM

    None.

Critical Paths under _ISR_TIMER_0 in COMRAM

    i2_scheduler->i2_rr_scheduler
    i2_rr_scheduler->i2___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _tarefa_1 in BANK0

    _tarefa_1->_os_delay

Critical Paths under _tarefa_2 in BANK0

    None.

Critical Paths under _tarefa_3 in BANK0

    None.

Critical Paths under _tarefa_1 in BANK0

    _tarefa_1->_os_delay

Critical Paths under _tarefa_2 in BANK0

    None.

Critical Paths under _tarefa_3 in BANK0

    None.

Critical Paths under _ISR_TIMER_0 in BANK0

    None.

Critical Paths under _main in BANK1

    _config_app->_create_pipe
    _create_pipe->_sem_init
    _os_config->_os_create_task

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _tarefa_1 in BANK1

    _sem_post->___awmod
    _scheduler->_rr_scheduler
    _rr_scheduler->___awmod

Critical Paths under _tarefa_2 in BANK1

    _tarefa_2->_read_pipe
    _read_pipe->_sem_wait
    _scheduler->_rr_scheduler
    _rr_scheduler->___awmod
    _sem_post->___awmod

Critical Paths under _tarefa_3 in BANK1

    None.

Critical Paths under _tarefa_1 in BANK1

    _sem_post->___awmod
    _scheduler->_rr_scheduler
    _rr_scheduler->___awmod

Critical Paths under _tarefa_2 in BANK1

    _tarefa_2->_read_pipe
    _read_pipe->_sem_wait
    _scheduler->_rr_scheduler
    _rr_scheduler->___awmod
    _sem_post->___awmod

Critical Paths under _tarefa_3 in BANK1

    None.

Critical Paths under _ISR_TIMER_0 in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_os_create_task
    _os_config->_os_create_task

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _tarefa_1 in BANK2

    None.

Critical Paths under _tarefa_2 in BANK2

    None.

Critical Paths under _tarefa_3 in BANK2

    None.

Critical Paths under _tarefa_1 in BANK2

    None.

Critical Paths under _tarefa_2 in BANK2

    None.

Critical Paths under _tarefa_3 in BANK2

    None.

Critical Paths under _ISR_TIMER_0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _tarefa_1 in BANK3

    None.

Critical Paths under _tarefa_2 in BANK3

    None.

Critical Paths under _tarefa_3 in BANK3

    None.

Critical Paths under _tarefa_1 in BANK3

    None.

Critical Paths under _tarefa_2 in BANK3

    None.

Critical Paths under _tarefa_3 in BANK3

    None.

Critical Paths under _ISR_TIMER_0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _tarefa_1 in BANK4

    None.

Critical Paths under _tarefa_2 in BANK4

    None.

Critical Paths under _tarefa_3 in BANK4

    None.

Critical Paths under _tarefa_1 in BANK4

    None.

Critical Paths under _tarefa_2 in BANK4

    None.

Critical Paths under _tarefa_3 in BANK4

    None.

Critical Paths under _ISR_TIMER_0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _tarefa_1 in BANK5

    None.

Critical Paths under _tarefa_2 in BANK5

    None.

Critical Paths under _tarefa_3 in BANK5

    None.

Critical Paths under _tarefa_1 in BANK5

    None.

Critical Paths under _tarefa_2 in BANK5

    None.

Critical Paths under _tarefa_3 in BANK5

    None.

Critical Paths under _ISR_TIMER_0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _tarefa_1 in BANK6

    None.

Critical Paths under _tarefa_2 in BANK6

    None.

Critical Paths under _tarefa_3 in BANK6

    None.

Critical Paths under _tarefa_1 in BANK6

    None.

Critical Paths under _tarefa_2 in BANK6

    None.

Critical Paths under _tarefa_3 in BANK6

    None.

Critical Paths under _ISR_TIMER_0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _tarefa_1 in BANK7

    None.

Critical Paths under _tarefa_2 in BANK7

    None.

Critical Paths under _tarefa_3 in BANK7

    None.

Critical Paths under _tarefa_1 in BANK7

    None.

Critical Paths under _tarefa_2 in BANK7

    None.

Critical Paths under _tarefa_3 in BANK7

    None.

Critical Paths under _ISR_TIMER_0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1616
                          _os_config
                     _os_create_task
                           _os_start
 ---------------------------------------------------------------------------------
 (1) _os_start                                             0     0      0     310
                    _conf_interrupts
                       _conf_timer_0
                         _config_app
 ---------------------------------------------------------------------------------
 (2) _config_app                                           0     0      0     310
                        _create_pipe
 ---------------------------------------------------------------------------------
 (3) _create_pipe                                          1     0      1     310
                                            110 BANK1      1     0      1
                           _sem_init
 ---------------------------------------------------------------------------------
 (4) _sem_init                                             4     2      2     136
                                            106 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _conf_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _os_config                                            0     0      0     653
                     _os_create_task
 ---------------------------------------------------------------------------------
 (1) _os_create_task                                     111   108      3     653
                                            106 BANK1      4     1      3
                                              0 BANK2    107   107      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _os_idle_task                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _os_idle_task                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tarefa_1                                             6     6      0   13875
                                             73 BANK1      6     6      0
                            ___awmod
                           _os_delay
                         _write_pipe
 ---------------------------------------------------------------------------------
 (6) _write_pipe                                           3     1      2    9168
                                              4 COMRAM     3     1      2
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             8     7      1    4767
                                             91 BANK1      8     7      1
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             3     2      1    2157
                                             85 BANK1      3     2      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) _os_delay                                             8     8      0    2769
                                              4 COMRAM     1     1      0
                                              7 BANK0      7     7      0
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0    2610
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (9) _rr_scheduler                                         6     4      2    2610
                                             85 BANK1      6     4      2
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (10) _os_task_pos                                         5     3      2     411
                                             79 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (10) ___awmod                                             6     2      4    1593
                                             79 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tarefa_2                                             2     2      0    9558
                                            103 BANK1      2     2      0
                          _read_pipe
 ---------------------------------------------------------------------------------
 (6) _read_pipe                                            4     1      3    9168
                                             99 BANK1      4     1      3
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             8     7      1    4767
                                             91 BANK1      8     7      1
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0    2610
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (9) _rr_scheduler                                         6     4      2    2610
                                             85 BANK1      6     4      2
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (10) _os_task_pos                                         5     3      2     411
                                             79 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             3     2      1    2157
                                             85 BANK1      3     2      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (10) ___awmod                                             6     2      4    1593
                                             79 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tarefa_3                                             1     1      0       0
                                            105 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tarefa_1                                             6     6      0   13875
                                             73 BANK1      6     6      0
                            ___awmod
                           _os_delay
                         _write_pipe
 ---------------------------------------------------------------------------------
 (6) _write_pipe                                           3     1      2    9168
                                              4 COMRAM     3     1      2
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             8     7      1    4767
                                             91 BANK1      8     7      1
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             3     2      1    2157
                                             85 BANK1      3     2      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) _os_delay                                             8     8      0    2769
                                              4 COMRAM     1     1      0
                                              7 BANK0      7     7      0
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0    2610
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (9) _rr_scheduler                                         6     4      2    2610
                                             85 BANK1      6     4      2
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (10) _os_task_pos                                         5     3      2     411
                                             79 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (10) ___awmod                                             6     2      4    1593
                                             79 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tarefa_2                                             2     2      0    9558
                                            103 BANK1      2     2      0
                          _read_pipe
 ---------------------------------------------------------------------------------
 (6) _read_pipe                                            4     1      3    9168
                                             99 BANK1      4     1      3
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             8     7      1    4767
                                             91 BANK1      8     7      1
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0    2610
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (9) _rr_scheduler                                         6     4      2    2610
                                             85 BANK1      6     4      2
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (10) _os_task_pos                                         5     3      2     411
                                             79 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             3     2      1    2157
                                             85 BANK1      3     2      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (10) ___awmod                                             6     2      4    1593
                                             79 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tarefa_3                                             1     1      0       0
                                            105 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR_TIMER_0                                        13    13      0     600
                                             12 COMRAM    13    13      0
              _os_task_time_decrease
                        i2_scheduler
 ---------------------------------------------------------------------------------
 (12) i2_scheduler                                         0     0      0     525
                     i2_rr_scheduler
 ---------------------------------------------------------------------------------
 (13) i2_rr_scheduler                                      6     4      2     525
                                              6 COMRAM     6     4      2
                          i2___awmod
                      i2_os_task_pos
 ---------------------------------------------------------------------------------
 (14) i2_os_task_pos                                       5     3      2      91
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (14) i2___awmod                                           6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) _os_task_time_decrease                               2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _os_config
     _os_create_task
   _os_create_task
   _os_start
     _conf_interrupts
     _conf_timer_0
     _config_app
       _create_pipe
         _sem_init

 _os_idle_task (ROOT)

 _os_idle_task (ROOT)

 _tarefa_1 (ROOT)
   ___awmod
   _os_delay
     _scheduler
       _rr_scheduler
         ___awmod
         _os_task_pos
   _write_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler

 _tarefa_2 (ROOT)
   _read_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler
         _rr_scheduler
           ___awmod
           _os_task_pos

 _tarefa_3 (ROOT)

 _tarefa_1 (ROOT)
   ___awmod
   _os_delay
     _scheduler
       _rr_scheduler
         ___awmod
         _os_task_pos
   _write_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler

 _tarefa_2 (ROOT)
   _read_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler
         _rr_scheduler
           ___awmod
           _os_task_pos

 _tarefa_3 (ROOT)

 _ISR_TIMER_0 (ROOT)
   _os_task_time_decrease
   i2_scheduler
     i2_rr_scheduler
       i2___awmod
       i2_os_task_pos

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0     533     26.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256    107     107     41.8%
BITBANK1           256      0       0      0.0%
BANK1              256    111     111     43.4%
BITBANK0           160      0       0      0.0%
BANK0              160     14      50     31.2%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     26      26     27.7%
BITBIGSFRlh         91      0       0      0.0%
BITBIGSFRlll        35      0       0      0.0%
BITBIGSFRh          23      0       0      0.0%
BITBIGSFRllh         8      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     795      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Sep 24 10:07:37 2025

           __end_ofi2_scheduler 18A4                              l17 170C                              l18 170C  
                            l43 1842                              l46 1884                              l90 1874  
                  create_pipe@p 016E                             l101 13F2                             l103 1472  
                           l112 17F0                             l134 1676                             l226 185E  
                           l229 18A6                             l267 17C0                             l299 1790  
                           _BSR 0FE0   __end_of_os_task_time_decrease 13F2                             _TOS 0FFD  
                  ___awmod@sign 0154                             prod 0FF3                             wreg 0FE8  
                          l2031 17A8                            l2033 17B4                            l2029 1792  
                          l1327 17C2                            l1329 17C4                            l3421 148E  
                          l3431 1416                            l3423 14B0                            l3263 175C  
                          l3351 1882                            l3441 1458                            l3433 1426  
                          l3425 14C8                            l3417 1478                            l3521 1630  
                          l3273 18A4                            l3281 1848                            l3265 1766  
                          l3345 1876                            l3443 146A                            l3435 143A  
                          l3427 14EA                            l3419 1484                            l3531 1644  
                          l3523 1638                            l3283 1858                            l3267 1772  
                          l3275 1860                            l3347 187A                            l3445 17F0  
                          l3437 1440                            l3429 13F2                            l3533 1646  
                          l3525 163C                            l3541 182E                            l3285 185A  
                          l3269 1780                            l3277 186A                            l3349 187E  
                          l3439 1452                            l3535 1648                            l3527 1640  
                          l3519 162C                            l3287 185C                            l3279 1844  
                          l3543 16C8                            l3537 166C                            l3529 1642  
                          l3545 1708                            l3539 181C                            u3241 1664  
                          i1l58 1626                            i2l58 16C6                            i2l67 13F0  
                          _TMR0 0FD6                            _WREG 0FE8                            _main 16C8  
                          fsr1h 0FE2                            fsr2h 0FDA                            indf1 0FE7  
                          indf2 0FDF                            fsr1l 0FE1                            fsr2l 0FD9  
                ??_conf_timer_0 016A                            btemp 001A                            prodh 0FF4  
                          prodl 0FF3                            start 000E                    ___param_bank 0000  
         __end_ofi2_os_task_pos 16C8                  i2os_task_pos@i 0005                           ?_main 0001  
               __end_of___awmod 1226                           i1l201 1894                           i1l302 15D4  
                         i1l150 0FB4                           i1l137 0D6E                           i1l305 1566  
                         i1l147 0F18                           i2l201 18A2                           i1l281 0A2E  
                         i1l194 1096                           i1l284 0ACA                           i1l552 1224  
                         i1l288 1368                           i2l245 0CA0                           i2l248 0D3A  
                         i2l194 1174                           i2l552 12D2                           u41_20 17D4  
                         u41_21 17CE                           u41_26 17D6                           _canal 0060  
                         tablat 0FF5                           plusw1 0FE3                           plusw2 0FDB  
                         ttemp5 001B                           ttemp6 001E                           ttemp7 0022  
                         status 0FD8                           wtemp8 001B                     i2_scheduler 1896  
               __initialization 1714                    ?_ISR_TIMER_0 0001                    __end_of_main 1714  
                i2_rr_scheduler 1098                          ??_main 016F                   __activetblptr 0000  
                        i1l3211 1194                          i1l3203 1176                          i1l3221 11CC  
                        i1l3213 11A2                          i1l3205 117A                          i1l3301 08F6  
                        i1l3223 11DA                          i1l3231 1204                          i1l3215 11AA  
                        i1l3207 1188                          i1l3311 0984                          i1l3303 0948  
                        i1l3401 1568                          i1l3233 1214                          i1l3225 11F0  
                        i1l3217 11BC                          i1l3209 1190                          i1l3241 0FD6  
                        i1l3321 0A30                          i1l3313 09A4                          i1l3305 095C  
                        i1l3411 15D2                          i1l3403 156A                          i1l3235 121C  
                        i1l3227 11F8                          i1l3219 11C4                          i1l3251 1032  
                        i1l3243 0FD8                          i1l3331 12D4                          i1l3323 0A42  
                        i1l3315 09E4                          i1l3307 096C                          i1l3405 1576  
                        i1l3229 11FE                          i1l3245 0FF8                          i1l3333 12D6  
                        i1l3325 0A94                          i1l3317 0A06                          i1l3309 0980  
                        i1l3407 159A                          i1l3191 1606                          i1l3247 1020  
                        i1l3255 103E                          i1l3239 0FB6                          i1l3271 1886  
                        i1l3335 1308                          i1l3327 0AB4                          i1l3319 0A08  
                        i1l3409 15C8                          i1l3257 105E                          i1l3249 1022  
                        i1l3337 1330                          i1l3329 0AC8                          i1l3361 155A  
                        i1l3353 14F6                          i1l3195 160C                          i1l3187 15D6  
                        i1l3259 1086                          i1l3371 0DE0                          i1l3339 1366  
                        i1l3291 0804                          i1l3363 1564                          i1l3355 14F8  
                        i1l3189 15DE                          i1l3197 160E                          i1l3381 0E6E  
                        i1l3373 0E32                          i1l3365 0D58                          i1l3293 0828  
                        i1l3357 1504                          i1l3199 1624                          i1l3391 0F1A  
                        i1l3383 0E8E                          i1l3375 0E46                          i1l3367 0D5A  
                        i1l3295 084E                          i1l3359 1522                          i1l3393 0F2C  
                        i1l3385 0ECE                          i1l3377 0E56                          i1l3369 0D8E  
                        i1l3297 0884                          i1l3289 0802                          i2l1251 1372  
                        i1l3395 0F7E                          i1l3387 0EF0                          i1l3379 0E6A  
                        i1l3299 08A4                          i2l1253 1394                          i1l3397 0F9E  
                        i1l3389 0EF2                          i2l1255 13C6                          i1l3399 0FB2  
                        i2l1257 13D8                          i2l1249 136A                          i2l1601 1272  
                        i2l1259 13DA                          i2l1611 12AC                          i2l1603 127A  
                        i2l1605 1288                          i2l1613 12B2                          i2l1615 12C2  
                        i2l1607 129E                          i2l1711 10B6                          i2l1617 12CA  
                        i2l1609 12A6                          i2l1721 1110                          i2l1713 10B8  
                        i2l1571 167E                          i2l1715 10D6                          i2l1581 16C4  
                        i2l1573 16A6                          i2l1717 10FE                          i2l1725 111C  
                        i2l1709 1098                          i2l1805 1896                          i2l1591 123E  
                        i2l1727 113C                          i2l1719 1100                          u310_20 143A  
                        i2l1593 1242                          i2l1585 1226                          i2l1577 16AC  
                        i2l1569 1678                          i2l1729 1164                          i2l1921 0B1C  
                        i2l1913 0AE6                          u310_21 1436                          i2l1595 1250  
                        i2l1587 1228                          i2l1579 16AE                          i2l1923 0B6E  
                        i2l1931 0BF4                          i2l1915 0AF6                          i2l1597 1258  
                        i2l1589 1236                          i2l1941 0C7A                          i2l1933 0BF8  
                        i2l1925 0BBE                          i2l1917 0AF8                          i2l1599 126A  
                        i2l1943 0CA2                          i2l1935 0C18                          i2l1927 0BD2  
                        i2l1919 0AFC                          i2l1951 0D38                          u311_20 1452  
                        i2l1945 0CB4                          i2l1937 0C56                          i2l1929 0BE2  
                        u311_21 144E                          i2l1947 0D04                          i2l1939 0C78  
                        i2l1949 0D24                          u312_20 146A                          u312_21 1466  
                        u313_20 1800                          u313_21 17FA                          u313_26 1802  
                        u308_20 149E                          u308_21 1498                          u308_26 14A0  
                        u309_20 1402                          u309_21 13FC                          u309_26 1404  
                        _STATUS 0FD8                          _STKPTR 0FFC                    ?_os_task_pos 014F  
                     ??___awmod 0153          __end_ofi2_rr_scheduler 1176                          clear_0 173A  
                        clear_1 174C                 ___awmod@divisor 0151                          isa$std 0001  
               ___awmod@counter 0153                __end_of_os_delay 0FB6                __end_of_tarefa_1 14F6  
              __end_of_tarefa_2 1478                __end_of_tarefa_3 181C                __end_of_sem_init 17C2  
              __end_of_sem_wait 0ACC                __end_of_sem_post 136A            __end_of_conf_timer_0 1860  
             __end_ofi2___awmod 12D4                __end_of_os_start 1886                    __mediumconst 0800  
                        tblptrh 0FF7                          tblptrl 0FF6                          tblptru 0FF8  
                i2___awmod@sign 0006                      __accesstop 0060         __end_of__initialization 1752  
                 ___rparam_used 0001                  _os_create_task 1628                  __pcstackCOMRAM 0001  
                  __pidataBANK0 18A8                 ?i2_rr_scheduler 0007                os_create_task@id 0200  
                    __pbssBANK0 0060          __end_of_os_create_task 1678                   ?_os_idle_task 0001  
         _os_task_time_decrease 136A                      _config_app 1860                         i2u33_40 1394  
                       i2u33_41 1390                         i2u34_40 13C6                         i2u34_41 13C2  
                       i2u35_40 13F0                         i2u35_41 13EC                         i2u80_40 126A  
                       i2u80_41 1266                         i2u81_40 1288                         i2u81_41 1284  
                       i2u82_40 129E                         i2u82_41 129A                         i2u83_40 12C2  
                       i2u83_41 12BE                         i2u76_40 16A6                         i2u92_40 10FE  
                       i2u76_41 16A2                         i2u92_41 10FA                         i2u77_40 16C4  
                       i2u93_40 1110                         i2u77_41 16C0                         i2u93_41 110C  
                       i2u78_40 1236                         i2u94_40 113C                         i2u78_41 1232  
                       i2u94_41 1138                         i2u79_40 1250                         i2u95_40 1164  
                       i2u79_41 124C                         i2u95_41 1160                    ?i2_scheduler 0001  
               ?_os_create_task 016A                       ?_os_delay 0001                       ?_tarefa_1 0001  
                     ?_tarefa_2 0001                       ?_tarefa_3 0001                         __Hparam 0000  
                     ?_sem_init 016A                       ?_sem_wait 015B               ??_conf_interrupts 016A  
                     ?_sem_post 0155                         __Lparam 0000                       ?_os_start 0001  
                       ___awmod 1176                    __psmallconst 0800                  ??_os_idle_task 0001  
                       __pcinit 1714                         __ramtop 0800                         __ptext0 16C8  
                       __ptext1 1876                         __ptext2 1860                         __ptext3 175C  
                       __ptext4 1792                         __ptext5 1844                         __ptext6 18A4  
                       __ptext7 181C                         __ptext8 1628                         __ptext9 17C2  
                     _T0CONbits 0FD5                      _readyQueue 026B                ___awmod@dividend 014F  
             __end_of_read_pipe 15D6             os_create_task@prior 016C                   tarefa_1@F3416 008F  
             __end_of_scheduler 1896     i2rr_scheduler@idle_selected 000B                  __pintcode_body 0ACC  
          end_of_initialization 1752               __end_of_os_config 1844                         int_func 0ACC  
                 tarefa_1@dados 014A                    _conf_timer_0 1844          os_create_task@new_task 0201  
                    ??_os_delay 0088                   tarefa_1@index 014D                      ??_tarefa_1 0149  
                    ??_tarefa_2 0167                      ??_tarefa_3 0169                      ??_sem_init 016C  
                    ??_sem_wait 015C                      ??_sem_post 0156                      ??_os_start 016F  
                       postdec1 0FE5                         postdec2 0FDD                   ?_rr_scheduler 0155  
                       postinc0 0FEE                         postinc1 0FE6                         postinc2 0FDE  
                     _PORTDbits 0F83          ?_os_task_time_decrease 0001                     ?_config_app 0001  
                     _TRISCbits 0F94                       _TRISDbits 0F95                       i2___awmod 1226  
                 ??_create_pipe 016F                write_pipe@buffer 0006                ??i2_rr_scheduler 0009  
                ??_rr_scheduler 0157                   i2_os_task_pos 1678                      _write_pipe 14F6  
           start_initialization 1714                      ?i2___awmod 0001            __end_of_os_idle_task 17F0  
           __end_of_create_pipe 1792                  ?i2_os_task_pos 0001                     __pdataBANK0 008F  
                    read_pipe@p 0163                     __pbssBIGRAM 026B    rr_scheduler@pos_task_running 015A  
                 __pcstackBANK0 0081                   __pcstackBANK1 0100                   __pcstackBANK2 0200  
               _conf_interrupts 18A4                ??_os_create_task 016D               i2os_task_pos@task 0001  
                 ??_ISR_TIMER_0 000D                       __pintcode 0008                        ?___awmod 014F  
                   ?_write_pipe 0005                     __smallconst 0800            __end_of_rr_scheduler 1098  
                   ??i2___awmod 0005                       _read_pipe 1568                       _scheduler 1886  
                   _create_pipe 175C                        _LATCbits 0F8B                        _LATDbits 0F8C  
                     _os_config 181C                        i1u300_20 0A06                        i1u300_21 0A02  
                      i1u301_20 0AB4                        i1u301_21 0AB0                        i1u302_20 1308  
                      i1u302_21 1304                        i1u303_20 0D8E                        i1u303_21 0D8A  
               ??i2_os_task_pos 0003                        i1u304_20 0E56                        i1u304_21 0E52  
                      i1u305_20 0E8E                        i1u305_21 0E8A                        i1u306_20 0EF0  
                      i1u306_21 0EEC                        i1u307_20 0F9E                        i1u307_21 0F9A  
                      i2u120_40 0C18                        i2u120_41 0C14                        i2u121_40 0C78  
                      i2u121_41 0C74                        i1u290_20 11F0                        i1u290_21 11EC  
                      i2u122_40 0D24                        i2u122_41 0D20                    tarefa_2@dado 0168  
                      i1u291_20 1214                        i1u291_21 1210                        i1u284_20 1606  
                      i1u292_20 1020                        i1u284_21 1602                        i1u292_21 101C  
                      i1u285_20 1624                        i1u293_20 1032                        i1u285_21 1620  
                      i1u293_21 102E                        i2u117_40 0AF6                        i2u117_41 0AF2  
                      i1u286_20 1188                        i1u294_20 105E                        i1u286_21 1184  
                      i1u294_21 105A                        i2u118_40 0B1C                        i2u118_41 0B18  
                      i1u287_20 11A2                        i1u295_20 1086                        i1u287_21 119E  
                      i1u295_21 1082                        i2u119_40 0BE2                        i2u119_41 0BDE  
                      i1u288_20 11BC                        i1u296_20 0828                        i1u288_21 11B8  
                      i1u296_21 0824                        i1u289_20 11DA                        i1u297_20 08A4  
                      i1u289_21 11D6                        i1u297_21 08A0                        i1u298_20 096C  
                      i1u298_21 0968                        i1u299_20 09A4                        i1u299_21 09A0  
                 ??_os_task_pos 0151                    os_delay@time 0005          os_task_time_decrease@i 0002  
       ??_os_task_time_decrease 0001             __end_of_ISR_TIMER_0 0D56         __end_of_conf_interrupts 18A8  
                  ??_config_app 016F                     write_pipe@p 0005                      ?_read_pipe 0163  
            i2___awmod@dividend 0001                      ?_scheduler 0001                      ?_os_config 0001  
                      __Hrparam 0000                        __Lrparam 0000              __end_of_config_app 1876  
           __end_of_os_task_pos 1628                    _os_idle_task 17C2                        __ptext10 1478  
                      __ptext11 14F6                        __ptext20 1568                        __ptext12 0802  
                      __ptext21 17F0                        __ptext13 12D4                        __ptext14 0D56  
                      __ptext23 1896                        __ptext15 1886                        __ptext24 1098  
                      __ptext16 0FB6                        __ptext25 1678                        __ptext17 15D6  
                      __ptext26 1226                        __ptext18 1176                        __ptext27 136A  
                      __ptext19 13F2                       sem_init@s 016A                       sem_wait@s 015B  
                     sem_post@s 0155                        _os_delay 0D56                        _tarefa_1 1478  
                      _tarefa_2 13F2                        _tarefa_3 17F0                        _sem_init 1792  
                      _sem_wait 0802                        _sem_post 12D4            os_create_task@task_f 016A  
                      _os_start 1876                        isa$xinst 0000                     _ISR_TIMER_0 0008  
                      int$flags 001A                    os_task_pos@i 0153                 read_pipe@buffer 0164  
             i2___awmod@divisor 0003               i2___awmod@counter 0005                ?_conf_interrupts 0001  
                    _INTCONbits 0FF2                     ??_read_pipe 0166                        intlevel1 0000  
                      intlevel2 0000                   ??i2_scheduler 000D                     ??_scheduler 015B  
i2rr_scheduler@pos_task_running 000C                     ??_os_config 016E                     _os_task_pos 15D6  
                  _rr_scheduler 0FB6                    ??_write_pipe 0007       rr_scheduler@idle_selected 0159  
                  ?_create_pipe 016E              __end_of_write_pipe 1568                   ?_conf_timer_0 0001  
               os_task_pos@task 014F              sem_init@init_value 016B  
