

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Sep 01 19:01:51 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16   000000                     
    17                           ; Generated 17/01/2025 GMT
    18                           ; 
    19                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000FE0                     bsr             equ	4064
    52   000FE9                     fsr0            equ	4073
    53   000FEA                     fsr0h           equ	4074
    54   000FE9                     fsr0l           equ	4073
    55   000FE1                     fsr1            equ	4065
    56   000FE2                     fsr1h           equ	4066
    57   000FE1                     fsr1l           equ	4065
    58   000FD9                     fsr2            equ	4057
    59   000FDA                     fsr2h           equ	4058
    60   000FD9                     fsr2l           equ	4057
    61   000FEF                     indf0           equ	4079
    62   000FE7                     indf1           equ	4071
    63   000FDF                     indf2           equ	4063
    64   000FF2                     intcon          equ	4082
    65   000000                     nvmcon          equ	0
    66   000FF9                     pcl             equ	4089
    67   000FFA                     pclath          equ	4090
    68   000FFB                     pclatu          equ	4091
    69   000FEB                     plusw0          equ	4075
    70   000FE3                     plusw1          equ	4067
    71   000FDB                     plusw2          equ	4059
    72   000FED                     postdec0        equ	4077
    73   000FE5                     postdec1        equ	4069
    74   000FDD                     postdec2        equ	4061
    75   000FEE                     postinc0        equ	4078
    76   000FE6                     postinc1        equ	4070
    77   000FDE                     postinc2        equ	4062
    78   000FEC                     preinc0         equ	4076
    79   000FE4                     preinc1         equ	4068
    80   000FDC                     preinc2         equ	4060
    81   000FF3                     prod            equ	4083
    82   000FF4                     prodh           equ	4084
    83   000FF3                     prodl           equ	4083
    84   000FD8                     status          equ	4056
    85   000FF5                     tablat          equ	4085
    86   000FF6                     tblptr          equ	4086
    87   000FF7                     tblptrh         equ	4087
    88   000FF6                     tblptrl         equ	4086
    89   000FF8                     tblptru         equ	4088
    90   000FFD                     tosl            equ	4093
    91   000FE8                     wreg            equ	4072
    92   000F62                     SPPDATA         equ	3938	;# 
    93   000F63                     SPPCFG          equ	3939	;# 
    94   000F64                     SPPEPS          equ	3940	;# 
    95   000F65                     SPPCON          equ	3941	;# 
    96   000F66                     UFRM            equ	3942	;# 
    97   000F66                     UFRML           equ	3942	;# 
    98   000F67                     UFRMH           equ	3943	;# 
    99   000F68                     UIR             equ	3944	;# 
   100   000F69                     UIE             equ	3945	;# 
   101   000F6A                     UEIR            equ	3946	;# 
   102   000F6B                     UEIE            equ	3947	;# 
   103   000F6C                     USTAT           equ	3948	;# 
   104   000F6D                     UCON            equ	3949	;# 
   105   000F6E                     UADDR           equ	3950	;# 
   106   000F6F                     UCFG            equ	3951	;# 
   107   000F70                     UEP0            equ	3952	;# 
   108   000F71                     UEP1            equ	3953	;# 
   109   000F72                     UEP2            equ	3954	;# 
   110   000F73                     UEP3            equ	3955	;# 
   111   000F74                     UEP4            equ	3956	;# 
   112   000F75                     UEP5            equ	3957	;# 
   113   000F76                     UEP6            equ	3958	;# 
   114   000F77                     UEP7            equ	3959	;# 
   115   000F78                     UEP8            equ	3960	;# 
   116   000F79                     UEP9            equ	3961	;# 
   117   000F7A                     UEP10           equ	3962	;# 
   118   000F7B                     UEP11           equ	3963	;# 
   119   000F7C                     UEP12           equ	3964	;# 
   120   000F7D                     UEP13           equ	3965	;# 
   121   000F7E                     UEP14           equ	3966	;# 
   122   000F7F                     UEP15           equ	3967	;# 
   123   000F80                     PORTA           equ	3968	;# 
   124   000F81                     PORTB           equ	3969	;# 
   125   000F82                     PORTC           equ	3970	;# 
   126   000F83                     PORTD           equ	3971	;# 
   127   000F84                     PORTE           equ	3972	;# 
   128   000F89                     LATA            equ	3977	;# 
   129   000F8A                     LATB            equ	3978	;# 
   130   000F8B                     LATC            equ	3979	;# 
   131   000F8C                     LATD            equ	3980	;# 
   132   000F8D                     LATE            equ	3981	;# 
   133   000F92                     TRISA           equ	3986	;# 
   134   000F92                     DDRA            equ	3986	;# 
   135   000F93                     TRISB           equ	3987	;# 
   136   000F93                     DDRB            equ	3987	;# 
   137   000F94                     TRISC           equ	3988	;# 
   138   000F94                     DDRC            equ	3988	;# 
   139   000F95                     TRISD           equ	3989	;# 
   140   000F95                     DDRD            equ	3989	;# 
   141   000F96                     TRISE           equ	3990	;# 
   142   000F96                     DDRE            equ	3990	;# 
   143   000F9B                     OSCTUNE         equ	3995	;# 
   144   000F9D                     PIE1            equ	3997	;# 
   145   000F9E                     PIR1            equ	3998	;# 
   146   000F9F                     IPR1            equ	3999	;# 
   147   000FA0                     PIE2            equ	4000	;# 
   148   000FA1                     PIR2            equ	4001	;# 
   149   000FA2                     IPR2            equ	4002	;# 
   150   000FA6                     EECON1          equ	4006	;# 
   151   000FA7                     EECON2          equ	4007	;# 
   152   000FA8                     EEDATA          equ	4008	;# 
   153   000FA9                     EEADR           equ	4009	;# 
   154   000FAB                     RCSTA           equ	4011	;# 
   155   000FAB                     RCSTA1          equ	4011	;# 
   156   000FAC                     TXSTA           equ	4012	;# 
   157   000FAC                     TXSTA1          equ	4012	;# 
   158   000FAD                     TXREG           equ	4013	;# 
   159   000FAD                     TXREG1          equ	4013	;# 
   160   000FAE                     RCREG           equ	4014	;# 
   161   000FAE                     RCREG1          equ	4014	;# 
   162   000FAF                     SPBRG           equ	4015	;# 
   163   000FAF                     SPBRG1          equ	4015	;# 
   164   000FB0                     SPBRGH          equ	4016	;# 
   165   000FB1                     T3CON           equ	4017	;# 
   166   000FB2                     TMR3            equ	4018	;# 
   167   000FB2                     TMR3L           equ	4018	;# 
   168   000FB3                     TMR3H           equ	4019	;# 
   169   000FB4                     CMCON           equ	4020	;# 
   170   000FB5                     CVRCON          equ	4021	;# 
   171   000FB6                     ECCP1AS         equ	4022	;# 
   172   000FB6                     CCP1AS          equ	4022	;# 
   173   000FB7                     ECCP1DEL        equ	4023	;# 
   174   000FB7                     CCP1DEL         equ	4023	;# 
   175   000FB8                     BAUDCON         equ	4024	;# 
   176   000FB8                     BAUDCTL         equ	4024	;# 
   177   000FBA                     CCP2CON         equ	4026	;# 
   178   000FBB                     CCPR2           equ	4027	;# 
   179   000FBB                     CCPR2L          equ	4027	;# 
   180   000FBC                     CCPR2H          equ	4028	;# 
   181   000FBD                     CCP1CON         equ	4029	;# 
   182   000FBD                     ECCP1CON        equ	4029	;# 
   183   000FBE                     CCPR1           equ	4030	;# 
   184   000FBE                     CCPR1L          equ	4030	;# 
   185   000FBF                     CCPR1H          equ	4031	;# 
   186   000FC0                     ADCON2          equ	4032	;# 
   187   000FC1                     ADCON1          equ	4033	;# 
   188   000FC2                     ADCON0          equ	4034	;# 
   189   000FC3                     ADRES           equ	4035	;# 
   190   000FC3                     ADRESL          equ	4035	;# 
   191   000FC4                     ADRESH          equ	4036	;# 
   192   000FC5                     SSPCON2         equ	4037	;# 
   193   000FC6                     SSPCON1         equ	4038	;# 
   194   000FC7                     SSPSTAT         equ	4039	;# 
   195   000FC8                     SSPADD          equ	4040	;# 
   196   000FC9                     SSPBUF          equ	4041	;# 
   197   000FCA                     T2CON           equ	4042	;# 
   198   000FCB                     PR2             equ	4043	;# 
   199   000FCB                     MEMCON          equ	4043	;# 
   200   000FCC                     TMR2            equ	4044	;# 
   201   000FCD                     T1CON           equ	4045	;# 
   202   000FCE                     TMR1            equ	4046	;# 
   203   000FCE                     TMR1L           equ	4046	;# 
   204   000FCF                     TMR1H           equ	4047	;# 
   205   000FD0                     RCON            equ	4048	;# 
   206   000FD1                     WDTCON          equ	4049	;# 
   207   000FD2                     HLVDCON         equ	4050	;# 
   208   000FD2                     LVDCON          equ	4050	;# 
   209   000FD3                     OSCCON          equ	4051	;# 
   210   000FD5                     T0CON           equ	4053	;# 
   211   000FD6                     TMR0            equ	4054	;# 
   212   000FD6                     TMR0L           equ	4054	;# 
   213   000FD7                     TMR0H           equ	4055	;# 
   214   000FD8                     STATUS          equ	4056	;# 
   215   000FD9                     FSR2            equ	4057	;# 
   216   000FD9                     FSR2L           equ	4057	;# 
   217   000FDA                     FSR2H           equ	4058	;# 
   218   000FDB                     PLUSW2          equ	4059	;# 
   219   000FDC                     PREINC2         equ	4060	;# 
   220   000FDD                     POSTDEC2        equ	4061	;# 
   221   000FDE                     POSTINC2        equ	4062	;# 
   222   000FDF                     INDF2           equ	4063	;# 
   223   000FE0                     BSR             equ	4064	;# 
   224   000FE1                     FSR1            equ	4065	;# 
   225   000FE1                     FSR1L           equ	4065	;# 
   226   000FE2                     FSR1H           equ	4066	;# 
   227   000FE3                     PLUSW1          equ	4067	;# 
   228   000FE4                     PREINC1         equ	4068	;# 
   229   000FE5                     POSTDEC1        equ	4069	;# 
   230   000FE6                     POSTINC1        equ	4070	;# 
   231   000FE7                     INDF1           equ	4071	;# 
   232   000FE8                     WREG            equ	4072	;# 
   233   000FE9                     FSR0            equ	4073	;# 
   234   000FE9                     FSR0L           equ	4073	;# 
   235   000FEA                     FSR0H           equ	4074	;# 
   236   000FEB                     PLUSW0          equ	4075	;# 
   237   000FEC                     PREINC0         equ	4076	;# 
   238   000FED                     POSTDEC0        equ	4077	;# 
   239   000FEE                     POSTINC0        equ	4078	;# 
   240   000FEF                     INDF0           equ	4079	;# 
   241   000FF0                     INTCON3         equ	4080	;# 
   242   000FF1                     INTCON2         equ	4081	;# 
   243   000FF2                     INTCON          equ	4082	;# 
   244   000FF3                     PROD            equ	4083	;# 
   245   000FF3                     PRODL           equ	4083	;# 
   246   000FF4                     PRODH           equ	4084	;# 
   247   000FF5                     TABLAT          equ	4085	;# 
   248   000FF6                     TBLPTR          equ	4086	;# 
   249   000FF6                     TBLPTRL         equ	4086	;# 
   250   000FF7                     TBLPTRH         equ	4087	;# 
   251   000FF8                     TBLPTRU         equ	4088	;# 
   252   000FF9                     PCLAT           equ	4089	;# 
   253   000FF9                     PC              equ	4089	;# 
   254   000FF9                     PCL             equ	4089	;# 
   255   000FFA                     PCLATH          equ	4090	;# 
   256   000FFB                     PCLATU          equ	4091	;# 
   257   000FFC                     STKPTR          equ	4092	;# 
   258   000FFD                     TOS             equ	4093	;# 
   259   000FFD                     TOSL            equ	4093	;# 
   260   000FFE                     TOSH            equ	4094	;# 
   261   000FFF                     TOSU            equ	4095	;# 
   262   000F62                     SPPDATA         equ	3938	;# 
   263   000F63                     SPPCFG          equ	3939	;# 
   264   000F64                     SPPEPS          equ	3940	;# 
   265   000F65                     SPPCON          equ	3941	;# 
   266   000F66                     UFRM            equ	3942	;# 
   267   000F66                     UFRML           equ	3942	;# 
   268   000F67                     UFRMH           equ	3943	;# 
   269   000F68                     UIR             equ	3944	;# 
   270   000F69                     UIE             equ	3945	;# 
   271   000F6A                     UEIR            equ	3946	;# 
   272   000F6B                     UEIE            equ	3947	;# 
   273   000F6C                     USTAT           equ	3948	;# 
   274   000F6D                     UCON            equ	3949	;# 
   275   000F6E                     UADDR           equ	3950	;# 
   276   000F6F                     UCFG            equ	3951	;# 
   277   000F70                     UEP0            equ	3952	;# 
   278   000F71                     UEP1            equ	3953	;# 
   279   000F72                     UEP2            equ	3954	;# 
   280   000F73                     UEP3            equ	3955	;# 
   281   000F74                     UEP4            equ	3956	;# 
   282   000F75                     UEP5            equ	3957	;# 
   283   000F76                     UEP6            equ	3958	;# 
   284   000F77                     UEP7            equ	3959	;# 
   285   000F78                     UEP8            equ	3960	;# 
   286   000F79                     UEP9            equ	3961	;# 
   287   000F7A                     UEP10           equ	3962	;# 
   288   000F7B                     UEP11           equ	3963	;# 
   289   000F7C                     UEP12           equ	3964	;# 
   290   000F7D                     UEP13           equ	3965	;# 
   291   000F7E                     UEP14           equ	3966	;# 
   292   000F7F                     UEP15           equ	3967	;# 
   293   000F80                     PORTA           equ	3968	;# 
   294   000F81                     PORTB           equ	3969	;# 
   295   000F82                     PORTC           equ	3970	;# 
   296   000F83                     PORTD           equ	3971	;# 
   297   000F84                     PORTE           equ	3972	;# 
   298   000F89                     LATA            equ	3977	;# 
   299   000F8A                     LATB            equ	3978	;# 
   300   000F8B                     LATC            equ	3979	;# 
   301   000F8C                     LATD            equ	3980	;# 
   302   000F8D                     LATE            equ	3981	;# 
   303   000F92                     TRISA           equ	3986	;# 
   304   000F92                     DDRA            equ	3986	;# 
   305   000F93                     TRISB           equ	3987	;# 
   306   000F93                     DDRB            equ	3987	;# 
   307   000F94                     TRISC           equ	3988	;# 
   308   000F94                     DDRC            equ	3988	;# 
   309   000F95                     TRISD           equ	3989	;# 
   310   000F95                     DDRD            equ	3989	;# 
   311   000F96                     TRISE           equ	3990	;# 
   312   000F96                     DDRE            equ	3990	;# 
   313   000F9B                     OSCTUNE         equ	3995	;# 
   314   000F9D                     PIE1            equ	3997	;# 
   315   000F9E                     PIR1            equ	3998	;# 
   316   000F9F                     IPR1            equ	3999	;# 
   317   000FA0                     PIE2            equ	4000	;# 
   318   000FA1                     PIR2            equ	4001	;# 
   319   000FA2                     IPR2            equ	4002	;# 
   320   000FA6                     EECON1          equ	4006	;# 
   321   000FA7                     EECON2          equ	4007	;# 
   322   000FA8                     EEDATA          equ	4008	;# 
   323   000FA9                     EEADR           equ	4009	;# 
   324   000FAB                     RCSTA           equ	4011	;# 
   325   000FAB                     RCSTA1          equ	4011	;# 
   326   000FAC                     TXSTA           equ	4012	;# 
   327   000FAC                     TXSTA1          equ	4012	;# 
   328   000FAD                     TXREG           equ	4013	;# 
   329   000FAD                     TXREG1          equ	4013	;# 
   330   000FAE                     RCREG           equ	4014	;# 
   331   000FAE                     RCREG1          equ	4014	;# 
   332   000FAF                     SPBRG           equ	4015	;# 
   333   000FAF                     SPBRG1          equ	4015	;# 
   334   000FB0                     SPBRGH          equ	4016	;# 
   335   000FB1                     T3CON           equ	4017	;# 
   336   000FB2                     TMR3            equ	4018	;# 
   337   000FB2                     TMR3L           equ	4018	;# 
   338   000FB3                     TMR3H           equ	4019	;# 
   339   000FB4                     CMCON           equ	4020	;# 
   340   000FB5                     CVRCON          equ	4021	;# 
   341   000FB6                     ECCP1AS         equ	4022	;# 
   342   000FB6                     CCP1AS          equ	4022	;# 
   343   000FB7                     ECCP1DEL        equ	4023	;# 
   344   000FB7                     CCP1DEL         equ	4023	;# 
   345   000FB8                     BAUDCON         equ	4024	;# 
   346   000FB8                     BAUDCTL         equ	4024	;# 
   347   000FBA                     CCP2CON         equ	4026	;# 
   348   000FBB                     CCPR2           equ	4027	;# 
   349   000FBB                     CCPR2L          equ	4027	;# 
   350   000FBC                     CCPR2H          equ	4028	;# 
   351   000FBD                     CCP1CON         equ	4029	;# 
   352   000FBD                     ECCP1CON        equ	4029	;# 
   353   000FBE                     CCPR1           equ	4030	;# 
   354   000FBE                     CCPR1L          equ	4030	;# 
   355   000FBF                     CCPR1H          equ	4031	;# 
   356   000FC0                     ADCON2          equ	4032	;# 
   357   000FC1                     ADCON1          equ	4033	;# 
   358   000FC2                     ADCON0          equ	4034	;# 
   359   000FC3                     ADRES           equ	4035	;# 
   360   000FC3                     ADRESL          equ	4035	;# 
   361   000FC4                     ADRESH          equ	4036	;# 
   362   000FC5                     SSPCON2         equ	4037	;# 
   363   000FC6                     SSPCON1         equ	4038	;# 
   364   000FC7                     SSPSTAT         equ	4039	;# 
   365   000FC8                     SSPADD          equ	4040	;# 
   366   000FC9                     SSPBUF          equ	4041	;# 
   367   000FCA                     T2CON           equ	4042	;# 
   368   000FCB                     PR2             equ	4043	;# 
   369   000FCB                     MEMCON          equ	4043	;# 
   370   000FCC                     TMR2            equ	4044	;# 
   371   000FCD                     T1CON           equ	4045	;# 
   372   000FCE                     TMR1            equ	4046	;# 
   373   000FCE                     TMR1L           equ	4046	;# 
   374   000FCF                     TMR1H           equ	4047	;# 
   375   000FD0                     RCON            equ	4048	;# 
   376   000FD1                     WDTCON          equ	4049	;# 
   377   000FD2                     HLVDCON         equ	4050	;# 
   378   000FD2                     LVDCON          equ	4050	;# 
   379   000FD3                     OSCCON          equ	4051	;# 
   380   000FD5                     T0CON           equ	4053	;# 
   381   000FD6                     TMR0            equ	4054	;# 
   382   000FD6                     TMR0L           equ	4054	;# 
   383   000FD7                     TMR0H           equ	4055	;# 
   384   000FD8                     STATUS          equ	4056	;# 
   385   000FD9                     FSR2            equ	4057	;# 
   386   000FD9                     FSR2L           equ	4057	;# 
   387   000FDA                     FSR2H           equ	4058	;# 
   388   000FDB                     PLUSW2          equ	4059	;# 
   389   000FDC                     PREINC2         equ	4060	;# 
   390   000FDD                     POSTDEC2        equ	4061	;# 
   391   000FDE                     POSTINC2        equ	4062	;# 
   392   000FDF                     INDF2           equ	4063	;# 
   393   000FE0                     BSR             equ	4064	;# 
   394   000FE1                     FSR1            equ	4065	;# 
   395   000FE1                     FSR1L           equ	4065	;# 
   396   000FE2                     FSR1H           equ	4066	;# 
   397   000FE3                     PLUSW1          equ	4067	;# 
   398   000FE4                     PREINC1         equ	4068	;# 
   399   000FE5                     POSTDEC1        equ	4069	;# 
   400   000FE6                     POSTINC1        equ	4070	;# 
   401   000FE7                     INDF1           equ	4071	;# 
   402   000FE8                     WREG            equ	4072	;# 
   403   000FE9                     FSR0            equ	4073	;# 
   404   000FE9                     FSR0L           equ	4073	;# 
   405   000FEA                     FSR0H           equ	4074	;# 
   406   000FEB                     PLUSW0          equ	4075	;# 
   407   000FEC                     PREINC0         equ	4076	;# 
   408   000FED                     POSTDEC0        equ	4077	;# 
   409   000FEE                     POSTINC0        equ	4078	;# 
   410   000FEF                     INDF0           equ	4079	;# 
   411   000FF0                     INTCON3         equ	4080	;# 
   412   000FF1                     INTCON2         equ	4081	;# 
   413   000FF2                     INTCON          equ	4082	;# 
   414   000FF3                     PROD            equ	4083	;# 
   415   000FF3                     PRODL           equ	4083	;# 
   416   000FF4                     PRODH           equ	4084	;# 
   417   000FF5                     TABLAT          equ	4085	;# 
   418   000FF6                     TBLPTR          equ	4086	;# 
   419   000FF6                     TBLPTRL         equ	4086	;# 
   420   000FF7                     TBLPTRH         equ	4087	;# 
   421   000FF8                     TBLPTRU         equ	4088	;# 
   422   000FF9                     PCLAT           equ	4089	;# 
   423   000FF9                     PC              equ	4089	;# 
   424   000FF9                     PCL             equ	4089	;# 
   425   000FFA                     PCLATH          equ	4090	;# 
   426   000FFB                     PCLATU          equ	4091	;# 
   427   000FFC                     STKPTR          equ	4092	;# 
   428   000FFD                     TOS             equ	4093	;# 
   429   000FFD                     TOSL            equ	4093	;# 
   430   000FFE                     TOSH            equ	4094	;# 
   431   000FFF                     TOSU            equ	4095	;# 
   432   000F62                     SPPDATA         equ	3938	;# 
   433   000F63                     SPPCFG          equ	3939	;# 
   434   000F64                     SPPEPS          equ	3940	;# 
   435   000F65                     SPPCON          equ	3941	;# 
   436   000F66                     UFRM            equ	3942	;# 
   437   000F66                     UFRML           equ	3942	;# 
   438   000F67                     UFRMH           equ	3943	;# 
   439   000F68                     UIR             equ	3944	;# 
   440   000F69                     UIE             equ	3945	;# 
   441   000F6A                     UEIR            equ	3946	;# 
   442   000F6B                     UEIE            equ	3947	;# 
   443   000F6C                     USTAT           equ	3948	;# 
   444   000F6D                     UCON            equ	3949	;# 
   445   000F6E                     UADDR           equ	3950	;# 
   446   000F6F                     UCFG            equ	3951	;# 
   447   000F70                     UEP0            equ	3952	;# 
   448   000F71                     UEP1            equ	3953	;# 
   449   000F72                     UEP2            equ	3954	;# 
   450   000F73                     UEP3            equ	3955	;# 
   451   000F74                     UEP4            equ	3956	;# 
   452   000F75                     UEP5            equ	3957	;# 
   453   000F76                     UEP6            equ	3958	;# 
   454   000F77                     UEP7            equ	3959	;# 
   455   000F78                     UEP8            equ	3960	;# 
   456   000F79                     UEP9            equ	3961	;# 
   457   000F7A                     UEP10           equ	3962	;# 
   458   000F7B                     UEP11           equ	3963	;# 
   459   000F7C                     UEP12           equ	3964	;# 
   460   000F7D                     UEP13           equ	3965	;# 
   461   000F7E                     UEP14           equ	3966	;# 
   462   000F7F                     UEP15           equ	3967	;# 
   463   000F80                     PORTA           equ	3968	;# 
   464   000F81                     PORTB           equ	3969	;# 
   465   000F82                     PORTC           equ	3970	;# 
   466   000F83                     PORTD           equ	3971	;# 
   467   000F84                     PORTE           equ	3972	;# 
   468   000F89                     LATA            equ	3977	;# 
   469   000F8A                     LATB            equ	3978	;# 
   470   000F8B                     LATC            equ	3979	;# 
   471   000F8C                     LATD            equ	3980	;# 
   472   000F8D                     LATE            equ	3981	;# 
   473   000F92                     TRISA           equ	3986	;# 
   474   000F92                     DDRA            equ	3986	;# 
   475   000F93                     TRISB           equ	3987	;# 
   476   000F93                     DDRB            equ	3987	;# 
   477   000F94                     TRISC           equ	3988	;# 
   478   000F94                     DDRC            equ	3988	;# 
   479   000F95                     TRISD           equ	3989	;# 
   480   000F95                     DDRD            equ	3989	;# 
   481   000F96                     TRISE           equ	3990	;# 
   482   000F96                     DDRE            equ	3990	;# 
   483   000F9B                     OSCTUNE         equ	3995	;# 
   484   000F9D                     PIE1            equ	3997	;# 
   485   000F9E                     PIR1            equ	3998	;# 
   486   000F9F                     IPR1            equ	3999	;# 
   487   000FA0                     PIE2            equ	4000	;# 
   488   000FA1                     PIR2            equ	4001	;# 
   489   000FA2                     IPR2            equ	4002	;# 
   490   000FA6                     EECON1          equ	4006	;# 
   491   000FA7                     EECON2          equ	4007	;# 
   492   000FA8                     EEDATA          equ	4008	;# 
   493   000FA9                     EEADR           equ	4009	;# 
   494   000FAB                     RCSTA           equ	4011	;# 
   495   000FAB                     RCSTA1          equ	4011	;# 
   496   000FAC                     TXSTA           equ	4012	;# 
   497   000FAC                     TXSTA1          equ	4012	;# 
   498   000FAD                     TXREG           equ	4013	;# 
   499   000FAD                     TXREG1          equ	4013	;# 
   500   000FAE                     RCREG           equ	4014	;# 
   501   000FAE                     RCREG1          equ	4014	;# 
   502   000FAF                     SPBRG           equ	4015	;# 
   503   000FAF                     SPBRG1          equ	4015	;# 
   504   000FB0                     SPBRGH          equ	4016	;# 
   505   000FB1                     T3CON           equ	4017	;# 
   506   000FB2                     TMR3            equ	4018	;# 
   507   000FB2                     TMR3L           equ	4018	;# 
   508   000FB3                     TMR3H           equ	4019	;# 
   509   000FB4                     CMCON           equ	4020	;# 
   510   000FB5                     CVRCON          equ	4021	;# 
   511   000FB6                     ECCP1AS         equ	4022	;# 
   512   000FB6                     CCP1AS          equ	4022	;# 
   513   000FB7                     ECCP1DEL        equ	4023	;# 
   514   000FB7                     CCP1DEL         equ	4023	;# 
   515   000FB8                     BAUDCON         equ	4024	;# 
   516   000FB8                     BAUDCTL         equ	4024	;# 
   517   000FBA                     CCP2CON         equ	4026	;# 
   518   000FBB                     CCPR2           equ	4027	;# 
   519   000FBB                     CCPR2L          equ	4027	;# 
   520   000FBC                     CCPR2H          equ	4028	;# 
   521   000FBD                     CCP1CON         equ	4029	;# 
   522   000FBD                     ECCP1CON        equ	4029	;# 
   523   000FBE                     CCPR1           equ	4030	;# 
   524   000FBE                     CCPR1L          equ	4030	;# 
   525   000FBF                     CCPR1H          equ	4031	;# 
   526   000FC0                     ADCON2          equ	4032	;# 
   527   000FC1                     ADCON1          equ	4033	;# 
   528   000FC2                     ADCON0          equ	4034	;# 
   529   000FC3                     ADRES           equ	4035	;# 
   530   000FC3                     ADRESL          equ	4035	;# 
   531   000FC4                     ADRESH          equ	4036	;# 
   532   000FC5                     SSPCON2         equ	4037	;# 
   533   000FC6                     SSPCON1         equ	4038	;# 
   534   000FC7                     SSPSTAT         equ	4039	;# 
   535   000FC8                     SSPADD          equ	4040	;# 
   536   000FC9                     SSPBUF          equ	4041	;# 
   537   000FCA                     T2CON           equ	4042	;# 
   538   000FCB                     PR2             equ	4043	;# 
   539   000FCB                     MEMCON          equ	4043	;# 
   540   000FCC                     TMR2            equ	4044	;# 
   541   000FCD                     T1CON           equ	4045	;# 
   542   000FCE                     TMR1            equ	4046	;# 
   543   000FCE                     TMR1L           equ	4046	;# 
   544   000FCF                     TMR1H           equ	4047	;# 
   545   000FD0                     RCON            equ	4048	;# 
   546   000FD1                     WDTCON          equ	4049	;# 
   547   000FD2                     HLVDCON         equ	4050	;# 
   548   000FD2                     LVDCON          equ	4050	;# 
   549   000FD3                     OSCCON          equ	4051	;# 
   550   000FD5                     T0CON           equ	4053	;# 
   551   000FD6                     TMR0            equ	4054	;# 
   552   000FD6                     TMR0L           equ	4054	;# 
   553   000FD7                     TMR0H           equ	4055	;# 
   554   000FD8                     STATUS          equ	4056	;# 
   555   000FD9                     FSR2            equ	4057	;# 
   556   000FD9                     FSR2L           equ	4057	;# 
   557   000FDA                     FSR2H           equ	4058	;# 
   558   000FDB                     PLUSW2          equ	4059	;# 
   559   000FDC                     PREINC2         equ	4060	;# 
   560   000FDD                     POSTDEC2        equ	4061	;# 
   561   000FDE                     POSTINC2        equ	4062	;# 
   562   000FDF                     INDF2           equ	4063	;# 
   563   000FE0                     BSR             equ	4064	;# 
   564   000FE1                     FSR1            equ	4065	;# 
   565   000FE1                     FSR1L           equ	4065	;# 
   566   000FE2                     FSR1H           equ	4066	;# 
   567   000FE3                     PLUSW1          equ	4067	;# 
   568   000FE4                     PREINC1         equ	4068	;# 
   569   000FE5                     POSTDEC1        equ	4069	;# 
   570   000FE6                     POSTINC1        equ	4070	;# 
   571   000FE7                     INDF1           equ	4071	;# 
   572   000FE8                     WREG            equ	4072	;# 
   573   000FE9                     FSR0            equ	4073	;# 
   574   000FE9                     FSR0L           equ	4073	;# 
   575   000FEA                     FSR0H           equ	4074	;# 
   576   000FEB                     PLUSW0          equ	4075	;# 
   577   000FEC                     PREINC0         equ	4076	;# 
   578   000FED                     POSTDEC0        equ	4077	;# 
   579   000FEE                     POSTINC0        equ	4078	;# 
   580   000FEF                     INDF0           equ	4079	;# 
   581   000FF0                     INTCON3         equ	4080	;# 
   582   000FF1                     INTCON2         equ	4081	;# 
   583   000FF2                     INTCON          equ	4082	;# 
   584   000FF3                     PROD            equ	4083	;# 
   585   000FF3                     PRODL           equ	4083	;# 
   586   000FF4                     PRODH           equ	4084	;# 
   587   000FF5                     TABLAT          equ	4085	;# 
   588   000FF6                     TBLPTR          equ	4086	;# 
   589   000FF6                     TBLPTRL         equ	4086	;# 
   590   000FF7                     TBLPTRH         equ	4087	;# 
   591   000FF8                     TBLPTRU         equ	4088	;# 
   592   000FF9                     PCLAT           equ	4089	;# 
   593   000FF9                     PC              equ	4089	;# 
   594   000FF9                     PCL             equ	4089	;# 
   595   000FFA                     PCLATH          equ	4090	;# 
   596   000FFB                     PCLATU          equ	4091	;# 
   597   000FFC                     STKPTR          equ	4092	;# 
   598   000FFD                     TOS             equ	4093	;# 
   599   000FFD                     TOSL            equ	4093	;# 
   600   000FFE                     TOSH            equ	4094	;# 
   601   000FFF                     TOSU            equ	4095	;# 
   602                           
   603 ;; Function _os_idle_task is unused but had its address taken
   604   000000                     _os_idle_task   equ	0
   605   000FFD                     _TOS            set	4093
   606   000FFC                     _STKPTR         set	4092
   607   000FE8                     _WREG           set	4072
   608   000FD8                     _STATUS         set	4056
   609   000FE0                     _BSR            set	4064
   610   000FF2                     _INTCONbits     set	4082
   611                           
   612                           ; #config settings
   613                           
   614                           	psect	cinit
   615   000878                     __pcinit:
   616                           	callstack 0
   617   000878                     start_initialization:
   618                           	callstack 0
   619   000878                     __initialization:
   620                           	callstack 0
   621                           
   622                           ; Clear objects allocated to BIGRAM (533 bytes)
   623   000878  EE00  F0CB         	lfsr	0,__pbssBIGRAM
   624   00087C  EE12 F015          	lfsr	1,533
   625   000880                     clear_0:
   626   000880  6AEE               	clrf	postinc0,c
   627   000882  50E5               	movf	postdec1,w,c
   628   000884  50E1               	movf	fsr1l,w,c
   629   000886  E1FC               	bnz	clear_0
   630   000888  50E2               	movf	fsr1h,w,c
   631   00088A  E1FA               	bnz	clear_0
   632   00088C                     end_of_initialization:
   633                           	callstack 0
   634   00088C                     __end_of__initialization:
   635                           	callstack 0
   636   00088C  0100               	movlb	0
   637   00088E  EF49  F004         	goto	_main	;jump to C main() function
   638                           
   639                           	psect	bssBIGRAM
   640   0000CB                     __pbssBIGRAM:
   641                           	callstack 0
   642   0000CB                     _readyQueue:
   643                           	callstack 0
   644   0000CB                     	ds	533
   645                           
   646                           	psect	cstackBANK0
   647   000060                     __pcstackBANK0:
   648                           	callstack 0
   649   000060                     os_create_task@id:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0x0
   653   000060                     	ds	1
   654   000061                     os_create_task@new_task:
   655                           	callstack 0
   656                           
   657                           ; 106 bytes @ 0x1
   658   000061                     	ds	106
   659                           
   660                           	psect	cstackCOMRAM
   661   000001                     __pcstackCOMRAM:
   662                           	callstack 0
   663   000001                     os_create_task@task_f:
   664                           	callstack 0
   665   000001                     
   666                           ; 1 bytes @ 0x0
   667   000001                     	ds	2
   668   000003                     os_create_task@prior:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x2
   672   000003                     	ds	1
   673   000004                     ??_os_create_task:
   674                           
   675                           ; 1 bytes @ 0x3
   676   000004                     	ds	1
   677   000005                     
   678                           ; 1 bytes @ 0x4
   679 ;;
   680 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   681 ;;
   682 ;; *************** function _main *****************
   683 ;; Defined at:
   684 ;;		line 6 in file "main.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;		None
   687 ;; Auto vars:     Size  Location     Type
   688 ;;		None
   689 ;; Return value:  Size  Location     Type
   690 ;;                  2    8[None  ] int 
   691 ;; Registers used:
   692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   698 ;;      Params:         0       0       0       0       0       0       0       0       0
   699 ;;      Locals:         0       0       0       0       0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0       0       0       0       0
   701 ;;      Totals:         0       0       0       0       0       0       0       0       0
   702 ;;Total ram usage:        0 bytes
   703 ;; Hardware stack levels required when called: 2
   704 ;; This function calls:
   705 ;;		_os_config
   706 ;;		_os_start
   707 ;; This function is called by:
   708 ;;		Startup code after reset
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text0
   713   000892                     __ptext0:
   714                           	callstack 0
   715   000892                     _main:
   716                           	callstack 29
   717   000892                     
   718                           ;main.c: 8:     os_config();
   719   000892  EC29  F004         	call	_os_config	;wreg free
   720   000896                     
   721                           ;main.c: 12:     os_start();
   722   000896  EC51  F004         	call	_os_start	;wreg free
   723   00089A                     l9:
   724   00089A  EF4D  F004         	goto	l9
   725   00089E  EFFE  F03F         	goto	start
   726   0008A2                     __end_of_main:
   727                           	callstack 0
   728                           
   729 ;; *************** function _os_start *****************
   730 ;; Defined at:
   731 ;;		line 18 in file "kernel.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		None
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   745 ;;      Params:         0       0       0       0       0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0       0       0       0       0
   747 ;;      Temps:          0       0       0       0       0       0       0       0       0
   748 ;;      Totals:         0       0       0       0       0       0       0       0       0
   749 ;;Total ram usage:        0 bytes
   750 ;; Hardware stack levels used: 1
   751 ;; This function calls:
   752 ;;		Nothing
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text1
   759   0008A2                     __ptext1:
   760                           	callstack 0
   761   0008A2                     _os_start:
   762                           	callstack 30
   763   0008A2  0012               	return		;funcret
   764   0008A4                     __end_of_os_start:
   765                           	callstack 0
   766                           
   767 ;; *************** function _os_config *****************
   768 ;; Defined at:
   769 ;;		line 9 in file "kernel.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;		None
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   783 ;;      Params:         0       0       0       0       0       0       0       0       0
   784 ;;      Locals:         0       0       0       0       0       0       0       0       0
   785 ;;      Temps:          0       0       0       0       0       0       0       0       0
   786 ;;      Totals:         0       0       0       0       0       0       0       0       0
   787 ;;Total ram usage:        0 bytes
   788 ;; Hardware stack levels used: 1
   789 ;; Hardware stack levels required when called: 1
   790 ;; This function calls:
   791 ;;		_os_create_task
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text2
   798   000852                     __ptext2:
   799                           	callstack 0
   800   000852                     _os_config:
   801                           	callstack 29
   802   000852                     
   803                           ;kernel.c: 11:     readyQueue.readyQueueSize = 0;
   804   000852  0E00               	movlw	0
   805   000854  CFE8 F2DD          	movff	wreg,_readyQueue+530
   806                           
   807                           ;kernel.c: 12:     readyQueue.taskRunning = &readyQueue.readyQueue[0];
   808   000858  0ECB               	movlw	low _readyQueue
   809   00085A  CFE8 F2DE          	movff	wreg,_readyQueue+531
   810   00085E  0E00               	movlw	high _readyQueue
   811   000860  CFE8 F2DF          	movff	wreg,_readyQueue+532
   812   000864                     
   813                           ;kernel.c: 15:     os_create_task(0, os_idle_task, 1);
   814   000864  0E00               	movlw	0
   815   000866  6E01               	movwf	os_create_task@task_f^0,c
   816   000868  0E00               	movlw	0
   817   00086A  6E02               	movwf	(os_create_task@task_f+1)^0,c
   818   00086C  0E01               	movlw	1
   819   00086E  6E03               	movwf	os_create_task@prior^0,c
   820   000870  0E00               	movlw	0
   821   000872  EC01  F004         	call	_os_create_task
   822   000876  0012               	return		;funcret
   823   000878                     __end_of_os_config:
   824                           	callstack 0
   825                           
   826 ;; *************** function _os_create_task *****************
   827 ;; Defined at:
   828 ;;		line 9 in file "syscall.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;  id              1    wreg     unsigned char 
   831 ;;  task_f          2    0[COMRAM] PTR FTN()void 
   832 ;;		 -> os_idle_task(1), 
   833 ;;  prior           1    2[COMRAM] unsigned char 
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  id              1    0[BANK0 ] unsigned char 
   836 ;;  new_task      106    1[BANK0 ] struct tcb
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      void 
   839 ;; Registers used:
   840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   846 ;;      Params:         3       0       0       0       0       0       0       0       0
   847 ;;      Locals:         0     107       0       0       0       0       0       0       0
   848 ;;      Temps:          1       0       0       0       0       0       0       0       0
   849 ;;      Totals:         4     107       0       0       0       0       0       0       0
   850 ;;Total ram usage:      111 bytes
   851 ;; Hardware stack levels used: 1
   852 ;; This function calls:
   853 ;;		Nothing
   854 ;; This function is called by:
   855 ;;		_os_config
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text3
   860   000802                     __ptext3:
   861                           	callstack 0
   862   000802                     _os_create_task:
   863                           	callstack 29
   864                           
   865                           ;incstack = 0
   866                           ;os_create_task@id stored from wreg
   867   000802  0100               	movlb	0	; () banked
   868   000804  6F60               	movwf	os_create_task@id& (0+255),b
   869   000806                     
   870                           ;syscall.c: 9: void os_create_task(uint8_t id, f_ptr task_f, uint8_t prior);syscall.c: 1
      +                          0: {;syscall.c: 11:     tcb_t new_task;;syscall.c: 13:     new_task.task_id = id;
   871   000806  C060  F061         	movff	os_create_task@id,os_create_task@new_task
   872   00080A                     
   873                           ;syscall.c: 14:     new_task.task_func = task_f;
   874   00080A  C001  F062         	movff	os_create_task@task_f,os_create_task@new_task+1
   875   00080E  C002  F063         	movff	os_create_task@task_f+1,os_create_task@new_task+2
   876   000812                     
   877                           ;syscall.c: 15:     new_task.task_priority = prior;
   878   000812  C003  F065         	movff	os_create_task@prior,os_create_task@new_task+4
   879   000816                     
   880                           ;syscall.c: 16:     new_task.task_state = READY;
   881   000816  0100               	movlb	0	; () banked
   882   000818  6B64               	clrf	(os_create_task@new_task+3)& (0+255),b
   883   00081A                     
   884                           ; BSR set to: 0
   885                           ;syscall.c: 18:     new_task.BSR_reg = 0;
   886   00081A  6B67               	clrf	(os_create_task@new_task+6)& (0+255),b
   887   00081C                     
   888                           ; BSR set to: 0
   889                           ;syscall.c: 19:     new_task.STATUS_reg = 0;
   890   00081C  6B69               	clrf	(os_create_task@new_task+8)& (0+255),b
   891   00081E                     
   892                           ; BSR set to: 0
   893                           ;syscall.c: 20:     new_task.WORK_reg = 0;
   894   00081E  6B68               	clrf	(os_create_task@new_task+7)& (0+255),b
   895   000820                     
   896                           ; BSR set to: 0
   897                           ;syscall.c: 21:     new_task.task_sp = &new_task.STACK[0];
   898   000820  0E6A               	movlw	low (os_create_task@new_task+9)
   899   000822  6FCA               	movwf	(os_create_task@new_task+105)& (0+255),b
   900   000824                     
   901                           ; BSR set to: 0
   902                           ;syscall.c: 24:     readyQueue.readyQueue[readyQueue.readyQueueSize++] = new_task;
   903   000824  EE20  F061         	lfsr	2,os_create_task@new_task
   904   000828  C2DD  F004         	movff	_readyQueue+530,??_os_create_task
   905   00082C  5004               	movf	??_os_create_task^0,w,c
   906   00082E  0D6A               	mullw	106
   907   000830  0ECB               	movlw	low _readyQueue
   908   000832  24F3               	addwf	243,w,c
   909   000834  6EE1               	movwf	fsr1l,c
   910   000836  0E00               	movlw	high _readyQueue
   911   000838  20F4               	addwfc	prodh,w,c
   912   00083A  6EE2               	movwf	fsr1h,c
   913   00083C  0E69               	movlw	105
   914   00083E                     u211:
   915   00083E  CFDB FFE3          	movff	plusw2,plusw1
   916   000842  06E8               	decf	wreg,f,c
   917   000844  E2FC               	bc	u211
   918   000846                     
   919                           ; BSR set to: 0
   920   000846  C2DD  FFE8         	movff	_readyQueue+530,wreg
   921   00084A  0F01               	addlw	1
   922   00084C  CFE8 F2DD          	movff	wreg,_readyQueue+530
   923   000850                     
   924                           ; BSR set to: 0
   925   000850  0012               	return		;funcret
   926   000852                     __end_of_os_create_task:
   927                           	callstack 0
   928                           
   929                           	psect	smallconst
   930   000800                     __psmallconst:
   931                           	callstack 0
   932   000800  00                 	db	0
   933   000801  00                 	db	0	; dummy byte at the end
   934   000800                     __smallconst    set	__psmallconst
   935   000800                     __mediumconst   set	__psmallconst
   936   000000                     __activetblptr  equ	0
   937                           
   938                           	psect	rparam
   939   000001                     ___rparam_used  equ	1
   940   000000                     ___param_bank   equ	0
   941   000000                     __Lparam        equ	__Lrparam
   942   000000                     __Hparam        equ	__Hrparam
   943                           tosu	equ	0xFFF
   944                           tosh	equ	0xFFE
   945                           tosl	equ	0xFFD
   946                           stkptr	equ	0xFFC
   947                           pclatu	equ	0xFFB
   948                           pclath	equ	0xFFA
   949                           pcl	equ	0xFF9
   950                           tblptru	equ	0xFF8
   951                           tblptrh	equ	0xFF7
   952                           tblptrl	equ	0xFF6
   953                           tablat	equ	0xFF5
   954                           prodh	equ	0xFF4
   955                           prodl	equ	0xFF3
   956                           indf0	equ	0xFEF
   957                           postinc0	equ	0xFEE
   958                           postdec0	equ	0xFED
   959                           preinc0	equ	0xFEC
   960                           plusw0	equ	0xFEB
   961                           fsr0h	equ	0xFEA
   962                           fsr0l	equ	0xFE9
   963                           wreg	equ	0xFE8
   964                           indf1	equ	0xFE7
   965                           postinc1	equ	0xFE6
   966                           postdec1	equ	0xFE5
   967                           preinc1	equ	0xFE4
   968                           plusw1	equ	0xFE3
   969                           fsr1h	equ	0xFE2
   970                           fsr1l	equ	0xFE1
   971                           bsr	equ	0xFE0
   972                           indf2	equ	0xFDF
   973                           postinc2	equ	0xFDE
   974                           postdec2	equ	0xFDD
   975                           preinc2	equ	0xFDC
   976                           plusw2	equ	0xFDB
   977                           fsr2h	equ	0xFDA
   978                           fsr2l	equ	0xFD9
   979                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         533
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4       4
    BANK0           160    107     107
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    new_task$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), 

    new_task$task_sp	PTR unsigned um size(1) Largest target is 107
		 -> new_task$STACK(BANK0[96]), os_create_task@new_task(BANK0[106]), 

    os_create_task@task_f	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), 

    readyQueue$readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), 

    readyQueue$readyQueue$task_sp	PTR unsigned um size(1) Largest target is 107
		 -> os_create_task@new_task(BANK0[106]), 

    readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), 

    readyQueue$task_sp	PTR unsigned um size(1) Largest target is 107
		 -> os_create_task@new_task(BANK0[106]), 

    readyQueue$taskRunning	PTR struct tcb size(2) Largest target is 538
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 

    readyQueue$taskRunning$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), 

    readyQueue$taskRunning$task_sp	PTR unsigned um size(1) Largest target is 107
		 -> os_create_task@new_task(BANK0[106]), 

    ?_rr_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), 

    ?_rr_scheduler$task_sp	PTR unsigned um size(1) Largest target is 107
		 -> os_create_task@new_task(BANK0[106]), 

    ?_rr_scheduler$taskRunning	PTR struct tcb size(2) Largest target is 538
		 -> readyQueue(BIGRAM[533]), 

    rr_scheduler@next$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), 

    rr_scheduler@next$task_sp	PTR unsigned um size(1) Largest target is 107
		 -> os_create_task@new_task(BANK0[106]), 

    rr_scheduler@next_259$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), 

    rr_scheduler@next_259$task_sp	PTR unsigned um size(1) Largest target is 107
		 -> os_create_task@new_task(BANK0[106]), 

    S42tcb$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), 

    S42tcb$task_sp	PTR unsigned um size(1) Largest target is 107
		 -> os_create_task@new_task(BANK0[106]), 

    S53f_aptos$taskRunning	PTR struct tcb size(2) Largest target is 538
		 -> readyQueue(BIGRAM[533]), 

    ?_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), 

    ?_scheduler$task_sp	PTR unsigned um size(1) Largest target is 107
		 -> os_create_task@new_task(BANK0[106]), 

    sp__rr_scheduler	PTR struct tcb size(2) Largest target is 538
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 

    sp__rr_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), 

    sp__rr_scheduler$task_sp	PTR unsigned um size(1) Largest target is 107
		 -> os_create_task@new_task(BANK0[106]), 

    sp__scheduler	PTR struct tcb size(2) Largest target is 538
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 

    sp__scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), 

    sp__scheduler$task_sp	PTR unsigned um size(1) Largest target is 107
		 -> os_create_task@new_task(BANK0[106]), 


Critical Paths under _main in COMRAM

    _os_config->_os_create_task

Critical Paths under _main in BANK0

    _os_config->_os_create_task

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     297
                          _os_config
                           _os_start
 ---------------------------------------------------------------------------------
 (1) _os_start                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _os_config                                            0     0      0     297
                     _os_create_task
 ---------------------------------------------------------------------------------
 (2) _os_create_task                                     111   108      3     297
                                              0 COMRAM     4     1      3
                                              0 BANK0    107   107      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _os_config
     _os_create_task
   _os_start

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0     533     26.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160    107     107     66.9%
BITBIGSFRll        120      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95      4       4      4.2%
BITBIGSFRh          23      0       0      0.0%
BITBIGSFRlh         15      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     644      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Sep 01 19:01:51 2025

                      l9 089A                       l10 089A                       l23 0876  
                     l26 08A2                       l63 0850                      l950 0806  
                    l960 081C                      l952 080A                      l962 081E  
                    l954 0812                      l970 0852                      l964 0820  
                    l956 0816                      l972 0864                      l966 0824  
                    l958 081A                      l974 0892                      l968 0846  
                    l976 0896                      _BSR 0FE0                      u211 083E  
                    _TOS 0FFD                      prod 0FF3                      wreg 0FE8  
                   _WREG 0FE8                     _main 0892                     fsr1h 0FE2  
                   fsr1l 0FE1                     prodl 0FF3                     start 7FFC  
           ___param_bank 0000                    ?_main 0001                    plusw1 0FE3  
                  plusw2 0FDB          __initialization 0878             __end_of_main 08A2  
                 ??_main 0005            __activetblptr 0000                   _STATUS 0FD8  
                 _STKPTR 0FFC                   clear_0 0880                   isa$std 0001  
       __end_of_os_start 08A4             __mediumconst 0800               __accesstop 0060  
__end_of__initialization 088C            ___rparam_used 0001           _os_create_task 0802  
         __pcstackCOMRAM 0001         os_create_task@id 0060   __end_of_os_create_task 0852  
        ?_os_create_task 0001                  __Hparam 0000                  __Lparam 0000  
              ?_os_start 0001             __psmallconst 0800                  __pcinit 0878  
                __ramtop 0800                  __ptext0 0892                  __ptext1 08A2  
                __ptext2 0852                  __ptext3 0802               _readyQueue 00CB  
    os_create_task@prior 0003     end_of_initialization 088C        __end_of_os_config 0878  
 os_create_task@new_task 0061               ??_os_start 0001                  postdec1 0FE5  
                postinc0 0FEE      start_initialization 0878              __pbssBIGRAM 00CB  
          __pcstackBANK0 0060         ??_os_create_task 0004              __smallconst 0800  
              _os_config 0852               ?_os_config 0001                 __Hrparam 0000  
               __Lrparam 0000             _os_idle_task 0000     os_create_task@task_f 0001  
               _os_start 08A2                 isa$xinst 0000               _INTCONbits 0FF2  
            ??_os_config 0005  
