

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Sep 24 15:22:50 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
     8                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    49   000000                     
    50                           ; Generated 17/01/2025 GMT
    51                           ; 
    52                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4550 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000FE0                     bsr             equ	4064
    85   000FE9                     fsr0            equ	4073
    86   000FEA                     fsr0h           equ	4074
    87   000FE9                     fsr0l           equ	4073
    88   000FE1                     fsr1            equ	4065
    89   000FE2                     fsr1h           equ	4066
    90   000FE1                     fsr1l           equ	4065
    91   000FD9                     fsr2            equ	4057
    92   000FDA                     fsr2h           equ	4058
    93   000FD9                     fsr2l           equ	4057
    94   000FEF                     indf0           equ	4079
    95   000FE7                     indf1           equ	4071
    96   000FDF                     indf2           equ	4063
    97   000FF2                     intcon          equ	4082
    98   000000                     nvmcon          equ	0
    99   000FF9                     pcl             equ	4089
   100   000FFA                     pclath          equ	4090
   101   000FFB                     pclatu          equ	4091
   102   000FEB                     plusw0          equ	4075
   103   000FE3                     plusw1          equ	4067
   104   000FDB                     plusw2          equ	4059
   105   000FED                     postdec0        equ	4077
   106   000FE5                     postdec1        equ	4069
   107   000FDD                     postdec2        equ	4061
   108   000FEE                     postinc0        equ	4078
   109   000FE6                     postinc1        equ	4070
   110   000FDE                     postinc2        equ	4062
   111   000FEC                     preinc0         equ	4076
   112   000FE4                     preinc1         equ	4068
   113   000FDC                     preinc2         equ	4060
   114   000FF3                     prod            equ	4083
   115   000FF4                     prodh           equ	4084
   116   000FF3                     prodl           equ	4083
   117   000FD8                     status          equ	4056
   118   000FF5                     tablat          equ	4085
   119   000FF6                     tblptr          equ	4086
   120   000FF7                     tblptrh         equ	4087
   121   000FF6                     tblptrl         equ	4086
   122   000FF8                     tblptru         equ	4088
   123   000FFD                     tosl            equ	4093
   124   000FE8                     wreg            equ	4072
   125   000F62                     SPPDATA         equ	3938	;# 
   126   000F63                     SPPCFG          equ	3939	;# 
   127   000F64                     SPPEPS          equ	3940	;# 
   128   000F65                     SPPCON          equ	3941	;# 
   129   000F66                     UFRM            equ	3942	;# 
   130   000F66                     UFRML           equ	3942	;# 
   131   000F67                     UFRMH           equ	3943	;# 
   132   000F68                     UIR             equ	3944	;# 
   133   000F69                     UIE             equ	3945	;# 
   134   000F6A                     UEIR            equ	3946	;# 
   135   000F6B                     UEIE            equ	3947	;# 
   136   000F6C                     USTAT           equ	3948	;# 
   137   000F6D                     UCON            equ	3949	;# 
   138   000F6E                     UADDR           equ	3950	;# 
   139   000F6F                     UCFG            equ	3951	;# 
   140   000F70                     UEP0            equ	3952	;# 
   141   000F71                     UEP1            equ	3953	;# 
   142   000F72                     UEP2            equ	3954	;# 
   143   000F73                     UEP3            equ	3955	;# 
   144   000F74                     UEP4            equ	3956	;# 
   145   000F75                     UEP5            equ	3957	;# 
   146   000F76                     UEP6            equ	3958	;# 
   147   000F77                     UEP7            equ	3959	;# 
   148   000F78                     UEP8            equ	3960	;# 
   149   000F79                     UEP9            equ	3961	;# 
   150   000F7A                     UEP10           equ	3962	;# 
   151   000F7B                     UEP11           equ	3963	;# 
   152   000F7C                     UEP12           equ	3964	;# 
   153   000F7D                     UEP13           equ	3965	;# 
   154   000F7E                     UEP14           equ	3966	;# 
   155   000F7F                     UEP15           equ	3967	;# 
   156   000F80                     PORTA           equ	3968	;# 
   157   000F81                     PORTB           equ	3969	;# 
   158   000F82                     PORTC           equ	3970	;# 
   159   000F83                     PORTD           equ	3971	;# 
   160   000F84                     PORTE           equ	3972	;# 
   161   000F89                     LATA            equ	3977	;# 
   162   000F8A                     LATB            equ	3978	;# 
   163   000F8B                     LATC            equ	3979	;# 
   164   000F8C                     LATD            equ	3980	;# 
   165   000F8D                     LATE            equ	3981	;# 
   166   000F92                     TRISA           equ	3986	;# 
   167   000F92                     DDRA            equ	3986	;# 
   168   000F93                     TRISB           equ	3987	;# 
   169   000F93                     DDRB            equ	3987	;# 
   170   000F94                     TRISC           equ	3988	;# 
   171   000F94                     DDRC            equ	3988	;# 
   172   000F95                     TRISD           equ	3989	;# 
   173   000F95                     DDRD            equ	3989	;# 
   174   000F96                     TRISE           equ	3990	;# 
   175   000F96                     DDRE            equ	3990	;# 
   176   000F9B                     OSCTUNE         equ	3995	;# 
   177   000F9D                     PIE1            equ	3997	;# 
   178   000F9E                     PIR1            equ	3998	;# 
   179   000F9F                     IPR1            equ	3999	;# 
   180   000FA0                     PIE2            equ	4000	;# 
   181   000FA1                     PIR2            equ	4001	;# 
   182   000FA2                     IPR2            equ	4002	;# 
   183   000FA6                     EECON1          equ	4006	;# 
   184   000FA7                     EECON2          equ	4007	;# 
   185   000FA8                     EEDATA          equ	4008	;# 
   186   000FA9                     EEADR           equ	4009	;# 
   187   000FAB                     RCSTA           equ	4011	;# 
   188   000FAB                     RCSTA1          equ	4011	;# 
   189   000FAC                     TXSTA           equ	4012	;# 
   190   000FAC                     TXSTA1          equ	4012	;# 
   191   000FAD                     TXREG           equ	4013	;# 
   192   000FAD                     TXREG1          equ	4013	;# 
   193   000FAE                     RCREG           equ	4014	;# 
   194   000FAE                     RCREG1          equ	4014	;# 
   195   000FAF                     SPBRG           equ	4015	;# 
   196   000FAF                     SPBRG1          equ	4015	;# 
   197   000FB0                     SPBRGH          equ	4016	;# 
   198   000FB1                     T3CON           equ	4017	;# 
   199   000FB2                     TMR3            equ	4018	;# 
   200   000FB2                     TMR3L           equ	4018	;# 
   201   000FB3                     TMR3H           equ	4019	;# 
   202   000FB4                     CMCON           equ	4020	;# 
   203   000FB5                     CVRCON          equ	4021	;# 
   204   000FB6                     ECCP1AS         equ	4022	;# 
   205   000FB6                     CCP1AS          equ	4022	;# 
   206   000FB7                     ECCP1DEL        equ	4023	;# 
   207   000FB7                     CCP1DEL         equ	4023	;# 
   208   000FB8                     BAUDCON         equ	4024	;# 
   209   000FB8                     BAUDCTL         equ	4024	;# 
   210   000FBA                     CCP2CON         equ	4026	;# 
   211   000FBB                     CCPR2           equ	4027	;# 
   212   000FBB                     CCPR2L          equ	4027	;# 
   213   000FBC                     CCPR2H          equ	4028	;# 
   214   000FBD                     CCP1CON         equ	4029	;# 
   215   000FBD                     ECCP1CON        equ	4029	;# 
   216   000FBE                     CCPR1           equ	4030	;# 
   217   000FBE                     CCPR1L          equ	4030	;# 
   218   000FBF                     CCPR1H          equ	4031	;# 
   219   000FC0                     ADCON2          equ	4032	;# 
   220   000FC1                     ADCON1          equ	4033	;# 
   221   000FC2                     ADCON0          equ	4034	;# 
   222   000FC3                     ADRES           equ	4035	;# 
   223   000FC3                     ADRESL          equ	4035	;# 
   224   000FC4                     ADRESH          equ	4036	;# 
   225   000FC5                     SSPCON2         equ	4037	;# 
   226   000FC6                     SSPCON1         equ	4038	;# 
   227   000FC7                     SSPSTAT         equ	4039	;# 
   228   000FC8                     SSPADD          equ	4040	;# 
   229   000FC9                     SSPBUF          equ	4041	;# 
   230   000FCA                     T2CON           equ	4042	;# 
   231   000FCB                     PR2             equ	4043	;# 
   232   000FCB                     MEMCON          equ	4043	;# 
   233   000FCC                     TMR2            equ	4044	;# 
   234   000FCD                     T1CON           equ	4045	;# 
   235   000FCE                     TMR1            equ	4046	;# 
   236   000FCE                     TMR1L           equ	4046	;# 
   237   000FCF                     TMR1H           equ	4047	;# 
   238   000FD0                     RCON            equ	4048	;# 
   239   000FD1                     WDTCON          equ	4049	;# 
   240   000FD2                     HLVDCON         equ	4050	;# 
   241   000FD2                     LVDCON          equ	4050	;# 
   242   000FD3                     OSCCON          equ	4051	;# 
   243   000FD5                     T0CON           equ	4053	;# 
   244   000FD6                     TMR0            equ	4054	;# 
   245   000FD6                     TMR0L           equ	4054	;# 
   246   000FD7                     TMR0H           equ	4055	;# 
   247   000FD8                     STATUS          equ	4056	;# 
   248   000FD9                     FSR2            equ	4057	;# 
   249   000FD9                     FSR2L           equ	4057	;# 
   250   000FDA                     FSR2H           equ	4058	;# 
   251   000FDB                     PLUSW2          equ	4059	;# 
   252   000FDC                     PREINC2         equ	4060	;# 
   253   000FDD                     POSTDEC2        equ	4061	;# 
   254   000FDE                     POSTINC2        equ	4062	;# 
   255   000FDF                     INDF2           equ	4063	;# 
   256   000FE0                     BSR             equ	4064	;# 
   257   000FE1                     FSR1            equ	4065	;# 
   258   000FE1                     FSR1L           equ	4065	;# 
   259   000FE2                     FSR1H           equ	4066	;# 
   260   000FE3                     PLUSW1          equ	4067	;# 
   261   000FE4                     PREINC1         equ	4068	;# 
   262   000FE5                     POSTDEC1        equ	4069	;# 
   263   000FE6                     POSTINC1        equ	4070	;# 
   264   000FE7                     INDF1           equ	4071	;# 
   265   000FE8                     WREG            equ	4072	;# 
   266   000FE9                     FSR0            equ	4073	;# 
   267   000FE9                     FSR0L           equ	4073	;# 
   268   000FEA                     FSR0H           equ	4074	;# 
   269   000FEB                     PLUSW0          equ	4075	;# 
   270   000FEC                     PREINC0         equ	4076	;# 
   271   000FED                     POSTDEC0        equ	4077	;# 
   272   000FEE                     POSTINC0        equ	4078	;# 
   273   000FEF                     INDF0           equ	4079	;# 
   274   000FF0                     INTCON3         equ	4080	;# 
   275   000FF1                     INTCON2         equ	4081	;# 
   276   000FF2                     INTCON          equ	4082	;# 
   277   000FF3                     PROD            equ	4083	;# 
   278   000FF3                     PRODL           equ	4083	;# 
   279   000FF4                     PRODH           equ	4084	;# 
   280   000FF5                     TABLAT          equ	4085	;# 
   281   000FF6                     TBLPTR          equ	4086	;# 
   282   000FF6                     TBLPTRL         equ	4086	;# 
   283   000FF7                     TBLPTRH         equ	4087	;# 
   284   000FF8                     TBLPTRU         equ	4088	;# 
   285   000FF9                     PCLAT           equ	4089	;# 
   286   000FF9                     PC              equ	4089	;# 
   287   000FF9                     PCL             equ	4089	;# 
   288   000FFA                     PCLATH          equ	4090	;# 
   289   000FFB                     PCLATU          equ	4091	;# 
   290   000FFC                     STKPTR          equ	4092	;# 
   291   000FFD                     TOS             equ	4093	;# 
   292   000FFD                     TOSL            equ	4093	;# 
   293   000FFE                     TOSH            equ	4094	;# 
   294   000FFF                     TOSU            equ	4095	;# 
   295   000F62                     SPPDATA         equ	3938	;# 
   296   000F63                     SPPCFG          equ	3939	;# 
   297   000F64                     SPPEPS          equ	3940	;# 
   298   000F65                     SPPCON          equ	3941	;# 
   299   000F66                     UFRM            equ	3942	;# 
   300   000F66                     UFRML           equ	3942	;# 
   301   000F67                     UFRMH           equ	3943	;# 
   302   000F68                     UIR             equ	3944	;# 
   303   000F69                     UIE             equ	3945	;# 
   304   000F6A                     UEIR            equ	3946	;# 
   305   000F6B                     UEIE            equ	3947	;# 
   306   000F6C                     USTAT           equ	3948	;# 
   307   000F6D                     UCON            equ	3949	;# 
   308   000F6E                     UADDR           equ	3950	;# 
   309   000F6F                     UCFG            equ	3951	;# 
   310   000F70                     UEP0            equ	3952	;# 
   311   000F71                     UEP1            equ	3953	;# 
   312   000F72                     UEP2            equ	3954	;# 
   313   000F73                     UEP3            equ	3955	;# 
   314   000F74                     UEP4            equ	3956	;# 
   315   000F75                     UEP5            equ	3957	;# 
   316   000F76                     UEP6            equ	3958	;# 
   317   000F77                     UEP7            equ	3959	;# 
   318   000F78                     UEP8            equ	3960	;# 
   319   000F79                     UEP9            equ	3961	;# 
   320   000F7A                     UEP10           equ	3962	;# 
   321   000F7B                     UEP11           equ	3963	;# 
   322   000F7C                     UEP12           equ	3964	;# 
   323   000F7D                     UEP13           equ	3965	;# 
   324   000F7E                     UEP14           equ	3966	;# 
   325   000F7F                     UEP15           equ	3967	;# 
   326   000F80                     PORTA           equ	3968	;# 
   327   000F81                     PORTB           equ	3969	;# 
   328   000F82                     PORTC           equ	3970	;# 
   329   000F83                     PORTD           equ	3971	;# 
   330   000F84                     PORTE           equ	3972	;# 
   331   000F89                     LATA            equ	3977	;# 
   332   000F8A                     LATB            equ	3978	;# 
   333   000F8B                     LATC            equ	3979	;# 
   334   000F8C                     LATD            equ	3980	;# 
   335   000F8D                     LATE            equ	3981	;# 
   336   000F92                     TRISA           equ	3986	;# 
   337   000F92                     DDRA            equ	3986	;# 
   338   000F93                     TRISB           equ	3987	;# 
   339   000F93                     DDRB            equ	3987	;# 
   340   000F94                     TRISC           equ	3988	;# 
   341   000F94                     DDRC            equ	3988	;# 
   342   000F95                     TRISD           equ	3989	;# 
   343   000F95                     DDRD            equ	3989	;# 
   344   000F96                     TRISE           equ	3990	;# 
   345   000F96                     DDRE            equ	3990	;# 
   346   000F9B                     OSCTUNE         equ	3995	;# 
   347   000F9D                     PIE1            equ	3997	;# 
   348   000F9E                     PIR1            equ	3998	;# 
   349   000F9F                     IPR1            equ	3999	;# 
   350   000FA0                     PIE2            equ	4000	;# 
   351   000FA1                     PIR2            equ	4001	;# 
   352   000FA2                     IPR2            equ	4002	;# 
   353   000FA6                     EECON1          equ	4006	;# 
   354   000FA7                     EECON2          equ	4007	;# 
   355   000FA8                     EEDATA          equ	4008	;# 
   356   000FA9                     EEADR           equ	4009	;# 
   357   000FAB                     RCSTA           equ	4011	;# 
   358   000FAB                     RCSTA1          equ	4011	;# 
   359   000FAC                     TXSTA           equ	4012	;# 
   360   000FAC                     TXSTA1          equ	4012	;# 
   361   000FAD                     TXREG           equ	4013	;# 
   362   000FAD                     TXREG1          equ	4013	;# 
   363   000FAE                     RCREG           equ	4014	;# 
   364   000FAE                     RCREG1          equ	4014	;# 
   365   000FAF                     SPBRG           equ	4015	;# 
   366   000FAF                     SPBRG1          equ	4015	;# 
   367   000FB0                     SPBRGH          equ	4016	;# 
   368   000FB1                     T3CON           equ	4017	;# 
   369   000FB2                     TMR3            equ	4018	;# 
   370   000FB2                     TMR3L           equ	4018	;# 
   371   000FB3                     TMR3H           equ	4019	;# 
   372   000FB4                     CMCON           equ	4020	;# 
   373   000FB5                     CVRCON          equ	4021	;# 
   374   000FB6                     ECCP1AS         equ	4022	;# 
   375   000FB6                     CCP1AS          equ	4022	;# 
   376   000FB7                     ECCP1DEL        equ	4023	;# 
   377   000FB7                     CCP1DEL         equ	4023	;# 
   378   000FB8                     BAUDCON         equ	4024	;# 
   379   000FB8                     BAUDCTL         equ	4024	;# 
   380   000FBA                     CCP2CON         equ	4026	;# 
   381   000FBB                     CCPR2           equ	4027	;# 
   382   000FBB                     CCPR2L          equ	4027	;# 
   383   000FBC                     CCPR2H          equ	4028	;# 
   384   000FBD                     CCP1CON         equ	4029	;# 
   385   000FBD                     ECCP1CON        equ	4029	;# 
   386   000FBE                     CCPR1           equ	4030	;# 
   387   000FBE                     CCPR1L          equ	4030	;# 
   388   000FBF                     CCPR1H          equ	4031	;# 
   389   000FC0                     ADCON2          equ	4032	;# 
   390   000FC1                     ADCON1          equ	4033	;# 
   391   000FC2                     ADCON0          equ	4034	;# 
   392   000FC3                     ADRES           equ	4035	;# 
   393   000FC3                     ADRESL          equ	4035	;# 
   394   000FC4                     ADRESH          equ	4036	;# 
   395   000FC5                     SSPCON2         equ	4037	;# 
   396   000FC6                     SSPCON1         equ	4038	;# 
   397   000FC7                     SSPSTAT         equ	4039	;# 
   398   000FC8                     SSPADD          equ	4040	;# 
   399   000FC9                     SSPBUF          equ	4041	;# 
   400   000FCA                     T2CON           equ	4042	;# 
   401   000FCB                     PR2             equ	4043	;# 
   402   000FCB                     MEMCON          equ	4043	;# 
   403   000FCC                     TMR2            equ	4044	;# 
   404   000FCD                     T1CON           equ	4045	;# 
   405   000FCE                     TMR1            equ	4046	;# 
   406   000FCE                     TMR1L           equ	4046	;# 
   407   000FCF                     TMR1H           equ	4047	;# 
   408   000FD0                     RCON            equ	4048	;# 
   409   000FD1                     WDTCON          equ	4049	;# 
   410   000FD2                     HLVDCON         equ	4050	;# 
   411   000FD2                     LVDCON          equ	4050	;# 
   412   000FD3                     OSCCON          equ	4051	;# 
   413   000FD5                     T0CON           equ	4053	;# 
   414   000FD6                     TMR0            equ	4054	;# 
   415   000FD6                     TMR0L           equ	4054	;# 
   416   000FD7                     TMR0H           equ	4055	;# 
   417   000FD8                     STATUS          equ	4056	;# 
   418   000FD9                     FSR2            equ	4057	;# 
   419   000FD9                     FSR2L           equ	4057	;# 
   420   000FDA                     FSR2H           equ	4058	;# 
   421   000FDB                     PLUSW2          equ	4059	;# 
   422   000FDC                     PREINC2         equ	4060	;# 
   423   000FDD                     POSTDEC2        equ	4061	;# 
   424   000FDE                     POSTINC2        equ	4062	;# 
   425   000FDF                     INDF2           equ	4063	;# 
   426   000FE0                     BSR             equ	4064	;# 
   427   000FE1                     FSR1            equ	4065	;# 
   428   000FE1                     FSR1L           equ	4065	;# 
   429   000FE2                     FSR1H           equ	4066	;# 
   430   000FE3                     PLUSW1          equ	4067	;# 
   431   000FE4                     PREINC1         equ	4068	;# 
   432   000FE5                     POSTDEC1        equ	4069	;# 
   433   000FE6                     POSTINC1        equ	4070	;# 
   434   000FE7                     INDF1           equ	4071	;# 
   435   000FE8                     WREG            equ	4072	;# 
   436   000FE9                     FSR0            equ	4073	;# 
   437   000FE9                     FSR0L           equ	4073	;# 
   438   000FEA                     FSR0H           equ	4074	;# 
   439   000FEB                     PLUSW0          equ	4075	;# 
   440   000FEC                     PREINC0         equ	4076	;# 
   441   000FED                     POSTDEC0        equ	4077	;# 
   442   000FEE                     POSTINC0        equ	4078	;# 
   443   000FEF                     INDF0           equ	4079	;# 
   444   000FF0                     INTCON3         equ	4080	;# 
   445   000FF1                     INTCON2         equ	4081	;# 
   446   000FF2                     INTCON          equ	4082	;# 
   447   000FF3                     PROD            equ	4083	;# 
   448   000FF3                     PRODL           equ	4083	;# 
   449   000FF4                     PRODH           equ	4084	;# 
   450   000FF5                     TABLAT          equ	4085	;# 
   451   000FF6                     TBLPTR          equ	4086	;# 
   452   000FF6                     TBLPTRL         equ	4086	;# 
   453   000FF7                     TBLPTRH         equ	4087	;# 
   454   000FF8                     TBLPTRU         equ	4088	;# 
   455   000FF9                     PCLAT           equ	4089	;# 
   456   000FF9                     PC              equ	4089	;# 
   457   000FF9                     PCL             equ	4089	;# 
   458   000FFA                     PCLATH          equ	4090	;# 
   459   000FFB                     PCLATU          equ	4091	;# 
   460   000FFC                     STKPTR          equ	4092	;# 
   461   000FFD                     TOS             equ	4093	;# 
   462   000FFD                     TOSL            equ	4093	;# 
   463   000FFE                     TOSH            equ	4094	;# 
   464   000FFF                     TOSU            equ	4095	;# 
   465   000F62                     SPPDATA         equ	3938	;# 
   466   000F63                     SPPCFG          equ	3939	;# 
   467   000F64                     SPPEPS          equ	3940	;# 
   468   000F65                     SPPCON          equ	3941	;# 
   469   000F66                     UFRM            equ	3942	;# 
   470   000F66                     UFRML           equ	3942	;# 
   471   000F67                     UFRMH           equ	3943	;# 
   472   000F68                     UIR             equ	3944	;# 
   473   000F69                     UIE             equ	3945	;# 
   474   000F6A                     UEIR            equ	3946	;# 
   475   000F6B                     UEIE            equ	3947	;# 
   476   000F6C                     USTAT           equ	3948	;# 
   477   000F6D                     UCON            equ	3949	;# 
   478   000F6E                     UADDR           equ	3950	;# 
   479   000F6F                     UCFG            equ	3951	;# 
   480   000F70                     UEP0            equ	3952	;# 
   481   000F71                     UEP1            equ	3953	;# 
   482   000F72                     UEP2            equ	3954	;# 
   483   000F73                     UEP3            equ	3955	;# 
   484   000F74                     UEP4            equ	3956	;# 
   485   000F75                     UEP5            equ	3957	;# 
   486   000F76                     UEP6            equ	3958	;# 
   487   000F77                     UEP7            equ	3959	;# 
   488   000F78                     UEP8            equ	3960	;# 
   489   000F79                     UEP9            equ	3961	;# 
   490   000F7A                     UEP10           equ	3962	;# 
   491   000F7B                     UEP11           equ	3963	;# 
   492   000F7C                     UEP12           equ	3964	;# 
   493   000F7D                     UEP13           equ	3965	;# 
   494   000F7E                     UEP14           equ	3966	;# 
   495   000F7F                     UEP15           equ	3967	;# 
   496   000F80                     PORTA           equ	3968	;# 
   497   000F81                     PORTB           equ	3969	;# 
   498   000F82                     PORTC           equ	3970	;# 
   499   000F83                     PORTD           equ	3971	;# 
   500   000F84                     PORTE           equ	3972	;# 
   501   000F89                     LATA            equ	3977	;# 
   502   000F8A                     LATB            equ	3978	;# 
   503   000F8B                     LATC            equ	3979	;# 
   504   000F8C                     LATD            equ	3980	;# 
   505   000F8D                     LATE            equ	3981	;# 
   506   000F92                     TRISA           equ	3986	;# 
   507   000F92                     DDRA            equ	3986	;# 
   508   000F93                     TRISB           equ	3987	;# 
   509   000F93                     DDRB            equ	3987	;# 
   510   000F94                     TRISC           equ	3988	;# 
   511   000F94                     DDRC            equ	3988	;# 
   512   000F95                     TRISD           equ	3989	;# 
   513   000F95                     DDRD            equ	3989	;# 
   514   000F96                     TRISE           equ	3990	;# 
   515   000F96                     DDRE            equ	3990	;# 
   516   000F9B                     OSCTUNE         equ	3995	;# 
   517   000F9D                     PIE1            equ	3997	;# 
   518   000F9E                     PIR1            equ	3998	;# 
   519   000F9F                     IPR1            equ	3999	;# 
   520   000FA0                     PIE2            equ	4000	;# 
   521   000FA1                     PIR2            equ	4001	;# 
   522   000FA2                     IPR2            equ	4002	;# 
   523   000FA6                     EECON1          equ	4006	;# 
   524   000FA7                     EECON2          equ	4007	;# 
   525   000FA8                     EEDATA          equ	4008	;# 
   526   000FA9                     EEADR           equ	4009	;# 
   527   000FAB                     RCSTA           equ	4011	;# 
   528   000FAB                     RCSTA1          equ	4011	;# 
   529   000FAC                     TXSTA           equ	4012	;# 
   530   000FAC                     TXSTA1          equ	4012	;# 
   531   000FAD                     TXREG           equ	4013	;# 
   532   000FAD                     TXREG1          equ	4013	;# 
   533   000FAE                     RCREG           equ	4014	;# 
   534   000FAE                     RCREG1          equ	4014	;# 
   535   000FAF                     SPBRG           equ	4015	;# 
   536   000FAF                     SPBRG1          equ	4015	;# 
   537   000FB0                     SPBRGH          equ	4016	;# 
   538   000FB1                     T3CON           equ	4017	;# 
   539   000FB2                     TMR3            equ	4018	;# 
   540   000FB2                     TMR3L           equ	4018	;# 
   541   000FB3                     TMR3H           equ	4019	;# 
   542   000FB4                     CMCON           equ	4020	;# 
   543   000FB5                     CVRCON          equ	4021	;# 
   544   000FB6                     ECCP1AS         equ	4022	;# 
   545   000FB6                     CCP1AS          equ	4022	;# 
   546   000FB7                     ECCP1DEL        equ	4023	;# 
   547   000FB7                     CCP1DEL         equ	4023	;# 
   548   000FB8                     BAUDCON         equ	4024	;# 
   549   000FB8                     BAUDCTL         equ	4024	;# 
   550   000FBA                     CCP2CON         equ	4026	;# 
   551   000FBB                     CCPR2           equ	4027	;# 
   552   000FBB                     CCPR2L          equ	4027	;# 
   553   000FBC                     CCPR2H          equ	4028	;# 
   554   000FBD                     CCP1CON         equ	4029	;# 
   555   000FBD                     ECCP1CON        equ	4029	;# 
   556   000FBE                     CCPR1           equ	4030	;# 
   557   000FBE                     CCPR1L          equ	4030	;# 
   558   000FBF                     CCPR1H          equ	4031	;# 
   559   000FC0                     ADCON2          equ	4032	;# 
   560   000FC1                     ADCON1          equ	4033	;# 
   561   000FC2                     ADCON0          equ	4034	;# 
   562   000FC3                     ADRES           equ	4035	;# 
   563   000FC3                     ADRESL          equ	4035	;# 
   564   000FC4                     ADRESH          equ	4036	;# 
   565   000FC5                     SSPCON2         equ	4037	;# 
   566   000FC6                     SSPCON1         equ	4038	;# 
   567   000FC7                     SSPSTAT         equ	4039	;# 
   568   000FC8                     SSPADD          equ	4040	;# 
   569   000FC9                     SSPBUF          equ	4041	;# 
   570   000FCA                     T2CON           equ	4042	;# 
   571   000FCB                     PR2             equ	4043	;# 
   572   000FCB                     MEMCON          equ	4043	;# 
   573   000FCC                     TMR2            equ	4044	;# 
   574   000FCD                     T1CON           equ	4045	;# 
   575   000FCE                     TMR1            equ	4046	;# 
   576   000FCE                     TMR1L           equ	4046	;# 
   577   000FCF                     TMR1H           equ	4047	;# 
   578   000FD0                     RCON            equ	4048	;# 
   579   000FD1                     WDTCON          equ	4049	;# 
   580   000FD2                     HLVDCON         equ	4050	;# 
   581   000FD2                     LVDCON          equ	4050	;# 
   582   000FD3                     OSCCON          equ	4051	;# 
   583   000FD5                     T0CON           equ	4053	;# 
   584   000FD6                     TMR0            equ	4054	;# 
   585   000FD6                     TMR0L           equ	4054	;# 
   586   000FD7                     TMR0H           equ	4055	;# 
   587   000FD8                     STATUS          equ	4056	;# 
   588   000FD9                     FSR2            equ	4057	;# 
   589   000FD9                     FSR2L           equ	4057	;# 
   590   000FDA                     FSR2H           equ	4058	;# 
   591   000FDB                     PLUSW2          equ	4059	;# 
   592   000FDC                     PREINC2         equ	4060	;# 
   593   000FDD                     POSTDEC2        equ	4061	;# 
   594   000FDE                     POSTINC2        equ	4062	;# 
   595   000FDF                     INDF2           equ	4063	;# 
   596   000FE0                     BSR             equ	4064	;# 
   597   000FE1                     FSR1            equ	4065	;# 
   598   000FE1                     FSR1L           equ	4065	;# 
   599   000FE2                     FSR1H           equ	4066	;# 
   600   000FE3                     PLUSW1          equ	4067	;# 
   601   000FE4                     PREINC1         equ	4068	;# 
   602   000FE5                     POSTDEC1        equ	4069	;# 
   603   000FE6                     POSTINC1        equ	4070	;# 
   604   000FE7                     INDF1           equ	4071	;# 
   605   000FE8                     WREG            equ	4072	;# 
   606   000FE9                     FSR0            equ	4073	;# 
   607   000FE9                     FSR0L           equ	4073	;# 
   608   000FEA                     FSR0H           equ	4074	;# 
   609   000FEB                     PLUSW0          equ	4075	;# 
   610   000FEC                     PREINC0         equ	4076	;# 
   611   000FED                     POSTDEC0        equ	4077	;# 
   612   000FEE                     POSTINC0        equ	4078	;# 
   613   000FEF                     INDF0           equ	4079	;# 
   614   000FF0                     INTCON3         equ	4080	;# 
   615   000FF1                     INTCON2         equ	4081	;# 
   616   000FF2                     INTCON          equ	4082	;# 
   617   000FF3                     PROD            equ	4083	;# 
   618   000FF3                     PRODL           equ	4083	;# 
   619   000FF4                     PRODH           equ	4084	;# 
   620   000FF5                     TABLAT          equ	4085	;# 
   621   000FF6                     TBLPTR          equ	4086	;# 
   622   000FF6                     TBLPTRL         equ	4086	;# 
   623   000FF7                     TBLPTRH         equ	4087	;# 
   624   000FF8                     TBLPTRU         equ	4088	;# 
   625   000FF9                     PCLAT           equ	4089	;# 
   626   000FF9                     PC              equ	4089	;# 
   627   000FF9                     PCL             equ	4089	;# 
   628   000FFA                     PCLATH          equ	4090	;# 
   629   000FFB                     PCLATU          equ	4091	;# 
   630   000FFC                     STKPTR          equ	4092	;# 
   631   000FFD                     TOS             equ	4093	;# 
   632   000FFD                     TOSL            equ	4093	;# 
   633   000FFE                     TOSH            equ	4094	;# 
   634   000FFF                     TOSU            equ	4095	;# 
   635   000F62                     SPPDATA         equ	3938	;# 
   636   000F63                     SPPCFG          equ	3939	;# 
   637   000F64                     SPPEPS          equ	3940	;# 
   638   000F65                     SPPCON          equ	3941	;# 
   639   000F66                     UFRM            equ	3942	;# 
   640   000F66                     UFRML           equ	3942	;# 
   641   000F67                     UFRMH           equ	3943	;# 
   642   000F68                     UIR             equ	3944	;# 
   643   000F69                     UIE             equ	3945	;# 
   644   000F6A                     UEIR            equ	3946	;# 
   645   000F6B                     UEIE            equ	3947	;# 
   646   000F6C                     USTAT           equ	3948	;# 
   647   000F6D                     UCON            equ	3949	;# 
   648   000F6E                     UADDR           equ	3950	;# 
   649   000F6F                     UCFG            equ	3951	;# 
   650   000F70                     UEP0            equ	3952	;# 
   651   000F71                     UEP1            equ	3953	;# 
   652   000F72                     UEP2            equ	3954	;# 
   653   000F73                     UEP3            equ	3955	;# 
   654   000F74                     UEP4            equ	3956	;# 
   655   000F75                     UEP5            equ	3957	;# 
   656   000F76                     UEP6            equ	3958	;# 
   657   000F77                     UEP7            equ	3959	;# 
   658   000F78                     UEP8            equ	3960	;# 
   659   000F79                     UEP9            equ	3961	;# 
   660   000F7A                     UEP10           equ	3962	;# 
   661   000F7B                     UEP11           equ	3963	;# 
   662   000F7C                     UEP12           equ	3964	;# 
   663   000F7D                     UEP13           equ	3965	;# 
   664   000F7E                     UEP14           equ	3966	;# 
   665   000F7F                     UEP15           equ	3967	;# 
   666   000F80                     PORTA           equ	3968	;# 
   667   000F81                     PORTB           equ	3969	;# 
   668   000F82                     PORTC           equ	3970	;# 
   669   000F83                     PORTD           equ	3971	;# 
   670   000F84                     PORTE           equ	3972	;# 
   671   000F89                     LATA            equ	3977	;# 
   672   000F8A                     LATB            equ	3978	;# 
   673   000F8B                     LATC            equ	3979	;# 
   674   000F8C                     LATD            equ	3980	;# 
   675   000F8D                     LATE            equ	3981	;# 
   676   000F92                     TRISA           equ	3986	;# 
   677   000F92                     DDRA            equ	3986	;# 
   678   000F93                     TRISB           equ	3987	;# 
   679   000F93                     DDRB            equ	3987	;# 
   680   000F94                     TRISC           equ	3988	;# 
   681   000F94                     DDRC            equ	3988	;# 
   682   000F95                     TRISD           equ	3989	;# 
   683   000F95                     DDRD            equ	3989	;# 
   684   000F96                     TRISE           equ	3990	;# 
   685   000F96                     DDRE            equ	3990	;# 
   686   000F9B                     OSCTUNE         equ	3995	;# 
   687   000F9D                     PIE1            equ	3997	;# 
   688   000F9E                     PIR1            equ	3998	;# 
   689   000F9F                     IPR1            equ	3999	;# 
   690   000FA0                     PIE2            equ	4000	;# 
   691   000FA1                     PIR2            equ	4001	;# 
   692   000FA2                     IPR2            equ	4002	;# 
   693   000FA6                     EECON1          equ	4006	;# 
   694   000FA7                     EECON2          equ	4007	;# 
   695   000FA8                     EEDATA          equ	4008	;# 
   696   000FA9                     EEADR           equ	4009	;# 
   697   000FAB                     RCSTA           equ	4011	;# 
   698   000FAB                     RCSTA1          equ	4011	;# 
   699   000FAC                     TXSTA           equ	4012	;# 
   700   000FAC                     TXSTA1          equ	4012	;# 
   701   000FAD                     TXREG           equ	4013	;# 
   702   000FAD                     TXREG1          equ	4013	;# 
   703   000FAE                     RCREG           equ	4014	;# 
   704   000FAE                     RCREG1          equ	4014	;# 
   705   000FAF                     SPBRG           equ	4015	;# 
   706   000FAF                     SPBRG1          equ	4015	;# 
   707   000FB0                     SPBRGH          equ	4016	;# 
   708   000FB1                     T3CON           equ	4017	;# 
   709   000FB2                     TMR3            equ	4018	;# 
   710   000FB2                     TMR3L           equ	4018	;# 
   711   000FB3                     TMR3H           equ	4019	;# 
   712   000FB4                     CMCON           equ	4020	;# 
   713   000FB5                     CVRCON          equ	4021	;# 
   714   000FB6                     ECCP1AS         equ	4022	;# 
   715   000FB6                     CCP1AS          equ	4022	;# 
   716   000FB7                     ECCP1DEL        equ	4023	;# 
   717   000FB7                     CCP1DEL         equ	4023	;# 
   718   000FB8                     BAUDCON         equ	4024	;# 
   719   000FB8                     BAUDCTL         equ	4024	;# 
   720   000FBA                     CCP2CON         equ	4026	;# 
   721   000FBB                     CCPR2           equ	4027	;# 
   722   000FBB                     CCPR2L          equ	4027	;# 
   723   000FBC                     CCPR2H          equ	4028	;# 
   724   000FBD                     CCP1CON         equ	4029	;# 
   725   000FBD                     ECCP1CON        equ	4029	;# 
   726   000FBE                     CCPR1           equ	4030	;# 
   727   000FBE                     CCPR1L          equ	4030	;# 
   728   000FBF                     CCPR1H          equ	4031	;# 
   729   000FC0                     ADCON2          equ	4032	;# 
   730   000FC1                     ADCON1          equ	4033	;# 
   731   000FC2                     ADCON0          equ	4034	;# 
   732   000FC3                     ADRES           equ	4035	;# 
   733   000FC3                     ADRESL          equ	4035	;# 
   734   000FC4                     ADRESH          equ	4036	;# 
   735   000FC5                     SSPCON2         equ	4037	;# 
   736   000FC6                     SSPCON1         equ	4038	;# 
   737   000FC7                     SSPSTAT         equ	4039	;# 
   738   000FC8                     SSPADD          equ	4040	;# 
   739   000FC9                     SSPBUF          equ	4041	;# 
   740   000FCA                     T2CON           equ	4042	;# 
   741   000FCB                     PR2             equ	4043	;# 
   742   000FCB                     MEMCON          equ	4043	;# 
   743   000FCC                     TMR2            equ	4044	;# 
   744   000FCD                     T1CON           equ	4045	;# 
   745   000FCE                     TMR1            equ	4046	;# 
   746   000FCE                     TMR1L           equ	4046	;# 
   747   000FCF                     TMR1H           equ	4047	;# 
   748   000FD0                     RCON            equ	4048	;# 
   749   000FD1                     WDTCON          equ	4049	;# 
   750   000FD2                     HLVDCON         equ	4050	;# 
   751   000FD2                     LVDCON          equ	4050	;# 
   752   000FD3                     OSCCON          equ	4051	;# 
   753   000FD5                     T0CON           equ	4053	;# 
   754   000FD6                     TMR0            equ	4054	;# 
   755   000FD6                     TMR0L           equ	4054	;# 
   756   000FD7                     TMR0H           equ	4055	;# 
   757   000FD8                     STATUS          equ	4056	;# 
   758   000FD9                     FSR2            equ	4057	;# 
   759   000FD9                     FSR2L           equ	4057	;# 
   760   000FDA                     FSR2H           equ	4058	;# 
   761   000FDB                     PLUSW2          equ	4059	;# 
   762   000FDC                     PREINC2         equ	4060	;# 
   763   000FDD                     POSTDEC2        equ	4061	;# 
   764   000FDE                     POSTINC2        equ	4062	;# 
   765   000FDF                     INDF2           equ	4063	;# 
   766   000FE0                     BSR             equ	4064	;# 
   767   000FE1                     FSR1            equ	4065	;# 
   768   000FE1                     FSR1L           equ	4065	;# 
   769   000FE2                     FSR1H           equ	4066	;# 
   770   000FE3                     PLUSW1          equ	4067	;# 
   771   000FE4                     PREINC1         equ	4068	;# 
   772   000FE5                     POSTDEC1        equ	4069	;# 
   773   000FE6                     POSTINC1        equ	4070	;# 
   774   000FE7                     INDF1           equ	4071	;# 
   775   000FE8                     WREG            equ	4072	;# 
   776   000FE9                     FSR0            equ	4073	;# 
   777   000FE9                     FSR0L           equ	4073	;# 
   778   000FEA                     FSR0H           equ	4074	;# 
   779   000FEB                     PLUSW0          equ	4075	;# 
   780   000FEC                     PREINC0         equ	4076	;# 
   781   000FED                     POSTDEC0        equ	4077	;# 
   782   000FEE                     POSTINC0        equ	4078	;# 
   783   000FEF                     INDF0           equ	4079	;# 
   784   000FF0                     INTCON3         equ	4080	;# 
   785   000FF1                     INTCON2         equ	4081	;# 
   786   000FF2                     INTCON          equ	4082	;# 
   787   000FF3                     PROD            equ	4083	;# 
   788   000FF3                     PRODL           equ	4083	;# 
   789   000FF4                     PRODH           equ	4084	;# 
   790   000FF5                     TABLAT          equ	4085	;# 
   791   000FF6                     TBLPTR          equ	4086	;# 
   792   000FF6                     TBLPTRL         equ	4086	;# 
   793   000FF7                     TBLPTRH         equ	4087	;# 
   794   000FF8                     TBLPTRU         equ	4088	;# 
   795   000FF9                     PCLAT           equ	4089	;# 
   796   000FF9                     PC              equ	4089	;# 
   797   000FF9                     PCL             equ	4089	;# 
   798   000FFA                     PCLATH          equ	4090	;# 
   799   000FFB                     PCLATU          equ	4091	;# 
   800   000FFC                     STKPTR          equ	4092	;# 
   801   000FFD                     TOS             equ	4093	;# 
   802   000FFD                     TOSL            equ	4093	;# 
   803   000FFE                     TOSH            equ	4094	;# 
   804   000FFF                     TOSU            equ	4095	;# 
   805   000F62                     SPPDATA         equ	3938	;# 
   806   000F63                     SPPCFG          equ	3939	;# 
   807   000F64                     SPPEPS          equ	3940	;# 
   808   000F65                     SPPCON          equ	3941	;# 
   809   000F66                     UFRM            equ	3942	;# 
   810   000F66                     UFRML           equ	3942	;# 
   811   000F67                     UFRMH           equ	3943	;# 
   812   000F68                     UIR             equ	3944	;# 
   813   000F69                     UIE             equ	3945	;# 
   814   000F6A                     UEIR            equ	3946	;# 
   815   000F6B                     UEIE            equ	3947	;# 
   816   000F6C                     USTAT           equ	3948	;# 
   817   000F6D                     UCON            equ	3949	;# 
   818   000F6E                     UADDR           equ	3950	;# 
   819   000F6F                     UCFG            equ	3951	;# 
   820   000F70                     UEP0            equ	3952	;# 
   821   000F71                     UEP1            equ	3953	;# 
   822   000F72                     UEP2            equ	3954	;# 
   823   000F73                     UEP3            equ	3955	;# 
   824   000F74                     UEP4            equ	3956	;# 
   825   000F75                     UEP5            equ	3957	;# 
   826   000F76                     UEP6            equ	3958	;# 
   827   000F77                     UEP7            equ	3959	;# 
   828   000F78                     UEP8            equ	3960	;# 
   829   000F79                     UEP9            equ	3961	;# 
   830   000F7A                     UEP10           equ	3962	;# 
   831   000F7B                     UEP11           equ	3963	;# 
   832   000F7C                     UEP12           equ	3964	;# 
   833   000F7D                     UEP13           equ	3965	;# 
   834   000F7E                     UEP14           equ	3966	;# 
   835   000F7F                     UEP15           equ	3967	;# 
   836   000F80                     PORTA           equ	3968	;# 
   837   000F81                     PORTB           equ	3969	;# 
   838   000F82                     PORTC           equ	3970	;# 
   839   000F83                     PORTD           equ	3971	;# 
   840   000F84                     PORTE           equ	3972	;# 
   841   000F89                     LATA            equ	3977	;# 
   842   000F8A                     LATB            equ	3978	;# 
   843   000F8B                     LATC            equ	3979	;# 
   844   000F8C                     LATD            equ	3980	;# 
   845   000F8D                     LATE            equ	3981	;# 
   846   000F92                     TRISA           equ	3986	;# 
   847   000F92                     DDRA            equ	3986	;# 
   848   000F93                     TRISB           equ	3987	;# 
   849   000F93                     DDRB            equ	3987	;# 
   850   000F94                     TRISC           equ	3988	;# 
   851   000F94                     DDRC            equ	3988	;# 
   852   000F95                     TRISD           equ	3989	;# 
   853   000F95                     DDRD            equ	3989	;# 
   854   000F96                     TRISE           equ	3990	;# 
   855   000F96                     DDRE            equ	3990	;# 
   856   000F9B                     OSCTUNE         equ	3995	;# 
   857   000F9D                     PIE1            equ	3997	;# 
   858   000F9E                     PIR1            equ	3998	;# 
   859   000F9F                     IPR1            equ	3999	;# 
   860   000FA0                     PIE2            equ	4000	;# 
   861   000FA1                     PIR2            equ	4001	;# 
   862   000FA2                     IPR2            equ	4002	;# 
   863   000FA6                     EECON1          equ	4006	;# 
   864   000FA7                     EECON2          equ	4007	;# 
   865   000FA8                     EEDATA          equ	4008	;# 
   866   000FA9                     EEADR           equ	4009	;# 
   867   000FAB                     RCSTA           equ	4011	;# 
   868   000FAB                     RCSTA1          equ	4011	;# 
   869   000FAC                     TXSTA           equ	4012	;# 
   870   000FAC                     TXSTA1          equ	4012	;# 
   871   000FAD                     TXREG           equ	4013	;# 
   872   000FAD                     TXREG1          equ	4013	;# 
   873   000FAE                     RCREG           equ	4014	;# 
   874   000FAE                     RCREG1          equ	4014	;# 
   875   000FAF                     SPBRG           equ	4015	;# 
   876   000FAF                     SPBRG1          equ	4015	;# 
   877   000FB0                     SPBRGH          equ	4016	;# 
   878   000FB1                     T3CON           equ	4017	;# 
   879   000FB2                     TMR3            equ	4018	;# 
   880   000FB2                     TMR3L           equ	4018	;# 
   881   000FB3                     TMR3H           equ	4019	;# 
   882   000FB4                     CMCON           equ	4020	;# 
   883   000FB5                     CVRCON          equ	4021	;# 
   884   000FB6                     ECCP1AS         equ	4022	;# 
   885   000FB6                     CCP1AS          equ	4022	;# 
   886   000FB7                     ECCP1DEL        equ	4023	;# 
   887   000FB7                     CCP1DEL         equ	4023	;# 
   888   000FB8                     BAUDCON         equ	4024	;# 
   889   000FB8                     BAUDCTL         equ	4024	;# 
   890   000FBA                     CCP2CON         equ	4026	;# 
   891   000FBB                     CCPR2           equ	4027	;# 
   892   000FBB                     CCPR2L          equ	4027	;# 
   893   000FBC                     CCPR2H          equ	4028	;# 
   894   000FBD                     CCP1CON         equ	4029	;# 
   895   000FBD                     ECCP1CON        equ	4029	;# 
   896   000FBE                     CCPR1           equ	4030	;# 
   897   000FBE                     CCPR1L          equ	4030	;# 
   898   000FBF                     CCPR1H          equ	4031	;# 
   899   000FC0                     ADCON2          equ	4032	;# 
   900   000FC1                     ADCON1          equ	4033	;# 
   901   000FC2                     ADCON0          equ	4034	;# 
   902   000FC3                     ADRES           equ	4035	;# 
   903   000FC3                     ADRESL          equ	4035	;# 
   904   000FC4                     ADRESH          equ	4036	;# 
   905   000FC5                     SSPCON2         equ	4037	;# 
   906   000FC6                     SSPCON1         equ	4038	;# 
   907   000FC7                     SSPSTAT         equ	4039	;# 
   908   000FC8                     SSPADD          equ	4040	;# 
   909   000FC9                     SSPBUF          equ	4041	;# 
   910   000FCA                     T2CON           equ	4042	;# 
   911   000FCB                     PR2             equ	4043	;# 
   912   000FCB                     MEMCON          equ	4043	;# 
   913   000FCC                     TMR2            equ	4044	;# 
   914   000FCD                     T1CON           equ	4045	;# 
   915   000FCE                     TMR1            equ	4046	;# 
   916   000FCE                     TMR1L           equ	4046	;# 
   917   000FCF                     TMR1H           equ	4047	;# 
   918   000FD0                     RCON            equ	4048	;# 
   919   000FD1                     WDTCON          equ	4049	;# 
   920   000FD2                     HLVDCON         equ	4050	;# 
   921   000FD2                     LVDCON          equ	4050	;# 
   922   000FD3                     OSCCON          equ	4051	;# 
   923   000FD5                     T0CON           equ	4053	;# 
   924   000FD6                     TMR0            equ	4054	;# 
   925   000FD6                     TMR0L           equ	4054	;# 
   926   000FD7                     TMR0H           equ	4055	;# 
   927   000FD8                     STATUS          equ	4056	;# 
   928   000FD9                     FSR2            equ	4057	;# 
   929   000FD9                     FSR2L           equ	4057	;# 
   930   000FDA                     FSR2H           equ	4058	;# 
   931   000FDB                     PLUSW2          equ	4059	;# 
   932   000FDC                     PREINC2         equ	4060	;# 
   933   000FDD                     POSTDEC2        equ	4061	;# 
   934   000FDE                     POSTINC2        equ	4062	;# 
   935   000FDF                     INDF2           equ	4063	;# 
   936   000FE0                     BSR             equ	4064	;# 
   937   000FE1                     FSR1            equ	4065	;# 
   938   000FE1                     FSR1L           equ	4065	;# 
   939   000FE2                     FSR1H           equ	4066	;# 
   940   000FE3                     PLUSW1          equ	4067	;# 
   941   000FE4                     PREINC1         equ	4068	;# 
   942   000FE5                     POSTDEC1        equ	4069	;# 
   943   000FE6                     POSTINC1        equ	4070	;# 
   944   000FE7                     INDF1           equ	4071	;# 
   945   000FE8                     WREG            equ	4072	;# 
   946   000FE9                     FSR0            equ	4073	;# 
   947   000FE9                     FSR0L           equ	4073	;# 
   948   000FEA                     FSR0H           equ	4074	;# 
   949   000FEB                     PLUSW0          equ	4075	;# 
   950   000FEC                     PREINC0         equ	4076	;# 
   951   000FED                     POSTDEC0        equ	4077	;# 
   952   000FEE                     POSTINC0        equ	4078	;# 
   953   000FEF                     INDF0           equ	4079	;# 
   954   000FF0                     INTCON3         equ	4080	;# 
   955   000FF1                     INTCON2         equ	4081	;# 
   956   000FF2                     INTCON          equ	4082	;# 
   957   000FF3                     PROD            equ	4083	;# 
   958   000FF3                     PRODL           equ	4083	;# 
   959   000FF4                     PRODH           equ	4084	;# 
   960   000FF5                     TABLAT          equ	4085	;# 
   961   000FF6                     TBLPTR          equ	4086	;# 
   962   000FF6                     TBLPTRL         equ	4086	;# 
   963   000FF7                     TBLPTRH         equ	4087	;# 
   964   000FF8                     TBLPTRU         equ	4088	;# 
   965   000FF9                     PCLAT           equ	4089	;# 
   966   000FF9                     PC              equ	4089	;# 
   967   000FF9                     PCL             equ	4089	;# 
   968   000FFA                     PCLATH          equ	4090	;# 
   969   000FFB                     PCLATU          equ	4091	;# 
   970   000FFC                     STKPTR          equ	4092	;# 
   971   000FFD                     TOS             equ	4093	;# 
   972   000FFD                     TOSL            equ	4093	;# 
   973   000FFE                     TOSH            equ	4094	;# 
   974   000FFF                     TOSU            equ	4095	;# 
   975   000F62                     SPPDATA         equ	3938	;# 
   976   000F63                     SPPCFG          equ	3939	;# 
   977   000F64                     SPPEPS          equ	3940	;# 
   978   000F65                     SPPCON          equ	3941	;# 
   979   000F66                     UFRM            equ	3942	;# 
   980   000F66                     UFRML           equ	3942	;# 
   981   000F67                     UFRMH           equ	3943	;# 
   982   000F68                     UIR             equ	3944	;# 
   983   000F69                     UIE             equ	3945	;# 
   984   000F6A                     UEIR            equ	3946	;# 
   985   000F6B                     UEIE            equ	3947	;# 
   986   000F6C                     USTAT           equ	3948	;# 
   987   000F6D                     UCON            equ	3949	;# 
   988   000F6E                     UADDR           equ	3950	;# 
   989   000F6F                     UCFG            equ	3951	;# 
   990   000F70                     UEP0            equ	3952	;# 
   991   000F71                     UEP1            equ	3953	;# 
   992   000F72                     UEP2            equ	3954	;# 
   993   000F73                     UEP3            equ	3955	;# 
   994   000F74                     UEP4            equ	3956	;# 
   995   000F75                     UEP5            equ	3957	;# 
   996   000F76                     UEP6            equ	3958	;# 
   997   000F77                     UEP7            equ	3959	;# 
   998   000F78                     UEP8            equ	3960	;# 
   999   000F79                     UEP9            equ	3961	;# 
  1000   000F7A                     UEP10           equ	3962	;# 
  1001   000F7B                     UEP11           equ	3963	;# 
  1002   000F7C                     UEP12           equ	3964	;# 
  1003   000F7D                     UEP13           equ	3965	;# 
  1004   000F7E                     UEP14           equ	3966	;# 
  1005   000F7F                     UEP15           equ	3967	;# 
  1006   000F80                     PORTA           equ	3968	;# 
  1007   000F81                     PORTB           equ	3969	;# 
  1008   000F82                     PORTC           equ	3970	;# 
  1009   000F83                     PORTD           equ	3971	;# 
  1010   000F84                     PORTE           equ	3972	;# 
  1011   000F89                     LATA            equ	3977	;# 
  1012   000F8A                     LATB            equ	3978	;# 
  1013   000F8B                     LATC            equ	3979	;# 
  1014   000F8C                     LATD            equ	3980	;# 
  1015   000F8D                     LATE            equ	3981	;# 
  1016   000F92                     TRISA           equ	3986	;# 
  1017   000F92                     DDRA            equ	3986	;# 
  1018   000F93                     TRISB           equ	3987	;# 
  1019   000F93                     DDRB            equ	3987	;# 
  1020   000F94                     TRISC           equ	3988	;# 
  1021   000F94                     DDRC            equ	3988	;# 
  1022   000F95                     TRISD           equ	3989	;# 
  1023   000F95                     DDRD            equ	3989	;# 
  1024   000F96                     TRISE           equ	3990	;# 
  1025   000F96                     DDRE            equ	3990	;# 
  1026   000F9B                     OSCTUNE         equ	3995	;# 
  1027   000F9D                     PIE1            equ	3997	;# 
  1028   000F9E                     PIR1            equ	3998	;# 
  1029   000F9F                     IPR1            equ	3999	;# 
  1030   000FA0                     PIE2            equ	4000	;# 
  1031   000FA1                     PIR2            equ	4001	;# 
  1032   000FA2                     IPR2            equ	4002	;# 
  1033   000FA6                     EECON1          equ	4006	;# 
  1034   000FA7                     EECON2          equ	4007	;# 
  1035   000FA8                     EEDATA          equ	4008	;# 
  1036   000FA9                     EEADR           equ	4009	;# 
  1037   000FAB                     RCSTA           equ	4011	;# 
  1038   000FAB                     RCSTA1          equ	4011	;# 
  1039   000FAC                     TXSTA           equ	4012	;# 
  1040   000FAC                     TXSTA1          equ	4012	;# 
  1041   000FAD                     TXREG           equ	4013	;# 
  1042   000FAD                     TXREG1          equ	4013	;# 
  1043   000FAE                     RCREG           equ	4014	;# 
  1044   000FAE                     RCREG1          equ	4014	;# 
  1045   000FAF                     SPBRG           equ	4015	;# 
  1046   000FAF                     SPBRG1          equ	4015	;# 
  1047   000FB0                     SPBRGH          equ	4016	;# 
  1048   000FB1                     T3CON           equ	4017	;# 
  1049   000FB2                     TMR3            equ	4018	;# 
  1050   000FB2                     TMR3L           equ	4018	;# 
  1051   000FB3                     TMR3H           equ	4019	;# 
  1052   000FB4                     CMCON           equ	4020	;# 
  1053   000FB5                     CVRCON          equ	4021	;# 
  1054   000FB6                     ECCP1AS         equ	4022	;# 
  1055   000FB6                     CCP1AS          equ	4022	;# 
  1056   000FB7                     ECCP1DEL        equ	4023	;# 
  1057   000FB7                     CCP1DEL         equ	4023	;# 
  1058   000FB8                     BAUDCON         equ	4024	;# 
  1059   000FB8                     BAUDCTL         equ	4024	;# 
  1060   000FBA                     CCP2CON         equ	4026	;# 
  1061   000FBB                     CCPR2           equ	4027	;# 
  1062   000FBB                     CCPR2L          equ	4027	;# 
  1063   000FBC                     CCPR2H          equ	4028	;# 
  1064   000FBD                     CCP1CON         equ	4029	;# 
  1065   000FBD                     ECCP1CON        equ	4029	;# 
  1066   000FBE                     CCPR1           equ	4030	;# 
  1067   000FBE                     CCPR1L          equ	4030	;# 
  1068   000FBF                     CCPR1H          equ	4031	;# 
  1069   000FC0                     ADCON2          equ	4032	;# 
  1070   000FC1                     ADCON1          equ	4033	;# 
  1071   000FC2                     ADCON0          equ	4034	;# 
  1072   000FC3                     ADRES           equ	4035	;# 
  1073   000FC3                     ADRESL          equ	4035	;# 
  1074   000FC4                     ADRESH          equ	4036	;# 
  1075   000FC5                     SSPCON2         equ	4037	;# 
  1076   000FC6                     SSPCON1         equ	4038	;# 
  1077   000FC7                     SSPSTAT         equ	4039	;# 
  1078   000FC8                     SSPADD          equ	4040	;# 
  1079   000FC9                     SSPBUF          equ	4041	;# 
  1080   000FCA                     T2CON           equ	4042	;# 
  1081   000FCB                     PR2             equ	4043	;# 
  1082   000FCB                     MEMCON          equ	4043	;# 
  1083   000FCC                     TMR2            equ	4044	;# 
  1084   000FCD                     T1CON           equ	4045	;# 
  1085   000FCE                     TMR1            equ	4046	;# 
  1086   000FCE                     TMR1L           equ	4046	;# 
  1087   000FCF                     TMR1H           equ	4047	;# 
  1088   000FD0                     RCON            equ	4048	;# 
  1089   000FD1                     WDTCON          equ	4049	;# 
  1090   000FD2                     HLVDCON         equ	4050	;# 
  1091   000FD2                     LVDCON          equ	4050	;# 
  1092   000FD3                     OSCCON          equ	4051	;# 
  1093   000FD5                     T0CON           equ	4053	;# 
  1094   000FD6                     TMR0            equ	4054	;# 
  1095   000FD6                     TMR0L           equ	4054	;# 
  1096   000FD7                     TMR0H           equ	4055	;# 
  1097   000FD8                     STATUS          equ	4056	;# 
  1098   000FD9                     FSR2            equ	4057	;# 
  1099   000FD9                     FSR2L           equ	4057	;# 
  1100   000FDA                     FSR2H           equ	4058	;# 
  1101   000FDB                     PLUSW2          equ	4059	;# 
  1102   000FDC                     PREINC2         equ	4060	;# 
  1103   000FDD                     POSTDEC2        equ	4061	;# 
  1104   000FDE                     POSTINC2        equ	4062	;# 
  1105   000FDF                     INDF2           equ	4063	;# 
  1106   000FE0                     BSR             equ	4064	;# 
  1107   000FE1                     FSR1            equ	4065	;# 
  1108   000FE1                     FSR1L           equ	4065	;# 
  1109   000FE2                     FSR1H           equ	4066	;# 
  1110   000FE3                     PLUSW1          equ	4067	;# 
  1111   000FE4                     PREINC1         equ	4068	;# 
  1112   000FE5                     POSTDEC1        equ	4069	;# 
  1113   000FE6                     POSTINC1        equ	4070	;# 
  1114   000FE7                     INDF1           equ	4071	;# 
  1115   000FE8                     WREG            equ	4072	;# 
  1116   000FE9                     FSR0            equ	4073	;# 
  1117   000FE9                     FSR0L           equ	4073	;# 
  1118   000FEA                     FSR0H           equ	4074	;# 
  1119   000FEB                     PLUSW0          equ	4075	;# 
  1120   000FEC                     PREINC0         equ	4076	;# 
  1121   000FED                     POSTDEC0        equ	4077	;# 
  1122   000FEE                     POSTINC0        equ	4078	;# 
  1123   000FEF                     INDF0           equ	4079	;# 
  1124   000FF0                     INTCON3         equ	4080	;# 
  1125   000FF1                     INTCON2         equ	4081	;# 
  1126   000FF2                     INTCON          equ	4082	;# 
  1127   000FF3                     PROD            equ	4083	;# 
  1128   000FF3                     PRODL           equ	4083	;# 
  1129   000FF4                     PRODH           equ	4084	;# 
  1130   000FF5                     TABLAT          equ	4085	;# 
  1131   000FF6                     TBLPTR          equ	4086	;# 
  1132   000FF6                     TBLPTRL         equ	4086	;# 
  1133   000FF7                     TBLPTRH         equ	4087	;# 
  1134   000FF8                     TBLPTRU         equ	4088	;# 
  1135   000FF9                     PCLAT           equ	4089	;# 
  1136   000FF9                     PC              equ	4089	;# 
  1137   000FF9                     PCL             equ	4089	;# 
  1138   000FFA                     PCLATH          equ	4090	;# 
  1139   000FFB                     PCLATU          equ	4091	;# 
  1140   000FFC                     STKPTR          equ	4092	;# 
  1141   000FFD                     TOS             equ	4093	;# 
  1142   000FFD                     TOSL            equ	4093	;# 
  1143   000FFE                     TOSH            equ	4094	;# 
  1144   000FFF                     TOSU            equ	4095	;# 
  1145   000F62                     SPPDATA         equ	3938	;# 
  1146   000F63                     SPPCFG          equ	3939	;# 
  1147   000F64                     SPPEPS          equ	3940	;# 
  1148   000F65                     SPPCON          equ	3941	;# 
  1149   000F66                     UFRM            equ	3942	;# 
  1150   000F66                     UFRML           equ	3942	;# 
  1151   000F67                     UFRMH           equ	3943	;# 
  1152   000F68                     UIR             equ	3944	;# 
  1153   000F69                     UIE             equ	3945	;# 
  1154   000F6A                     UEIR            equ	3946	;# 
  1155   000F6B                     UEIE            equ	3947	;# 
  1156   000F6C                     USTAT           equ	3948	;# 
  1157   000F6D                     UCON            equ	3949	;# 
  1158   000F6E                     UADDR           equ	3950	;# 
  1159   000F6F                     UCFG            equ	3951	;# 
  1160   000F70                     UEP0            equ	3952	;# 
  1161   000F71                     UEP1            equ	3953	;# 
  1162   000F72                     UEP2            equ	3954	;# 
  1163   000F73                     UEP3            equ	3955	;# 
  1164   000F74                     UEP4            equ	3956	;# 
  1165   000F75                     UEP5            equ	3957	;# 
  1166   000F76                     UEP6            equ	3958	;# 
  1167   000F77                     UEP7            equ	3959	;# 
  1168   000F78                     UEP8            equ	3960	;# 
  1169   000F79                     UEP9            equ	3961	;# 
  1170   000F7A                     UEP10           equ	3962	;# 
  1171   000F7B                     UEP11           equ	3963	;# 
  1172   000F7C                     UEP12           equ	3964	;# 
  1173   000F7D                     UEP13           equ	3965	;# 
  1174   000F7E                     UEP14           equ	3966	;# 
  1175   000F7F                     UEP15           equ	3967	;# 
  1176   000F80                     PORTA           equ	3968	;# 
  1177   000F81                     PORTB           equ	3969	;# 
  1178   000F82                     PORTC           equ	3970	;# 
  1179   000F83                     PORTD           equ	3971	;# 
  1180   000F84                     PORTE           equ	3972	;# 
  1181   000F89                     LATA            equ	3977	;# 
  1182   000F8A                     LATB            equ	3978	;# 
  1183   000F8B                     LATC            equ	3979	;# 
  1184   000F8C                     LATD            equ	3980	;# 
  1185   000F8D                     LATE            equ	3981	;# 
  1186   000F92                     TRISA           equ	3986	;# 
  1187   000F92                     DDRA            equ	3986	;# 
  1188   000F93                     TRISB           equ	3987	;# 
  1189   000F93                     DDRB            equ	3987	;# 
  1190   000F94                     TRISC           equ	3988	;# 
  1191   000F94                     DDRC            equ	3988	;# 
  1192   000F95                     TRISD           equ	3989	;# 
  1193   000F95                     DDRD            equ	3989	;# 
  1194   000F96                     TRISE           equ	3990	;# 
  1195   000F96                     DDRE            equ	3990	;# 
  1196   000F9B                     OSCTUNE         equ	3995	;# 
  1197   000F9D                     PIE1            equ	3997	;# 
  1198   000F9E                     PIR1            equ	3998	;# 
  1199   000F9F                     IPR1            equ	3999	;# 
  1200   000FA0                     PIE2            equ	4000	;# 
  1201   000FA1                     PIR2            equ	4001	;# 
  1202   000FA2                     IPR2            equ	4002	;# 
  1203   000FA6                     EECON1          equ	4006	;# 
  1204   000FA7                     EECON2          equ	4007	;# 
  1205   000FA8                     EEDATA          equ	4008	;# 
  1206   000FA9                     EEADR           equ	4009	;# 
  1207   000FAB                     RCSTA           equ	4011	;# 
  1208   000FAB                     RCSTA1          equ	4011	;# 
  1209   000FAC                     TXSTA           equ	4012	;# 
  1210   000FAC                     TXSTA1          equ	4012	;# 
  1211   000FAD                     TXREG           equ	4013	;# 
  1212   000FAD                     TXREG1          equ	4013	;# 
  1213   000FAE                     RCREG           equ	4014	;# 
  1214   000FAE                     RCREG1          equ	4014	;# 
  1215   000FAF                     SPBRG           equ	4015	;# 
  1216   000FAF                     SPBRG1          equ	4015	;# 
  1217   000FB0                     SPBRGH          equ	4016	;# 
  1218   000FB1                     T3CON           equ	4017	;# 
  1219   000FB2                     TMR3            equ	4018	;# 
  1220   000FB2                     TMR3L           equ	4018	;# 
  1221   000FB3                     TMR3H           equ	4019	;# 
  1222   000FB4                     CMCON           equ	4020	;# 
  1223   000FB5                     CVRCON          equ	4021	;# 
  1224   000FB6                     ECCP1AS         equ	4022	;# 
  1225   000FB6                     CCP1AS          equ	4022	;# 
  1226   000FB7                     ECCP1DEL        equ	4023	;# 
  1227   000FB7                     CCP1DEL         equ	4023	;# 
  1228   000FB8                     BAUDCON         equ	4024	;# 
  1229   000FB8                     BAUDCTL         equ	4024	;# 
  1230   000FBA                     CCP2CON         equ	4026	;# 
  1231   000FBB                     CCPR2           equ	4027	;# 
  1232   000FBB                     CCPR2L          equ	4027	;# 
  1233   000FBC                     CCPR2H          equ	4028	;# 
  1234   000FBD                     CCP1CON         equ	4029	;# 
  1235   000FBD                     ECCP1CON        equ	4029	;# 
  1236   000FBE                     CCPR1           equ	4030	;# 
  1237   000FBE                     CCPR1L          equ	4030	;# 
  1238   000FBF                     CCPR1H          equ	4031	;# 
  1239   000FC0                     ADCON2          equ	4032	;# 
  1240   000FC1                     ADCON1          equ	4033	;# 
  1241   000FC2                     ADCON0          equ	4034	;# 
  1242   000FC3                     ADRES           equ	4035	;# 
  1243   000FC3                     ADRESL          equ	4035	;# 
  1244   000FC4                     ADRESH          equ	4036	;# 
  1245   000FC5                     SSPCON2         equ	4037	;# 
  1246   000FC6                     SSPCON1         equ	4038	;# 
  1247   000FC7                     SSPSTAT         equ	4039	;# 
  1248   000FC8                     SSPADD          equ	4040	;# 
  1249   000FC9                     SSPBUF          equ	4041	;# 
  1250   000FCA                     T2CON           equ	4042	;# 
  1251   000FCB                     PR2             equ	4043	;# 
  1252   000FCB                     MEMCON          equ	4043	;# 
  1253   000FCC                     TMR2            equ	4044	;# 
  1254   000FCD                     T1CON           equ	4045	;# 
  1255   000FCE                     TMR1            equ	4046	;# 
  1256   000FCE                     TMR1L           equ	4046	;# 
  1257   000FCF                     TMR1H           equ	4047	;# 
  1258   000FD0                     RCON            equ	4048	;# 
  1259   000FD1                     WDTCON          equ	4049	;# 
  1260   000FD2                     HLVDCON         equ	4050	;# 
  1261   000FD2                     LVDCON          equ	4050	;# 
  1262   000FD3                     OSCCON          equ	4051	;# 
  1263   000FD5                     T0CON           equ	4053	;# 
  1264   000FD6                     TMR0            equ	4054	;# 
  1265   000FD6                     TMR0L           equ	4054	;# 
  1266   000FD7                     TMR0H           equ	4055	;# 
  1267   000FD8                     STATUS          equ	4056	;# 
  1268   000FD9                     FSR2            equ	4057	;# 
  1269   000FD9                     FSR2L           equ	4057	;# 
  1270   000FDA                     FSR2H           equ	4058	;# 
  1271   000FDB                     PLUSW2          equ	4059	;# 
  1272   000FDC                     PREINC2         equ	4060	;# 
  1273   000FDD                     POSTDEC2        equ	4061	;# 
  1274   000FDE                     POSTINC2        equ	4062	;# 
  1275   000FDF                     INDF2           equ	4063	;# 
  1276   000FE0                     BSR             equ	4064	;# 
  1277   000FE1                     FSR1            equ	4065	;# 
  1278   000FE1                     FSR1L           equ	4065	;# 
  1279   000FE2                     FSR1H           equ	4066	;# 
  1280   000FE3                     PLUSW1          equ	4067	;# 
  1281   000FE4                     PREINC1         equ	4068	;# 
  1282   000FE5                     POSTDEC1        equ	4069	;# 
  1283   000FE6                     POSTINC1        equ	4070	;# 
  1284   000FE7                     INDF1           equ	4071	;# 
  1285   000FE8                     WREG            equ	4072	;# 
  1286   000FE9                     FSR0            equ	4073	;# 
  1287   000FE9                     FSR0L           equ	4073	;# 
  1288   000FEA                     FSR0H           equ	4074	;# 
  1289   000FEB                     PLUSW0          equ	4075	;# 
  1290   000FEC                     PREINC0         equ	4076	;# 
  1291   000FED                     POSTDEC0        equ	4077	;# 
  1292   000FEE                     POSTINC0        equ	4078	;# 
  1293   000FEF                     INDF0           equ	4079	;# 
  1294   000FF0                     INTCON3         equ	4080	;# 
  1295   000FF1                     INTCON2         equ	4081	;# 
  1296   000FF2                     INTCON          equ	4082	;# 
  1297   000FF3                     PROD            equ	4083	;# 
  1298   000FF3                     PRODL           equ	4083	;# 
  1299   000FF4                     PRODH           equ	4084	;# 
  1300   000FF5                     TABLAT          equ	4085	;# 
  1301   000FF6                     TBLPTR          equ	4086	;# 
  1302   000FF6                     TBLPTRL         equ	4086	;# 
  1303   000FF7                     TBLPTRH         equ	4087	;# 
  1304   000FF8                     TBLPTRU         equ	4088	;# 
  1305   000FF9                     PCLAT           equ	4089	;# 
  1306   000FF9                     PC              equ	4089	;# 
  1307   000FF9                     PCL             equ	4089	;# 
  1308   000FFA                     PCLATH          equ	4090	;# 
  1309   000FFB                     PCLATU          equ	4091	;# 
  1310   000FFC                     STKPTR          equ	4092	;# 
  1311   000FFD                     TOS             equ	4093	;# 
  1312   000FFD                     TOSL            equ	4093	;# 
  1313   000FFE                     TOSH            equ	4094	;# 
  1314   000FFF                     TOSU            equ	4095	;# 
  1315   000F62                     SPPDATA         equ	3938	;# 
  1316   000F63                     SPPCFG          equ	3939	;# 
  1317   000F64                     SPPEPS          equ	3940	;# 
  1318   000F65                     SPPCON          equ	3941	;# 
  1319   000F66                     UFRM            equ	3942	;# 
  1320   000F66                     UFRML           equ	3942	;# 
  1321   000F67                     UFRMH           equ	3943	;# 
  1322   000F68                     UIR             equ	3944	;# 
  1323   000F69                     UIE             equ	3945	;# 
  1324   000F6A                     UEIR            equ	3946	;# 
  1325   000F6B                     UEIE            equ	3947	;# 
  1326   000F6C                     USTAT           equ	3948	;# 
  1327   000F6D                     UCON            equ	3949	;# 
  1328   000F6E                     UADDR           equ	3950	;# 
  1329   000F6F                     UCFG            equ	3951	;# 
  1330   000F70                     UEP0            equ	3952	;# 
  1331   000F71                     UEP1            equ	3953	;# 
  1332   000F72                     UEP2            equ	3954	;# 
  1333   000F73                     UEP3            equ	3955	;# 
  1334   000F74                     UEP4            equ	3956	;# 
  1335   000F75                     UEP5            equ	3957	;# 
  1336   000F76                     UEP6            equ	3958	;# 
  1337   000F77                     UEP7            equ	3959	;# 
  1338   000F78                     UEP8            equ	3960	;# 
  1339   000F79                     UEP9            equ	3961	;# 
  1340   000F7A                     UEP10           equ	3962	;# 
  1341   000F7B                     UEP11           equ	3963	;# 
  1342   000F7C                     UEP12           equ	3964	;# 
  1343   000F7D                     UEP13           equ	3965	;# 
  1344   000F7E                     UEP14           equ	3966	;# 
  1345   000F7F                     UEP15           equ	3967	;# 
  1346   000F80                     PORTA           equ	3968	;# 
  1347   000F81                     PORTB           equ	3969	;# 
  1348   000F82                     PORTC           equ	3970	;# 
  1349   000F83                     PORTD           equ	3971	;# 
  1350   000F84                     PORTE           equ	3972	;# 
  1351   000F89                     LATA            equ	3977	;# 
  1352   000F8A                     LATB            equ	3978	;# 
  1353   000F8B                     LATC            equ	3979	;# 
  1354   000F8C                     LATD            equ	3980	;# 
  1355   000F8D                     LATE            equ	3981	;# 
  1356   000F92                     TRISA           equ	3986	;# 
  1357   000F92                     DDRA            equ	3986	;# 
  1358   000F93                     TRISB           equ	3987	;# 
  1359   000F93                     DDRB            equ	3987	;# 
  1360   000F94                     TRISC           equ	3988	;# 
  1361   000F94                     DDRC            equ	3988	;# 
  1362   000F95                     TRISD           equ	3989	;# 
  1363   000F95                     DDRD            equ	3989	;# 
  1364   000F96                     TRISE           equ	3990	;# 
  1365   000F96                     DDRE            equ	3990	;# 
  1366   000F9B                     OSCTUNE         equ	3995	;# 
  1367   000F9D                     PIE1            equ	3997	;# 
  1368   000F9E                     PIR1            equ	3998	;# 
  1369   000F9F                     IPR1            equ	3999	;# 
  1370   000FA0                     PIE2            equ	4000	;# 
  1371   000FA1                     PIR2            equ	4001	;# 
  1372   000FA2                     IPR2            equ	4002	;# 
  1373   000FA6                     EECON1          equ	4006	;# 
  1374   000FA7                     EECON2          equ	4007	;# 
  1375   000FA8                     EEDATA          equ	4008	;# 
  1376   000FA9                     EEADR           equ	4009	;# 
  1377   000FAB                     RCSTA           equ	4011	;# 
  1378   000FAB                     RCSTA1          equ	4011	;# 
  1379   000FAC                     TXSTA           equ	4012	;# 
  1380   000FAC                     TXSTA1          equ	4012	;# 
  1381   000FAD                     TXREG           equ	4013	;# 
  1382   000FAD                     TXREG1          equ	4013	;# 
  1383   000FAE                     RCREG           equ	4014	;# 
  1384   000FAE                     RCREG1          equ	4014	;# 
  1385   000FAF                     SPBRG           equ	4015	;# 
  1386   000FAF                     SPBRG1          equ	4015	;# 
  1387   000FB0                     SPBRGH          equ	4016	;# 
  1388   000FB1                     T3CON           equ	4017	;# 
  1389   000FB2                     TMR3            equ	4018	;# 
  1390   000FB2                     TMR3L           equ	4018	;# 
  1391   000FB3                     TMR3H           equ	4019	;# 
  1392   000FB4                     CMCON           equ	4020	;# 
  1393   000FB5                     CVRCON          equ	4021	;# 
  1394   000FB6                     ECCP1AS         equ	4022	;# 
  1395   000FB6                     CCP1AS          equ	4022	;# 
  1396   000FB7                     ECCP1DEL        equ	4023	;# 
  1397   000FB7                     CCP1DEL         equ	4023	;# 
  1398   000FB8                     BAUDCON         equ	4024	;# 
  1399   000FB8                     BAUDCTL         equ	4024	;# 
  1400   000FBA                     CCP2CON         equ	4026	;# 
  1401   000FBB                     CCPR2           equ	4027	;# 
  1402   000FBB                     CCPR2L          equ	4027	;# 
  1403   000FBC                     CCPR2H          equ	4028	;# 
  1404   000FBD                     CCP1CON         equ	4029	;# 
  1405   000FBD                     ECCP1CON        equ	4029	;# 
  1406   000FBE                     CCPR1           equ	4030	;# 
  1407   000FBE                     CCPR1L          equ	4030	;# 
  1408   000FBF                     CCPR1H          equ	4031	;# 
  1409   000FC0                     ADCON2          equ	4032	;# 
  1410   000FC1                     ADCON1          equ	4033	;# 
  1411   000FC2                     ADCON0          equ	4034	;# 
  1412   000FC3                     ADRES           equ	4035	;# 
  1413   000FC3                     ADRESL          equ	4035	;# 
  1414   000FC4                     ADRESH          equ	4036	;# 
  1415   000FC5                     SSPCON2         equ	4037	;# 
  1416   000FC6                     SSPCON1         equ	4038	;# 
  1417   000FC7                     SSPSTAT         equ	4039	;# 
  1418   000FC8                     SSPADD          equ	4040	;# 
  1419   000FC9                     SSPBUF          equ	4041	;# 
  1420   000FCA                     T2CON           equ	4042	;# 
  1421   000FCB                     PR2             equ	4043	;# 
  1422   000FCB                     MEMCON          equ	4043	;# 
  1423   000FCC                     TMR2            equ	4044	;# 
  1424   000FCD                     T1CON           equ	4045	;# 
  1425   000FCE                     TMR1            equ	4046	;# 
  1426   000FCE                     TMR1L           equ	4046	;# 
  1427   000FCF                     TMR1H           equ	4047	;# 
  1428   000FD0                     RCON            equ	4048	;# 
  1429   000FD1                     WDTCON          equ	4049	;# 
  1430   000FD2                     HLVDCON         equ	4050	;# 
  1431   000FD2                     LVDCON          equ	4050	;# 
  1432   000FD3                     OSCCON          equ	4051	;# 
  1433   000FD5                     T0CON           equ	4053	;# 
  1434   000FD6                     TMR0            equ	4054	;# 
  1435   000FD6                     TMR0L           equ	4054	;# 
  1436   000FD7                     TMR0H           equ	4055	;# 
  1437   000FD8                     STATUS          equ	4056	;# 
  1438   000FD9                     FSR2            equ	4057	;# 
  1439   000FD9                     FSR2L           equ	4057	;# 
  1440   000FDA                     FSR2H           equ	4058	;# 
  1441   000FDB                     PLUSW2          equ	4059	;# 
  1442   000FDC                     PREINC2         equ	4060	;# 
  1443   000FDD                     POSTDEC2        equ	4061	;# 
  1444   000FDE                     POSTINC2        equ	4062	;# 
  1445   000FDF                     INDF2           equ	4063	;# 
  1446   000FE0                     BSR             equ	4064	;# 
  1447   000FE1                     FSR1            equ	4065	;# 
  1448   000FE1                     FSR1L           equ	4065	;# 
  1449   000FE2                     FSR1H           equ	4066	;# 
  1450   000FE3                     PLUSW1          equ	4067	;# 
  1451   000FE4                     PREINC1         equ	4068	;# 
  1452   000FE5                     POSTDEC1        equ	4069	;# 
  1453   000FE6                     POSTINC1        equ	4070	;# 
  1454   000FE7                     INDF1           equ	4071	;# 
  1455   000FE8                     WREG            equ	4072	;# 
  1456   000FE9                     FSR0            equ	4073	;# 
  1457   000FE9                     FSR0L           equ	4073	;# 
  1458   000FEA                     FSR0H           equ	4074	;# 
  1459   000FEB                     PLUSW0          equ	4075	;# 
  1460   000FEC                     PREINC0         equ	4076	;# 
  1461   000FED                     POSTDEC0        equ	4077	;# 
  1462   000FEE                     POSTINC0        equ	4078	;# 
  1463   000FEF                     INDF0           equ	4079	;# 
  1464   000FF0                     INTCON3         equ	4080	;# 
  1465   000FF1                     INTCON2         equ	4081	;# 
  1466   000FF2                     INTCON          equ	4082	;# 
  1467   000FF3                     PROD            equ	4083	;# 
  1468   000FF3                     PRODL           equ	4083	;# 
  1469   000FF4                     PRODH           equ	4084	;# 
  1470   000FF5                     TABLAT          equ	4085	;# 
  1471   000FF6                     TBLPTR          equ	4086	;# 
  1472   000FF6                     TBLPTRL         equ	4086	;# 
  1473   000FF7                     TBLPTRH         equ	4087	;# 
  1474   000FF8                     TBLPTRU         equ	4088	;# 
  1475   000FF9                     PCLAT           equ	4089	;# 
  1476   000FF9                     PC              equ	4089	;# 
  1477   000FF9                     PCL             equ	4089	;# 
  1478   000FFA                     PCLATH          equ	4090	;# 
  1479   000FFB                     PCLATU          equ	4091	;# 
  1480   000FFC                     STKPTR          equ	4092	;# 
  1481   000FFD                     TOS             equ	4093	;# 
  1482   000FFD                     TOSL            equ	4093	;# 
  1483   000FFE                     TOSH            equ	4094	;# 
  1484   000FFF                     TOSU            equ	4095	;# 
  1485   000FFD                     _TOS            set	4093
  1486   000FD6                     _TMR0           set	4054
  1487   000FD5                     _T0CONbits      set	4053
  1488   000FFC                     _STKPTR         set	4092
  1489   000FE8                     _WREG           set	4072
  1490   000FD8                     _STATUS         set	4056
  1491   000FE0                     _BSR            set	4064
  1492   000F8B                     _LATCbits       set	3979
  1493   000F94                     _TRISCbits      set	3988
  1494   000F83                     _PORTDbits      set	3971
  1495   000F8C                     _LATDbits       set	3980
  1496   000F95                     _TRISDbits      set	3989
  1497   000FF2                     _INTCONbits     set	4082
  1498                           
  1499                           ; #config settings
  1500                           
  1501                           	psect	cinit
  1502   001A72                     __pcinit:
  1503                           	callstack 0
  1504   001A72                     start_initialization:
  1505                           	callstack 0
  1506   001A72                     __initialization:
  1507                           	callstack 0
  1508                           
  1509                           ; Clear objects allocated to BIGRAM (1045 bytes)
  1510   001A72  EE02  F06B         	lfsr	0,__pbssBIGRAM
  1511   001A76  EE14 F015          	lfsr	1,1045
  1512   001A7A                     clear_0:
  1513   001A7A  6AEE               	clrf	postinc0,c
  1514   001A7C  50E5               	movf	postdec1,w,c
  1515   001A7E  50E1               	movf	fsr1l,w,c
  1516   001A80  E1FC               	bnz	clear_0
  1517   001A82  50E2               	movf	fsr1h,w,c
  1518   001A84  E1FA               	bnz	clear_0
  1519                           
  1520                           ; Clear objects allocated to BANK0 (33 bytes)
  1521   001A86  EE00  F060         	lfsr	0,__pbssBANK0
  1522   001A8A  0E21               	movlw	33
  1523   001A8C                     clear_1:
  1524   001A8C  6AEE               	clrf	postinc0,c
  1525   001A8E  06E8               	decf	wreg,f,c
  1526   001A90  E1FD               	bnz	clear_1
  1527   001A92                     end_of_initialization:
  1528                           	callstack 0
  1529   001A92                     __end_of__initialization:
  1530                           	callstack 0
  1531   001A92  901A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1532   001A94  921A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1533   001A96  0100               	movlb	0
  1534   001A98  EFB3  F00C         	goto	_main	;jump to C main() function
  1535                           
  1536                           	psect	bssBANK0
  1537   000060                     __pbssBANK0:
  1538                           	callstack 0
  1539   000060                     _canal:
  1540                           	callstack 0
  1541   000060                     	ds	33
  1542                           
  1543                           	psect	bssBIGRAM
  1544   00026B                     __pbssBIGRAM:
  1545                           	callstack 0
  1546   00026B                     _readyQueue:
  1547                           	callstack 0
  1548   00026B                     	ds	533
  1549   000480                     __uDynamicHeap:
  1550                           	callstack 0
  1551   000480                     	ds	512
  1552                           
  1553                           	psect	cstackBANK2
  1554   000200                     __pcstackBANK2:
  1555                           	callstack 0
  1556   000200                     os_create_task@id:
  1557                           	callstack 0
  1558                           
  1559                           ; 1 bytes @ 0x0
  1560   000200                     	ds	1
  1561   000201                     os_create_task@new_task:
  1562                           	callstack 0
  1563                           
  1564                           ; 106 bytes @ 0x1
  1565   000201                     	ds	106
  1566                           
  1567                           	psect	cstackBANK1
  1568   000100                     __pcstackBANK1:
  1569                           	callstack 0
  1570   000100                     	ds	71
  1571   000147                     tarefa_1@index:
  1572                           	callstack 0
  1573                           
  1574                           ; 2 bytes @ 0x47
  1575   000147                     	ds	2
  1576   000149                     tarefa_1@dados:
  1577                           	callstack 0
  1578                           
  1579                           ; 2 bytes @ 0x49
  1580   000149                     	ds	2
  1581   00014B                     ?___awmod:
  1582                           	callstack 0
  1583   00014B                     os_task_pos@task:
  1584                           	callstack 0
  1585   00014B                     ___awmod@dividend:
  1586                           	callstack 0
  1587                           
  1588                           ; 2 bytes @ 0x4B
  1589   00014B                     	ds	2
  1590   00014D                     ___awmod@divisor:
  1591                           	callstack 0
  1592   00014D                     
  1593                           ; 1 bytes @ 0x4D
  1594   00014D                     	ds	2
  1595   00014F                     os_task_pos@i:
  1596                           	callstack 0
  1597   00014F                     ___awmod@counter:
  1598                           	callstack 0
  1599   00014F                     
  1600                           ; 1 bytes @ 0x4F
  1601   00014F                     	ds	1
  1602   000150                     ___awmod@sign:
  1603                           	callstack 0
  1604                           
  1605                           ; 1 bytes @ 0x50
  1606   000150                     	ds	1
  1607   000151                     ?_rr_scheduler:
  1608                           	callstack 0
  1609   000151                     sem_post@s:
  1610                           	callstack 0
  1611                           
  1612                           ; 1 bytes @ 0x51
  1613   000151                     	ds	1
  1614   000152                     ??_sem_post:
  1615                           
  1616                           ; 1 bytes @ 0x52
  1617   000152                     	ds	1
  1618   000153                     ??_rr_scheduler:
  1619                           
  1620                           ; 1 bytes @ 0x53
  1621   000153                     	ds	2
  1622   000155                     rr_scheduler@idle_selected:
  1623                           	callstack 0
  1624                           
  1625                           ; 1 bytes @ 0x55
  1626   000155                     	ds	1
  1627   000156                     rr_scheduler@pos_task_running:
  1628                           	callstack 0
  1629                           
  1630                           ; 1 bytes @ 0x56
  1631   000156                     	ds	1
  1632   000157                     sem_wait@s:
  1633                           	callstack 0
  1634   000157                     
  1635                           ; 1 bytes @ 0x57
  1636   000157                     	ds	1
  1637   000158                     ??_sem_wait:
  1638                           
  1639                           ; 1 bytes @ 0x58
  1640   000158                     	ds	7
  1641   00015F                     read_pipe@p:
  1642                           	callstack 0
  1643                           
  1644                           ; 1 bytes @ 0x5F
  1645   00015F                     	ds	1
  1646   000160                     read_pipe@buffer:
  1647                           	callstack 0
  1648                           
  1649                           ; 2 bytes @ 0x60
  1650   000160                     	ds	2
  1651   000162                     ??_read_pipe:
  1652                           
  1653                           ; 1 bytes @ 0x62
  1654   000162                     	ds	1
  1655   000163                     ??_tarefa_2:
  1656                           
  1657                           ; 1 bytes @ 0x63
  1658   000163                     	ds	1
  1659   000164                     tarefa_2@dado:
  1660                           	callstack 0
  1661                           
  1662                           ; 1 bytes @ 0x64
  1663   000164                     	ds	1
  1664   000165                     ??_tarefa_3:
  1665                           
  1666                           ; 1 bytes @ 0x65
  1667   000165                     	ds	1
  1668   000166                     sem_init@s:
  1669                           	callstack 0
  1670   000166                     os_create_task@task_f:
  1671                           	callstack 0
  1672   000166                     SRAMInitHeap@pHeap:
  1673                           	callstack 0
  1674   000166                     
  1675                           ; 1 bytes @ 0x66
  1676   000166                     	ds	1
  1677   000167                     sem_init@init_value:
  1678                           	callstack 0
  1679                           
  1680                           ; 1 bytes @ 0x67
  1681   000167                     	ds	1
  1682   000168                     os_create_task@prior:
  1683                           	callstack 0
  1684   000168                     SRAMInitHeap@count:
  1685                           	callstack 0
  1686   000168                     ??_sem_init:
  1687                           
  1688                           ; 1 bytes @ 0x68
  1689   000168                     	ds	1
  1690   000169                     ??_os_create_task:
  1691                           
  1692                           ; 1 bytes @ 0x69
  1693   000169                     	ds	1
  1694   00016A                     create_pipe@p:
  1695                           	callstack 0
  1696   00016A                     
  1697                           ; 1 bytes @ 0x6A
  1698   00016A                     	ds	1
  1699   00016B                     
  1700                           ; 1 bytes @ 0x6B
  1701                           
  1702                           	psect	cstackBANK0
  1703   000081                     __pcstackBANK0:
  1704                           	callstack 0
  1705   000081                     	ds	9
  1706   00008A                     ?_SRAMalloc:
  1707                           	callstack 0
  1708   00008A                     write_pipe@p:
  1709                           	callstack 0
  1710   00008A                     ??_os_delay:
  1711                           
  1712                           ; 1 bytes @ 0x9
  1713   00008A                     	ds	1
  1714   00008B                     write_pipe@buffer:
  1715                           	callstack 0
  1716                           
  1717                           ; 1 bytes @ 0xA
  1718   00008B                     	ds	1
  1719   00008C                     SRAMalloc@temp:
  1720                           	callstack 0
  1721                           
  1722                           ; 2 bytes @ 0xB
  1723   00008C                     	ds	2
  1724   00008E                     SRAMalloc@segLen:
  1725                           	callstack 0
  1726                           
  1727                           ; 1 bytes @ 0xD
  1728   00008E                     	ds	1
  1729   00008F                     SRAMalloc@segHeader:
  1730                           	callstack 0
  1731                           
  1732                           ; 1 bytes @ 0xE
  1733   00008F                     	ds	1
  1734   000090                     SRAMalloc@nBytes:
  1735                           	callstack 0
  1736                           
  1737                           ; 1 bytes @ 0xF
  1738   000090                     	ds	1
  1739   000091                     SRAMalloc@pHeap:
  1740                           	callstack 0
  1741                           
  1742                           ; 2 bytes @ 0x10
  1743   000091                     	ds	2
  1744                           
  1745                           	psect	cstackCOMRAM
  1746   000001                     __pcstackCOMRAM:
  1747                           	callstack 0
  1748   000001                     ?i2___awmod:
  1749                           	callstack 0
  1750   000001                     i2os_task_pos@task:
  1751                           	callstack 0
  1752   000001                     i2___awmod@dividend:
  1753                           	callstack 0
  1754   000001                     ??_os_idle_task:
  1755   000001                     
  1756                           ; 1 bytes @ 0x0
  1757   000001                     	ds	1
  1758   000002                     os_task_time_decrease@i:
  1759                           	callstack 0
  1760                           
  1761                           ; 1 bytes @ 0x1
  1762   000002                     	ds	1
  1763   000003                     i2___awmod@divisor:
  1764                           	callstack 0
  1765   000003                     
  1766                           ; 1 bytes @ 0x2
  1767   000003                     	ds	2
  1768   000005                     i2os_task_pos@i:
  1769                           	callstack 0
  1770   000005                     i2___awmod@counter:
  1771                           	callstack 0
  1772   000005                     
  1773                           ; 1 bytes @ 0x4
  1774   000005                     	ds	1
  1775   000006                     i2___awmod@sign:
  1776                           	callstack 0
  1777                           
  1778                           ; 1 bytes @ 0x5
  1779   000006                     	ds	1
  1780   000007                     ?i2_rr_scheduler:
  1781                           	callstack 0
  1782                           
  1783                           ; 2 bytes @ 0x6
  1784   000007                     	ds	2
  1785   000009                     ??i2_rr_scheduler:
  1786                           
  1787                           ; 1 bytes @ 0x8
  1788   000009                     	ds	2
  1789   00000B                     i2rr_scheduler@idle_selected:
  1790                           	callstack 0
  1791                           
  1792                           ; 1 bytes @ 0xA
  1793   00000B                     	ds	1
  1794   00000C                     i2rr_scheduler@pos_task_running:
  1795                           	callstack 0
  1796                           
  1797                           ; 1 bytes @ 0xB
  1798   00000C                     	ds	1
  1799   00000D                     os_delay@time:
  1800                           	callstack 0
  1801   00000D                     SRAMfree@pSRAM:
  1802                           	callstack 0
  1803   00000D                     __SRAMmerge@pSegA:
  1804                           	callstack 0
  1805   00000D                     ??_write_pipe:
  1806   00000D                     ??_ISR_TIMER_0:
  1807   00000D                     
  1808                           ; 1 bytes @ 0xC
  1809   00000D                     	ds	2
  1810   00000F                     ??__SRAMmerge:
  1811                           
  1812                           ; 1 bytes @ 0xE
  1813   00000F                     	ds	1
  1814   000010                     __SRAMmerge@uSum:
  1815                           	callstack 0
  1816                           
  1817                           ; 1 bytes @ 0xF
  1818   000010                     	ds	1
  1819   000011                     __SRAMmerge@pSegB:
  1820                           	callstack 0
  1821                           
  1822                           ; 2 bytes @ 0x10
  1823   000011                     	ds	2
  1824   000013                     __SRAMmerge@uSegA:
  1825                           	callstack 0
  1826                           
  1827                           ; 1 bytes @ 0x12
  1828   000013                     	ds	1
  1829   000014                     __SRAMmerge@uSegB:
  1830                           	callstack 0
  1831                           
  1832                           ; 1 bytes @ 0x13
  1833   000014                     	ds	1
  1834   000015                     ??_SRAMalloc:
  1835                           
  1836                           ; 1 bytes @ 0x14
  1837   000015                     	ds	2
  1838   000017                     ??_tarefa_1:
  1839                           
  1840                           ; 1 bytes @ 0x16
  1841   000017                     	ds	3
  1842                           
  1843 ;;
  1844 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1845 ;;
  1846 ;; *************** function _main *****************
  1847 ;; Defined at:
  1848 ;;		line 7 in file "main.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;		None
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  2   16[None  ] int 
  1855 ;; Registers used:
  1856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1862 ;;      Params:         0       0       0       0       0       0       0       0       0
  1863 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1865 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1866 ;;Total ram usage:        0 bytes
  1867 ;; Hardware stack levels required when called: 14
  1868 ;; This function calls:
  1869 ;;		_os_config
  1870 ;;		_os_create_task
  1871 ;;		_os_start
  1872 ;; This function is called by:
  1873 ;;		Startup code after reset
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text0
  1878   001966                     __ptext0:
  1879                           	callstack 0
  1880   001966                     _main:
  1881                           	callstack 17
  1882   001966                     
  1883                           ;main.c: 9:     os_config();
  1884   001966  EC4E  F00D         	call	_os_config	;wreg free
  1885                           
  1886                           ;main.c: 12:     os_create_task(100, tarefa_1, 5);
  1887   00196A  0E74               	movlw	low _tarefa_1
  1888   00196C  0101               	movlb	1	; () banked
  1889   00196E  6F66               	movwf	os_create_task@task_f& (0+255),b
  1890   001970  0E13               	movlw	high _tarefa_1
  1891   001972  6F67               	movwf	(os_create_task@task_f+1)& (0+255),b
  1892   001974  0E05               	movlw	5
  1893   001976  6F68               	movwf	os_create_task@prior& (0+255),b
  1894   001978  0E64               	movlw	100
  1895   00197A  EC63  F00C         	call	_os_create_task
  1896                           
  1897                           ;main.c: 13:     os_create_task(101, tarefa_2, 5);
  1898   00197E  0EA0               	movlw	low _tarefa_2
  1899   001980  0101               	movlb	1	; () banked
  1900   001982  6F66               	movwf	os_create_task@task_f& (0+255),b
  1901   001984  0E16               	movlw	high _tarefa_2
  1902   001986  6F67               	movwf	(os_create_task@task_f+1)& (0+255),b
  1903   001988  0E05               	movlw	5
  1904   00198A  6F68               	movwf	os_create_task@prior& (0+255),b
  1905   00198C  0E65               	movlw	101
  1906   00198E  EC63  F00C         	call	_os_create_task
  1907                           
  1908                           ;main.c: 14:     os_create_task(102, tarefa_3, 5);
  1909   001992  0E46               	movlw	low _tarefa_3
  1910   001994  0101               	movlb	1	; () banked
  1911   001996  6F66               	movwf	os_create_task@task_f& (0+255),b
  1912   001998  0E1A               	movlw	high _tarefa_3
  1913   00199A  6F67               	movwf	(os_create_task@task_f+1)& (0+255),b
  1914   00199C  0E05               	movlw	5
  1915   00199E  6F68               	movwf	os_create_task@prior& (0+255),b
  1916   0019A0  0E66               	movlw	102
  1917   0019A2  EC63  F00C         	call	_os_create_task
  1918   0019A6                     
  1919                           ;main.c: 16:     os_start();
  1920   0019A6  EC7B  F00D         	call	_os_start	;wreg free
  1921   0019AA                     l17:
  1922   0019AA  EFD5  F00C         	goto	l17
  1923   0019AE  EF07  F000         	goto	start
  1924   0019B2                     __end_of_main:
  1925                           	callstack 0
  1926                           
  1927 ;; *************** function _os_start *****************
  1928 ;; Defined at:
  1929 ;;		line 23 in file "kernel.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;		None
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1943 ;;      Params:         0       0       0       0       0       0       0       0       0
  1944 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1945 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1946 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1947 ;;Total ram usage:        0 bytes
  1948 ;; Hardware stack levels used: 1
  1949 ;; Hardware stack levels required when called: 13
  1950 ;; This function calls:
  1951 ;;		_SRAMInitHeap
  1952 ;;		_conf_interrupts
  1953 ;;		_conf_timer_0
  1954 ;;		_config_app
  1955 ;; This function is called by:
  1956 ;;		_main
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text1
  1961   001AF6                     __ptext1:
  1962                           	callstack 0
  1963   001AF6                     _os_start:
  1964                           	callstack 17
  1965   001AF6                     
  1966                           ;kernel.c: 26:     conf_interrupts();
  1967   001AF6  EC9C  F00D         	call	_conf_interrupts	;wreg free
  1968   001AFA                     
  1969                           ;kernel.c: 30:     SRAMInitHeap();
  1970   001AFA  EC07  F00C         	call	_SRAMInitHeap	;wreg free
  1971   001AFE                     
  1972                           ;kernel.c: 34:     config_app();
  1973   001AFE  EC70  F00D         	call	_config_app	;wreg free
  1974   001B02                     
  1975                           ;kernel.c: 36:     conf_timer_0();
  1976   001B02  EC62  F00D         	call	_conf_timer_0	;wreg free
  1977   001B06                     
  1978                           ;kernel.c: 39:     (INTCONbits.GIE = 1);
  1979   001B06  8EF2               	bsf	242,7,c	;volatile
  1980   001B08  0012               	return		;funcret
  1981   001B0A                     __end_of_os_start:
  1982                           	callstack 0
  1983                           
  1984 ;; *************** function _config_app *****************
  1985 ;; Defined at:
  1986 ;;		line 12 in file "user_app.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2000 ;;      Params:         0       0       0       0       0       0       0       0       0
  2001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2003 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2004 ;;Total ram usage:        0 bytes
  2005 ;; Hardware stack levels used: 1
  2006 ;; Hardware stack levels required when called: 12
  2007 ;; This function calls:
  2008 ;;		_create_pipe
  2009 ;; This function is called by:
  2010 ;;		_os_start
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text2
  2015   001AE0                     __ptext2:
  2016                           	callstack 0
  2017   001AE0                     _config_app:
  2018                           	callstack 17
  2019   001AE0                     
  2020                           ;user_app.c: 14:     TRISDbits.RD0 = TRISDbits.RD1 = TRISDbits.RD2 = 0;
  2021   001AE0  9495               	bcf	149,2,c	;volatile
  2022   001AE2  9295               	bcf	149,1,c	;volatile
  2023   001AE4  9095               	bcf	149,0,c	;volatile
  2024                           
  2025                           ;user_app.c: 16:     TRISCbits.RC0 = TRISCbits.RC1 = 0;
  2026   001AE6  9294               	bcf	148,1,c	;volatile
  2027   001AE8  9094               	bcf	148,0,c	;volatile
  2028   001AEA                     
  2029                           ;user_app.c: 19:     create_pipe(&canal);
  2030   001AEA  0E60               	movlw	low _canal
  2031   001AEC  0101               	movlb	1	; () banked
  2032   001AEE  6F6A               	movwf	create_pipe@p& (0+255),b
  2033   001AF0  ECD9  F00C         	call	_create_pipe	;# 
  2034   001AF4  0012               	return		;funcret
  2035   001AF6                     __end_of_config_app:
  2036                           	callstack 0
  2037                           
  2038 ;; *************** function _create_pipe *****************
  2039 ;; Defined at:
  2040 ;;		line 5 in file "pipe.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  p               1  106[BANK1 ] PTR struct pipe
  2043 ;;		 -> canal(33), 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2055 ;;      Params:         0       0       1       0       0       0       0       0       0
  2056 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2058 ;;      Totals:         0       0       1       0       0       0       0       0       0
  2059 ;;Total ram usage:        1 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; Hardware stack levels required when called: 11
  2062 ;; This function calls:
  2063 ;;		_sem_init
  2064 ;; This function is called by:
  2065 ;;		_config_app
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text3
  2070   0019B2                     __ptext3:
  2071                           	callstack 0
  2072   0019B2                     _create_pipe:
  2073                           	callstack 17
  2074   0019B2                     
  2075                           ;pipe.c: 5: void create_pipe(pipe_t *p);pipe.c: 6: {;pipe.c: 7:     p->pipe_pos_read = 0
      +                          ;
  2076   0019B2  0101               	movlb	1	; () banked
  2077   0019B4  516A               	movf	create_pipe@p& (0+255),w,b
  2078   0019B6  6ED9               	movwf	fsr2l,c
  2079   0019B8  6ADA               	clrf	fsr2h,c
  2080   0019BA  6ADF               	clrf	indf2,c
  2081   0019BC                     
  2082                           ; BSR set to: 1
  2083                           ;pipe.c: 8:     p->pipe_pos_write = 0;
  2084   0019BC  516A               	movf	create_pipe@p& (0+255),w,b
  2085   0019BE  6ED9               	movwf	fsr2l,c
  2086   0019C0  6ADA               	clrf	fsr2h,c
  2087   0019C2  0E01               	movlw	1
  2088   0019C4  26D9               	addwf	fsr2l,f,c
  2089   0019C6  6ADF               	clrf	indf2,c
  2090   0019C8                     
  2091                           ; BSR set to: 1
  2092                           ;pipe.c: 10:     sem_init(&p->pipe_sem_read, 0);
  2093   0019C8  516A               	movf	create_pipe@p& (0+255),w,b
  2094   0019CA  0F05               	addlw	5
  2095   0019CC  6F66               	movwf	sem_init@s& (0+255),b
  2096   0019CE  0E00               	movlw	0
  2097   0019D0  6F67               	movwf	sem_init@init_value& (0+255),b
  2098   0019D2  ECF4  F00C         	call	_sem_init	;wreg free
  2099   0019D6                     
  2100                           ;pipe.c: 11:     sem_init(&p->pipe_sem_write, 3);
  2101   0019D6  0101               	movlb	1	; () banked
  2102   0019D8  516A               	movf	create_pipe@p& (0+255),w,b
  2103   0019DA  0F13               	addlw	19
  2104   0019DC  6F66               	movwf	sem_init@s& (0+255),b
  2105   0019DE  0E03               	movlw	3
  2106   0019E0  6F67               	movwf	sem_init@init_value& (0+255),b
  2107   0019E2  ECF4  F00C         	call	_sem_init	;wreg free
  2108   0019E6  0012               	return		;funcret
  2109   0019E8                     __end_of_create_pipe:
  2110                           	callstack 0
  2111                           
  2112 ;; *************** function _sem_init *****************
  2113 ;; Defined at:
  2114 ;;		line 10 in file "sync.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  s               1  102[BANK1 ] PTR struct semaphore
  2117 ;;		 -> canal(33), 
  2118 ;;  init_value      1  103[BANK1 ] unsigned char 
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2130 ;;      Params:         0       0       2       0       0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2132 ;;      Temps:          0       0       2       0       0       0       0       0       0
  2133 ;;      Totals:         0       0       4       0       0       0       0       0       0
  2134 ;;Total ram usage:        4 bytes
  2135 ;; Hardware stack levels used: 1
  2136 ;; Hardware stack levels required when called: 10
  2137 ;; This function calls:
  2138 ;;		Nothing
  2139 ;; This function is called by:
  2140 ;;		_create_pipe
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           	psect	text4
  2145   0019E8                     __ptext4:
  2146                           	callstack 0
  2147   0019E8                     _sem_init:
  2148                           	callstack 17
  2149   0019E8                     
  2150                           ;sync.c: 10: void sem_init(sem_t *s, uint8_t init_value);sync.c: 11: {;sync.c: 12:     s
      +                          ->contador = init_value;
  2151   0019E8  0101               	movlb	1	; () banked
  2152   0019EA  5167               	movf	sem_init@init_value& (0+255),w,b
  2153   0019EC  6F68               	movwf	??_sem_init& (0+255),b
  2154   0019EE  6B69               	clrf	(??_sem_init+1)& (0+255),b
  2155   0019F0  5166               	movf	sem_init@s& (0+255),w,b
  2156   0019F2  6ED9               	movwf	fsr2l,c
  2157   0019F4  6ADA               	clrf	fsr2h,c
  2158   0019F6  C168  FFDE         	movff	??_sem_init,postinc2
  2159   0019FA  C169  FFDD         	movff	??_sem_init+1,postdec2
  2160   0019FE                     
  2161                           ; BSR set to: 1
  2162                           ;sync.c: 13:     s->sem_queue_in = 0;
  2163   0019FE  5166               	movf	sem_init@s& (0+255),w,b
  2164   001A00  6ED9               	movwf	fsr2l,c
  2165   001A02  6ADA               	clrf	fsr2h,c
  2166   001A04  0E0C               	movlw	12
  2167   001A06  26D9               	addwf	fsr2l,f,c
  2168   001A08  6ADF               	clrf	indf2,c
  2169   001A0A                     
  2170                           ; BSR set to: 1
  2171                           ;sync.c: 14:     s->sem_queue_out = 0;
  2172   001A0A  5166               	movf	sem_init@s& (0+255),w,b
  2173   001A0C  6ED9               	movwf	fsr2l,c
  2174   001A0E  6ADA               	clrf	fsr2h,c
  2175   001A10  0E0D               	movlw	13
  2176   001A12  26D9               	addwf	fsr2l,f,c
  2177   001A14  6ADF               	clrf	indf2,c
  2178   001A16                     
  2179                           ; BSR set to: 1
  2180   001A16  0012               	return		;funcret
  2181   001A18                     __end_of_sem_init:
  2182                           	callstack 0
  2183                           
  2184 ;; *************** function _conf_timer_0 *****************
  2185 ;; Defined at:
  2186 ;;		line 7 in file "hardware.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		wreg, status,2
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2200 ;;      Params:         0       0       0       0       0       0       0       0       0
  2201 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2203 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2204 ;;Total ram usage:        0 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; Hardware stack levels required when called: 10
  2207 ;; This function calls:
  2208 ;;		Nothing
  2209 ;; This function is called by:
  2210 ;;		_os_start
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text5
  2215   001AC4                     __ptext5:
  2216                           	callstack 0
  2217   001AC4                     _conf_timer_0:
  2218                           	callstack 19
  2219   001AC4                     
  2220                           ;hardware.c: 10:     T0CONbits.T0CS = 0;
  2221   001AC4  9AD5               	bcf	213,5,c	;volatile
  2222                           
  2223                           ;hardware.c: 11:     T0CONbits.PSA = 0;
  2224   001AC6  96D5               	bcf	213,3,c	;volatile
  2225   001AC8                     
  2226                           ;hardware.c: 12:     T0CONbits.T0PS = 0b110;
  2227   001AC8  50D5               	movf	213,w,c	;volatile
  2228   001ACA  0BF8               	andlw	-8
  2229   001ACC  0906               	iorlw	6
  2230   001ACE  6ED5               	movwf	213,c	;volatile
  2231                           
  2232                           ;hardware.c: 13:     TMR0 = 128;
  2233   001AD0  0E00               	movlw	0
  2234   001AD2  6ED7               	movwf	215,c	;volatile
  2235   001AD4  0E80               	movlw	128
  2236   001AD6  6ED6               	movwf	214,c	;volatile
  2237   001AD8                     
  2238                           ;hardware.c: 14:     INTCONbits.TMR0IE = 1;
  2239   001AD8  8AF2               	bsf	242,5,c	;volatile
  2240   001ADA                     
  2241                           ;hardware.c: 15:     INTCONbits.TMR0IF = 0;
  2242   001ADA  94F2               	bcf	242,2,c	;volatile
  2243   001ADC                     
  2244                           ;hardware.c: 16:     T0CONbits.TMR0ON = 1;
  2245   001ADC  8ED5               	bsf	213,7,c	;volatile
  2246   001ADE  0012               	return		;funcret
  2247   001AE0                     __end_of_conf_timer_0:
  2248                           	callstack 0
  2249                           
  2250 ;; *************** function _conf_interrupts *****************
  2251 ;; Defined at:
  2252 ;;		line 19 in file "hardware.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		None
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2266 ;;      Params:         0       0       0       0       0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2269 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2270 ;;Total ram usage:        0 bytes
  2271 ;; Hardware stack levels used: 1
  2272 ;; Hardware stack levels required when called: 10
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_os_start
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text6
  2281   001B38                     __ptext6:
  2282                           	callstack 0
  2283   001B38                     _conf_interrupts:
  2284                           	callstack 19
  2285   001B38                     
  2286                           ;hardware.c: 21:     INTCONbits.PEIE = 1;
  2287   001B38  8CF2               	bsf	242,6,c	;volatile
  2288   001B3A  0012               	return		;funcret
  2289   001B3C                     __end_of_conf_interrupts:
  2290                           	callstack 0
  2291                           
  2292 ;; *************** function _SRAMInitHeap *****************
  2293 ;; Defined at:
  2294 ;;		line 276 in file "mem.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  count           2  104[BANK1 ] unsigned int 
  2299 ;;  pHeap           2  102[BANK1 ] PTR unsigned char 
  2300 ;;		 -> _uDynamicHeap(512), 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2310 ;;      Params:         0       0       0       0       0       0       0       0       0
  2311 ;;      Locals:         0       0       4       0       0       0       0       0       0
  2312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2313 ;;      Totals:         0       0       4       0       0       0       0       0       0
  2314 ;;Total ram usage:        4 bytes
  2315 ;; Hardware stack levels used: 1
  2316 ;; Hardware stack levels required when called: 10
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		_os_start
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           	psect	text7
  2325   00180E                     __ptext7:
  2326                           	callstack 0
  2327   00180E                     _SRAMInitHeap:
  2328                           	callstack 19
  2329   00180E                     
  2330                           ;mem.c: 278:  unsigned char * pHeap;;mem.c: 279:       unsigned int count;;mem.c: 281:  
      +                          pHeap = _uDynamicHeap;
  2331   00180E  0E80               	movlw	low __uDynamicHeap
  2332   001810  0101               	movlb	1	; () banked
  2333   001812  6F66               	movwf	SRAMInitHeap@pHeap& (0+255),b
  2334   001814  0E04               	movlw	high __uDynamicHeap
  2335   001816  6F67               	movwf	(SRAMInitHeap@pHeap+1)& (0+255),b
  2336   001818                     
  2337                           ; BSR set to: 1
  2338                           ;mem.c: 282:  count = 0x200 -1;
  2339   001818  0E01               	movlw	1
  2340   00181A  6F69               	movwf	(SRAMInitHeap@count+1)& (0+255),b
  2341   00181C  6968               	setf	SRAMInitHeap@count& (0+255),b
  2342   00181E                     l2355:
  2343                           
  2344                           ; BSR set to: 1
  2345                           ;mem.c: 285:  {;mem.c: 286:   if (count > 0x7F)
  2346   00181E  5169               	movf	(SRAMInitHeap@count+1)& (0+255),w,b
  2347   001820  E109               	bnz	u1600
  2348   001822  0E80               	movlw	128
  2349   001824  5D68               	subwf	SRAMInitHeap@count& (0+255),w,b
  2350   001826  A0D8               	btfss	status,0,c
  2351   001828  EF18  F00C         	goto	u1601
  2352   00182C  EF1A  F00C         	goto	u1600
  2353   001830                     u1601:
  2354   001830  EF2C  F00C         	goto	l2363
  2355   001834                     u1600:
  2356   001834                     
  2357                           ; BSR set to: 1
  2358                           ;mem.c: 287:   {;mem.c: 288:    *pHeap = 0x7F;
  2359   001834  C166  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  2360   001838  C167  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  2361   00183C  0E7F               	movlw	127
  2362   00183E  6EDF               	movwf	indf2,c
  2363   001840                     
  2364                           ; BSR set to: 1
  2365                           ;mem.c: 289:    pHeap += 0x7F;
  2366   001840  0E7F               	movlw	127
  2367   001842  2766               	addwf	SRAMInitHeap@pHeap& (0+255),f,b
  2368   001844  0E00               	movlw	0
  2369   001846  2367               	addwfc	(SRAMInitHeap@pHeap+1)& (0+255),f,b
  2370   001848                     
  2371                           ; BSR set to: 1
  2372                           ;mem.c: 290:    count = count - 0x7F;
  2373   001848  0E81               	movlw	129
  2374   00184A  2568               	addwf	SRAMInitHeap@count& (0+255),w,b
  2375   00184C  6F68               	movwf	SRAMInitHeap@count& (0+255),b
  2376   00184E  0EFF               	movlw	255
  2377   001850  2169               	addwfc	(SRAMInitHeap@count+1)& (0+255),w,b
  2378   001852  6F69               	movwf	(SRAMInitHeap@count+1)& (0+255),b
  2379                           
  2380                           ;mem.c: 291:   }
  2381   001854  EF0F  F00C         	goto	l2355
  2382   001858                     l2363:
  2383                           
  2384                           ; BSR set to: 1
  2385                           ;mem.c: 293:   {;mem.c: 294:    *pHeap = count;
  2386   001858  C166  FFD9         	movff	SRAMInitHeap@pHeap,fsr2l
  2387   00185C  C167  FFDA         	movff	SRAMInitHeap@pHeap+1,fsr2h
  2388   001860  C168  FFDF         	movff	SRAMInitHeap@count,indf2
  2389   001864                     
  2390                           ; BSR set to: 1
  2391                           ;mem.c: 295:    *(pHeap + count) = 0;
  2392   001864  5168               	movf	SRAMInitHeap@count& (0+255),w,b
  2393   001866  2566               	addwf	SRAMInitHeap@pHeap& (0+255),w,b
  2394   001868  6ED9               	movwf	fsr2l,c
  2395   00186A  5169               	movf	(SRAMInitHeap@count+1)& (0+255),w,b
  2396   00186C  2167               	addwfc	(SRAMInitHeap@pHeap+1)& (0+255),w,b
  2397   00186E  6EDA               	movwf	fsr2h,c
  2398   001870  6ADF               	clrf	indf2,c
  2399   001872                     
  2400                           ; BSR set to: 1
  2401   001872  0012               	return		;funcret
  2402   001874                     __end_of_SRAMInitHeap:
  2403                           	callstack 0
  2404                           
  2405 ;; *************** function _os_config *****************
  2406 ;; Defined at:
  2407 ;;		line 12 in file "kernel.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;		None
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;		None
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      void 
  2414 ;; Registers used:
  2415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2421 ;;      Params:         0       0       0       0       0       0       0       0       0
  2422 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2423 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2424 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2425 ;;Total ram usage:        0 bytes
  2426 ;; Hardware stack levels used: 1
  2427 ;; Hardware stack levels required when called: 11
  2428 ;; This function calls:
  2429 ;;		_os_create_task
  2430 ;; This function is called by:
  2431 ;;		_main
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text8
  2436   001A9C                     __ptext8:
  2437                           	callstack 0
  2438   001A9C                     _os_config:
  2439                           	callstack 19
  2440   001A9C                     
  2441                           ;kernel.c: 14:     readyQueue.readyQueueSize = 0;
  2442   001A9C  0E00               	movlw	0
  2443   001A9E  CFE8 F47D          	movff	wreg,_readyQueue+530
  2444                           
  2445                           ;kernel.c: 15:     readyQueue.taskRunning = 0;
  2446   001AA2  0E00               	movlw	0
  2447   001AA4  CFE8 F47E          	movff	wreg,_readyQueue+531
  2448   001AA8  0E00               	movlw	0
  2449   001AAA  CFE8 F47F          	movff	wreg,_readyQueue+532
  2450   001AAE                     
  2451                           ;kernel.c: 18:     os_create_task(0, os_idle_task, 1);
  2452   001AAE  0E18               	movlw	low _os_idle_task
  2453   001AB0  0101               	movlb	1	; () banked
  2454   001AB2  6F66               	movwf	os_create_task@task_f& (0+255),b
  2455   001AB4  0E1A               	movlw	high _os_idle_task
  2456   001AB6  6F67               	movwf	(os_create_task@task_f+1)& (0+255),b
  2457   001AB8  0E01               	movlw	1
  2458   001ABA  6F68               	movwf	os_create_task@prior& (0+255),b
  2459   001ABC  0E00               	movlw	0
  2460   001ABE  EC63  F00C         	call	_os_create_task	;# 
  2461   001AC2  0012               	return		;funcret
  2462   001AC4                     __end_of_os_config:
  2463                           	callstack 0
  2464                           
  2465 ;; *************** function _os_create_task *****************
  2466 ;; Defined at:
  2467 ;;		line 9 in file "syscall.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  id              1    wreg     unsigned char 
  2470 ;;  task_f          2  102[BANK1 ] PTR FTN()void 
  2471 ;;		 -> os_idle_task(1), tarefa_3(1), tarefa_2(1), tarefa_1(1), 
  2472 ;;  prior           1  104[BANK1 ] unsigned char 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  id              1    0[BANK2 ] unsigned char 
  2475 ;;  new_task      106    1[BANK2 ] struct tcb
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2485 ;;      Params:         0       0       3       0       0       0       0       0       0
  2486 ;;      Locals:         0       0       0     107       0       0       0       0       0
  2487 ;;      Temps:          0       0       1       0       0       0       0       0       0
  2488 ;;      Totals:         0       0       4     107       0       0       0       0       0
  2489 ;;Total ram usage:      111 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 10
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_main
  2496 ;;		_os_config
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text9
  2501   0018C6                     __ptext9:
  2502                           	callstack 0
  2503   0018C6                     _os_create_task:
  2504                           	callstack 20
  2505                           
  2506                           ;incstack = 0
  2507                           ;os_create_task@id stored from wreg
  2508   0018C6  0102               	movlb	2	; () banked
  2509   0018C8  6F00               	movwf	os_create_task@id& (0+255),b
  2510   0018CA                     
  2511                           ;syscall.c: 9: void os_create_task(uint8_t id, f_ptr task_f, uint8_t prior);syscall.c: 1
      +                          0: {;syscall.c: 11:     tcb_t new_task;;syscall.c: 13:     new_task.task_id = id;
  2512   0018CA  C200  F201         	movff	os_create_task@id,os_create_task@new_task
  2513   0018CE                     
  2514                           ;syscall.c: 14:     new_task.task_func = task_f;
  2515   0018CE  C166  F202         	movff	os_create_task@task_f,os_create_task@new_task+1
  2516   0018D2  C167  F203         	movff	os_create_task@task_f+1,os_create_task@new_task+2
  2517   0018D6                     
  2518                           ;syscall.c: 15:     new_task.task_priority = prior;
  2519   0018D6  C168  F205         	movff	os_create_task@prior,os_create_task@new_task+4
  2520   0018DA                     
  2521                           ;syscall.c: 16:     new_task.task_state = READY;
  2522   0018DA  0102               	movlb	2	; () banked
  2523   0018DC  6B04               	clrf	(os_create_task@new_task+3)& (0+255),b
  2524   0018DE                     
  2525                           ; BSR set to: 2
  2526                           ;syscall.c: 18:     new_task.BSR_reg = 0;
  2527   0018DE  6B07               	clrf	(os_create_task@new_task+6)& (0+255),b
  2528   0018E0                     
  2529                           ; BSR set to: 2
  2530                           ;syscall.c: 19:     new_task.STATUS_reg = 0;
  2531   0018E0  6B09               	clrf	(os_create_task@new_task+8)& (0+255),b
  2532   0018E2                     
  2533                           ; BSR set to: 2
  2534                           ;syscall.c: 20:     new_task.WORK_reg = 0;
  2535   0018E2  6B08               	clrf	(os_create_task@new_task+7)& (0+255),b
  2536   0018E4                     
  2537                           ; BSR set to: 2
  2538                           ;syscall.c: 21:     new_task.task_sp = 0;
  2539   0018E4  6B6A               	clrf	(os_create_task@new_task+105)& (0+255),b
  2540   0018E6                     
  2541                           ; BSR set to: 2
  2542                           ;syscall.c: 24:     readyQueue.readyQueue[readyQueue.readyQueueSize++] = new_task;
  2543   0018E6  EE22  F001         	lfsr	2,os_create_task@new_task
  2544   0018EA  C47D  F169         	movff	_readyQueue+530,??_os_create_task
  2545   0018EE  0101               	movlb	1	; () banked
  2546   0018F0  5169               	movf	??_os_create_task& (0+255),w,b
  2547   0018F2  0D6A               	mullw	106
  2548   0018F4  0E6B               	movlw	low _readyQueue
  2549   0018F6  24F3               	addwf	243,w,c
  2550   0018F8  6EE1               	movwf	fsr1l,c
  2551   0018FA  0E02               	movlw	high _readyQueue
  2552   0018FC  20F4               	addwfc	prodh,w,c
  2553   0018FE  6EE2               	movwf	fsr1h,c
  2554   001900  0E69               	movlw	105
  2555   001902                     u4041:
  2556   001902  CFDB FFE3          	movff	plusw2,plusw1
  2557   001906  06E8               	decf	wreg,f,c
  2558   001908  E2FC               	bc	u4041
  2559   00190A                     
  2560                           ; BSR set to: 1
  2561   00190A  C47D  FFE8         	movff	_readyQueue+530,wreg
  2562   00190E  0F01               	addlw	1
  2563   001910  CFE8 F47D          	movff	wreg,_readyQueue+530
  2564   001914                     
  2565                           ; BSR set to: 1
  2566   001914  0012               	return		;funcret
  2567   001916                     __end_of_os_create_task:
  2568                           	callstack 0
  2569                           
  2570 ;; *************** function _os_idle_task *****************
  2571 ;; Defined at:
  2572 ;;		line 43 in file "kernel.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;		None
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;		None
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		wreg, status,2, status,0
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2586 ;;      Params:         0       0       0       0       0       0       0       0       0
  2587 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2588 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2589 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2590 ;;Total ram usage:        1 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; Hardware stack levels required when called: 4
  2593 ;; This function calls:
  2594 ;;		Nothing
  2595 ;; This function is called by:
  2596 ;;		_os_config
  2597 ;;		_rr_scheduler
  2598 ;;		i2_rr_scheduler
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text10
  2603   001A18                     __ptext10:
  2604                           	callstack 0
  2605   001A18                     _os_idle_task:
  2606                           	callstack 22
  2607   001A18                     
  2608                           ;kernel.c: 45:     TRISDbits.RD3 = 0;
  2609   001A18  9695               	bcf	149,3,c	;volatile
  2610   001A1A                     l1485:
  2611                           
  2612                           ;kernel.c: 49:         LATDbits.LD3 = ~PORTDbits.RD3;
  2613   001A1A  B683               	btfsc	131,3,c	;volatile
  2614   001A1C  EF12  F00D         	goto	u53_21
  2615   001A20  EF15  F00D         	goto	u53_20
  2616   001A24                     u53_21:
  2617   001A24  0E01               	movlw	1
  2618   001A26  EF16  F00D         	goto	u53_26
  2619   001A2A                     u53_20:
  2620   001A2A  0E00               	movlw	0
  2621   001A2C                     u53_26:
  2622   001A2C  0AFF               	xorlw	255
  2623   001A2E  6E01               	movwf	??_os_idle_task^0,c
  2624   001A30  4601               	rlncf	??_os_idle_task^0,f,c
  2625   001A32  4601               	rlncf	??_os_idle_task^0,f,c
  2626   001A34  4601               	rlncf	??_os_idle_task^0,f,c
  2627   001A36  508C               	movf	140,w,c	;volatile
  2628   001A38  1801               	xorwf	??_os_idle_task^0,w,c
  2629   001A3A  0BF7               	andlw	-9
  2630   001A3C  1801               	xorwf	??_os_idle_task^0,w,c
  2631   001A3E  6E8C               	movwf	140,c	;volatile
  2632   001A40  EF0D  F00D         	goto	l1485
  2633   001A44  0012               	return		;funcret
  2634   001A46                     __end_of_os_idle_task:
  2635                           	callstack 0
  2636                           
  2637 ;; *************** function _tarefa_1 *****************
  2638 ;; Defined at:
  2639 ;;		line 24 in file "user_app.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  dados           2   73[BANK1 ] PTR unsigned char 
  2644 ;;		 -> _uDynamicHeap(512), NULL(0), 
  2645 ;;  index           2   71[BANK1 ] int 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      void 
  2648 ;; Registers used:
  2649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2655 ;;      Params:         0       0       0       0       0       0       0       0       0
  2656 ;;      Locals:         0       0       4       0       0       0       0       0       0
  2657 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2658 ;;      Totals:         1       0       4       0       0       0       0       0       0
  2659 ;;Total ram usage:        5 bytes
  2660 ;; Hardware stack levels used: 1
  2661 ;; Hardware stack levels required when called: 9
  2662 ;; This function calls:
  2663 ;;		_SRAMalloc
  2664 ;;		_SRAMfree
  2665 ;;		___awmod
  2666 ;;		_os_delay
  2667 ;;		_write_pipe
  2668 ;; This function is called by:
  2669 ;;		_main
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text11
  2674   001374                     __ptext11:
  2675                           	callstack 0
  2676   001374                     _tarefa_1:
  2677                           	callstack 17
  2678   001374                     
  2679                           ;user_app.c: 26:     char *dados = (char*)SRAMalloc(sizeof(char) * 3);
  2680   001374  0E03               	movlw	3
  2681   001376  ECDB  F007         	call	_SRAMalloc
  2682   00137A  C08A  F149         	movff	?_SRAMalloc,tarefa_1@dados
  2683   00137E  C08B  F14A         	movff	?_SRAMalloc+1,tarefa_1@dados+1
  2684   001382                     
  2685                           ;user_app.c: 27:     dados[0] = 'a';
  2686   001382  C149  FFD9         	movff	tarefa_1@dados,fsr2l
  2687   001386  C14A  FFDA         	movff	tarefa_1@dados+1,fsr2h
  2688   00138A  0E61               	movlw	97
  2689   00138C  6EDF               	movwf	indf2,c
  2690   00138E                     
  2691                           ;user_app.c: 28:     dados[1] = 'b';
  2692   00138E  0101               	movlb	1	; () banked
  2693   001390  EE20 F001          	lfsr	2,1
  2694   001394  5149               	movf	tarefa_1@dados& (0+255),w,b
  2695   001396  26D9               	addwf	fsr2l,f,c
  2696   001398  514A               	movf	(tarefa_1@dados+1)& (0+255),w,b
  2697   00139A  22DA               	addwfc	fsr2h,f,c
  2698   00139C  0E62               	movlw	98
  2699   00139E  6EDF               	movwf	indf2,c
  2700   0013A0                     
  2701                           ; BSR set to: 1
  2702                           ;user_app.c: 29:     dados[2] = 'c';
  2703   0013A0  EE20 F002          	lfsr	2,2
  2704   0013A4  5149               	movf	tarefa_1@dados& (0+255),w,b
  2705   0013A6  26D9               	addwf	fsr2l,f,c
  2706   0013A8  514A               	movf	(tarefa_1@dados+1)& (0+255),w,b
  2707   0013AA  22DA               	addwfc	fsr2h,f,c
  2708   0013AC  0E63               	movlw	99
  2709   0013AE  6EDF               	movwf	indf2,c
  2710   0013B0                     
  2711                           ; BSR set to: 1
  2712                           ;user_app.c: 31:     int index = 0;
  2713   0013B0  0E00               	movlw	0
  2714   0013B2  6F48               	movwf	(tarefa_1@index+1)& (0+255),b
  2715   0013B4  0E00               	movlw	0
  2716   0013B6  6F47               	movwf	tarefa_1@index& (0+255),b
  2717   0013B8                     l4199:
  2718                           
  2719                           ;user_app.c: 33:         LATDbits.LD0 = ~PORTDbits.RD0;
  2720   0013B8  B083               	btfsc	131,0,c	;volatile
  2721   0013BA  EFE1  F009         	goto	u388_21
  2722   0013BE  EFE4  F009         	goto	u388_20
  2723   0013C2                     u388_21:
  2724   0013C2  0E01               	movlw	1
  2725   0013C4  EFE5  F009         	goto	u388_26
  2726   0013C8                     u388_20:
  2727   0013C8  0E00               	movlw	0
  2728   0013CA                     u388_26:
  2729   0013CA  0AFF               	xorlw	255
  2730   0013CC  6E17               	movwf	??_tarefa_1^0,c
  2731   0013CE  508C               	movf	140,w,c	;volatile
  2732   0013D0  1817               	xorwf	??_tarefa_1^0,w,c
  2733   0013D2  0BFE               	andlw	-2
  2734   0013D4  1817               	xorwf	??_tarefa_1^0,w,c
  2735   0013D6  6E8C               	movwf	140,c	;volatile
  2736   0013D8                     
  2737                           ;user_app.c: 35:         write_pipe(&canal, dados[index]);
  2738   0013D8  0E60               	movlw	low _canal
  2739   0013DA  0100               	movlb	0	; () banked
  2740   0013DC  6F8A               	movwf	write_pipe@p& (0+255),b
  2741   0013DE  0101               	movlb	1	; () banked
  2742   0013E0  5147               	movf	tarefa_1@index& (0+255),w,b
  2743   0013E2  2549               	addwf	tarefa_1@dados& (0+255),w,b
  2744   0013E4  6ED9               	movwf	fsr2l,c
  2745   0013E6  5148               	movf	(tarefa_1@index+1)& (0+255),w,b
  2746   0013E8  214A               	addwfc	(tarefa_1@dados+1)& (0+255),w,b
  2747   0013EA  6EDA               	movwf	fsr2h,c
  2748   0013EC  50DF               	movf	indf2,w,c
  2749   0013EE  0100               	movlb	0	; () banked
  2750   0013F0  6F8B               	movwf	write_pipe@buffer& (0+255),b
  2751   0013F2  EC93  F00B         	call	_write_pipe	;wreg free
  2752   0013F6                     
  2753                           ;user_app.c: 36:         index = (index + 1) % 3;
  2754   0013F6  0E01               	movlw	1
  2755   0013F8  0101               	movlb	1	; () banked
  2756   0013FA  2547               	addwf	tarefa_1@index& (0+255),w,b
  2757   0013FC  6F4B               	movwf	___awmod@dividend& (0+255),b
  2758   0013FE  0E00               	movlw	0
  2759   001400  2148               	addwfc	(tarefa_1@index+1)& (0+255),w,b
  2760   001402  6F4C               	movwf	(___awmod@dividend+1)& (0+255),b
  2761   001404  0E00               	movlw	0
  2762   001406  6F4E               	movwf	(___awmod@divisor+1)& (0+255),b
  2763   001408  0E03               	movlw	3
  2764   00140A  6F4D               	movwf	___awmod@divisor& (0+255),b
  2765   00140C  EC12  F00A         	call	___awmod	;wreg free
  2766   001410  C14B  F147         	movff	?___awmod,tarefa_1@index
  2767   001414  C14C  F148         	movff	?___awmod+1,tarefa_1@index+1
  2768   001418                     
  2769                           ;user_app.c: 37:         os_delay(50);
  2770   001418  0E32               	movlw	50
  2771   00141A  ECAB  F006         	call	_os_delay
  2772   00141E  EFDC  F009         	goto	l4199
  2773   001422  0012               	return		;funcret
  2774   001424                     __end_of_tarefa_1:
  2775                           	callstack 0
  2776                           
  2777 ;; *************** function _write_pipe *****************
  2778 ;; Defined at:
  2779 ;;		line 30 in file "pipe.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;  p               1    9[BANK0 ] PTR struct pipe
  2782 ;;		 -> canal(33), 
  2783 ;;  buffer          1   10[BANK0 ] unsigned char 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2795 ;;      Params:         0       2       0       0       0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2797 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2798 ;;      Totals:         1       2       0       0       0       0       0       0       0
  2799 ;;Total ram usage:        3 bytes
  2800 ;; Hardware stack levels used: 1
  2801 ;; Hardware stack levels required when called: 8
  2802 ;; This function calls:
  2803 ;;		___awmod
  2804 ;;		_sem_post
  2805 ;;		_sem_wait
  2806 ;; This function is called by:
  2807 ;;		_tarefa_1
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           	psect	text12
  2812   001726                     __ptext12:
  2813                           	callstack 0
  2814   001726                     _write_pipe:
  2815                           	callstack 17
  2816   001726                     
  2817                           ;pipe.c: 30: void write_pipe(pipe_t *p, char buffer);pipe.c: 31: {;pipe.c: 32:     (INTC
      +                          ONbits.GIE = 0);
  2818   001726  9EF2               	bcf	242,7,c	;volatile
  2819   001728                     
  2820                           ;pipe.c: 35:     sem_wait(&p->pipe_sem_write);
  2821   001728  0100               	movlb	0	; () banked
  2822   00172A  518A               	movf	write_pipe@p& (0+255),w,b
  2823   00172C  0F13               	addlw	19
  2824   00172E  0101               	movlb	1	; () banked
  2825   001730  6F57               	movwf	sem_wait@s& (0+255),b
  2826   001732  EC01  F004         	call	_sem_wait	;wreg free
  2827   001736                     
  2828                           ;pipe.c: 37:     p->pipe_data[p->pipe_pos_write] = buffer;
  2829   001736  0100               	movlb	0	; () banked
  2830   001738  518A               	movf	write_pipe@p& (0+255),w,b
  2831   00173A  6ED9               	movwf	fsr2l,c
  2832   00173C  6ADA               	clrf	fsr2h,c
  2833   00173E  0E01               	movlw	1
  2834   001740  26D9               	addwf	fsr2l,f,c
  2835   001742  50DF               	movf	indf2,w,c
  2836   001744  6E0D               	movwf	??_write_pipe^0,c
  2837   001746  518A               	movf	write_pipe@p& (0+255),w,b
  2838   001748  240D               	addwf	??_write_pipe^0,w,c
  2839   00174A  6ED9               	movwf	fsr2l,c
  2840   00174C  6ADA               	clrf	fsr2h,c
  2841   00174E  0E02               	movlw	2
  2842   001750  26D9               	addwf	fsr2l,f,c
  2843   001752  C08B  FFDF         	movff	write_pipe@buffer,indf2
  2844   001756                     
  2845                           ; BSR set to: 0
  2846                           ;pipe.c: 38:     p->pipe_pos_write = (p->pipe_pos_write + 1) % 3;
  2847   001756  518A               	movf	write_pipe@p& (0+255),w,b
  2848   001758  6ED9               	movwf	fsr2l,c
  2849   00175A  6ADA               	clrf	fsr2h,c
  2850   00175C  0E01               	movlw	1
  2851   00175E  26D9               	addwf	fsr2l,f,c
  2852   001760  518A               	movf	write_pipe@p& (0+255),w,b
  2853   001762  6EE1               	movwf	fsr1l,c
  2854   001764  6AE2               	clrf	fsr1h,c
  2855   001766  0E01               	movlw	1
  2856   001768  26E1               	addwf	fsr1l,f,c
  2857   00176A  50E7               	movf	indf1,w,c
  2858   00176C  6E0D               	movwf	??_write_pipe^0,c
  2859   00176E  0E01               	movlw	1
  2860   001770  240D               	addwf	??_write_pipe^0,w,c
  2861   001772  0101               	movlb	1	; () banked
  2862   001774  6F4B               	movwf	___awmod@dividend& (0+255),b
  2863   001776  6B4C               	clrf	(___awmod@dividend+1)& (0+255),b
  2864   001778  0E00               	movlw	0
  2865   00177A  234C               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  2866   00177C  0E00               	movlw	0
  2867   00177E  6F4E               	movwf	(___awmod@divisor+1)& (0+255),b
  2868   001780  0E03               	movlw	3
  2869   001782  6F4D               	movwf	___awmod@divisor& (0+255),b
  2870   001784  EC12  F00A         	call	___awmod	;wreg free
  2871   001788  0101               	movlb	1	; () banked
  2872   00178A  514B               	movf	?___awmod& (0+255),w,b
  2873   00178C  6EDF               	movwf	indf2,c
  2874   00178E                     
  2875                           ; BSR set to: 1
  2876                           ;pipe.c: 41:     sem_post(&p->pipe_sem_read);
  2877   00178E  0100               	movlb	0	; () banked
  2878   001790  518A               	movf	write_pipe@p& (0+255),w,b
  2879   001792  0F05               	addlw	5
  2880   001794  0101               	movlb	1	; () banked
  2881   001796  6F51               	movwf	sem_post@s& (0+255),b
  2882   001798  ECC1  F00A         	call	_sem_post	;wreg free
  2883   00179C                     
  2884                           ;pipe.c: 43:     (INTCONbits.GIE = 1);
  2885   00179C  8EF2               	bsf	242,7,c	;volatile
  2886   00179E  0012               	return		;funcret
  2887   0017A0                     __end_of_write_pipe:
  2888                           	callstack 0
  2889                           
  2890 ;; *************** function _sem_wait *****************
  2891 ;; Defined at:
  2892 ;;		line 17 in file "sync.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  s               1   87[BANK1 ] PTR struct semaphore
  2895 ;;		 -> canal(33), 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;		None
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2907 ;;      Params:         0       0       1       0       0       0       0       0       0
  2908 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2909 ;;      Temps:          0       0       7       0       0       0       0       0       0
  2910 ;;      Totals:         0       0       8       0       0       0       0       0       0
  2911 ;;Total ram usage:        8 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; Hardware stack levels required when called: 7
  2914 ;; This function calls:
  2915 ;;		___awmod
  2916 ;;		_scheduler
  2917 ;; This function is called by:
  2918 ;;		_read_pipe
  2919 ;;		_write_pipe
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text13
  2924   000802                     __ptext13:
  2925                           	callstack 0
  2926   000802                     _sem_wait:
  2927                           	callstack 17
  2928   000802                     
  2929                           ;sync.c: 17: void sem_wait(sem_t *s);sync.c: 18: {;sync.c: 19:     (INTCONbits.GIE = 0);
  2930   000802  9EF2               	bcf	242,7,c	;volatile
  2931   000804                     
  2932                           ;sync.c: 22:     s->contador--;
  2933   000804  0101               	movlb	1	; () banked
  2934   000806  5157               	movf	sem_wait@s& (0+255),w,b
  2935   000808  6ED9               	movwf	fsr2l,c
  2936   00080A  6ADA               	clrf	fsr2h,c
  2937   00080C  06DE               	decf	postinc2,f,c
  2938   00080E  0E00               	movlw	0
  2939   000810  5ADD               	subwfb	postdec2,f,c
  2940                           
  2941                           ;sync.c: 24:     if (s->contador < 0) {
  2942   000812  5157               	movf	sem_wait@s& (0+255),w,b
  2943   000814  6ED9               	movwf	fsr2l,c
  2944   000816  6ADA               	clrf	fsr2h,c
  2945   000818  0E01               	movlw	1
  2946   00081A  BEDB               	btfsc	plusw2,7,c
  2947   00081C  EF14  F004         	goto	i1u365_20
  2948   000820  EF12  F004         	goto	i1u365_21
  2949   000824                     i1u365_21:
  2950   000824  EF64  F005         	goto	i1l4021
  2951   000828                     i1u365_20:
  2952   000828                     
  2953                           ; BSR set to: 1
  2954                           ;sync.c: 26:         s->sem_queue[s->sem_queue_in] = readyQueue.taskRunning;
  2955   000828  EE24  F07E         	lfsr	2,_readyQueue+531
  2956   00082C  5157               	movf	sem_wait@s& (0+255),w,b
  2957   00082E  6EE1               	movwf	fsr1l,c
  2958   000830  6AE2               	clrf	fsr1h,c
  2959   000832  0E0C               	movlw	12
  2960   000834  26E1               	addwf	fsr1l,f,c
  2961   000836  50E7               	movf	indf1,w,c
  2962   000838  0D02               	mullw	2
  2963   00083A  5157               	movf	sem_wait@s& (0+255),w,b
  2964   00083C  24F3               	addwf	243,w,c
  2965   00083E  6EE1               	movwf	fsr1l,c
  2966   000840  6AE2               	clrf	fsr1h,c
  2967   000842  0E02               	movlw	2
  2968   000844  26E1               	addwf	fsr1l,f,c
  2969   000846  CFDE FFE6          	movff	postinc2,postinc1
  2970   00084A  CFDD FFE5          	movff	postdec2,postdec1
  2971   00084E                     
  2972                           ; BSR set to: 1
  2973                           ;sync.c: 27:         s->sem_queue_in = (s->sem_queue_in + 1) % 5;
  2974   00084E  5157               	movf	sem_wait@s& (0+255),w,b
  2975   000850  6ED9               	movwf	fsr2l,c
  2976   000852  6ADA               	clrf	fsr2h,c
  2977   000854  0E0C               	movlw	12
  2978   000856  26D9               	addwf	fsr2l,f,c
  2979   000858  5157               	movf	sem_wait@s& (0+255),w,b
  2980   00085A  6EE1               	movwf	fsr1l,c
  2981   00085C  6AE2               	clrf	fsr1h,c
  2982   00085E  0E0C               	movlw	12
  2983   000860  26E1               	addwf	fsr1l,f,c
  2984   000862  50E7               	movf	indf1,w,c
  2985   000864  6F58               	movwf	??_sem_wait& (0+255),b
  2986   000866  0E01               	movlw	1
  2987   000868  2558               	addwf	??_sem_wait& (0+255),w,b
  2988   00086A  6F4B               	movwf	___awmod@dividend& (0+255),b
  2989   00086C  6B4C               	clrf	(___awmod@dividend+1)& (0+255),b
  2990   00086E  0E00               	movlw	0
  2991   000870  234C               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  2992   000872  0E00               	movlw	0
  2993   000874  6F4E               	movwf	(___awmod@divisor+1)& (0+255),b
  2994   000876  0E05               	movlw	5
  2995   000878  6F4D               	movwf	___awmod@divisor& (0+255),b
  2996   00087A  EC12  F00A         	call	___awmod	;wreg free
  2997   00087E  0101               	movlb	1	; () banked
  2998   000880  514B               	movf	?___awmod& (0+255),w,b
  2999   000882  6EDF               	movwf	indf2,c
  3000   000884                     
  3001                           ; BSR set to: 1
  3002   000884  EE24  F07E         	lfsr	2,_readyQueue+531
  3003   000888  EE10 F003          	lfsr	1,3
  3004   00088C  50DE               	movf	postinc2,w,c
  3005   00088E  26E1               	addwf	fsr1l,f,c
  3006   000890  50DD               	movf	postdec2,w,c
  3007   000892  22E2               	addwfc	fsr1h,f,c
  3008   000894  04E6               	decf	postinc1,w,c
  3009   000896  A4D8               	btfss	status,2,c
  3010   000898  EF50  F004         	goto	i1u366_21
  3011   00089C  EF52  F004         	goto	i1u366_20
  3012   0008A0                     i1u366_21:
  3013   0008A0  EFC0  F004         	goto	i1l4001
  3014   0008A4                     i1u366_20:
  3015   0008A4                     
  3016                           ; BSR set to: 1
  3017   0008A4  EE24  F07E         	lfsr	2,_readyQueue+531
  3018   0008A8  EE10 F006          	lfsr	1,6
  3019   0008AC  50DE               	movf	postinc2,w,c
  3020   0008AE  26E1               	addwf	fsr1l,f,c
  3021   0008B0  50DD               	movf	postdec2,w,c
  3022   0008B2  22E2               	addwfc	fsr1h,f,c
  3023   0008B4  CFE0 FFE7          	movff	bsr,indf1	;volatile
  3024   0008B8  EE24  F07E         	lfsr	2,_readyQueue+531
  3025   0008BC  EE10 F008          	lfsr	1,8
  3026   0008C0  50DE               	movf	postinc2,w,c
  3027   0008C2  26E1               	addwf	fsr1l,f,c
  3028   0008C4  50DD               	movf	postdec2,w,c
  3029   0008C6  22E2               	addwfc	fsr1h,f,c
  3030   0008C8  CFD8 FFE7          	movff	status,indf1	;volatile
  3031   0008CC  EE24  F07E         	lfsr	2,_readyQueue+531
  3032   0008D0  EE10 F007          	lfsr	1,7
  3033   0008D4  50DE               	movf	postinc2,w,c
  3034   0008D6  26E1               	addwf	fsr1l,f,c
  3035   0008D8  50DD               	movf	postdec2,w,c
  3036   0008DA  22E2               	addwfc	fsr1h,f,c
  3037   0008DC  CFE8 FFE7          	movff	wreg,indf1	;volatile
  3038   0008E0  EE24  F07E         	lfsr	2,_readyQueue+531
  3039   0008E4  EE10 F069          	lfsr	1,105
  3040   0008E8  50DE               	movf	postinc2,w,c
  3041   0008EA  26E1               	addwf	fsr1l,f,c
  3042   0008EC  50DD               	movf	postdec2,w,c
  3043   0008EE  22E2               	addwfc	fsr1h,f,c
  3044   0008F0  6AE7               	clrf	indf1,c
  3045   0008F2  EFAE  F004         	goto	i1l3997
  3046   0008F6                     i1l3993:
  3047   0008F6  EE24  F07E         	lfsr	2,_readyQueue+531
  3048   0008FA  EE10 F069          	lfsr	1,105
  3049   0008FE  50DE               	movf	postinc2,w,c
  3050   000900  26E1               	addwf	fsr1l,f,c
  3051   000902  50DD               	movf	postdec2,w,c
  3052   000904  22E2               	addwfc	fsr1h,f,c
  3053   000906  50E7               	movf	indf1,w,c
  3054   000908  0101               	movlb	1	; () banked
  3055   00090A  6F58               	movwf	??_sem_wait& (0+255),b
  3056   00090C  5158               	movf	??_sem_wait& (0+255),w,b
  3057   00090E  0D03               	mullw	3
  3058   000910  CFF3 F159          	movff	prodl,??_sem_wait+1
  3059   000914  CFF4 F15A          	movff	prodh,??_sem_wait+2
  3060   000918  EE24  F07E         	lfsr	2,_readyQueue+531
  3061   00091C  CFDE F15B          	movff	postinc2,??_sem_wait+3
  3062   000920  CFDD F15C          	movff	postdec2,??_sem_wait+4
  3063   000924  5159               	movf	(??_sem_wait+1)& (0+255),w,b
  3064   000926  255B               	addwf	(??_sem_wait+3)& (0+255),w,b
  3065   000928  6F5D               	movwf	(??_sem_wait+5)& (0+255),b
  3066   00092A  515A               	movf	(??_sem_wait+2)& (0+255),w,b
  3067   00092C  215C               	addwfc	(??_sem_wait+4)& (0+255),w,b
  3068   00092E  6F5E               	movwf	(??_sem_wait+6)& (0+255),b
  3069   000930  0E09               	movlw	9
  3070   000932  255D               	addwf	(??_sem_wait+5)& (0+255),w,b
  3071   000934  6ED9               	movwf	fsr2l,c
  3072   000936  0E00               	movlw	0
  3073   000938  215E               	addwfc	(??_sem_wait+6)& (0+255),w,b
  3074   00093A  6EDA               	movwf	fsr2h,c
  3075   00093C  CFFD FFDE          	movff	tosl,postinc2	;volatile
  3076   000940  CFFE FFDE          	movff	tosh,postinc2	;volatile
  3077   000944  CFFF FFDE          	movff	tosu,postinc2	;volatile
  3078   000948                     
  3079                           ; BSR set to: 1
  3080   000948  EE24  F07E         	lfsr	2,_readyQueue+531
  3081   00094C  EE10 F069          	lfsr	1,105
  3082   000950  50DE               	movf	postinc2,w,c
  3083   000952  26E1               	addwf	fsr1l,f,c
  3084   000954  50DD               	movf	postdec2,w,c
  3085   000956  22E2               	addwfc	fsr1h,f,c
  3086   000958  2AE7               	incf	indf1,f,c
  3087   00095A  0006               	pop		;# 
  3088   00095C                     i1l3997:
  3089   00095C  50FC               	movf	252,w,c	;volatile
  3090   00095E  A4D8               	btfss	status,2,c
  3091   000960  EFB4  F004         	goto	i1u367_21
  3092   000964  EFB6  F004         	goto	i1u367_20
  3093   000968                     i1u367_21:
  3094   000968  EF7B  F004         	goto	i1l3993
  3095   00096C                     i1u367_20:
  3096   00096C  EE24  F07E         	lfsr	2,_readyQueue+531
  3097   000970  EE10 F003          	lfsr	1,3
  3098   000974  50DE               	movf	postinc2,w,c
  3099   000976  26E1               	addwf	fsr1l,f,c
  3100   000978  50DD               	movf	postdec2,w,c
  3101   00097A  22E2               	addwfc	fsr1h,f,c
  3102   00097C  0E03               	movlw	3
  3103   00097E  6EE7               	movwf	indf1,c
  3104   000980                     i1l4001:
  3105                           
  3106                           ;sync.c: 30:         scheduler();
  3107   000980  EC85  F00D         	call	_scheduler	;wreg free
  3108   000984  EE24  F07E         	lfsr	2,_readyQueue+531
  3109   000988  EE10 F003          	lfsr	1,3
  3110   00098C  50DE               	movf	postinc2,w,c
  3111   00098E  26E1               	addwf	fsr1l,f,c
  3112   000990  50DD               	movf	postdec2,w,c
  3113   000992  22E2               	addwfc	fsr1h,f,c
  3114   000994  50E7               	movf	indf1,w,c
  3115   000996  A4D8               	btfss	status,2,c
  3116   000998  EFD0  F004         	goto	i1u368_21
  3117   00099C  EFD2  F004         	goto	i1u368_20
  3118   0009A0                     i1u368_21:
  3119   0009A0  EF64  F005         	goto	i1l4021
  3120   0009A4                     i1u368_20:
  3121   0009A4  EE24  F07E         	lfsr	2,_readyQueue+531
  3122   0009A8  EE10 F006          	lfsr	1,6
  3123   0009AC  50DE               	movf	postinc2,w,c
  3124   0009AE  26E1               	addwf	fsr1l,f,c
  3125   0009B0  50DD               	movf	postdec2,w,c
  3126   0009B2  22E2               	addwfc	fsr1h,f,c
  3127   0009B4  50E7               	movf	indf1,w,c
  3128   0009B6  6EE0               	movwf	224,c	;volatile
  3129   0009B8  EE24  F07E         	lfsr	2,_readyQueue+531
  3130   0009BC  EE10 F008          	lfsr	1,8
  3131   0009C0  50DE               	movf	postinc2,w,c
  3132   0009C2  26E1               	addwf	fsr1l,f,c
  3133   0009C4  50DD               	movf	postdec2,w,c
  3134   0009C6  22E2               	addwfc	fsr1h,f,c
  3135   0009C8  50E7               	movf	indf1,w,c
  3136   0009CA  6ED8               	movwf	216,c	;volatile
  3137   0009CC  EE24  F07E         	lfsr	2,_readyQueue+531
  3138   0009D0  EE10 F007          	lfsr	1,7
  3139   0009D4  50DE               	movf	postinc2,w,c
  3140   0009D6  26E1               	addwf	fsr1l,f,c
  3141   0009D8  50DD               	movf	postdec2,w,c
  3142   0009DA  22E2               	addwfc	fsr1h,f,c
  3143   0009DC  50E7               	movf	indf1,w,c
  3144   0009DE  0101               	movlb	1	; () banked
  3145   0009E0  6F58               	movwf	??_sem_wait& (0+255),b
  3146   0009E2  5158               	movf	??_sem_wait& (0+255),w,b
  3147   0009E4                     
  3148                           ; BSR set to: 1
  3149   0009E4  6AFC               	clrf	252,c	;volatile
  3150   0009E6  EE24  F07E         	lfsr	2,_readyQueue+531
  3151   0009EA  EE10 F069          	lfsr	1,105
  3152   0009EE  50DE               	movf	postinc2,w,c
  3153   0009F0  26E1               	addwf	fsr1l,f,c
  3154   0009F2  50DD               	movf	postdec2,w,c
  3155   0009F4  22E2               	addwfc	fsr1h,f,c
  3156   0009F6  50E7               	movf	indf1,w,c
  3157   0009F8  A4D8               	btfss	status,2,c
  3158   0009FA  EF01  F005         	goto	i1u369_21
  3159   0009FE  EF03  F005         	goto	i1u369_20
  3160   000A02                     i1u369_21:
  3161   000A02  EF17  F005         	goto	i1l285
  3162   000A06                     i1u369_20:
  3163   000A06                     
  3164                           ; BSR set to: 1
  3165   000A06  0005               	push		;# 
  3166   000A08  EE24  F07E         	lfsr	2,_readyQueue+531
  3167   000A0C  EE10 F001          	lfsr	1,1
  3168   000A10  50DE               	movf	postinc2,w,c
  3169   000A12  26E1               	addwf	fsr1l,f,c
  3170   000A14  50DD               	movf	postdec2,w,c
  3171   000A16  22E2               	addwfc	fsr1h,f,c
  3172   000A18  CFE6 F158          	movff	postinc1,??_sem_wait
  3173   000A1C  CFE5 F159          	movff	postdec1,??_sem_wait+1
  3174   000A20  C158  FFFD         	movff	??_sem_wait,tosl	;volatile
  3175   000A24  C159  FFFE         	movff	??_sem_wait+1,tosh	;volatile
  3176   000A28  6AFF               	clrf	255,c	;volatile
  3177   000A2A  EF5A  F005         	goto	i1l4019
  3178   000A2E                     i1l285:
  3179                           
  3180                           ; BSR set to: 1
  3181   000A2E  0005               	push		;# 
  3182   000A30  EE24  F07E         	lfsr	2,_readyQueue+531
  3183   000A34  EE10 F069          	lfsr	1,105
  3184   000A38  50DE               	movf	postinc2,w,c
  3185   000A3A  26E1               	addwf	fsr1l,f,c
  3186   000A3C  50DD               	movf	postdec2,w,c
  3187   000A3E  22E2               	addwfc	fsr1h,f,c
  3188   000A40  06E7               	decf	indf1,f,c
  3189   000A42  EE24  F07E         	lfsr	2,_readyQueue+531
  3190   000A46  EE10 F069          	lfsr	1,105
  3191   000A4A  50DE               	movf	postinc2,w,c
  3192   000A4C  26E1               	addwf	fsr1l,f,c
  3193   000A4E  50DD               	movf	postdec2,w,c
  3194   000A50  22E2               	addwfc	fsr1h,f,c
  3195   000A52  50E7               	movf	indf1,w,c
  3196   000A54  0101               	movlb	1	; () banked
  3197   000A56  6F58               	movwf	??_sem_wait& (0+255),b
  3198   000A58  5158               	movf	??_sem_wait& (0+255),w,b
  3199   000A5A  0D03               	mullw	3
  3200   000A5C  CFF3 F159          	movff	prodl,??_sem_wait+1
  3201   000A60  CFF4 F15A          	movff	prodh,??_sem_wait+2
  3202   000A64  EE24  F07E         	lfsr	2,_readyQueue+531
  3203   000A68  CFDE F15B          	movff	postinc2,??_sem_wait+3
  3204   000A6C  CFDD F15C          	movff	postdec2,??_sem_wait+4
  3205   000A70  5159               	movf	(??_sem_wait+1)& (0+255),w,b
  3206   000A72  255B               	addwf	(??_sem_wait+3)& (0+255),w,b
  3207   000A74  6F5D               	movwf	(??_sem_wait+5)& (0+255),b
  3208   000A76  515A               	movf	(??_sem_wait+2)& (0+255),w,b
  3209   000A78  215C               	addwfc	(??_sem_wait+4)& (0+255),w,b
  3210   000A7A  6F5E               	movwf	(??_sem_wait+6)& (0+255),b
  3211   000A7C  0E09               	movlw	9
  3212   000A7E  255D               	addwf	(??_sem_wait+5)& (0+255),w,b
  3213   000A80  6ED9               	movwf	fsr2l,c
  3214   000A82  0E00               	movlw	0
  3215   000A84  215E               	addwfc	(??_sem_wait+6)& (0+255),w,b
  3216   000A86  6EDA               	movwf	fsr2h,c
  3217   000A88  CFDE FFFD          	movff	postinc2,tosl	;volatile
  3218   000A8C  CFDE FFFE          	movff	postinc2,tosh	;volatile
  3219   000A90  CFDD FFFF          	movff	postdec2,tosu	;volatile
  3220   000A94                     
  3221                           ; BSR set to: 1
  3222   000A94  EE24  F07E         	lfsr	2,_readyQueue+531
  3223   000A98  EE10 F069          	lfsr	1,105
  3224   000A9C  50DE               	movf	postinc2,w,c
  3225   000A9E  26E1               	addwf	fsr1l,f,c
  3226   000AA0  50DD               	movf	postdec2,w,c
  3227   000AA2  22E2               	addwfc	fsr1h,f,c
  3228   000AA4  50E7               	movf	indf1,w,c
  3229   000AA6  A4D8               	btfss	status,2,c
  3230   000AA8  EF58  F005         	goto	i1u370_21
  3231   000AAC  EF5A  F005         	goto	i1u370_20
  3232   000AB0                     i1u370_21:
  3233   000AB0  EF17  F005         	goto	i1l285
  3234   000AB4                     i1u370_20:
  3235   000AB4                     i1l4019:
  3236   000AB4  EE24  F07E         	lfsr	2,_readyQueue+531
  3237   000AB8  EE10 F003          	lfsr	1,3
  3238   000ABC  50DE               	movf	postinc2,w,c
  3239   000ABE  26E1               	addwf	fsr1l,f,c
  3240   000AC0  50DD               	movf	postdec2,w,c
  3241   000AC2  22E2               	addwfc	fsr1h,f,c
  3242   000AC4  0E01               	movlw	1
  3243   000AC6  6EE7               	movwf	indf1,c
  3244   000AC8                     i1l4021:
  3245                           
  3246                           ;sync.c: 34:     (INTCONbits.GIE = 1);
  3247   000AC8  8EF2               	bsf	242,7,c	;volatile
  3248   000ACA  0012               	return		;funcret
  3249   000ACC                     __end_of_sem_wait:
  3250                           	callstack 0
  3251                           
  3252 ;; *************** function _sem_post *****************
  3253 ;; Defined at:
  3254 ;;		line 37 in file "sync.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  s               1   81[BANK1 ] PTR struct semaphore
  3257 ;;		 -> canal(33), 
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3269 ;;      Params:         0       0       1       0       0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3271 ;;      Temps:          0       0       2       0       0       0       0       0       0
  3272 ;;      Totals:         0       0       3       0       0       0       0       0       0
  3273 ;;Total ram usage:        3 bytes
  3274 ;; Hardware stack levels used: 1
  3275 ;; Hardware stack levels required when called: 5
  3276 ;; This function calls:
  3277 ;;		___awmod
  3278 ;; This function is called by:
  3279 ;;		_read_pipe
  3280 ;;		_write_pipe
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           	psect	text14
  3285   001582                     __ptext14:
  3286                           	callstack 0
  3287   001582                     _sem_post:
  3288                           	callstack 19
  3289   001582                     
  3290                           ;sync.c: 37: void sem_post(sem_t *s);sync.c: 38: {;sync.c: 39:     (INTCONbits.GIE = 0);
  3291   001582  9EF2               	bcf	242,7,c	;volatile
  3292   001584                     
  3293                           ;sync.c: 41:     s->contador++;
  3294   001584  0101               	movlb	1	; () banked
  3295   001586  5151               	movf	sem_post@s& (0+255),w,b
  3296   001588  6ED9               	movwf	fsr2l,c
  3297   00158A  6ADA               	clrf	fsr2h,c
  3298   00158C  2ADE               	incf	postinc2,f,c
  3299   00158E  0E00               	movlw	0
  3300   001590  22DD               	addwfc	postdec2,f,c
  3301                           
  3302                           ;sync.c: 43:     if (s->contador <= 0) {
  3303   001592  5151               	movf	sem_post@s& (0+255),w,b
  3304   001594  6ED9               	movwf	fsr2l,c
  3305   001596  6ADA               	clrf	fsr2h,c
  3306   001598  0E01               	movlw	1
  3307   00159A  BEDB               	btfsc	plusw2,7,c
  3308   00159C  EFDB  F00A         	goto	i1u371_20
  3309   0015A0  0E01               	movlw	1
  3310   0015A2  50DB               	movf	plusw2,w,c
  3311   0015A4  E106               	bnz	i1u371_21
  3312   0015A6  04DE               	decf	postinc2,w,c
  3313   0015A8  B0D8               	btfsc	status,0,c
  3314   0015AA  EFD9  F00A         	goto	i1u371_21
  3315   0015AE  EFDB  F00A         	goto	i1u371_20
  3316   0015B2                     i1u371_21:
  3317   0015B2  EF0A  F00B         	goto	i1l4031
  3318   0015B6                     i1u371_20:
  3319   0015B6                     
  3320                           ; BSR set to: 1
  3321                           ;sync.c: 44:         s->sem_queue[s->sem_queue_out]->task_state = READY;
  3322   0015B6  5151               	movf	sem_post@s& (0+255),w,b
  3323   0015B8  6ED9               	movwf	fsr2l,c
  3324   0015BA  6ADA               	clrf	fsr2h,c
  3325   0015BC  0E0D               	movlw	13
  3326   0015BE  26D9               	addwf	fsr2l,f,c
  3327   0015C0  50DF               	movf	indf2,w,c
  3328   0015C2  0D02               	mullw	2
  3329   0015C4  5151               	movf	sem_post@s& (0+255),w,b
  3330   0015C6  24F3               	addwf	243,w,c
  3331   0015C8  6ED9               	movwf	fsr2l,c
  3332   0015CA  6ADA               	clrf	fsr2h,c
  3333   0015CC  0E02               	movlw	2
  3334   0015CE  26D9               	addwf	fsr2l,f,c
  3335   0015D0  EE10 F003          	lfsr	1,3
  3336   0015D4  50DE               	movf	postinc2,w,c
  3337   0015D6  26E1               	addwf	fsr1l,f,c
  3338   0015D8  50DD               	movf	postdec2,w,c
  3339   0015DA  22E2               	addwfc	fsr1h,f,c
  3340   0015DC  6AE7               	clrf	indf1,c
  3341   0015DE                     
  3342                           ; BSR set to: 1
  3343                           ;sync.c: 45:         s->sem_queue_out = (s->sem_queue_out + 1) % 5;
  3344   0015DE  5151               	movf	sem_post@s& (0+255),w,b
  3345   0015E0  6ED9               	movwf	fsr2l,c
  3346   0015E2  6ADA               	clrf	fsr2h,c
  3347   0015E4  0E0D               	movlw	13
  3348   0015E6  26D9               	addwf	fsr2l,f,c
  3349   0015E8  5151               	movf	sem_post@s& (0+255),w,b
  3350   0015EA  6EE1               	movwf	fsr1l,c
  3351   0015EC  6AE2               	clrf	fsr1h,c
  3352   0015EE  0E0D               	movlw	13
  3353   0015F0  26E1               	addwf	fsr1l,f,c
  3354   0015F2  50E7               	movf	indf1,w,c
  3355   0015F4  6F52               	movwf	??_sem_post& (0+255),b
  3356   0015F6  0E01               	movlw	1
  3357   0015F8  2552               	addwf	??_sem_post& (0+255),w,b
  3358   0015FA  6F4B               	movwf	___awmod@dividend& (0+255),b
  3359   0015FC  6B4C               	clrf	(___awmod@dividend+1)& (0+255),b
  3360   0015FE  0E00               	movlw	0
  3361   001600  234C               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3362   001602  0E00               	movlw	0
  3363   001604  6F4E               	movwf	(___awmod@divisor+1)& (0+255),b
  3364   001606  0E05               	movlw	5
  3365   001608  6F4D               	movwf	___awmod@divisor& (0+255),b
  3366   00160A  EC12  F00A         	call	___awmod	;wreg free
  3367   00160E  0101               	movlb	1	; () banked
  3368   001610  514B               	movf	?___awmod& (0+255),w,b
  3369   001612  6EDF               	movwf	indf2,c
  3370   001614                     i1l4031:
  3371                           
  3372                           ; BSR set to: 1
  3373                           ;sync.c: 48:     (INTCONbits.GIE = 1);
  3374   001614  8EF2               	bsf	242,7,c	;volatile
  3375   001616                     
  3376                           ; BSR set to: 1
  3377   001616  0012               	return		;funcret
  3378   001618                     __end_of_sem_post:
  3379                           	callstack 0
  3380                           
  3381 ;; *************** function _os_delay *****************
  3382 ;; Defined at:
  3383 ;;		line 27 in file "syscall.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  time            1    wreg     unsigned char 
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  time            1   12[COMRAM] unsigned char 
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3397 ;;      Params:         0       0       0       0       0       0       0       0       0
  3398 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3399 ;;      Temps:          0       7       0       0       0       0       0       0       0
  3400 ;;      Totals:         1       7       0       0       0       0       0       0       0
  3401 ;;Total ram usage:        8 bytes
  3402 ;; Hardware stack levels used: 1
  3403 ;; Hardware stack levels required when called: 7
  3404 ;; This function calls:
  3405 ;;		_scheduler
  3406 ;; This function is called by:
  3407 ;;		_tarefa_1
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text15
  3412   000D56                     __ptext15:
  3413                           	callstack 0
  3414   000D56                     _os_delay:
  3415                           	callstack 18
  3416                           
  3417                           ; BSR set to: 1
  3418                           ;incstack = 0
  3419                           ;os_delay@time stored from wreg
  3420   000D56  6E0D               	movwf	os_delay@time^0,c
  3421   000D58                     
  3422                           ;syscall.c: 27: void os_delay(uint8_t time);syscall.c: 28: {;syscall.c: 29:     (INTCONb
      +                          its.GIE = 0);
  3423   000D58  9EF2               	bcf	242,7,c	;volatile
  3424   000D5A                     
  3425                           ;syscall.c: 31:     readyQueue.taskRunning->task_time_to_waiting = time;
  3426   000D5A  EE24  F07E         	lfsr	2,_readyQueue+531
  3427   000D5E  EE10 F005          	lfsr	1,5
  3428   000D62  50DE               	movf	postinc2,w,c
  3429   000D64  26E1               	addwf	fsr1l,f,c
  3430   000D66  50DD               	movf	postdec2,w,c
  3431   000D68  22E2               	addwfc	fsr1h,f,c
  3432   000D6A  C00D  FFE7         	movff	os_delay@time,indf1
  3433   000D6E  EE24  F07E         	lfsr	2,_readyQueue+531
  3434   000D72  EE10 F003          	lfsr	1,3
  3435   000D76  50DE               	movf	postinc2,w,c
  3436   000D78  26E1               	addwf	fsr1l,f,c
  3437   000D7A  50DD               	movf	postdec2,w,c
  3438   000D7C  22E2               	addwfc	fsr1h,f,c
  3439   000D7E  04E6               	decf	postinc1,w,c
  3440   000D80  A4D8               	btfss	status,2,c
  3441   000D82  EFC5  F006         	goto	i1u383_21
  3442   000D86  EFC7  F006         	goto	i1u383_20
  3443   000D8A                     i1u383_21:
  3444   000D8A  EF35  F007         	goto	i1l4149
  3445   000D8E                     i1u383_20:
  3446   000D8E  EE24  F07E         	lfsr	2,_readyQueue+531
  3447   000D92  EE10 F006          	lfsr	1,6
  3448   000D96  50DE               	movf	postinc2,w,c
  3449   000D98  26E1               	addwf	fsr1l,f,c
  3450   000D9A  50DD               	movf	postdec2,w,c
  3451   000D9C  22E2               	addwfc	fsr1h,f,c
  3452   000D9E  CFE0 FFE7          	movff	bsr,indf1	;volatile
  3453   000DA2  EE24  F07E         	lfsr	2,_readyQueue+531
  3454   000DA6  EE10 F008          	lfsr	1,8
  3455   000DAA  50DE               	movf	postinc2,w,c
  3456   000DAC  26E1               	addwf	fsr1l,f,c
  3457   000DAE  50DD               	movf	postdec2,w,c
  3458   000DB0  22E2               	addwfc	fsr1h,f,c
  3459   000DB2  CFD8 FFE7          	movff	status,indf1	;volatile
  3460   000DB6  EE24  F07E         	lfsr	2,_readyQueue+531
  3461   000DBA  EE10 F007          	lfsr	1,7
  3462   000DBE  50DE               	movf	postinc2,w,c
  3463   000DC0  26E1               	addwf	fsr1l,f,c
  3464   000DC2  50DD               	movf	postdec2,w,c
  3465   000DC4  22E2               	addwfc	fsr1h,f,c
  3466   000DC6  CFE8 FFE7          	movff	wreg,indf1	;volatile
  3467   000DCA  EE24  F07E         	lfsr	2,_readyQueue+531
  3468   000DCE  EE10 F069          	lfsr	1,105
  3469   000DD2  50DE               	movf	postinc2,w,c
  3470   000DD4  26E1               	addwf	fsr1l,f,c
  3471   000DD6  50DD               	movf	postdec2,w,c
  3472   000DD8  22E2               	addwfc	fsr1h,f,c
  3473   000DDA  6AE7               	clrf	indf1,c
  3474   000DDC  EF23  F007         	goto	i1l4145
  3475   000DE0                     i1l4141:
  3476   000DE0  EE24  F07E         	lfsr	2,_readyQueue+531
  3477   000DE4  EE10 F069          	lfsr	1,105
  3478   000DE8  50DE               	movf	postinc2,w,c
  3479   000DEA  26E1               	addwf	fsr1l,f,c
  3480   000DEC  50DD               	movf	postdec2,w,c
  3481   000DEE  22E2               	addwfc	fsr1h,f,c
  3482   000DF0  50E7               	movf	indf1,w,c
  3483   000DF2  0100               	movlb	0	; () banked
  3484   000DF4  6F8A               	movwf	??_os_delay& (0+255),b
  3485   000DF6  518A               	movf	??_os_delay& (0+255),w,b
  3486   000DF8  0D03               	mullw	3
  3487   000DFA  CFF3 F08B          	movff	prodl,??_os_delay+1
  3488   000DFE  CFF4 F08C          	movff	prodh,??_os_delay+2
  3489   000E02  EE24  F07E         	lfsr	2,_readyQueue+531
  3490   000E06  CFDE F08D          	movff	postinc2,??_os_delay+3
  3491   000E0A  CFDD F08E          	movff	postdec2,??_os_delay+4
  3492   000E0E  518B               	movf	(??_os_delay+1)& (0+255),w,b
  3493   000E10  258D               	addwf	(??_os_delay+3)& (0+255),w,b
  3494   000E12  6F8F               	movwf	(??_os_delay+5)& (0+255),b
  3495   000E14  518C               	movf	(??_os_delay+2)& (0+255),w,b
  3496   000E16  218E               	addwfc	(??_os_delay+4)& (0+255),w,b
  3497   000E18  6F90               	movwf	(??_os_delay+6)& (0+255),b
  3498   000E1A  0E09               	movlw	9
  3499   000E1C  258F               	addwf	(??_os_delay+5)& (0+255),w,b
  3500   000E1E  6ED9               	movwf	fsr2l,c
  3501   000E20  0E00               	movlw	0
  3502   000E22  2190               	addwfc	(??_os_delay+6)& (0+255),w,b
  3503   000E24  6EDA               	movwf	fsr2h,c
  3504   000E26  CFFD FFDE          	movff	tosl,postinc2	;volatile
  3505   000E2A  CFFE FFDE          	movff	tosh,postinc2	;volatile
  3506   000E2E  CFFF FFDE          	movff	tosu,postinc2	;volatile
  3507   000E32                     
  3508                           ; BSR set to: 0
  3509   000E32  EE24  F07E         	lfsr	2,_readyQueue+531
  3510   000E36  EE10 F069          	lfsr	1,105
  3511   000E3A  50DE               	movf	postinc2,w,c
  3512   000E3C  26E1               	addwf	fsr1l,f,c
  3513   000E3E  50DD               	movf	postdec2,w,c
  3514   000E40  22E2               	addwfc	fsr1h,f,c
  3515   000E42  2AE7               	incf	indf1,f,c
  3516   000E44  0006               	pop		;# 
  3517   000E46                     i1l4145:
  3518   000E46  50FC               	movf	252,w,c	;volatile
  3519   000E48  A4D8               	btfss	status,2,c
  3520   000E4A  EF29  F007         	goto	i1u384_21
  3521   000E4E  EF2B  F007         	goto	i1u384_20
  3522   000E52                     i1u384_21:
  3523   000E52  EFF0  F006         	goto	i1l4141
  3524   000E56                     i1u384_20:
  3525   000E56  EE24  F07E         	lfsr	2,_readyQueue+531
  3526   000E5A  EE10 F003          	lfsr	1,3
  3527   000E5E  50DE               	movf	postinc2,w,c
  3528   000E60  26E1               	addwf	fsr1l,f,c
  3529   000E62  50DD               	movf	postdec2,w,c
  3530   000E64  22E2               	addwfc	fsr1h,f,c
  3531   000E66  0E02               	movlw	2
  3532   000E68  6EE7               	movwf	indf1,c
  3533   000E6A                     i1l4149:
  3534                           
  3535                           ;syscall.c: 34:     scheduler();
  3536   000E6A  EC85  F00D         	call	_scheduler	;wreg free
  3537   000E6E  EE24  F07E         	lfsr	2,_readyQueue+531
  3538   000E72  EE10 F003          	lfsr	1,3
  3539   000E76  50DE               	movf	postinc2,w,c
  3540   000E78  26E1               	addwf	fsr1l,f,c
  3541   000E7A  50DD               	movf	postdec2,w,c
  3542   000E7C  22E2               	addwfc	fsr1h,f,c
  3543   000E7E  50E7               	movf	indf1,w,c
  3544   000E80  A4D8               	btfss	status,2,c
  3545   000E82  EF45  F007         	goto	i1u385_21
  3546   000E86  EF47  F007         	goto	i1u385_20
  3547   000E8A                     i1u385_21:
  3548   000E8A  EFD9  F007         	goto	i1l4169
  3549   000E8E                     i1u385_20:
  3550   000E8E  EE24  F07E         	lfsr	2,_readyQueue+531
  3551   000E92  EE10 F006          	lfsr	1,6
  3552   000E96  50DE               	movf	postinc2,w,c
  3553   000E98  26E1               	addwf	fsr1l,f,c
  3554   000E9A  50DD               	movf	postdec2,w,c
  3555   000E9C  22E2               	addwfc	fsr1h,f,c
  3556   000E9E  50E7               	movf	indf1,w,c
  3557   000EA0  6EE0               	movwf	224,c	;volatile
  3558   000EA2  EE24  F07E         	lfsr	2,_readyQueue+531
  3559   000EA6  EE10 F008          	lfsr	1,8
  3560   000EAA  50DE               	movf	postinc2,w,c
  3561   000EAC  26E1               	addwf	fsr1l,f,c
  3562   000EAE  50DD               	movf	postdec2,w,c
  3563   000EB0  22E2               	addwfc	fsr1h,f,c
  3564   000EB2  50E7               	movf	indf1,w,c
  3565   000EB4  6ED8               	movwf	216,c	;volatile
  3566   000EB6  EE24  F07E         	lfsr	2,_readyQueue+531
  3567   000EBA  EE10 F007          	lfsr	1,7
  3568   000EBE  50DE               	movf	postinc2,w,c
  3569   000EC0  26E1               	addwf	fsr1l,f,c
  3570   000EC2  50DD               	movf	postdec2,w,c
  3571   000EC4  22E2               	addwfc	fsr1h,f,c
  3572   000EC6  50E7               	movf	indf1,w,c
  3573   000EC8  0100               	movlb	0	; () banked
  3574   000ECA  6F8A               	movwf	??_os_delay& (0+255),b
  3575   000ECC  518A               	movf	??_os_delay& (0+255),w,b
  3576   000ECE                     
  3577                           ; BSR set to: 0
  3578   000ECE  6AFC               	clrf	252,c	;volatile
  3579   000ED0  EE24  F07E         	lfsr	2,_readyQueue+531
  3580   000ED4  EE10 F069          	lfsr	1,105
  3581   000ED8  50DE               	movf	postinc2,w,c
  3582   000EDA  26E1               	addwf	fsr1l,f,c
  3583   000EDC  50DD               	movf	postdec2,w,c
  3584   000EDE  22E2               	addwfc	fsr1h,f,c
  3585   000EE0  50E7               	movf	indf1,w,c
  3586   000EE2  A4D8               	btfss	status,2,c
  3587   000EE4  EF76  F007         	goto	i1u386_21
  3588   000EE8  EF78  F007         	goto	i1u386_20
  3589   000EEC                     i1u386_21:
  3590   000EEC  EF8C  F007         	goto	i1l151
  3591   000EF0                     i1u386_20:
  3592   000EF0                     
  3593                           ; BSR set to: 0
  3594   000EF0  0005               	push		;# 
  3595   000EF2  EE24  F07E         	lfsr	2,_readyQueue+531
  3596   000EF6  EE10 F001          	lfsr	1,1
  3597   000EFA  50DE               	movf	postinc2,w,c
  3598   000EFC  26E1               	addwf	fsr1l,f,c
  3599   000EFE  50DD               	movf	postdec2,w,c
  3600   000F00  22E2               	addwfc	fsr1h,f,c
  3601   000F02  CFE6 F08A          	movff	postinc1,??_os_delay
  3602   000F06  CFE5 F08B          	movff	postdec1,??_os_delay+1
  3603   000F0A  C08A  FFFD         	movff	??_os_delay,tosl	;volatile
  3604   000F0E  C08B  FFFE         	movff	??_os_delay+1,tosh	;volatile
  3605   000F12  6AFF               	clrf	255,c	;volatile
  3606   000F14  EFCF  F007         	goto	i1l4167
  3607   000F18                     i1l151:
  3608                           
  3609                           ; BSR set to: 0
  3610   000F18  0005               	push		;# 
  3611   000F1A  EE24  F07E         	lfsr	2,_readyQueue+531
  3612   000F1E  EE10 F069          	lfsr	1,105
  3613   000F22  50DE               	movf	postinc2,w,c
  3614   000F24  26E1               	addwf	fsr1l,f,c
  3615   000F26  50DD               	movf	postdec2,w,c
  3616   000F28  22E2               	addwfc	fsr1h,f,c
  3617   000F2A  06E7               	decf	indf1,f,c
  3618   000F2C  EE24  F07E         	lfsr	2,_readyQueue+531
  3619   000F30  EE10 F069          	lfsr	1,105
  3620   000F34  50DE               	movf	postinc2,w,c
  3621   000F36  26E1               	addwf	fsr1l,f,c
  3622   000F38  50DD               	movf	postdec2,w,c
  3623   000F3A  22E2               	addwfc	fsr1h,f,c
  3624   000F3C  50E7               	movf	indf1,w,c
  3625   000F3E  0100               	movlb	0	; () banked
  3626   000F40  6F8A               	movwf	??_os_delay& (0+255),b
  3627   000F42  518A               	movf	??_os_delay& (0+255),w,b
  3628   000F44  0D03               	mullw	3
  3629   000F46  CFF3 F08B          	movff	prodl,??_os_delay+1
  3630   000F4A  CFF4 F08C          	movff	prodh,??_os_delay+2
  3631   000F4E  EE24  F07E         	lfsr	2,_readyQueue+531
  3632   000F52  CFDE F08D          	movff	postinc2,??_os_delay+3
  3633   000F56  CFDD F08E          	movff	postdec2,??_os_delay+4
  3634   000F5A  518B               	movf	(??_os_delay+1)& (0+255),w,b
  3635   000F5C  258D               	addwf	(??_os_delay+3)& (0+255),w,b
  3636   000F5E  6F8F               	movwf	(??_os_delay+5)& (0+255),b
  3637   000F60  518C               	movf	(??_os_delay+2)& (0+255),w,b
  3638   000F62  218E               	addwfc	(??_os_delay+4)& (0+255),w,b
  3639   000F64  6F90               	movwf	(??_os_delay+6)& (0+255),b
  3640   000F66  0E09               	movlw	9
  3641   000F68  258F               	addwf	(??_os_delay+5)& (0+255),w,b
  3642   000F6A  6ED9               	movwf	fsr2l,c
  3643   000F6C  0E00               	movlw	0
  3644   000F6E  2190               	addwfc	(??_os_delay+6)& (0+255),w,b
  3645   000F70  6EDA               	movwf	fsr2h,c
  3646   000F72  CFDE FFFD          	movff	postinc2,tosl	;volatile
  3647   000F76  CFDE FFFE          	movff	postinc2,tosh	;volatile
  3648   000F7A  CFDD FFFF          	movff	postdec2,tosu	;volatile
  3649   000F7E                     
  3650                           ; BSR set to: 0
  3651   000F7E  EE24  F07E         	lfsr	2,_readyQueue+531
  3652   000F82  EE10 F069          	lfsr	1,105
  3653   000F86  50DE               	movf	postinc2,w,c
  3654   000F88  26E1               	addwf	fsr1l,f,c
  3655   000F8A  50DD               	movf	postdec2,w,c
  3656   000F8C  22E2               	addwfc	fsr1h,f,c
  3657   000F8E  50E7               	movf	indf1,w,c
  3658   000F90  A4D8               	btfss	status,2,c
  3659   000F92  EFCD  F007         	goto	i1u387_21
  3660   000F96  EFCF  F007         	goto	i1u387_20
  3661   000F9A                     i1u387_21:
  3662   000F9A  EF8C  F007         	goto	i1l151
  3663   000F9E                     i1u387_20:
  3664   000F9E                     i1l4167:
  3665   000F9E  EE24  F07E         	lfsr	2,_readyQueue+531
  3666   000FA2  EE10 F003          	lfsr	1,3
  3667   000FA6  50DE               	movf	postinc2,w,c
  3668   000FA8  26E1               	addwf	fsr1l,f,c
  3669   000FAA  50DD               	movf	postdec2,w,c
  3670   000FAC  22E2               	addwfc	fsr1h,f,c
  3671   000FAE  0E01               	movlw	1
  3672   000FB0  6EE7               	movwf	indf1,c
  3673   000FB2                     i1l4169:
  3674                           
  3675                           ;syscall.c: 37:     (INTCONbits.GIE = 1);
  3676   000FB2  8EF2               	bsf	242,7,c	;volatile
  3677   000FB4  0012               	return		;funcret
  3678   000FB6                     __end_of_os_delay:
  3679                           	callstack 0
  3680                           
  3681 ;; *************** function _scheduler *****************
  3682 ;; Defined at:
  3683 ;;		line 37 in file "scheduler.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;		None
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;		None
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3697 ;;      Params:         0       0       0       0       0       0       0       0       0
  3698 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3699 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3700 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3701 ;;Total ram usage:        0 bytes
  3702 ;; Hardware stack levels used: 1
  3703 ;; Hardware stack levels required when called: 6
  3704 ;; This function calls:
  3705 ;;		_rr_scheduler
  3706 ;; This function is called by:
  3707 ;;		_os_delay
  3708 ;;		_sem_wait
  3709 ;;		_os_yield
  3710 ;;		_os_change_state
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text16
  3715   001B0A                     __ptext16:
  3716                           	callstack 0
  3717   001B0A                     _scheduler:
  3718                           	callstack 17
  3719   001B0A                     
  3720                           ;scheduler.c: 40:     readyQueue.taskRunning = rr_scheduler();
  3721   001B0A  EC6E  F008         	call	_rr_scheduler	;wreg free
  3722   001B0E  0101               	movlb	1	; () banked
  3723   001B10  C151  F47E         	movff	?_rr_scheduler,_readyQueue+531
  3724   001B14  C152  F47F         	movff	?_rr_scheduler+1,_readyQueue+532
  3725   001B18                     
  3726                           ; BSR set to: 1
  3727   001B18  0012               	return		;funcret
  3728   001B1A                     __end_of_scheduler:
  3729                           	callstack 0
  3730                           
  3731 ;; *************** function _rr_scheduler *****************
  3732 ;; Defined at:
  3733 ;;		line 12 in file "scheduler.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  pos_task_run    1   86[BANK1 ] unsigned char 
  3738 ;;  idle_selecte    1   85[BANK1 ] unsigned char 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  2   81[BANK1 ] PTR struct tcb
  3741 ;; Registers used:
  3742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3748 ;;      Params:         0       0       2       0       0       0       0       0       0
  3749 ;;      Locals:         0       0       2       0       0       0       0       0       0
  3750 ;;      Temps:          0       0       2       0       0       0       0       0       0
  3751 ;;      Totals:         0       0       6       0       0       0       0       0       0
  3752 ;;Total ram usage:        6 bytes
  3753 ;; Hardware stack levels used: 1
  3754 ;; Hardware stack levels required when called: 5
  3755 ;; This function calls:
  3756 ;;		___awmod
  3757 ;;		_os_task_pos
  3758 ;; This function is called by:
  3759 ;;		_scheduler
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text17
  3764   0010DC                     __ptext17:
  3765                           	callstack 0
  3766   0010DC                     _rr_scheduler:
  3767                           	callstack 17
  3768   0010DC                     
  3769                           ;scheduler.c: 14:     uint8_t pos_task_running = os_task_pos(readyQueue.taskRunning->tas
      +                          k_func);
  3770   0010DC  EE24  F07E         	lfsr	2,_readyQueue+531
  3771   0010E0  EE10 F001          	lfsr	1,1
  3772   0010E4  50DE               	movf	postinc2,w,c
  3773   0010E6  26E1               	addwf	fsr1l,f,c
  3774   0010E8  50DD               	movf	postdec2,w,c
  3775   0010EA  22E2               	addwfc	fsr1h,f,c
  3776   0010EC  CFE6 F14B          	movff	postinc1,os_task_pos@task
  3777   0010F0  CFE5 F14C          	movff	postdec1,os_task_pos@task+1
  3778   0010F4  EC3A  F00C         	call	_os_task_pos	;wreg free
  3779   0010F8  0101               	movlb	1	; () banked
  3780   0010FA  6F56               	movwf	rr_scheduler@pos_task_running& (0+255),b
  3781   0010FC                     
  3782                           ; BSR set to: 1
  3783                           ;scheduler.c: 15:     uint8_t idle_selected = 0;
  3784   0010FC  6B55               	clrf	rr_scheduler@idle_selected& (0+255),b
  3785   0010FE                     i1l3959:
  3786                           
  3787                           ; BSR set to: 1
  3788                           ;scheduler.c: 18:         pos_task_running = (pos_task_running+1) % readyQueue.readyQueu
      +                          eSize;
  3789   0010FE  0E01               	movlw	1
  3790   001100  2556               	addwf	rr_scheduler@pos_task_running& (0+255),w,b
  3791   001102  6F4B               	movwf	___awmod@dividend& (0+255),b
  3792   001104  6B4C               	clrf	(___awmod@dividend+1)& (0+255),b
  3793   001106  0E00               	movlw	0
  3794   001108  234C               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3795   00110A  C47D  F153         	movff	_readyQueue+530,??_rr_scheduler
  3796   00110E  5153               	movf	??_rr_scheduler& (0+255),w,b
  3797   001110  6F4D               	movwf	___awmod@divisor& (0+255),b
  3798   001112  6B4E               	clrf	(___awmod@divisor+1)& (0+255),b
  3799   001114  EC12  F00A         	call	___awmod	;wreg free
  3800   001118  0101               	movlb	1	; () banked
  3801   00111A  514B               	movf	?___awmod& (0+255),w,b
  3802   00111C  6F56               	movwf	rr_scheduler@pos_task_running& (0+255),b
  3803   00111E                     
  3804                           ; BSR set to: 1
  3805                           ;scheduler.c: 19:         if (readyQueue.readyQueue[pos_task_running].task_func == os_id
      +                          le_task) {
  3806   00111E  5156               	movf	rr_scheduler@pos_task_running& (0+255),w,b
  3807   001120  0D6A               	mullw	106
  3808   001122  0E6C               	movlw	low (_readyQueue+1)
  3809   001124  24F3               	addwf	243,w,c
  3810   001126  6ED9               	movwf	fsr2l,c
  3811   001128  0E02               	movlw	high (_readyQueue+1)
  3812   00112A  20F4               	addwfc	prodh,w,c
  3813   00112C  6EDA               	movwf	fsr2h,c
  3814   00112E  0E18               	movlw	low _os_idle_task
  3815   001130  18DE               	xorwf	postinc2,w,c
  3816   001132  E107               	bnz	i1u361_21
  3817   001134  0E1A               	movlw	high _os_idle_task
  3818   001136  18DE               	xorwf	postinc2,w,c
  3819   001138  A4D8               	btfss	status,2,c
  3820   00113A  EFA1  F008         	goto	i1u361_21
  3821   00113E  EFA3  F008         	goto	i1u361_20
  3822   001142                     i1u361_21:
  3823   001142  EFB2  F008         	goto	i1l3971
  3824   001146                     i1u361_20:
  3825   001146                     
  3826                           ; BSR set to: 1
  3827                           ;scheduler.c: 20:             idle_selected++;
  3828   001146  2B55               	incf	rr_scheduler@idle_selected& (0+255),f,b
  3829   001148                     
  3830                           ; BSR set to: 1
  3831                           ;scheduler.c: 21:             if (idle_selected > 1) return &readyQueue.readyQueue[0];
  3832   001148  0E01               	movlw	1
  3833   00114A  6555               	cpfsgt	rr_scheduler@idle_selected& (0+255),b
  3834   00114C  EFAA  F008         	goto	i1u362_21
  3835   001150  EFAC  F008         	goto	i1u362_20
  3836   001154                     i1u362_21:
  3837   001154  EFB2  F008         	goto	i1l3971
  3838   001158                     i1u362_20:
  3839   001158                     
  3840                           ; BSR set to: 1
  3841   001158  0E6B               	movlw	low _readyQueue
  3842   00115A  6F51               	movwf	?_rr_scheduler& (0+255),b
  3843   00115C  0E02               	movlw	high _readyQueue
  3844   00115E  6F52               	movwf	(?_rr_scheduler+1)& (0+255),b
  3845   001160  EFDE  F008         	goto	i1l198
  3846   001164                     i1l3971:
  3847                           
  3848                           ; BSR set to: 1
  3849                           ;scheduler.c: 24:     } while (readyQueue.readyQueue[pos_task_running].task_state != REA
      +                          DY ||
  3850   001164  5156               	movf	rr_scheduler@pos_task_running& (0+255),w,b
  3851   001166  0D6A               	mullw	106
  3852   001168  0E6E               	movlw	low (_readyQueue+3)
  3853   00116A  24F3               	addwf	243,w,c
  3854   00116C  6ED9               	movwf	fsr2l,c
  3855   00116E  0E02               	movlw	high (_readyQueue+3)
  3856   001170  20F4               	addwfc	prodh,w,c
  3857   001172  6EDA               	movwf	fsr2h,c
  3858   001174  50DF               	movf	indf2,w,c
  3859   001176  A4D8               	btfss	status,2,c
  3860   001178  EFC0  F008         	goto	i1u363_21
  3861   00117C  EFC2  F008         	goto	i1u363_20
  3862   001180                     i1u363_21:
  3863   001180  EF7F  F008         	goto	i1l3959
  3864   001184                     i1u363_20:
  3865   001184                     
  3866                           ; BSR set to: 1
  3867   001184  5156               	movf	rr_scheduler@pos_task_running& (0+255),w,b
  3868   001186  0D6A               	mullw	106
  3869   001188  0E6C               	movlw	low (_readyQueue+1)
  3870   00118A  24F3               	addwf	243,w,c
  3871   00118C  6ED9               	movwf	fsr2l,c
  3872   00118E  0E02               	movlw	high (_readyQueue+1)
  3873   001190  20F4               	addwfc	prodh,w,c
  3874   001192  6EDA               	movwf	fsr2h,c
  3875   001194  0E18               	movlw	low _os_idle_task
  3876   001196  18DE               	xorwf	postinc2,w,c
  3877   001198  E109               	bnz	i1u364_20
  3878   00119A  0E1A               	movlw	high _os_idle_task
  3879   00119C  18DE               	xorwf	postinc2,w,c
  3880   00119E  B4D8               	btfsc	status,2,c
  3881   0011A0  EFD4  F008         	goto	i1u364_21
  3882   0011A4  EFD6  F008         	goto	i1u364_20
  3883   0011A8                     i1u364_21:
  3884   0011A8  EF7F  F008         	goto	i1l3959
  3885   0011AC                     i1u364_20:
  3886   0011AC                     
  3887                           ; BSR set to: 1
  3888                           ;scheduler.c: 27:     return &readyQueue.readyQueue[pos_task_running];
  3889   0011AC  5156               	movf	rr_scheduler@pos_task_running& (0+255),w,b
  3890   0011AE  0D6A               	mullw	106
  3891   0011B0  0E6B               	movlw	low _readyQueue
  3892   0011B2  24F3               	addwf	243,w,c
  3893   0011B4  6F51               	movwf	?_rr_scheduler& (0+255),b
  3894   0011B6  0E02               	movlw	high _readyQueue
  3895   0011B8  20F4               	addwfc	prodh,w,c
  3896   0011BA  6F52               	movwf	(?_rr_scheduler+1)& (0+255),b
  3897   0011BC                     i1l198:
  3898                           
  3899                           ; BSR set to: 1
  3900   0011BC  0012               	return		;funcret
  3901   0011BE                     __end_of_rr_scheduler:
  3902                           	callstack 0
  3903                           
  3904 ;; *************** function _os_task_pos *****************
  3905 ;; Defined at:
  3906 ;;		line 53 in file "kernel.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  task            2   75[BANK1 ] PTR FTN()void 
  3909 ;;		 -> os_idle_task(1), tarefa_3(1), tarefa_2(1), tarefa_1(1), 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  i               1   79[BANK1 ] unsigned char 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      unsigned char 
  3914 ;; Registers used:
  3915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3921 ;;      Params:         0       0       2       0       0       0       0       0       0
  3922 ;;      Locals:         0       0       1       0       0       0       0       0       0
  3923 ;;      Temps:          0       0       2       0       0       0       0       0       0
  3924 ;;      Totals:         0       0       5       0       0       0       0       0       0
  3925 ;;Total ram usage:        5 bytes
  3926 ;; Hardware stack levels used: 1
  3927 ;; Hardware stack levels required when called: 4
  3928 ;; This function calls:
  3929 ;;		Nothing
  3930 ;; This function is called by:
  3931 ;;		_rr_scheduler
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text18
  3936   001874                     __ptext18:
  3937                           	callstack 0
  3938   001874                     _os_task_pos:
  3939                           	callstack 17
  3940   001874                     
  3941                           ;kernel.c: 53: uint8_t os_task_pos(f_ptr task);kernel.c: 54: {;kernel.c: 55:     for (ui
      +                          nt8_t i = 0; i < readyQueue.readyQueueSize; i++) {
  3942   001874  0101               	movlb	1	; () banked
  3943   001876  6B4F               	clrf	os_task_pos@i& (0+255),b
  3944   001878  EF56  F00C         	goto	i1l3913
  3945   00187C                     i1l3905:
  3946                           
  3947                           ; BSR set to: 1
  3948                           ;kernel.c: 56:         if (readyQueue.readyQueue[i].task_func == task) return i;
  3949   00187C  514F               	movf	os_task_pos@i& (0+255),w,b
  3950   00187E  0D6A               	mullw	106
  3951   001880  0E6C               	movlw	low (_readyQueue+1)
  3952   001882  24F3               	addwf	243,w,c
  3953   001884  6ED9               	movwf	fsr2l,c
  3954   001886  0E02               	movlw	high (_readyQueue+1)
  3955   001888  20F4               	addwfc	prodh,w,c
  3956   00188A  6EDA               	movwf	fsr2h,c
  3957   00188C  514B               	movf	os_task_pos@task& (0+255),w,b
  3958   00188E  18DE               	xorwf	postinc2,w,c
  3959   001890  E107               	bnz	i1u353_21
  3960   001892  514C               	movf	(os_task_pos@task+1)& (0+255),w,b
  3961   001894  18DE               	xorwf	postinc2,w,c
  3962   001896  A4D8               	btfss	status,2,c
  3963   001898  EF50  F00C         	goto	i1u353_21
  3964   00189C  EF52  F00C         	goto	i1u353_20
  3965   0018A0                     i1u353_21:
  3966   0018A0  EF55  F00C         	goto	i1l3911
  3967   0018A4                     i1u353_20:
  3968   0018A4                     
  3969                           ; BSR set to: 1
  3970   0018A4  514F               	movf	os_task_pos@i& (0+255),w,b
  3971   0018A6  EF62  F00C         	goto	i1l60
  3972   0018AA                     i1l3911:
  3973                           
  3974                           ; BSR set to: 1
  3975                           ;kernel.c: 57:     }
  3976   0018AA  2B4F               	incf	os_task_pos@i& (0+255),f,b
  3977   0018AC                     i1l3913:
  3978                           
  3979                           ; BSR set to: 1
  3980   0018AC  EE24  F07D         	lfsr	2,_readyQueue+530
  3981   0018B0  50DE               	movf	postinc2,w,c
  3982   0018B2  5D4F               	subwf	os_task_pos@i& (0+255),w,b
  3983   0018B4  A0D8               	btfss	status,0,c
  3984   0018B6  EF5F  F00C         	goto	i1u354_21
  3985   0018BA  EF61  F00C         	goto	i1u354_20
  3986   0018BE                     i1u354_21:
  3987   0018BE  EF3E  F00C         	goto	i1l3905
  3988   0018C2                     i1u354_20:
  3989   0018C2                     
  3990                           ; BSR set to: 1
  3991                           ;kernel.c: 59:     return 0;
  3992   0018C2  0E00               	movlw	0
  3993   0018C4                     i1l60:
  3994                           
  3995                           ; BSR set to: 1
  3996   0018C4  0012               	return		;funcret
  3997   0018C6                     __end_of_os_task_pos:
  3998                           	callstack 0
  3999                           
  4000 ;; *************** function ___awmod *****************
  4001 ;; Defined at:
  4002 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  dividend        2   75[BANK1 ] int 
  4005 ;;  divisor         2   77[BANK1 ] int 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  sign            1   80[BANK1 ] unsigned char 
  4008 ;;  counter         1   79[BANK1 ] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  2   75[BANK1 ] int 
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4018 ;;      Params:         0       0       4       0       0       0       0       0       0
  4019 ;;      Locals:         0       0       2       0       0       0       0       0       0
  4020 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4021 ;;      Totals:         0       0       6       0       0       0       0       0       0
  4022 ;;Total ram usage:        6 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; Hardware stack levels required when called: 4
  4025 ;; This function calls:
  4026 ;;		Nothing
  4027 ;; This function is called by:
  4028 ;;		_tarefa_1
  4029 ;;		_rr_scheduler
  4030 ;;		_sem_wait
  4031 ;;		_sem_post
  4032 ;;		_read_pipe
  4033 ;;		_write_pipe
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text19
  4038   001424                     __ptext19:
  4039                           	callstack 0
  4040   001424                     ___awmod:
  4041                           	callstack 17
  4042   001424  0101               	movlb	1	; () banked
  4043   001426  6B50               	clrf	___awmod@sign& (0+255),b
  4044   001428                     
  4045                           ; BSR set to: 1
  4046   001428  BF4C               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  4047   00142A  EF1B  F00A         	goto	i1u355_20
  4048   00142E  EF19  F00A         	goto	i1u355_21
  4049   001432                     i1u355_21:
  4050   001432  EF21  F00A         	goto	i1l3927
  4051   001436                     i1u355_20:
  4052   001436                     
  4053                           ; BSR set to: 1
  4054   001436  6D4B               	negf	___awmod@dividend& (0+255),b
  4055   001438  1F4C               	comf	(___awmod@dividend+1)& (0+255),f,b
  4056   00143A  B0D8               	btfsc	status,0,c
  4057   00143C  2B4C               	incf	(___awmod@dividend+1)& (0+255),f,b
  4058   00143E                     
  4059                           ; BSR set to: 1
  4060   00143E  0E01               	movlw	1
  4061   001440  6F50               	movwf	___awmod@sign& (0+255),b
  4062   001442                     i1l3927:
  4063                           
  4064                           ; BSR set to: 1
  4065   001442  BF4E               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  4066   001444  EF28  F00A         	goto	i1u356_20
  4067   001448  EF26  F00A         	goto	i1u356_21
  4068   00144C                     i1u356_21:
  4069   00144C  EF2C  F00A         	goto	i1l3931
  4070   001450                     i1u356_20:
  4071   001450                     
  4072                           ; BSR set to: 1
  4073   001450  6D4D               	negf	___awmod@divisor& (0+255),b
  4074   001452  1F4E               	comf	(___awmod@divisor+1)& (0+255),f,b
  4075   001454  B0D8               	btfsc	status,0,c
  4076   001456  2B4E               	incf	(___awmod@divisor+1)& (0+255),f,b
  4077   001458                     i1l3931:
  4078                           
  4079                           ; BSR set to: 1
  4080   001458  514D               	movf	___awmod@divisor& (0+255),w,b
  4081   00145A  114E               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  4082   00145C  B4D8               	btfsc	status,2,c
  4083   00145E  EF33  F00A         	goto	i1u357_21
  4084   001462  EF35  F00A         	goto	i1u357_20
  4085   001466                     i1u357_21:
  4086   001466  EF59  F00A         	goto	i1l3947
  4087   00146A                     i1u357_20:
  4088   00146A                     
  4089                           ; BSR set to: 1
  4090   00146A  0E01               	movlw	1
  4091   00146C  6F4F               	movwf	___awmod@counter& (0+255),b
  4092   00146E  EF3D  F00A         	goto	i1l3937
  4093   001472                     i1l3935:
  4094                           
  4095                           ; BSR set to: 1
  4096   001472  90D8               	bcf	status,0,c
  4097   001474  374D               	rlcf	___awmod@divisor& (0+255),f,b
  4098   001476  374E               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4099   001478  2B4F               	incf	___awmod@counter& (0+255),f,b
  4100   00147A                     i1l3937:
  4101                           
  4102                           ; BSR set to: 1
  4103   00147A  AF4E               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4104   00147C  EF42  F00A         	goto	i1u358_21
  4105   001480  EF44  F00A         	goto	i1u358_20
  4106   001484                     i1u358_21:
  4107   001484  EF39  F00A         	goto	i1l3935
  4108   001488                     i1u358_20:
  4109   001488                     i1l3939:
  4110                           
  4111                           ; BSR set to: 1
  4112   001488  514D               	movf	___awmod@divisor& (0+255),w,b
  4113   00148A  5D4B               	subwf	___awmod@dividend& (0+255),w,b
  4114   00148C  514E               	movf	(___awmod@divisor+1)& (0+255),w,b
  4115   00148E  594C               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4116   001490  A0D8               	btfss	status,0,c
  4117   001492  EF4D  F00A         	goto	i1u359_21
  4118   001496  EF4F  F00A         	goto	i1u359_20
  4119   00149A                     i1u359_21:
  4120   00149A  EF53  F00A         	goto	i1l3943
  4121   00149E                     i1u359_20:
  4122   00149E                     
  4123                           ; BSR set to: 1
  4124   00149E  514D               	movf	___awmod@divisor& (0+255),w,b
  4125   0014A0  5F4B               	subwf	___awmod@dividend& (0+255),f,b
  4126   0014A2  514E               	movf	(___awmod@divisor+1)& (0+255),w,b
  4127   0014A4  5B4C               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4128   0014A6                     i1l3943:
  4129                           
  4130                           ; BSR set to: 1
  4131   0014A6  90D8               	bcf	status,0,c
  4132   0014A8  334E               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4133   0014AA  334D               	rrcf	___awmod@divisor& (0+255),f,b
  4134   0014AC                     
  4135                           ; BSR set to: 1
  4136   0014AC  2F4F               	decfsz	___awmod@counter& (0+255),f,b
  4137   0014AE  EF44  F00A         	goto	i1l3939
  4138   0014B2                     i1l3947:
  4139                           
  4140                           ; BSR set to: 1
  4141   0014B2  5150               	movf	___awmod@sign& (0+255),w,b
  4142   0014B4  B4D8               	btfsc	status,2,c
  4143   0014B6  EF5F  F00A         	goto	i1u360_21
  4144   0014BA  EF61  F00A         	goto	i1u360_20
  4145   0014BE                     i1u360_21:
  4146   0014BE  EF65  F00A         	goto	i1l3951
  4147   0014C2                     i1u360_20:
  4148   0014C2                     
  4149                           ; BSR set to: 1
  4150   0014C2  6D4B               	negf	___awmod@dividend& (0+255),b
  4151   0014C4  1F4C               	comf	(___awmod@dividend+1)& (0+255),f,b
  4152   0014C6  B0D8               	btfsc	status,0,c
  4153   0014C8  2B4C               	incf	(___awmod@dividend+1)& (0+255),f,b
  4154   0014CA                     i1l3951:
  4155                           
  4156                           ; BSR set to: 1
  4157   0014CA  C14B  F14B         	movff	___awmod@dividend,?___awmod
  4158   0014CE  C14C  F14C         	movff	___awmod@dividend+1,?___awmod+1
  4159   0014D2                     
  4160                           ; BSR set to: 1
  4161   0014D2  0012               	return		;funcret
  4162   0014D4                     __end_of___awmod:
  4163                           	callstack 0
  4164                           
  4165 ;; *************** function _SRAMfree *****************
  4166 ;; Defined at:
  4167 ;;		line 250 in file "mem.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  pSRAM           2   12[COMRAM] PTR unsigned char 
  4170 ;;		 -> _uDynamicHeap(512), NULL(0), 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4182 ;;      Params:         2       0       0       0       0       0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4185 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4186 ;;Total ram usage:        2 bytes
  4187 ;; Hardware stack levels used: 1
  4188 ;; Hardware stack levels required when called: 4
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_tarefa_1
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           	psect	text20
  4197   001B1A                     __ptext20:
  4198                           	callstack 0
  4199   001B1A                     _SRAMfree:
  4200                           	callstack 21
  4201   001B1A                     
  4202                           ;mem.c: 250: void SRAMfree(unsigned char * pSRAM);mem.c: 251: {;mem.c: 253:  (*(SALLOC *
      +                          )(pSRAM - 1)).bits.alloc = 0;
  4203   001B1A  EE2F F0FF          	lfsr	2,-1
  4204   001B1E  500D               	movf	SRAMfree@pSRAM^0,w,c
  4205   001B20  26D9               	addwf	fsr2l,f,c
  4206   001B22  500E               	movf	(SRAMfree@pSRAM+1)^0,w,c
  4207   001B24  22DA               	addwfc	fsr2h,f,c
  4208   001B26  9EDF               	bcf	indf2,7,c
  4209   001B28  0012               	return		;funcret
  4210   001B2A                     __end_of_SRAMfree:
  4211                           	callstack 0
  4212                           
  4213 ;; *************** function _SRAMalloc *****************
  4214 ;; Defined at:
  4215 ;;		line 154 in file "mem.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  nBytes          1    wreg     unsigned char 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;  nBytes          1   15[BANK0 ] unsigned char 
  4220 ;;  pHeap           2   16[BANK0 ] PTR struct _SALLOC
  4221 ;;		 -> _uDynamicHeap(512), 
  4222 ;;  temp            2   11[BANK0 ] PTR struct _SALLOC
  4223 ;;		 -> _uDynamicHeap(512), 
  4224 ;;  segHeader       1   14[BANK0 ] struct _SALLOC
  4225 ;;  segLen          1   13[BANK0 ] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  2    9[BANK0 ] PTR unsigned char 
  4228 ;; Registers used:
  4229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4235 ;;      Params:         0       2       0       0       0       0       0       0       0
  4236 ;;      Locals:         0       7       0       0       0       0       0       0       0
  4237 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4238 ;;      Totals:         2       9       0       0       0       0       0       0       0
  4239 ;;Total ram usage:       11 bytes
  4240 ;; Hardware stack levels used: 1
  4241 ;; Hardware stack levels required when called: 5
  4242 ;; This function calls:
  4243 ;;		__SRAMmerge
  4244 ;; This function is called by:
  4245 ;;		_tarefa_1
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           	psect	text21
  4250   000FB6                     __ptext21:
  4251                           	callstack 0
  4252   000FB6                     _SRAMalloc:
  4253                           	callstack 20
  4254                           
  4255                           ;incstack = 0
  4256                           ;SRAMalloc@nBytes stored from wreg
  4257   000FB6  0100               	movlb	0	; () banked
  4258   000FB8  6F90               	movwf	SRAMalloc@nBytes& (0+255),b
  4259   000FBA                     
  4260                           ;mem.c: 154: unsigned char * SRAMalloc( unsigned char nBytes);mem.c: 155: {;mem.c: 156: 
      +                           SALLOC * pHeap;;mem.c: 157:  SALLOC * temp;;mem.c: 158:       SALLOC segHeader;;mem.c: 
      +                          159:       unsigned char segLen;;mem.c: 162:  if (nBytes > (0x7F - 1)) return (0);
  4261   000FBA  0E7E               	movlw	126
  4262   000FBC  0100               	movlb	0	; () banked
  4263   000FBE  6590               	cpfsgt	SRAMalloc@nBytes& (0+255),b
  4264   000FC0  EFE4  F007         	goto	i1u377_21
  4265   000FC4  EFE6  F007         	goto	i1u377_20
  4266   000FC8                     i1u377_21:
  4267   000FC8  EFEC  F007         	goto	i1l4083
  4268   000FCC                     i1u377_20:
  4269   000FCC                     i1l4079:
  4270                           
  4271                           ; BSR set to: 0
  4272   000FCC  0E00               	movlw	0
  4273   000FCE  6F8A               	movwf	?_SRAMalloc& (0+255),b
  4274   000FD0  0E00               	movlw	0
  4275   000FD2  6F8B               	movwf	(?_SRAMalloc+1)& (0+255),b
  4276   000FD4  EF6D  F008         	goto	i1l317
  4277   000FD8                     i1l4083:
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;mem.c: 165:  pHeap = (SALLOC *)_uDynamicHeap;
  4281   000FD8  0E80               	movlw	low __uDynamicHeap
  4282   000FDA  6F91               	movwf	SRAMalloc@pHeap& (0+255),b
  4283   000FDC  0E04               	movlw	high __uDynamicHeap
  4284   000FDE  6F92               	movwf	(SRAMalloc@pHeap+1)& (0+255),b
  4285   000FE0                     i1l4085:
  4286                           
  4287                           ;mem.c: 168:  {;mem.c: 170:   segHeader = *pHeap;
  4288   000FE0  C091  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  4289   000FE4  C092  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  4290   000FE8  50DF               	movf	indf2,w,c
  4291   000FEA  0100               	movlb	0	; () banked
  4292   000FEC  6F8F               	movwf	SRAMalloc@segHeader& (0+255),b
  4293   000FEE                     
  4294                           ; BSR set to: 0
  4295                           ;mem.c: 173:   segLen = segHeader.bits.count - 1;
  4296   000FEE  518F               	movf	SRAMalloc@segHeader& (0+255),w,b
  4297   000FF0  0B7F               	andlw	127
  4298   000FF2  6E15               	movwf	??_SRAMalloc^0,c
  4299   000FF4  0415               	decf	??_SRAMalloc^0,w,c
  4300   000FF6  6F8E               	movwf	SRAMalloc@segLen& (0+255),b
  4301   000FF8                     
  4302                           ; BSR set to: 0
  4303                           ;mem.c: 176:   if (segHeader.byte == 0) return (0);
  4304   000FF8  518F               	movf	SRAMalloc@segHeader& (0+255),w,b
  4305   000FFA  A4D8               	btfss	status,2,c
  4306   000FFC  EF02  F008         	goto	i1u378_21
  4307   001000  EF04  F008         	goto	i1u378_20
  4308   001004                     i1u378_21:
  4309   001004  EF06  F008         	goto	i1l319
  4310   001008                     i1u378_20:
  4311   001008  EFE6  F007         	goto	i1l4079
  4312   00100C                     i1l319:
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;mem.c: 179:   if (!(segHeader.bits.alloc))
  4316   00100C  BF8F               	btfsc	SRAMalloc@segHeader& (0+255),7,b
  4317   00100E  EF0B  F008         	goto	i1u379_21
  4318   001012  EF0D  F008         	goto	i1u379_20
  4319   001016                     i1u379_21:
  4320   001016  EF24  F008         	goto	i1l4099
  4321   00101A                     i1u379_20:
  4322   00101A                     
  4323                           ; BSR set to: 0
  4324                           ;mem.c: 180:   {;mem.c: 182:    if (nBytes > segLen)
  4325   00101A  5190               	movf	SRAMalloc@nBytes& (0+255),w,b
  4326   00101C  5D8E               	subwf	SRAMalloc@segLen& (0+255),w,b
  4327   00101E  B0D8               	btfsc	status,0,c
  4328   001020  EF14  F008         	goto	i1u380_21
  4329   001024  EF16  F008         	goto	i1u380_20
  4330   001028                     i1u380_21:
  4331   001028  EF30  F008         	goto	i1l4101
  4332   00102C                     i1u380_20:
  4333   00102C                     
  4334                           ; BSR set to: 0
  4335                           ;mem.c: 183:    {;mem.c: 185:     if (!(_SRAMmerge(pHeap))) pHeap += segHeader.bits.coun
      +                          t;
  4336   00102C  C091  F00D         	movff	SRAMalloc@pHeap,__SRAMmerge@pSegA
  4337   001030  C092  F00E         	movff	SRAMalloc@pHeap+1,__SRAMmerge@pSegA+1
  4338   001034  EC4E  F009         	call	__SRAMmerge	;wreg free
  4339   001038  0900               	iorlw	0
  4340   00103A  A4D8               	btfss	status,2,c
  4341   00103C  EF22  F008         	goto	i1u381_21
  4342   001040  EF24  F008         	goto	i1u381_20
  4343   001044                     i1u381_21:
  4344   001044  EF6B  F008         	goto	i1l326
  4345   001048                     i1u381_20:
  4346   001048                     i1l4099:
  4347   001048  0100               	movlb	0	; () banked
  4348   00104A  518F               	movf	SRAMalloc@segHeader& (0+255),w,b
  4349   00104C  0B7F               	andlw	127
  4350   00104E  6E15               	movwf	??_SRAMalloc^0,c
  4351   001050  5015               	movf	??_SRAMalloc^0,w,c
  4352   001052  0D01               	mullw	1
  4353   001054  50F3               	movf	243,w,c
  4354   001056  2791               	addwf	SRAMalloc@pHeap& (0+255),f,b
  4355   001058  50F4               	movf	244,w,c
  4356   00105A  2392               	addwfc	(SRAMalloc@pHeap+1)& (0+255),f,b
  4357   00105C  EFF0  F007         	goto	i1l4085
  4358   001060                     i1l4101:
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;mem.c: 191:    if (nBytes == segLen)
  4362   001060  518E               	movf	SRAMalloc@segLen& (0+255),w,b
  4363   001062  1990               	xorwf	SRAMalloc@nBytes& (0+255),w,b
  4364   001064  A4D8               	btfss	status,2,c
  4365   001066  EF37  F008         	goto	i1u382_21
  4366   00106A  EF39  F008         	goto	i1u382_20
  4367   00106E                     i1u382_21:
  4368   00106E  EF46  F008         	goto	i1l4111
  4369   001072                     i1u382_20:
  4370   001072                     
  4371                           ; BSR set to: 0
  4372                           ;mem.c: 192:    {;mem.c: 194:     (*pHeap).bits.alloc = 1;
  4373   001072  C091  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  4374   001076  C092  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  4375   00107A  8EDF               	bsf	indf2,7,c
  4376   00107C                     
  4377                           ; BSR set to: 0
  4378                           ;mem.c: 197:     return ((unsigned char *)(pHeap + 1));
  4379   00107C  0E01               	movlw	1
  4380   00107E  2591               	addwf	SRAMalloc@pHeap& (0+255),w,b
  4381   001080  6F8A               	movwf	?_SRAMalloc& (0+255),b
  4382   001082  0E00               	movlw	0
  4383   001084  2192               	addwfc	(SRAMalloc@pHeap+1)& (0+255),w,b
  4384   001086  6F8B               	movwf	(?_SRAMalloc+1)& (0+255),b
  4385   001088  EF6D  F008         	goto	i1l317
  4386   00108C                     i1l4111:
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;mem.c: 202:    {;mem.c: 204:     (*pHeap).byte = nBytes + 0x81;
  4390   00108C  5190               	movf	SRAMalloc@nBytes& (0+255),w,b
  4391   00108E  0F81               	addlw	129
  4392   001090  C091  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  4393   001094  C092  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  4394   001098  6EDF               	movwf	indf2,c
  4395   00109A                     
  4396                           ; BSR set to: 0
  4397                           ;mem.c: 207:     temp = pHeap + 1;
  4398   00109A  0E01               	movlw	1
  4399   00109C  2591               	addwf	SRAMalloc@pHeap& (0+255),w,b
  4400   00109E  6F8C               	movwf	SRAMalloc@temp& (0+255),b
  4401   0010A0  0E00               	movlw	0
  4402   0010A2  2192               	addwfc	(SRAMalloc@pHeap+1)& (0+255),w,b
  4403   0010A4  6F8D               	movwf	(SRAMalloc@temp+1)& (0+255),b
  4404   0010A6                     
  4405                           ; BSR set to: 0
  4406                           ;mem.c: 210:     pHeap += (nBytes + 1);
  4407   0010A6  5190               	movf	SRAMalloc@nBytes& (0+255),w,b
  4408   0010A8  6E15               	movwf	??_SRAMalloc^0,c
  4409   0010AA  6A16               	clrf	(??_SRAMalloc+1)^0,c
  4410   0010AC  0E01               	movlw	1
  4411   0010AE  2615               	addwf	??_SRAMalloc^0,f,c
  4412   0010B0  0E00               	movlw	0
  4413   0010B2  2216               	addwfc	(??_SRAMalloc+1)^0,f,c
  4414   0010B4  5015               	movf	??_SRAMalloc^0,w,c
  4415   0010B6  2791               	addwf	SRAMalloc@pHeap& (0+255),f,b
  4416   0010B8  5016               	movf	(??_SRAMalloc+1)^0,w,c
  4417   0010BA  2392               	addwfc	(SRAMalloc@pHeap+1)& (0+255),f,b
  4418                           
  4419                           ;mem.c: 213:     (*pHeap).byte = segLen - nBytes;
  4420   0010BC  5190               	movf	SRAMalloc@nBytes& (0+255),w,b
  4421   0010BE  5D8E               	subwf	SRAMalloc@segLen& (0+255),w,b
  4422   0010C0  C091  FFD9         	movff	SRAMalloc@pHeap,fsr2l
  4423   0010C4  C092  FFDA         	movff	SRAMalloc@pHeap+1,fsr2h
  4424   0010C8  6EDF               	movwf	indf2,c
  4425   0010CA                     
  4426                           ; BSR set to: 0
  4427                           ;mem.c: 216:     return ((unsigned char *) temp);
  4428   0010CA  C08C  F08A         	movff	SRAMalloc@temp,?_SRAMalloc
  4429   0010CE  C08D  F08B         	movff	SRAMalloc@temp+1,?_SRAMalloc+1
  4430   0010D2  EF6D  F008         	goto	i1l317
  4431   0010D6                     i1l326:
  4432   0010D6  EFF0  F007         	goto	i1l4085
  4433   0010DA                     i1l317:
  4434                           
  4435                           ; BSR set to: 0
  4436   0010DA  0012               	return		;funcret
  4437   0010DC                     __end_of_SRAMalloc:
  4438                           	callstack 0
  4439                           
  4440 ;; *************** function __SRAMmerge *****************
  4441 ;; Defined at:
  4442 ;;		line 322 in file "mem.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  pSegA           2   12[COMRAM] PTR struct _SALLOC
  4445 ;;		 -> _uDynamicHeap(512), 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  pSegB           2   16[COMRAM] PTR struct _SALLOC
  4448 ;;		 -> _uDynamicHeap(512), 
  4449 ;;  uSegB           1   19[COMRAM] struct _SALLOC
  4450 ;;  uSegA           1   18[COMRAM] struct _SALLOC
  4451 ;;  uSum            1   15[COMRAM] struct _SALLOC
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      unsigned char 
  4454 ;; Registers used:
  4455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4461 ;;      Params:         2       0       0       0       0       0       0       0       0
  4462 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4463 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4464 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4465 ;;Total ram usage:        8 bytes
  4466 ;; Hardware stack levels used: 1
  4467 ;; Hardware stack levels required when called: 4
  4468 ;; This function calls:
  4469 ;;		Nothing
  4470 ;; This function is called by:
  4471 ;;		_SRAMalloc
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           	psect	text22
  4476   00129C                     __ptext22:
  4477                           	callstack 0
  4478   00129C                     __SRAMmerge:
  4479                           	callstack 20
  4480   00129C                     
  4481                           ;mem.c: 322:      unsigned char _SRAMmerge(SALLOC * pSegA);mem.c: 323: {;mem.c: 324:  SA
      +                          LLOC * pSegB;;mem.c: 325:       SALLOC uSegA, uSegB, uSum;;mem.c: 329:  pSegB = pSegA + 
      +                          (*pSegA).byte;
  4482   00129C  C00D  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  4483   0012A0  C00E  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  4484   0012A4  50DF               	movf	indf2,w,c
  4485   0012A6  6E0F               	movwf	??__SRAMmerge^0,c
  4486   0012A8  500F               	movf	??__SRAMmerge^0,w,c
  4487   0012AA  240D               	addwf	__SRAMmerge@pSegA^0,w,c
  4488   0012AC  6E11               	movwf	__SRAMmerge@pSegB^0,c
  4489   0012AE  0E00               	movlw	0
  4490   0012B0  200E               	addwfc	(__SRAMmerge@pSegA+1)^0,w,c
  4491   0012B2  6E12               	movwf	(__SRAMmerge@pSegB+1)^0,c
  4492   0012B4                     
  4493                           ;mem.c: 332:  uSegA = *pSegA;
  4494   0012B4  C00D  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  4495   0012B8  C00E  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  4496   0012BC  50DF               	movf	indf2,w,c
  4497   0012BE  6E13               	movwf	__SRAMmerge@uSegA^0,c
  4498   0012C0                     
  4499                           ;mem.c: 333:  uSegB = *pSegB;
  4500   0012C0  C011  FFD9         	movff	__SRAMmerge@pSegB,fsr2l
  4501   0012C4  C012  FFDA         	movff	__SRAMmerge@pSegB+1,fsr2h
  4502   0012C8  50DF               	movf	indf2,w,c
  4503   0012CA  6E14               	movwf	__SRAMmerge@uSegB^0,c
  4504   0012CC                     
  4505                           ;mem.c: 336:  if (uSegB.byte == 0) return (0);
  4506   0012CC  5014               	movf	__SRAMmerge@uSegB^0,w,c
  4507   0012CE  A4D8               	btfss	status,2,c
  4508   0012D0  EF6C  F009         	goto	i1u372_21
  4509   0012D4  EF6E  F009         	goto	i1u372_20
  4510   0012D8                     i1u372_21:
  4511   0012D8  EF71  F009         	goto	i1l342
  4512   0012DC                     i1u372_20:
  4513   0012DC                     i1l4041:
  4514   0012DC  0E00               	movlw	0
  4515   0012DE  EFB9  F009         	goto	i1l343
  4516   0012E2                     i1l342:
  4517                           
  4518                           ;mem.c: 339:  if (uSegA.bits.alloc || uSegB.bits.alloc) return (0);
  4519   0012E2  BE13               	btfsc	__SRAMmerge@uSegA^0,7,c
  4520   0012E4  EF76  F009         	goto	i1u373_21
  4521   0012E8  EF78  F009         	goto	i1u373_20
  4522   0012EC                     i1u373_21:
  4523   0012EC  EF6E  F009         	goto	i1l4041
  4524   0012F0                     i1u373_20:
  4525   0012F0  AE14               	btfss	__SRAMmerge@uSegB^0,7,c
  4526   0012F2  EF7D  F009         	goto	i1u374_21
  4527   0012F6  EF7F  F009         	goto	i1u374_20
  4528   0012FA                     i1u374_21:
  4529   0012FA  EF81  F009         	goto	i1l4051
  4530   0012FE                     i1u374_20:
  4531   0012FE  EF6E  F009         	goto	i1l4041
  4532   001302                     i1l4051:
  4533                           
  4534                           ;mem.c: 342:  if (uSegA.bits.count == 0x7F) return (0);
  4535   001302  5013               	movf	__SRAMmerge@uSegA^0,w,c
  4536   001304  0B7F               	andlw	127
  4537   001306  0A7F               	xorlw	127
  4538   001308  A4D8               	btfss	status,2,c
  4539   00130A  EF89  F009         	goto	i1u375_21
  4540   00130E  EF8B  F009         	goto	i1u375_20
  4541   001312                     i1u375_21:
  4542   001312  EF8D  F009         	goto	i1l4057
  4543   001316                     i1u375_20:
  4544   001316  EF6E  F009         	goto	i1l4041
  4545   00131A                     i1l4057:
  4546                           
  4547                           ;mem.c: 345:  uSum.byte = uSegA.byte + uSegB.byte;
  4548   00131A  5013               	movf	__SRAMmerge@uSegA^0,w,c
  4549   00131C  2414               	addwf	__SRAMmerge@uSegB^0,w,c
  4550   00131E  6E10               	movwf	__SRAMmerge@uSum^0,c
  4551                           
  4552                           ;mem.c: 351:  if ((uSum.byte) > 0x7F)
  4553   001320  0E7F               	movlw	127
  4554   001322  6410               	cpfsgt	__SRAMmerge@uSum^0,c
  4555   001324  EF96  F009         	goto	i1u376_21
  4556   001328  EF98  F009         	goto	i1u376_20
  4557   00132C                     i1u376_21:
  4558   00132C  EFB2  F009         	goto	i1l4073
  4559   001330                     i1u376_20:
  4560   001330                     
  4561                           ;mem.c: 352:  {;mem.c: 353:   (*pSegA).byte = 0x7F;
  4562   001330  C00D  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  4563   001334  C00E  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  4564   001338  0E7F               	movlw	127
  4565   00133A  6EDF               	movwf	indf2,c
  4566   00133C                     
  4567                           ;mem.c: 354:   pSegA += 0x7F;
  4568   00133C  0E7F               	movlw	127
  4569   00133E  260D               	addwf	__SRAMmerge@pSegA^0,f,c
  4570   001340  0E00               	movlw	0
  4571   001342  220E               	addwfc	(__SRAMmerge@pSegA+1)^0,f,c
  4572   001344                     
  4573                           ;mem.c: 355:   pSegB += uSegB.byte;
  4574   001344  5014               	movf	__SRAMmerge@uSegB^0,w,c
  4575   001346  0D01               	mullw	1
  4576   001348  50F3               	movf	243,w,c
  4577   00134A  2611               	addwf	__SRAMmerge@pSegB^0,f,c
  4578   00134C  50F4               	movf	244,w,c
  4579   00134E  2212               	addwfc	(__SRAMmerge@pSegB+1)^0,f,c
  4580   001350                     
  4581                           ;mem.c: 356:   (*pSegA).byte = pSegB - pSegA;
  4582   001350  500D               	movf	__SRAMmerge@pSegA^0,w,c
  4583   001352  5C11               	subwf	__SRAMmerge@pSegB^0,w,c
  4584   001354  C00D  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  4585   001358  C00E  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  4586   00135C  6EDF               	movwf	indf2,c
  4587   00135E                     
  4588                           ;mem.c: 358:   return (0x7F);
  4589   00135E  0E7F               	movlw	127
  4590   001360  EFB9  F009         	goto	i1l343
  4591   001364                     i1l4073:
  4592                           
  4593                           ;mem.c: 363:  {;mem.c: 364:   return ((*pSegA).byte = uSum.byte);
  4594   001364  C00D  FFD9         	movff	__SRAMmerge@pSegA,fsr2l
  4595   001368  C00E  FFDA         	movff	__SRAMmerge@pSegA+1,fsr2h
  4596   00136C  C010  FFDF         	movff	__SRAMmerge@uSum,indf2
  4597   001370  50DF               	movf	223,w,c
  4598   001372                     i1l343:
  4599   001372  0012               	return		;funcret
  4600   001374                     __end_of__SRAMmerge:
  4601                           	callstack 0
  4602                           
  4603 ;; *************** function _tarefa_2 *****************
  4604 ;; Defined at:
  4605 ;;		line 43 in file "user_app.c"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;		None
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;  dado            1  100[BANK1 ] unsigned char 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  1    wreg      void 
  4612 ;; Registers used:
  4613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4619 ;;      Params:         0       0       0       0       0       0       0       0       0
  4620 ;;      Locals:         0       0       1       0       0       0       0       0       0
  4621 ;;      Temps:          0       0       1       0       0       0       0       0       0
  4622 ;;      Totals:         0       0       2       0       0       0       0       0       0
  4623 ;;Total ram usage:        2 bytes
  4624 ;; Hardware stack levels used: 1
  4625 ;; Hardware stack levels required when called: 9
  4626 ;; This function calls:
  4627 ;;		_read_pipe
  4628 ;; This function is called by:
  4629 ;;		_main
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text23
  4634   0016A0                     __ptext23:
  4635                           	callstack 0
  4636   0016A0                     _tarefa_2:
  4637                           	callstack 17
  4638   0016A0                     l105:
  4639   0016A0                     
  4640                           ;user_app.c: 48:         LATDbits.LD1 = ~PORTDbits.RD1;
  4641   0016A0  B283               	btfsc	131,1,c	;volatile
  4642   0016A2  EF55  F00B         	goto	u389_21
  4643   0016A6  EF58  F00B         	goto	u389_20
  4644   0016AA                     u389_21:
  4645   0016AA  0E01               	movlw	1
  4646   0016AC  EF59  F00B         	goto	u389_26
  4647   0016B0                     u389_20:
  4648   0016B0  0E00               	movlw	0
  4649   0016B2                     u389_26:
  4650   0016B2  0AFF               	xorlw	255
  4651   0016B4  0101               	movlb	1	; () banked
  4652   0016B6  6F63               	movwf	??_tarefa_2& (0+255),b
  4653   0016B8  4763               	rlncf	??_tarefa_2& (0+255),f,b
  4654   0016BA  508C               	movf	140,w,c	;volatile
  4655   0016BC  1963               	xorwf	??_tarefa_2& (0+255),w,b
  4656   0016BE  0BFD               	andlw	-3
  4657   0016C0  1963               	xorwf	??_tarefa_2& (0+255),w,b
  4658   0016C2  6E8C               	movwf	140,c	;volatile
  4659   0016C4                     
  4660                           ; BSR set to: 1
  4661                           ;user_app.c: 50:         read_pipe(&canal, &dado);
  4662   0016C4  0E60               	movlw	low _canal
  4663   0016C6  6F5F               	movwf	read_pipe@p& (0+255),b
  4664   0016C8  0E64               	movlw	low tarefa_2@dado
  4665   0016CA  6F60               	movwf	read_pipe@buffer& (0+255),b
  4666   0016CC  0E01               	movlw	high tarefa_2@dado
  4667   0016CE  6F61               	movwf	(read_pipe@buffer+1)& (0+255),b
  4668   0016D0  ECD0  F00B         	call	_read_pipe	;wreg free
  4669   0016D4                     
  4670                           ;user_app.c: 51:         if (dado == 'a') {
  4671   0016D4  0E61               	movlw	97
  4672   0016D6  0101               	movlb	1	; () banked
  4673   0016D8  1964               	xorwf	tarefa_2@dado& (0+255),w,b
  4674   0016DA  A4D8               	btfss	status,2,c
  4675   0016DC  EF72  F00B         	goto	u390_21
  4676   0016E0  EF74  F00B         	goto	u390_20
  4677   0016E4                     u390_21:
  4678   0016E4  EF77  F00B         	goto	l4217
  4679   0016E8                     u390_20:
  4680   0016E8                     
  4681                           ; BSR set to: 1
  4682                           ;user_app.c: 52:             LATCbits.LATC0 = 1;
  4683   0016E8  808B               	bsf	139,0,c	;volatile
  4684                           
  4685                           ;user_app.c: 53:         }
  4686   0016EA  EF50  F00B         	goto	l105
  4687   0016EE                     l4217:
  4688                           
  4689                           ; BSR set to: 1
  4690   0016EE  0E62               	movlw	98
  4691   0016F0  1964               	xorwf	tarefa_2@dado& (0+255),w,b
  4692   0016F2  A4D8               	btfss	status,2,c
  4693   0016F4  EF7E  F00B         	goto	u391_21
  4694   0016F8  EF80  F00B         	goto	u391_20
  4695   0016FC                     u391_21:
  4696   0016FC  EF83  F00B         	goto	l4221
  4697   001700                     u391_20:
  4698   001700                     
  4699                           ; BSR set to: 1
  4700                           ;user_app.c: 55:             LATCbits.LATC1 = 1;
  4701   001700  828B               	bsf	139,1,c	;volatile
  4702                           
  4703                           ;user_app.c: 56:         }
  4704   001702  EF50  F00B         	goto	l105
  4705   001706                     l4221:
  4706                           
  4707                           ; BSR set to: 1
  4708   001706  0E63               	movlw	99
  4709   001708  1964               	xorwf	tarefa_2@dado& (0+255),w,b
  4710   00170A  A4D8               	btfss	status,2,c
  4711   00170C  EF8A  F00B         	goto	u392_21
  4712   001710  EF8C  F00B         	goto	u392_20
  4713   001714                     u392_21:
  4714   001714  EF90  F00B         	goto	l107
  4715   001718                     u392_20:
  4716   001718                     
  4717                           ; BSR set to: 1
  4718                           ;user_app.c: 58:             LATCbits.LATC0 = 0;
  4719   001718  908B               	bcf	139,0,c	;volatile
  4720                           
  4721                           ;user_app.c: 59:             LATCbits.LATC1 = 0;
  4722   00171A  928B               	bcf	139,1,c	;volatile
  4723   00171C  EF50  F00B         	goto	l105
  4724   001720                     l107:
  4725                           
  4726                           ; BSR set to: 1
  4727   001720  EF50  F00B         	goto	l105
  4728   001724  0012               	return		;funcret
  4729   001726                     __end_of_tarefa_2:
  4730                           	callstack 0
  4731                           
  4732 ;; *************** function _read_pipe *****************
  4733 ;; Defined at:
  4734 ;;		line 14 in file "pipe.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  p               1   95[BANK1 ] PTR struct pipe
  4737 ;;		 -> canal(33), 
  4738 ;;  buffer          2   96[BANK1 ] PTR unsigned char 
  4739 ;;		 -> tarefa_2@dado(1), 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      void 
  4744 ;; Registers used:
  4745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4751 ;;      Params:         0       0       3       0       0       0       0       0       0
  4752 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4753 ;;      Temps:          0       0       1       0       0       0       0       0       0
  4754 ;;      Totals:         0       0       4       0       0       0       0       0       0
  4755 ;;Total ram usage:        4 bytes
  4756 ;; Hardware stack levels used: 1
  4757 ;; Hardware stack levels required when called: 8
  4758 ;; This function calls:
  4759 ;;		___awmod
  4760 ;;		_sem_post
  4761 ;;		_sem_wait
  4762 ;; This function is called by:
  4763 ;;		_tarefa_2
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text24
  4768   0017A0                     __ptext24:
  4769                           	callstack 0
  4770   0017A0                     _read_pipe:
  4771                           	callstack 17
  4772   0017A0                     
  4773                           ;pipe.c: 14: void read_pipe(pipe_t *p, char *buffer);pipe.c: 15: {;pipe.c: 16:     (INTC
      +                          ONbits.GIE = 0);
  4774   0017A0  9EF2               	bcf	242,7,c	;volatile
  4775   0017A2                     
  4776                           ;pipe.c: 19:     sem_wait(&p->pipe_sem_read);
  4777   0017A2  0101               	movlb	1	; () banked
  4778   0017A4  515F               	movf	read_pipe@p& (0+255),w,b
  4779   0017A6  0F05               	addlw	5
  4780   0017A8  6F57               	movwf	sem_wait@s& (0+255),b
  4781   0017AA  EC01  F004         	call	_sem_wait	;wreg free
  4782   0017AE                     
  4783                           ;pipe.c: 21:     *buffer = p->pipe_data[p->pipe_pos_read];
  4784   0017AE  0101               	movlb	1	; () banked
  4785   0017B0  515F               	movf	read_pipe@p& (0+255),w,b
  4786   0017B2  6ED9               	movwf	fsr2l,c
  4787   0017B4  6ADA               	clrf	fsr2h,c
  4788   0017B6  50DF               	movf	indf2,w,c
  4789   0017B8  6F62               	movwf	??_read_pipe& (0+255),b
  4790   0017BA  515F               	movf	read_pipe@p& (0+255),w,b
  4791   0017BC  2562               	addwf	??_read_pipe& (0+255),w,b
  4792   0017BE  6ED9               	movwf	fsr2l,c
  4793   0017C0  6ADA               	clrf	fsr2h,c
  4794   0017C2  0E02               	movlw	2
  4795   0017C4  26D9               	addwf	fsr2l,f,c
  4796   0017C6  C160  FFE1         	movff	read_pipe@buffer,fsr1l
  4797   0017CA  C161  FFE2         	movff	read_pipe@buffer+1,fsr1h
  4798   0017CE  CFDF FFE7          	movff	indf2,indf1
  4799   0017D2                     
  4800                           ; BSR set to: 1
  4801                           ;pipe.c: 22:     p->pipe_pos_read = (p->pipe_pos_read + 1) % 3;
  4802   0017D2  515F               	movf	read_pipe@p& (0+255),w,b
  4803   0017D4  6ED9               	movwf	fsr2l,c
  4804   0017D6  6ADA               	clrf	fsr2h,c
  4805   0017D8  515F               	movf	read_pipe@p& (0+255),w,b
  4806   0017DA  6EE1               	movwf	fsr1l,c
  4807   0017DC  6AE2               	clrf	fsr1h,c
  4808   0017DE  50E7               	movf	indf1,w,c
  4809   0017E0  6F62               	movwf	??_read_pipe& (0+255),b
  4810   0017E2  0E01               	movlw	1
  4811   0017E4  2562               	addwf	??_read_pipe& (0+255),w,b
  4812   0017E6  6F4B               	movwf	___awmod@dividend& (0+255),b
  4813   0017E8  6B4C               	clrf	(___awmod@dividend+1)& (0+255),b
  4814   0017EA  0E00               	movlw	0
  4815   0017EC  234C               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4816   0017EE  0E00               	movlw	0
  4817   0017F0  6F4E               	movwf	(___awmod@divisor+1)& (0+255),b
  4818   0017F2  0E03               	movlw	3
  4819   0017F4  6F4D               	movwf	___awmod@divisor& (0+255),b
  4820   0017F6  EC12  F00A         	call	___awmod	;wreg free
  4821   0017FA  0101               	movlb	1	; () banked
  4822   0017FC  514B               	movf	?___awmod& (0+255),w,b
  4823   0017FE  6EDF               	movwf	indf2,c
  4824   001800                     
  4825                           ; BSR set to: 1
  4826                           ;pipe.c: 25:     sem_post(&p->pipe_sem_write);
  4827   001800  515F               	movf	read_pipe@p& (0+255),w,b
  4828   001802  0F13               	addlw	19
  4829   001804  6F51               	movwf	sem_post@s& (0+255),b
  4830   001806  ECC1  F00A         	call	_sem_post	;wreg free
  4831   00180A                     
  4832                           ;pipe.c: 27:     (INTCONbits.GIE = 1);
  4833   00180A  8EF2               	bsf	242,7,c	;volatile
  4834   00180C  0012               	return		;funcret
  4835   00180E                     __end_of_read_pipe:
  4836                           	callstack 0
  4837                           
  4838 ;; *************** function _tarefa_3 *****************
  4839 ;; Defined at:
  4840 ;;		line 64 in file "user_app.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;		None
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;		None
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      void 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4854 ;;      Params:         0       0       0       0       0       0       0       0       0
  4855 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4856 ;;      Temps:          0       0       1       0       0       0       0       0       0
  4857 ;;      Totals:         0       0       1       0       0       0       0       0       0
  4858 ;;Total ram usage:        1 bytes
  4859 ;; Hardware stack levels used: 1
  4860 ;; Hardware stack levels required when called: 4
  4861 ;; This function calls:
  4862 ;;		Nothing
  4863 ;; This function is called by:
  4864 ;;		_main
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text25
  4869   001A46                     __ptext25:
  4870                           	callstack 0
  4871   001A46                     _tarefa_3:
  4872                           	callstack 22
  4873   001A46                     l116:
  4874   001A46                     
  4875                           ;user_app.c: 67:         LATDbits.LD2 = ~PORTDbits.RD2;
  4876   001A46  B483               	btfsc	131,2,c	;volatile
  4877   001A48  EF28  F00D         	goto	u393_21
  4878   001A4C  EF2B  F00D         	goto	u393_20
  4879   001A50                     u393_21:
  4880   001A50  0E01               	movlw	1
  4881   001A52  EF2C  F00D         	goto	u393_26
  4882   001A56                     u393_20:
  4883   001A56  0E00               	movlw	0
  4884   001A58                     u393_26:
  4885   001A58  0AFF               	xorlw	255
  4886   001A5A  0101               	movlb	1	; () banked
  4887   001A5C  6F65               	movwf	??_tarefa_3& (0+255),b
  4888   001A5E  4765               	rlncf	??_tarefa_3& (0+255),f,b
  4889   001A60  4765               	rlncf	??_tarefa_3& (0+255),f,b
  4890   001A62  508C               	movf	140,w,c	;volatile
  4891   001A64  1965               	xorwf	??_tarefa_3& (0+255),w,b
  4892   001A66  0BFB               	andlw	-5
  4893   001A68  1965               	xorwf	??_tarefa_3& (0+255),w,b
  4894   001A6A  6E8C               	movwf	140,c	;volatile
  4895   001A6C  EF23  F00D         	goto	l116
  4896   001A70  0012               	return		;funcret
  4897   001A72                     __end_of_tarefa_3:
  4898                           	callstack 0
  4899                           
  4900 ;; *************** function _ISR_TIMER_0 *****************
  4901 ;; Defined at:
  4902 ;;		line 25 in file "hardware.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;		None
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  1    wreg      void 
  4909 ;; Registers used:
  4910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4916 ;;      Params:         0       0       0       0       0       0       0       0       0
  4917 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4918 ;;      Temps:         13       0       0       0       0       0       0       0       0
  4919 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4920 ;;Total ram usage:       13 bytes
  4921 ;; Hardware stack levels used: 1
  4922 ;; Hardware stack levels required when called: 3
  4923 ;; This function calls:
  4924 ;;		_os_task_time_decrease
  4925 ;;		i2_scheduler
  4926 ;; This function is called by:
  4927 ;;		Interrupt level 2
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           	psect	intcode
  4932   000008                     __pintcode:
  4933                           	callstack 0
  4934   000008                     _ISR_TIMER_0:
  4935                           	callstack 17
  4936                           
  4937                           ; BSR set to: 1
  4938                           ;incstack = 0
  4939   000008  821A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4940   00000A  ED66  F005         	call	int_func,f	;refresh shadow registers
  4941                           
  4942                           	psect	intcode_body
  4943   000ACC                     __pintcode_body:
  4944                           	callstack 17
  4945   000ACC                     int_func:
  4946                           	callstack 17
  4947   000ACC  0006               	pop		; remove dummy address from shadow register refresh
  4948   000ACE  CFE1 F014          	movff	fsr1l,??_ISR_TIMER_0+7
  4949   000AD2  CFE2 F015          	movff	fsr1h,??_ISR_TIMER_0+8
  4950   000AD6  CFD9 F016          	movff	fsr2l,??_ISR_TIMER_0+9
  4951   000ADA  CFDA F017          	movff	fsr2h,??_ISR_TIMER_0+10
  4952   000ADE  CFF3 F018          	movff	prodl,??_ISR_TIMER_0+11
  4953   000AE2  CFF4 F019          	movff	prodh,??_ISR_TIMER_0+12
  4954   000AE6                     
  4955                           ;hardware.c: 27:     (INTCONbits.GIE = 0);
  4956   000AE6  9EF2               	bcf	242,7,c	;volatile
  4957                           
  4958                           ;hardware.c: 29:     if (INTCONbits.TMR0IF == 1) {
  4959   000AE8  A4F2               	btfss	242,2,c	;volatile
  4960   000AEA  EF79  F005         	goto	i2u141_41
  4961   000AEE  EF7B  F005         	goto	i2u141_40
  4962   000AF2                     i2u141_41:
  4963   000AF2  EF9C  F006         	goto	i2l2235
  4964   000AF6                     i2u141_40:
  4965   000AF6                     
  4966                           ;hardware.c: 30:         INTCONbits.TMR0IF = 0;
  4967   000AF6  94F2               	bcf	242,2,c	;volatile
  4968   000AF8                     
  4969                           ;hardware.c: 33:         os_task_time_decrease();
  4970   000AF8  EC0C  F00B         	call	_os_task_time_decrease	;wreg free
  4971   000AFC  EE24  F07E         	lfsr	2,_readyQueue+531
  4972   000B00  EE10 F003          	lfsr	1,3
  4973   000B04  50DE               	movf	postinc2,w,c
  4974   000B06  26E1               	addwf	fsr1l,f,c
  4975   000B08  50DD               	movf	postdec2,w,c
  4976   000B0A  22E2               	addwfc	fsr1h,f,c
  4977   000B0C  04E6               	decf	postinc1,w,c
  4978   000B0E  A4D8               	btfss	status,2,c
  4979   000B10  EF8C  F005         	goto	i2u142_41
  4980   000B14  EF8E  F005         	goto	i2u142_40
  4981   000B18                     i2u142_41:
  4982   000B18  EFFA  F005         	goto	i2l2215
  4983   000B1C                     i2u142_40:
  4984   000B1C  EE24  F07E         	lfsr	2,_readyQueue+531
  4985   000B20  EE10 F006          	lfsr	1,6
  4986   000B24  50DE               	movf	postinc2,w,c
  4987   000B26  26E1               	addwf	fsr1l,f,c
  4988   000B28  50DD               	movf	postdec2,w,c
  4989   000B2A  22E2               	addwfc	fsr1h,f,c
  4990   000B2C  CFE0 FFE7          	movff	bsr,indf1	;volatile
  4991   000B30  EE24  F07E         	lfsr	2,_readyQueue+531
  4992   000B34  EE10 F008          	lfsr	1,8
  4993   000B38  50DE               	movf	postinc2,w,c
  4994   000B3A  26E1               	addwf	fsr1l,f,c
  4995   000B3C  50DD               	movf	postdec2,w,c
  4996   000B3E  22E2               	addwfc	fsr1h,f,c
  4997   000B40  CFD8 FFE7          	movff	status,indf1	;volatile
  4998   000B44  EE24  F07E         	lfsr	2,_readyQueue+531
  4999   000B48  EE10 F007          	lfsr	1,7
  5000   000B4C  50DE               	movf	postinc2,w,c
  5001   000B4E  26E1               	addwf	fsr1l,f,c
  5002   000B50  50DD               	movf	postdec2,w,c
  5003   000B52  22E2               	addwfc	fsr1h,f,c
  5004   000B54  CFE8 FFE7          	movff	wreg,indf1	;volatile
  5005   000B58  EE24  F07E         	lfsr	2,_readyQueue+531
  5006   000B5C  EE10 F069          	lfsr	1,105
  5007   000B60  50DE               	movf	postinc2,w,c
  5008   000B62  26E1               	addwf	fsr1l,f,c
  5009   000B64  50DD               	movf	postdec2,w,c
  5010   000B66  22E2               	addwfc	fsr1h,f,c
  5011   000B68  6AE7               	clrf	indf1,c
  5012   000B6A  EFE9  F005         	goto	i2l2211
  5013   000B6E                     i2l2207:
  5014   000B6E  EE24  F07E         	lfsr	2,_readyQueue+531
  5015   000B72  EE10 F069          	lfsr	1,105
  5016   000B76  50DE               	movf	postinc2,w,c
  5017   000B78  26E1               	addwf	fsr1l,f,c
  5018   000B7A  50DD               	movf	postdec2,w,c
  5019   000B7C  22E2               	addwfc	fsr1h,f,c
  5020   000B7E  50E7               	movf	indf1,w,c
  5021   000B80  6E0D               	movwf	??_ISR_TIMER_0^0,c
  5022   000B82  500D               	movf	??_ISR_TIMER_0^0,w,c
  5023   000B84  0D03               	mullw	3
  5024   000B86  CFF3 F00E          	movff	prodl,??_ISR_TIMER_0+1
  5025   000B8A  CFF4 F00F          	movff	prodh,??_ISR_TIMER_0+2
  5026   000B8E  EE24  F07E         	lfsr	2,_readyQueue+531
  5027   000B92  CFDE F010          	movff	postinc2,??_ISR_TIMER_0+3
  5028   000B96  CFDD F011          	movff	postdec2,??_ISR_TIMER_0+4
  5029   000B9A  500E               	movf	(??_ISR_TIMER_0+1)^0,w,c
  5030   000B9C  2410               	addwf	(??_ISR_TIMER_0+3)^0,w,c
  5031   000B9E  6E12               	movwf	(??_ISR_TIMER_0+5)^0,c
  5032   000BA0  500F               	movf	(??_ISR_TIMER_0+2)^0,w,c
  5033   000BA2  2011               	addwfc	(??_ISR_TIMER_0+4)^0,w,c
  5034   000BA4  6E13               	movwf	(??_ISR_TIMER_0+6)^0,c
  5035   000BA6  0E09               	movlw	9
  5036   000BA8  2412               	addwf	(??_ISR_TIMER_0+5)^0,w,c
  5037   000BAA  6ED9               	movwf	fsr2l,c
  5038   000BAC  0E00               	movlw	0
  5039   000BAE  2013               	addwfc	(??_ISR_TIMER_0+6)^0,w,c
  5040   000BB0  6EDA               	movwf	fsr2h,c
  5041   000BB2  CFFD FFDE          	movff	tosl,postinc2	;volatile
  5042   000BB6  CFFE FFDE          	movff	tosh,postinc2	;volatile
  5043   000BBA  CFFF FFDE          	movff	tosu,postinc2	;volatile
  5044   000BBE  EE24  F07E         	lfsr	2,_readyQueue+531
  5045   000BC2  EE10 F069          	lfsr	1,105
  5046   000BC6  50DE               	movf	postinc2,w,c
  5047   000BC8  26E1               	addwf	fsr1l,f,c
  5048   000BCA  50DD               	movf	postdec2,w,c
  5049   000BCC  22E2               	addwfc	fsr1h,f,c
  5050   000BCE  2AE7               	incf	indf1,f,c
  5051   000BD0  0006               	pop		;# 
  5052   000BD2                     i2l2211:
  5053   000BD2  50FC               	movf	252,w,c	;volatile
  5054   000BD4  A4D8               	btfss	status,2,c
  5055   000BD6  EFEF  F005         	goto	i2u143_41
  5056   000BDA  EFF1  F005         	goto	i2u143_40
  5057   000BDE                     i2u143_41:
  5058   000BDE  EFB7  F005         	goto	i2l2207
  5059   000BE2                     i2u143_40:
  5060   000BE2  EE24  F07E         	lfsr	2,_readyQueue+531
  5061   000BE6  EE10 F003          	lfsr	1,3
  5062   000BEA  50DE               	movf	postinc2,w,c
  5063   000BEC  26E1               	addwf	fsr1l,f,c
  5064   000BEE  50DD               	movf	postdec2,w,c
  5065   000BF0  22E2               	addwfc	fsr1h,f,c
  5066   000BF2  6AE7               	clrf	indf1,c
  5067   000BF4                     i2l2215:
  5068                           
  5069                           ;hardware.c: 36:         scheduler();
  5070   000BF4  EC95  F00D         	call	i2_scheduler	;wreg free
  5071   000BF8  EE24  F07E         	lfsr	2,_readyQueue+531
  5072   000BFC  EE10 F003          	lfsr	1,3
  5073   000C00  50DE               	movf	postinc2,w,c
  5074   000C02  26E1               	addwf	fsr1l,f,c
  5075   000C04  50DD               	movf	postdec2,w,c
  5076   000C06  22E2               	addwfc	fsr1h,f,c
  5077   000C08  50E7               	movf	indf1,w,c
  5078   000C0A  A4D8               	btfss	status,2,c
  5079   000C0C  EF0A  F006         	goto	i2u144_41
  5080   000C10  EF0C  F006         	goto	i2u144_40
  5081   000C14                     i2u144_41:
  5082   000C14  EF9C  F006         	goto	i2l2235
  5083   000C18                     i2u144_40:
  5084   000C18  EE24  F07E         	lfsr	2,_readyQueue+531
  5085   000C1C  EE10 F006          	lfsr	1,6
  5086   000C20  50DE               	movf	postinc2,w,c
  5087   000C22  26E1               	addwf	fsr1l,f,c
  5088   000C24  50DD               	movf	postdec2,w,c
  5089   000C26  22E2               	addwfc	fsr1h,f,c
  5090   000C28  50E7               	movf	indf1,w,c
  5091   000C2A  6EE0               	movwf	224,c	;volatile
  5092   000C2C  EE24  F07E         	lfsr	2,_readyQueue+531
  5093   000C30  EE10 F008          	lfsr	1,8
  5094   000C34  50DE               	movf	postinc2,w,c
  5095   000C36  26E1               	addwf	fsr1l,f,c
  5096   000C38  50DD               	movf	postdec2,w,c
  5097   000C3A  22E2               	addwfc	fsr1h,f,c
  5098   000C3C  50E7               	movf	indf1,w,c
  5099   000C3E  6ED8               	movwf	216,c	;volatile
  5100   000C40  EE24  F07E         	lfsr	2,_readyQueue+531
  5101   000C44  EE10 F007          	lfsr	1,7
  5102   000C48  50DE               	movf	postinc2,w,c
  5103   000C4A  26E1               	addwf	fsr1l,f,c
  5104   000C4C  50DD               	movf	postdec2,w,c
  5105   000C4E  22E2               	addwfc	fsr1h,f,c
  5106   000C50  50E7               	movf	indf1,w,c
  5107   000C52  6E0D               	movwf	??_ISR_TIMER_0^0,c
  5108   000C54  500D               	movf	??_ISR_TIMER_0^0,w,c
  5109   000C56  6AFC               	clrf	252,c	;volatile
  5110   000C58  EE24  F07E         	lfsr	2,_readyQueue+531
  5111   000C5C  EE10 F069          	lfsr	1,105
  5112   000C60  50DE               	movf	postinc2,w,c
  5113   000C62  26E1               	addwf	fsr1l,f,c
  5114   000C64  50DD               	movf	postdec2,w,c
  5115   000C66  22E2               	addwfc	fsr1h,f,c
  5116   000C68  50E7               	movf	indf1,w,c
  5117   000C6A  A4D8               	btfss	status,2,c
  5118   000C6C  EF3A  F006         	goto	i2u145_41
  5119   000C70  EF3C  F006         	goto	i2u145_40
  5120   000C74                     i2u145_41:
  5121   000C74  EF50  F006         	goto	i2l249
  5122   000C78                     i2u145_40:
  5123   000C78  0005               	push		;# 
  5124   000C7A  EE24  F07E         	lfsr	2,_readyQueue+531
  5125   000C7E  EE10 F001          	lfsr	1,1
  5126   000C82  50DE               	movf	postinc2,w,c
  5127   000C84  26E1               	addwf	fsr1l,f,c
  5128   000C86  50DD               	movf	postdec2,w,c
  5129   000C88  22E2               	addwfc	fsr1h,f,c
  5130   000C8A  CFE6 F00D          	movff	postinc1,??_ISR_TIMER_0
  5131   000C8E  CFE5 F00E          	movff	postdec1,??_ISR_TIMER_0+1
  5132   000C92  C00D  FFFD         	movff	??_ISR_TIMER_0,tosl	;volatile
  5133   000C96  C00E  FFFE         	movff	??_ISR_TIMER_0+1,tosh	;volatile
  5134   000C9A  6AFF               	clrf	255,c	;volatile
  5135   000C9C  EF92  F006         	goto	i2l2233
  5136   000CA0                     i2l249:
  5137   000CA0  0005               	push		;# 
  5138   000CA2  EE24  F07E         	lfsr	2,_readyQueue+531
  5139   000CA6  EE10 F069          	lfsr	1,105
  5140   000CAA  50DE               	movf	postinc2,w,c
  5141   000CAC  26E1               	addwf	fsr1l,f,c
  5142   000CAE  50DD               	movf	postdec2,w,c
  5143   000CB0  22E2               	addwfc	fsr1h,f,c
  5144   000CB2  06E7               	decf	indf1,f,c
  5145   000CB4  EE24  F07E         	lfsr	2,_readyQueue+531
  5146   000CB8  EE10 F069          	lfsr	1,105
  5147   000CBC  50DE               	movf	postinc2,w,c
  5148   000CBE  26E1               	addwf	fsr1l,f,c
  5149   000CC0  50DD               	movf	postdec2,w,c
  5150   000CC2  22E2               	addwfc	fsr1h,f,c
  5151   000CC4  50E7               	movf	indf1,w,c
  5152   000CC6  6E0D               	movwf	??_ISR_TIMER_0^0,c
  5153   000CC8  500D               	movf	??_ISR_TIMER_0^0,w,c
  5154   000CCA  0D03               	mullw	3
  5155   000CCC  CFF3 F00E          	movff	prodl,??_ISR_TIMER_0+1
  5156   000CD0  CFF4 F00F          	movff	prodh,??_ISR_TIMER_0+2
  5157   000CD4  EE24  F07E         	lfsr	2,_readyQueue+531
  5158   000CD8  CFDE F010          	movff	postinc2,??_ISR_TIMER_0+3
  5159   000CDC  CFDD F011          	movff	postdec2,??_ISR_TIMER_0+4
  5160   000CE0  500E               	movf	(??_ISR_TIMER_0+1)^0,w,c
  5161   000CE2  2410               	addwf	(??_ISR_TIMER_0+3)^0,w,c
  5162   000CE4  6E12               	movwf	(??_ISR_TIMER_0+5)^0,c
  5163   000CE6  500F               	movf	(??_ISR_TIMER_0+2)^0,w,c
  5164   000CE8  2011               	addwfc	(??_ISR_TIMER_0+4)^0,w,c
  5165   000CEA  6E13               	movwf	(??_ISR_TIMER_0+6)^0,c
  5166   000CEC  0E09               	movlw	9
  5167   000CEE  2412               	addwf	(??_ISR_TIMER_0+5)^0,w,c
  5168   000CF0  6ED9               	movwf	fsr2l,c
  5169   000CF2  0E00               	movlw	0
  5170   000CF4  2013               	addwfc	(??_ISR_TIMER_0+6)^0,w,c
  5171   000CF6  6EDA               	movwf	fsr2h,c
  5172   000CF8  CFDE FFFD          	movff	postinc2,tosl	;volatile
  5173   000CFC  CFDE FFFE          	movff	postinc2,tosh	;volatile
  5174   000D00  CFDD FFFF          	movff	postdec2,tosu	;volatile
  5175   000D04  EE24  F07E         	lfsr	2,_readyQueue+531
  5176   000D08  EE10 F069          	lfsr	1,105
  5177   000D0C  50DE               	movf	postinc2,w,c
  5178   000D0E  26E1               	addwf	fsr1l,f,c
  5179   000D10  50DD               	movf	postdec2,w,c
  5180   000D12  22E2               	addwfc	fsr1h,f,c
  5181   000D14  50E7               	movf	indf1,w,c
  5182   000D16  A4D8               	btfss	status,2,c
  5183   000D18  EF90  F006         	goto	i2u146_41
  5184   000D1C  EF92  F006         	goto	i2u146_40
  5185   000D20                     i2u146_41:
  5186   000D20  EF50  F006         	goto	i2l249
  5187   000D24                     i2u146_40:
  5188   000D24                     i2l2233:
  5189   000D24  EE24  F07E         	lfsr	2,_readyQueue+531
  5190   000D28  EE10 F003          	lfsr	1,3
  5191   000D2C  50DE               	movf	postinc2,w,c
  5192   000D2E  26E1               	addwf	fsr1l,f,c
  5193   000D30  50DD               	movf	postdec2,w,c
  5194   000D32  22E2               	addwfc	fsr1h,f,c
  5195   000D34  0E01               	movlw	1
  5196   000D36  6EE7               	movwf	indf1,c
  5197   000D38                     i2l2235:
  5198                           
  5199                           ;hardware.c: 40:     (INTCONbits.GIE = 1);
  5200   000D38  8EF2               	bsf	242,7,c	;volatile
  5201   000D3A  C019  FFF4         	movff	??_ISR_TIMER_0+12,prodh
  5202   000D3E  C018  FFF3         	movff	??_ISR_TIMER_0+11,prodl
  5203   000D42  C017  FFDA         	movff	??_ISR_TIMER_0+10,fsr2h
  5204   000D46  C016  FFD9         	movff	??_ISR_TIMER_0+9,fsr2l
  5205   000D4A  C015  FFE2         	movff	??_ISR_TIMER_0+8,fsr1h
  5206   000D4E  C014  FFE1         	movff	??_ISR_TIMER_0+7,fsr1l
  5207   000D52  921A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5208   000D54  0011               	retfie		f
  5209   000D56                     __end_of_ISR_TIMER_0:
  5210                           	callstack 0
  5211                           
  5212 ;; *************** function i2_scheduler *****************
  5213 ;; Defined at:
  5214 ;;		line 37 in file "scheduler.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;		None
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;		None
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  1    wreg      void 
  5221 ;; Registers used:
  5222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5228 ;;      Params:         0       0       0       0       0       0       0       0       0
  5229 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5231 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5232 ;;Total ram usage:        0 bytes
  5233 ;; Hardware stack levels used: 1
  5234 ;; Hardware stack levels required when called: 2
  5235 ;; This function calls:
  5236 ;;		i2_rr_scheduler
  5237 ;; This function is called by:
  5238 ;;		_ISR_TIMER_0
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text27
  5243   001B2A                     __ptext27:
  5244                           	callstack 0
  5245   001B2A                     i2_scheduler:
  5246                           	callstack 17
  5247   001B2A                     
  5248                           ;scheduler.c: 40:     readyQueue.taskRunning = rr_scheduler();
  5249   001B2A  ECDF  F008         	call	i2_rr_scheduler	;wreg free
  5250   001B2E  C007  F47E         	movff	?i2_rr_scheduler,_readyQueue+531
  5251   001B32  C008  F47F         	movff	?i2_rr_scheduler+1,_readyQueue+532
  5252   001B36  0012               	return		;funcret
  5253   001B38                     __end_ofi2_scheduler:
  5254                           	callstack 0
  5255                           
  5256 ;; *************** function i2_rr_scheduler *****************
  5257 ;; Defined at:
  5258 ;;		line 12 in file "scheduler.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;		None
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;  pos_task_run    1   11[COMRAM] unsigned char 
  5263 ;;  idle_selecte    1   10[COMRAM] unsigned char 
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  2    6[COMRAM] PTR struct tcb
  5266 ;; Registers used:
  5267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5273 ;;      Params:         2       0       0       0       0       0       0       0       0
  5274 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5275 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5276 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5277 ;;Total ram usage:        6 bytes
  5278 ;; Hardware stack levels used: 1
  5279 ;; Hardware stack levels required when called: 1
  5280 ;; This function calls:
  5281 ;;		i2___awmod
  5282 ;;		i2_os_task_pos
  5283 ;; This function is called by:
  5284 ;;		i2_scheduler
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text28
  5289   0011BE                     __ptext28:
  5290                           	callstack 0
  5291   0011BE                     i2_rr_scheduler:
  5292                           	callstack 17
  5293   0011BE                     
  5294                           ;scheduler.c: 14:     uint8_t pos_task_running = os_task_pos(readyQueue.taskRunning->tas
      +                          k_func);
  5295   0011BE  EE24  F07E         	lfsr	2,_readyQueue+531
  5296   0011C2  EE10 F001          	lfsr	1,1
  5297   0011C6  50DE               	movf	postinc2,w,c
  5298   0011C8  26E1               	addwf	fsr1l,f,c
  5299   0011CA  50DD               	movf	postdec2,w,c
  5300   0011CC  22E2               	addwfc	fsr1h,f,c
  5301   0011CE  CFE6 F001          	movff	postinc1,i2os_task_pos@task
  5302   0011D2  CFE5 F002          	movff	postdec1,i2os_task_pos@task+1
  5303   0011D6  EC8B  F00C         	call	i2_os_task_pos	;wreg free
  5304   0011DA  6E0C               	movwf	i2rr_scheduler@pos_task_running^0,c
  5305   0011DC                     
  5306                           ;scheduler.c: 15:     uint8_t idle_selected = 0;
  5307   0011DC  6A0B               	clrf	i2rr_scheduler@idle_selected^0,c
  5308   0011DE                     i2l1939:
  5309                           
  5310                           ;scheduler.c: 18:         pos_task_running = (pos_task_running+1) % readyQueue.readyQueu
      +                          eSize;
  5311   0011DE  0E01               	movlw	1
  5312   0011E0  240C               	addwf	i2rr_scheduler@pos_task_running^0,w,c
  5313   0011E2  6E01               	movwf	i2___awmod@dividend^0,c
  5314   0011E4  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  5315   0011E6  0E00               	movlw	0
  5316   0011E8  2202               	addwfc	(i2___awmod@dividend+1)^0,f,c
  5317   0011EA  C47D  F009         	movff	_readyQueue+530,??i2_rr_scheduler
  5318   0011EE  5009               	movf	??i2_rr_scheduler^0,w,c
  5319   0011F0  6E03               	movwf	i2___awmod@divisor^0,c
  5320   0011F2  6A04               	clrf	(i2___awmod@divisor+1)^0,c
  5321   0011F4  EC6A  F00A         	call	i2___awmod	;wreg free
  5322   0011F8  5001               	movf	?i2___awmod^0,w,c
  5323   0011FA  6E0C               	movwf	i2rr_scheduler@pos_task_running^0,c
  5324   0011FC                     
  5325                           ;scheduler.c: 19:         if (readyQueue.readyQueue[pos_task_running].task_func == os_id
      +                          le_task) {
  5326   0011FC  500C               	movf	i2rr_scheduler@pos_task_running^0,w,c
  5327   0011FE  0D6A               	mullw	106
  5328   001200  0E6C               	movlw	low (_readyQueue+1)
  5329   001202  24F3               	addwf	243,w,c
  5330   001204  6ED9               	movwf	fsr2l,c
  5331   001206  0E02               	movlw	high (_readyQueue+1)
  5332   001208  20F4               	addwfc	prodh,w,c
  5333   00120A  6EDA               	movwf	fsr2h,c
  5334   00120C  0E18               	movlw	low _os_idle_task
  5335   00120E  18DE               	xorwf	postinc2,w,c
  5336   001210  E107               	bnz	i2u110_41
  5337   001212  0E1A               	movlw	high _os_idle_task
  5338   001214  18DE               	xorwf	postinc2,w,c
  5339   001216  A4D8               	btfss	status,2,c
  5340   001218  EF10  F009         	goto	i2u110_41
  5341   00121C  EF12  F009         	goto	i2u110_40
  5342   001220                     i2u110_41:
  5343   001220  EF21  F009         	goto	i2l1951
  5344   001224                     i2u110_40:
  5345   001224                     
  5346                           ;scheduler.c: 20:             idle_selected++;
  5347   001224  2A0B               	incf	i2rr_scheduler@idle_selected^0,f,c
  5348   001226                     
  5349                           ;scheduler.c: 21:             if (idle_selected > 1) return &readyQueue.readyQueue[0];
  5350   001226  0E01               	movlw	1
  5351   001228  640B               	cpfsgt	i2rr_scheduler@idle_selected^0,c
  5352   00122A  EF19  F009         	goto	i2u111_41
  5353   00122E  EF1B  F009         	goto	i2u111_40
  5354   001232                     i2u111_41:
  5355   001232  EF21  F009         	goto	i2l1951
  5356   001236                     i2u111_40:
  5357   001236  0E6B               	movlw	low _readyQueue
  5358   001238  6E07               	movwf	?i2_rr_scheduler^0,c
  5359   00123A  0E02               	movlw	high _readyQueue
  5360   00123C  6E08               	movwf	(?i2_rr_scheduler+1)^0,c
  5361   00123E  EF4D  F009         	goto	i2l198
  5362   001242                     i2l1951:
  5363                           
  5364                           ;scheduler.c: 24:     } while (readyQueue.readyQueue[pos_task_running].task_state != REA
      +                          DY ||
  5365   001242  500C               	movf	i2rr_scheduler@pos_task_running^0,w,c
  5366   001244  0D6A               	mullw	106
  5367   001246  0E6E               	movlw	low (_readyQueue+3)
  5368   001248  24F3               	addwf	243,w,c
  5369   00124A  6ED9               	movwf	fsr2l,c
  5370   00124C  0E02               	movlw	high (_readyQueue+3)
  5371   00124E  20F4               	addwfc	prodh,w,c
  5372   001250  6EDA               	movwf	fsr2h,c
  5373   001252  50DF               	movf	indf2,w,c
  5374   001254  A4D8               	btfss	status,2,c
  5375   001256  EF2F  F009         	goto	i2u112_41
  5376   00125A  EF31  F009         	goto	i2u112_40
  5377   00125E                     i2u112_41:
  5378   00125E  EFEF  F008         	goto	i2l1939
  5379   001262                     i2u112_40:
  5380   001262  500C               	movf	i2rr_scheduler@pos_task_running^0,w,c
  5381   001264  0D6A               	mullw	106
  5382   001266  0E6C               	movlw	low (_readyQueue+1)
  5383   001268  24F3               	addwf	243,w,c
  5384   00126A  6ED9               	movwf	fsr2l,c
  5385   00126C  0E02               	movlw	high (_readyQueue+1)
  5386   00126E  20F4               	addwfc	prodh,w,c
  5387   001270  6EDA               	movwf	fsr2h,c
  5388   001272  0E18               	movlw	low _os_idle_task
  5389   001274  18DE               	xorwf	postinc2,w,c
  5390   001276  E109               	bnz	i2u113_40
  5391   001278  0E1A               	movlw	high _os_idle_task
  5392   00127A  18DE               	xorwf	postinc2,w,c
  5393   00127C  B4D8               	btfsc	status,2,c
  5394   00127E  EF43  F009         	goto	i2u113_41
  5395   001282  EF45  F009         	goto	i2u113_40
  5396   001286                     i2u113_41:
  5397   001286  EFEF  F008         	goto	i2l1939
  5398   00128A                     i2u113_40:
  5399   00128A                     
  5400                           ;scheduler.c: 27:     return &readyQueue.readyQueue[pos_task_running];
  5401   00128A  500C               	movf	i2rr_scheduler@pos_task_running^0,w,c
  5402   00128C  0D6A               	mullw	106
  5403   00128E  0E6B               	movlw	low _readyQueue
  5404   001290  24F3               	addwf	243,w,c
  5405   001292  6E07               	movwf	?i2_rr_scheduler^0,c
  5406   001294  0E02               	movlw	high _readyQueue
  5407   001296  20F4               	addwfc	prodh,w,c
  5408   001298  6E08               	movwf	(?i2_rr_scheduler+1)^0,c
  5409   00129A                     i2l198:
  5410   00129A  0012               	return		;funcret
  5411   00129C                     __end_ofi2_rr_scheduler:
  5412                           	callstack 0
  5413                           
  5414 ;; *************** function i2_os_task_pos *****************
  5415 ;; Defined at:
  5416 ;;		line 53 in file "kernel.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;  task            2    0[COMRAM] PTR FTN()void 
  5419 ;;		 -> os_idle_task(1), tarefa_3(1), tarefa_2(1), tarefa_1(1), 
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;  i               1    4[COMRAM] unsigned char 
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      unsigned char 
  5424 ;; Registers used:
  5425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5431 ;;      Params:         2       0       0       0       0       0       0       0       0
  5432 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5433 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5434 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5435 ;;Total ram usage:        5 bytes
  5436 ;; Hardware stack levels used: 1
  5437 ;; This function calls:
  5438 ;;		Nothing
  5439 ;; This function is called by:
  5440 ;;		i2_rr_scheduler
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text29
  5445   001916                     __ptext29:
  5446                           	callstack 0
  5447   001916                     i2_os_task_pos:
  5448                           	callstack 17
  5449   001916                     
  5450                           ;kernel.c: 53: uint8_t os_task_pos(f_ptr task);kernel.c: 54: {;kernel.c: 55:     for (ui
      +                          nt8_t i = 0; i < readyQueue.readyQueueSize; i++) {
  5451   001916  6A05               	clrf	i2os_task_pos@i^0,c
  5452   001918  EFA6  F00C         	goto	i2l1743
  5453   00191C                     i2l1735:
  5454                           
  5455                           ;kernel.c: 56:         if (readyQueue.readyQueue[i].task_func == task) return i;
  5456   00191C  5005               	movf	i2os_task_pos@i^0,w,c
  5457   00191E  0D6A               	mullw	106
  5458   001920  0E6C               	movlw	low (_readyQueue+1)
  5459   001922  24F3               	addwf	243,w,c
  5460   001924  6ED9               	movwf	fsr2l,c
  5461   001926  0E02               	movlw	high (_readyQueue+1)
  5462   001928  20F4               	addwfc	prodh,w,c
  5463   00192A  6EDA               	movwf	fsr2h,c
  5464   00192C  5001               	movf	i2os_task_pos@task^0,w,c
  5465   00192E  18DE               	xorwf	postinc2,w,c
  5466   001930  E107               	bnz	i2u88_41
  5467   001932  5002               	movf	(i2os_task_pos@task+1)^0,w,c
  5468   001934  18DE               	xorwf	postinc2,w,c
  5469   001936  A4D8               	btfss	status,2,c
  5470   001938  EFA0  F00C         	goto	i2u88_41
  5471   00193C  EFA2  F00C         	goto	i2u88_40
  5472   001940                     i2u88_41:
  5473   001940  EFA5  F00C         	goto	i2l1741
  5474   001944                     i2u88_40:
  5475   001944  5005               	movf	i2os_task_pos@i^0,w,c
  5476   001946  EFB2  F00C         	goto	i2l60
  5477   00194A                     i2l1741:
  5478                           
  5479                           ;kernel.c: 57:     }
  5480   00194A  2A05               	incf	i2os_task_pos@i^0,f,c
  5481   00194C                     i2l1743:
  5482   00194C  EE24  F07D         	lfsr	2,_readyQueue+530
  5483   001950  50DE               	movf	postinc2,w,c
  5484   001952  5C05               	subwf	i2os_task_pos@i^0,w,c
  5485   001954  A0D8               	btfss	status,0,c
  5486   001956  EFAF  F00C         	goto	i2u89_41
  5487   00195A  EFB1  F00C         	goto	i2u89_40
  5488   00195E                     i2u89_41:
  5489   00195E  EF8E  F00C         	goto	i2l1735
  5490   001962                     i2u89_40:
  5491   001962                     
  5492                           ;kernel.c: 59:     return 0;
  5493   001962  0E00               	movlw	0
  5494   001964                     i2l60:
  5495   001964  0012               	return		;funcret
  5496   001966                     __end_ofi2_os_task_pos:
  5497                           	callstack 0
  5498                           
  5499 ;; *************** function i2___awmod *****************
  5500 ;; Defined at:
  5501 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  dividend        2    0[COMRAM] int 
  5504 ;;  divisor         2    2[COMRAM] int 
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;  sign            1    5[COMRAM] unsigned char 
  5507 ;;  counter         1    4[COMRAM] unsigned char 
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  2    0[COMRAM] int 
  5510 ;; Registers used:
  5511 ;;		wreg, status,2, status,0
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5517 ;;      Params:         4       0       0       0       0       0       0       0       0
  5518 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5520 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5521 ;;Total ram usage:        6 bytes
  5522 ;; Hardware stack levels used: 1
  5523 ;; This function calls:
  5524 ;;		Nothing
  5525 ;; This function is called by:
  5526 ;;		i2_rr_scheduler
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           	psect	text30
  5531   0014D4                     __ptext30:
  5532                           	callstack 0
  5533   0014D4                     i2___awmod:
  5534                           	callstack 17
  5535   0014D4  6A06               	clrf	i2___awmod@sign^0,c
  5536   0014D6  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  5537   0014D8  EF72  F00A         	goto	i2u90_40
  5538   0014DC  EF70  F00A         	goto	i2u90_41
  5539   0014E0                     i2u90_41:
  5540   0014E0  EF78  F00A         	goto	i2l1757
  5541   0014E4                     i2u90_40:
  5542   0014E4  6C01               	negf	i2___awmod@dividend^0,c
  5543   0014E6  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  5544   0014E8  B0D8               	btfsc	status,0,c
  5545   0014EA  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  5546   0014EC  0E01               	movlw	1
  5547   0014EE  6E06               	movwf	i2___awmod@sign^0,c
  5548   0014F0                     i2l1757:
  5549   0014F0  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  5550   0014F2  EF7F  F00A         	goto	i2u91_40
  5551   0014F6  EF7D  F00A         	goto	i2u91_41
  5552   0014FA                     i2u91_41:
  5553   0014FA  EF83  F00A         	goto	i2l1761
  5554   0014FE                     i2u91_40:
  5555   0014FE  6C03               	negf	i2___awmod@divisor^0,c
  5556   001500  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  5557   001502  B0D8               	btfsc	status,0,c
  5558   001504  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  5559   001506                     i2l1761:
  5560   001506  5003               	movf	i2___awmod@divisor^0,w,c
  5561   001508  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  5562   00150A  B4D8               	btfsc	status,2,c
  5563   00150C  EF8A  F00A         	goto	i2u92_41
  5564   001510  EF8C  F00A         	goto	i2u92_40
  5565   001514                     i2u92_41:
  5566   001514  EFB0  F00A         	goto	i2l1777
  5567   001518                     i2u92_40:
  5568   001518  0E01               	movlw	1
  5569   00151A  6E05               	movwf	i2___awmod@counter^0,c
  5570   00151C  EF94  F00A         	goto	i2l1767
  5571   001520                     i2l1765:
  5572   001520  90D8               	bcf	status,0,c
  5573   001522  3603               	rlcf	i2___awmod@divisor^0,f,c
  5574   001524  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  5575   001526  2A05               	incf	i2___awmod@counter^0,f,c
  5576   001528                     i2l1767:
  5577   001528  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  5578   00152A  EF99  F00A         	goto	i2u93_41
  5579   00152E  EF9B  F00A         	goto	i2u93_40
  5580   001532                     i2u93_41:
  5581   001532  EF90  F00A         	goto	i2l1765
  5582   001536                     i2u93_40:
  5583   001536                     i2l1769:
  5584   001536  5003               	movf	i2___awmod@divisor^0,w,c
  5585   001538  5C01               	subwf	i2___awmod@dividend^0,w,c
  5586   00153A  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  5587   00153C  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  5588   00153E  A0D8               	btfss	status,0,c
  5589   001540  EFA4  F00A         	goto	i2u94_41
  5590   001544  EFA6  F00A         	goto	i2u94_40
  5591   001548                     i2u94_41:
  5592   001548  EFAA  F00A         	goto	i2l1773
  5593   00154C                     i2u94_40:
  5594   00154C  5003               	movf	i2___awmod@divisor^0,w,c
  5595   00154E  5E01               	subwf	i2___awmod@dividend^0,f,c
  5596   001550  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  5597   001552  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  5598   001554                     i2l1773:
  5599   001554  90D8               	bcf	status,0,c
  5600   001556  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  5601   001558  3203               	rrcf	i2___awmod@divisor^0,f,c
  5602   00155A  2E05               	decfsz	i2___awmod@counter^0,f,c
  5603   00155C  EF9B  F00A         	goto	i2l1769
  5604   001560                     i2l1777:
  5605   001560  5006               	movf	i2___awmod@sign^0,w,c
  5606   001562  B4D8               	btfsc	status,2,c
  5607   001564  EFB6  F00A         	goto	i2u95_41
  5608   001568  EFB8  F00A         	goto	i2u95_40
  5609   00156C                     i2u95_41:
  5610   00156C  EFBC  F00A         	goto	i2l1781
  5611   001570                     i2u95_40:
  5612   001570  6C01               	negf	i2___awmod@dividend^0,c
  5613   001572  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  5614   001574  B0D8               	btfsc	status,0,c
  5615   001576  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  5616   001578                     i2l1781:
  5617   001578  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  5618   00157C  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  5619   001580  0012               	return		;funcret
  5620   001582                     __end_ofi2___awmod:
  5621                           	callstack 0
  5622                           
  5623 ;; *************** function _os_task_time_decrease *****************
  5624 ;; Defined at:
  5625 ;;		line 62 in file "kernel.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;		None
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;  i               1    1[COMRAM] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      void 
  5632 ;; Registers used:
  5633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5639 ;;      Params:         0       0       0       0       0       0       0       0       0
  5640 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5641 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5642 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5643 ;;Total ram usage:        2 bytes
  5644 ;; Hardware stack levels used: 1
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_ISR_TIMER_0
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text31
  5653   001618                     __ptext31:
  5654                           	callstack 0
  5655   001618                     _os_task_time_decrease:
  5656                           	callstack 19
  5657   001618                     
  5658                           ;kernel.c: 64:     for (uint8_t i = 1; i < readyQueue.readyQueueSize; i++) {
  5659   001618  0E01               	movlw	1
  5660   00161A  6E02               	movwf	os_task_time_decrease@i^0,c
  5661   00161C  EF44  F00B         	goto	i2l1367
  5662   001620                     i2l1359:
  5663                           
  5664                           ;kernel.c: 65:         if (readyQueue.readyQueue[i].task_state == WAITING) {
  5665   001620  5002               	movf	os_task_time_decrease@i^0,w,c
  5666   001622  0D6A               	mullw	106
  5667   001624  0E6E               	movlw	low (_readyQueue+3)
  5668   001626  24F3               	addwf	243,w,c
  5669   001628  6ED9               	movwf	fsr2l,c
  5670   00162A  0E02               	movlw	high (_readyQueue+3)
  5671   00162C  20F4               	addwfc	prodh,w,c
  5672   00162E  6EDA               	movwf	fsr2h,c
  5673   001630  0E02               	movlw	2
  5674   001632  18DE               	xorwf	postinc2,w,c
  5675   001634  A4D8               	btfss	status,2,c
  5676   001636  EF1F  F00B         	goto	i2u39_41
  5677   00163A  EF21  F00B         	goto	i2u39_40
  5678   00163E                     i2u39_41:
  5679   00163E  EF43  F00B         	goto	i2l1365
  5680   001642                     i2u39_40:
  5681   001642                     
  5682                           ;kernel.c: 66:             readyQueue.readyQueue[i].task_time_to_waiting--;
  5683   001642  5002               	movf	os_task_time_decrease@i^0,w,c
  5684   001644  0D6A               	mullw	106
  5685   001646  0E70               	movlw	low (_readyQueue+5)
  5686   001648  24F3               	addwf	243,w,c
  5687   00164A  6ED9               	movwf	fsr2l,c
  5688   00164C  0E02               	movlw	high (_readyQueue+5)
  5689   00164E  20F4               	addwfc	prodh,w,c
  5690   001650  6EDA               	movwf	fsr2h,c
  5691   001652  06DF               	decf	indf2,f,c
  5692                           
  5693                           ;kernel.c: 67:             if (readyQueue.readyQueue[i].task_time_to_waiting == 0) {
  5694   001654  5002               	movf	os_task_time_decrease@i^0,w,c
  5695   001656  0D6A               	mullw	106
  5696   001658  0E70               	movlw	low (_readyQueue+5)
  5697   00165A  24F3               	addwf	243,w,c
  5698   00165C  6ED9               	movwf	fsr2l,c
  5699   00165E  0E02               	movlw	high (_readyQueue+5)
  5700   001660  20F4               	addwfc	prodh,w,c
  5701   001662  6EDA               	movwf	fsr2h,c
  5702   001664  50DF               	movf	indf2,w,c
  5703   001666  A4D8               	btfss	status,2,c
  5704   001668  EF38  F00B         	goto	i2u40_41
  5705   00166C  EF3A  F00B         	goto	i2u40_40
  5706   001670                     i2u40_41:
  5707   001670  EF43  F00B         	goto	i2l1365
  5708   001674                     i2u40_40:
  5709   001674                     
  5710                           ;kernel.c: 69:                 readyQueue.readyQueue[i].task_state = READY;
  5711   001674  5002               	movf	os_task_time_decrease@i^0,w,c
  5712   001676  0D6A               	mullw	106
  5713   001678  0E6E               	movlw	low (_readyQueue+3)
  5714   00167A  24F3               	addwf	243,w,c
  5715   00167C  6ED9               	movwf	fsr2l,c
  5716   00167E  0E02               	movlw	high (_readyQueue+3)
  5717   001680  20F4               	addwfc	prodh,w,c
  5718   001682  6EDA               	movwf	fsr2h,c
  5719   001684  6ADF               	clrf	indf2,c
  5720   001686                     i2l1365:
  5721                           
  5722                           ;kernel.c: 72:     }
  5723   001686  2A02               	incf	os_task_time_decrease@i^0,f,c
  5724   001688                     i2l1367:
  5725   001688  EE24  F07D         	lfsr	2,_readyQueue+530
  5726   00168C  50DE               	movf	postinc2,w,c
  5727   00168E  5C02               	subwf	os_task_time_decrease@i^0,w,c
  5728   001690  A0D8               	btfss	status,0,c
  5729   001692  EF4D  F00B         	goto	i2u41_41
  5730   001696  EF4F  F00B         	goto	i2u41_40
  5731   00169A                     i2u41_41:
  5732   00169A  EF10  F00B         	goto	i2l1359
  5733   00169E                     i2u41_40:
  5734   00169E  0012               	return		;funcret
  5735   0016A0                     __end_of_os_task_time_decrease:
  5736                           	callstack 0
  5737                           
  5738                           	psect	smallconst
  5739   000800                     __psmallconst:
  5740                           	callstack 0
  5741   000800  00                 	db	0
  5742   000801  00                 	db	0	; dummy byte at the end
  5743   000800                     __smallconst    set	__psmallconst
  5744   000800                     __mediumconst   set	__psmallconst
  5745   000000                     __activetblptr  equ	0
  5746                           
  5747                           	psect	rparam
  5748   000001                     ___rparam_used  equ	1
  5749   000000                     ___param_bank   equ	0
  5750   000000                     __Lparam        equ	__Lrparam
  5751   000000                     __Hparam        equ	__Hrparam
  5752                           
  5753                           	psect	temp
  5754   00001A                     btemp:
  5755                           	callstack 0
  5756   00001A                     	ds	1
  5757   00001A                     int$flags       set	btemp
  5758   00001B                     wtemp8          set	btemp+1
  5759   00001B                     ttemp5          set	btemp+1
  5760   00001E                     ttemp6          set	btemp+4
  5761   000022                     ttemp7          set	btemp+8
  5762                           tosu	equ	0xFFF
  5763                           tosh	equ	0xFFE
  5764                           tosl	equ	0xFFD
  5765                           stkptr	equ	0xFFC
  5766                           pclatu	equ	0xFFB
  5767                           pclath	equ	0xFFA
  5768                           pcl	equ	0xFF9
  5769                           tblptru	equ	0xFF8
  5770                           tblptrh	equ	0xFF7
  5771                           tblptrl	equ	0xFF6
  5772                           tablat	equ	0xFF5
  5773                           prodh	equ	0xFF4
  5774                           prodl	equ	0xFF3
  5775                           indf0	equ	0xFEF
  5776                           postinc0	equ	0xFEE
  5777                           postdec0	equ	0xFED
  5778                           preinc0	equ	0xFEC
  5779                           plusw0	equ	0xFEB
  5780                           fsr0h	equ	0xFEA
  5781                           fsr0l	equ	0xFE9
  5782                           wreg	equ	0xFE8
  5783                           indf1	equ	0xFE7
  5784                           postinc1	equ	0xFE6
  5785                           postdec1	equ	0xFE5
  5786                           preinc1	equ	0xFE4
  5787                           plusw1	equ	0xFE3
  5788                           fsr1h	equ	0xFE2
  5789                           fsr1l	equ	0xFE1
  5790                           bsr	equ	0xFE0
  5791                           indf2	equ	0xFDF
  5792                           postinc2	equ	0xFDE
  5793                           postdec2	equ	0xFDD
  5794                           preinc2	equ	0xFDC
  5795                           plusw2	equ	0xFDB
  5796                           fsr2h	equ	0xFDA
  5797                           fsr2l	equ	0xFD9
  5798                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1078
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      26
    BANK0           160     18      51
    BANK1           256    107     107
    BANK2           256    107     107
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    canal$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    canal$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    canal$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    canal$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    create_pipe@p	PTR struct pipe size(1) Largest target is 33
		 -> canal(BANK0[33]), 

    create_pipe@p$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    create_pipe@p$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    new_task$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    os_create_task@task_f	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    os_task_pos@task	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    ?_priority_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    read_pipe@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> tarefa_2@dado(BANK1[1]), 

    read_pipe@p	PTR struct pipe size(1) Largest target is 33
		 -> canal(BANK0[33]), 

    read_pipe@p$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    read_pipe@p$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    readyQueue$readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    readyQueue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    readyQueue$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), NULL(NULL[0]), 

    readyQueue$taskRunning$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    ?_rr_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    ?_rr_scheduler$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    S350semaphore$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    S63tcb$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    S74f_aptos$taskRunning	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    sem_init@s	PTR struct semaphore size(1) Largest target is 33
		 -> canal(BANK0[33]), 

    sem_init@s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    sem_post@s	PTR struct semaphore size(1) Largest target is 33
		 -> canal(BANK0[33]), 

    sem_post@s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    sem_post@s$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    sem_wait@s	PTR struct semaphore size(1) Largest target is 33
		 -> canal(BANK0[33]), 

    sem_wait@s$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    sem_wait@s$sem_queue$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    sp__priority_scheduler	PTR struct tcb size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__priority_scheduler$task_func	PTR FTN()void  size(2) Largest target is 1
		 -> os_idle_task(), tarefa_1(), tarefa_2(), tarefa_3(), 

    sp__rr_scheduler	PTR struct tcb size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), readyQueue$readyQueue(BIGRAM[530]), 

    sp__SRAMalloc	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    SRAMalloc@pHeap	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMalloc@temp	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    SRAMfree@pSRAM	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    SRAMInitHeap@pHeap	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    _SRAMmerge@pSegA	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    _SRAMmerge@pSegB	PTR struct _SALLOC size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), 

    tarefa_1@dados	PTR unsigned char  size(2) Largest target is 512
		 -> _uDynamicHeap(BIGRAM[512]), NULL(NULL[0]), 

    write_pipe@p	PTR struct pipe size(1) Largest target is 33
		 -> canal(BANK0[33]), 

    write_pipe@p$pipe_sem_read$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 

    write_pipe@p$pipe_sem_write$sem_queue	PTR struct tcb[5] size(2) Largest target is 533
		 -> readyQueue(BIGRAM[533]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _os_idle_task in COMRAM

    None.

Critical Paths under _tarefa_1 in COMRAM

    _tarefa_1->_SRAMalloc
    _SRAMalloc->__SRAMmerge

Critical Paths under _tarefa_2 in COMRAM

    None.

Critical Paths under _tarefa_3 in COMRAM

    None.

Critical Paths under _tarefa_1 in COMRAM

    _tarefa_1->_SRAMalloc
    _SRAMalloc->__SRAMmerge

Critical Paths under _tarefa_2 in COMRAM

    None.

Critical Paths under _tarefa_3 in COMRAM

    None.

Critical Paths under _ISR_TIMER_0 in COMRAM

    i2_scheduler->i2_rr_scheduler
    i2_rr_scheduler->i2___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _os_idle_task in BANK0

    None.

Critical Paths under _tarefa_1 in BANK0

    _tarefa_1->_SRAMalloc

Critical Paths under _tarefa_2 in BANK0

    None.

Critical Paths under _tarefa_3 in BANK0

    None.

Critical Paths under _tarefa_1 in BANK0

    _tarefa_1->_SRAMalloc

Critical Paths under _tarefa_2 in BANK0

    None.

Critical Paths under _tarefa_3 in BANK0

    None.

Critical Paths under _ISR_TIMER_0 in BANK0

    None.

Critical Paths under _main in BANK1

    _config_app->_create_pipe
    _create_pipe->_sem_init
    _os_config->_os_create_task

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _os_idle_task in BANK1

    None.

Critical Paths under _tarefa_1 in BANK1

    _sem_post->___awmod
    _scheduler->_rr_scheduler
    _rr_scheduler->___awmod

Critical Paths under _tarefa_2 in BANK1

    _tarefa_2->_read_pipe
    _read_pipe->_sem_wait
    _scheduler->_rr_scheduler
    _rr_scheduler->___awmod
    _sem_post->___awmod

Critical Paths under _tarefa_3 in BANK1

    None.

Critical Paths under _tarefa_1 in BANK1

    _sem_post->___awmod
    _scheduler->_rr_scheduler
    _rr_scheduler->___awmod

Critical Paths under _tarefa_2 in BANK1

    _tarefa_2->_read_pipe
    _read_pipe->_sem_wait
    _scheduler->_rr_scheduler
    _rr_scheduler->___awmod
    _sem_post->___awmod

Critical Paths under _tarefa_3 in BANK1

    None.

Critical Paths under _ISR_TIMER_0 in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_os_create_task
    _os_config->_os_create_task

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _os_idle_task in BANK2

    None.

Critical Paths under _tarefa_1 in BANK2

    None.

Critical Paths under _tarefa_2 in BANK2

    None.

Critical Paths under _tarefa_3 in BANK2

    None.

Critical Paths under _tarefa_1 in BANK2

    None.

Critical Paths under _tarefa_2 in BANK2

    None.

Critical Paths under _tarefa_3 in BANK2

    None.

Critical Paths under _ISR_TIMER_0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _os_idle_task in BANK3

    None.

Critical Paths under _tarefa_1 in BANK3

    None.

Critical Paths under _tarefa_2 in BANK3

    None.

Critical Paths under _tarefa_3 in BANK3

    None.

Critical Paths under _tarefa_1 in BANK3

    None.

Critical Paths under _tarefa_2 in BANK3

    None.

Critical Paths under _tarefa_3 in BANK3

    None.

Critical Paths under _ISR_TIMER_0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _os_idle_task in BANK4

    None.

Critical Paths under _tarefa_1 in BANK4

    None.

Critical Paths under _tarefa_2 in BANK4

    None.

Critical Paths under _tarefa_3 in BANK4

    None.

Critical Paths under _tarefa_1 in BANK4

    None.

Critical Paths under _tarefa_2 in BANK4

    None.

Critical Paths under _tarefa_3 in BANK4

    None.

Critical Paths under _ISR_TIMER_0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _os_idle_task in BANK5

    None.

Critical Paths under _tarefa_1 in BANK5

    None.

Critical Paths under _tarefa_2 in BANK5

    None.

Critical Paths under _tarefa_3 in BANK5

    None.

Critical Paths under _tarefa_1 in BANK5

    None.

Critical Paths under _tarefa_2 in BANK5

    None.

Critical Paths under _tarefa_3 in BANK5

    None.

Critical Paths under _ISR_TIMER_0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _os_idle_task in BANK6

    None.

Critical Paths under _tarefa_1 in BANK6

    None.

Critical Paths under _tarefa_2 in BANK6

    None.

Critical Paths under _tarefa_3 in BANK6

    None.

Critical Paths under _tarefa_1 in BANK6

    None.

Critical Paths under _tarefa_2 in BANK6

    None.

Critical Paths under _tarefa_3 in BANK6

    None.

Critical Paths under _ISR_TIMER_0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _os_idle_task in BANK7

    None.

Critical Paths under _tarefa_1 in BANK7

    None.

Critical Paths under _tarefa_2 in BANK7

    None.

Critical Paths under _tarefa_3 in BANK7

    None.

Critical Paths under _tarefa_1 in BANK7

    None.

Critical Paths under _tarefa_2 in BANK7

    None.

Critical Paths under _tarefa_3 in BANK7

    None.

Critical Paths under _ISR_TIMER_0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1794
                          _os_config
                     _os_create_task
                           _os_start
 ---------------------------------------------------------------------------------
 (1) _os_start                                             0     0      0     492
                       _SRAMInitHeap
                    _conf_interrupts
                       _conf_timer_0
                         _config_app
 ---------------------------------------------------------------------------------
 (2) _config_app                                           0     0      0     263
                        _create_pipe
 ---------------------------------------------------------------------------------
 (3) _create_pipe                                          1     0      1     263
                                            106 BANK1      1     0      1
                           _sem_init
 ---------------------------------------------------------------------------------
 (4) _sem_init                                             4     2      2     136
                                            102 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _conf_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _conf_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SRAMInitHeap                                         4     4      0     229
                                            102 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _os_config                                            0     0      0     651
                     _os_create_task
 ---------------------------------------------------------------------------------
 (1) _os_create_task                                     111   108      3     651
                                            102 BANK1      4     1      3
                                              0 BANK2    107   107      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _os_idle_task                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _os_idle_task                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tarefa_1                                             5     5      0   18516
                                             22 COMRAM     1     1      0
                                             71 BANK1      4     4      0
                          _SRAMalloc
                           _SRAMfree
                            ___awmod
                           _os_delay
                         _write_pipe
 ---------------------------------------------------------------------------------
 (6) _write_pipe                                           3     1      2    9168
                                             12 COMRAM     1     1      0
                                              9 BANK0      2     0      2
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             8     7      1    4767
                                             87 BANK1      8     7      1
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             3     2      1    2157
                                             81 BANK1      3     2      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) _os_delay                                             8     8      0    2769
                                             12 COMRAM     1     1      0
                                              9 BANK0      7     7      0
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0    2610
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (9) _rr_scheduler                                         6     4      2    2610
                                             81 BANK1      6     4      2
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (10) _os_task_pos                                         5     3      2     411
                                             75 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (10) ___awmod                                             6     2      4    1593
                                             75 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (6) _SRAMfree                                             2     0      2     108
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _SRAMalloc                                           11     9      2    4206
                                             20 COMRAM     2     2      0
                                              9 BANK0      9     7      2
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (7) __SRAMmerge                                           8     6      2    1713
                                             12 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tarefa_2                                             2     2      0    9558
                                             99 BANK1      2     2      0
                          _read_pipe
 ---------------------------------------------------------------------------------
 (6) _read_pipe                                            4     1      3    9168
                                             95 BANK1      4     1      3
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             8     7      1    4767
                                             87 BANK1      8     7      1
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0    2610
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (9) _rr_scheduler                                         6     4      2    2610
                                             81 BANK1      6     4      2
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (10) _os_task_pos                                         5     3      2     411
                                             75 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             3     2      1    2157
                                             81 BANK1      3     2      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (10) ___awmod                                             6     2      4    1593
                                             75 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tarefa_3                                             1     1      0       0
                                            101 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tarefa_1                                             5     5      0   18516
                                             22 COMRAM     1     1      0
                                             71 BANK1      4     4      0
                          _SRAMalloc
                           _SRAMfree
                            ___awmod
                           _os_delay
                         _write_pipe
 ---------------------------------------------------------------------------------
 (6) _write_pipe                                           3     1      2    9168
                                             12 COMRAM     1     1      0
                                              9 BANK0      2     0      2
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             8     7      1    4767
                                             87 BANK1      8     7      1
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             3     2      1    2157
                                             81 BANK1      3     2      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) _os_delay                                             8     8      0    2769
                                             12 COMRAM     1     1      0
                                              9 BANK0      7     7      0
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0    2610
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (9) _rr_scheduler                                         6     4      2    2610
                                             81 BANK1      6     4      2
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (10) _os_task_pos                                         5     3      2     411
                                             75 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (10) ___awmod                                             6     2      4    1593
                                             75 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (6) _SRAMfree                                             2     0      2     108
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _SRAMalloc                                           11     9      2    4206
                                             20 COMRAM     2     2      0
                                              9 BANK0      9     7      2
                         __SRAMmerge
 ---------------------------------------------------------------------------------
 (7) __SRAMmerge                                           8     6      2    1713
                                             12 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tarefa_2                                             2     2      0    9558
                                             99 BANK1      2     2      0
                          _read_pipe
 ---------------------------------------------------------------------------------
 (6) _read_pipe                                            4     1      3    9168
                                             95 BANK1      4     1      3
                            ___awmod
                           _sem_post
                           _sem_wait
 ---------------------------------------------------------------------------------
 (7) _sem_wait                                             8     7      1    4767
                                             87 BANK1      8     7      1
                            ___awmod
                          _scheduler
 ---------------------------------------------------------------------------------
 (8) _scheduler                                            0     0      0    2610
                       _rr_scheduler
 ---------------------------------------------------------------------------------
 (9) _rr_scheduler                                         6     4      2    2610
                                             81 BANK1      6     4      2
                            ___awmod
                        _os_task_pos
 ---------------------------------------------------------------------------------
 (10) _os_task_pos                                         5     3      2     411
                                             75 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (7) _sem_post                                             3     2      1    2157
                                             81 BANK1      3     2      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (10) ___awmod                                             6     2      4    1593
                                             75 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tarefa_3                                             1     1      0       0
                                            101 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ISR_TIMER_0                                        13    13      0     600
                                             12 COMRAM    13    13      0
              _os_task_time_decrease
                        i2_scheduler
 ---------------------------------------------------------------------------------
 (12) i2_scheduler                                         0     0      0     525
                     i2_rr_scheduler
 ---------------------------------------------------------------------------------
 (13) i2_rr_scheduler                                      6     4      2     525
                                              6 COMRAM     6     4      2
                          i2___awmod
                      i2_os_task_pos
 ---------------------------------------------------------------------------------
 (14) i2_os_task_pos                                       5     3      2      91
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (14) i2___awmod                                           6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) _os_task_time_decrease                               2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _os_config
     _os_create_task
   _os_create_task
   _os_start
     _SRAMInitHeap
     _conf_interrupts
     _conf_timer_0
     _config_app
       _create_pipe
         _sem_init

 _os_idle_task (ROOT)

 _os_idle_task (ROOT)

 _tarefa_1 (ROOT)
   _SRAMalloc
     __SRAMmerge
   _SRAMfree
   ___awmod
   _os_delay
     _scheduler
       _rr_scheduler
         ___awmod
         _os_task_pos
   _write_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler

 _tarefa_2 (ROOT)
   _read_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler
         _rr_scheduler
           ___awmod
           _os_task_pos

 _tarefa_3 (ROOT)

 _tarefa_1 (ROOT)
   _SRAMalloc
     __SRAMmerge
   _SRAMfree
   ___awmod
   _os_delay
     _scheduler
       _rr_scheduler
         ___awmod
         _os_task_pos
   _write_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler

 _tarefa_2 (ROOT)
   _read_pipe
     ___awmod
     _sem_post
       ___awmod
     _sem_wait
       ___awmod
       _scheduler
         _rr_scheduler
           ___awmod
           _os_task_pos

 _tarefa_3 (ROOT)

 _ISR_TIMER_0 (ROOT)
   _os_task_time_decrease
   i2_scheduler
     i2_rr_scheduler
       i2___awmod
       i2_os_task_pos

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0    1045     51.1%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256    107     107     41.8%
BITBANK1           256      0       0      0.0%
BANK1              256    107     107     41.8%
BITBANK0           160      0       0      0.0%
BANK0              160     18      51     31.9%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     26      26     27.7%
BITBIGSFRlh         91      0       0      0.0%
BITBIGSFRlll        35      0       0      0.0%
BITBIGSFRh          23      0       0      0.0%
BITBIGSFRllh         8      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0    1304      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Sep 24 15:22:50 2025

           __end_ofi2_scheduler 1B38                              l17 19AA                              l18 19AA  
                            l45 1AC2                              l48 1B08                              l96 1AF4  
                  create_pipe@p 016A                   SRAMalloc@temp 008C                             l105 16A0  
                           l107 1720                             l116 1A46                             l230 1ADE  
                           l303 19E6                             l233 1B3A                             l138 1914  
                           l271 1A16                             l337 1872                             _BSR 0FE0  
 __end_of_os_task_time_decrease 16A0                             _TOS 0FFD                    ___awmod@sign 0150  
                           prod 0FF3                             wreg 0FE8                  SRAMalloc@pHeap 0091  
             SRAMInitHeap@pHeap 0166               SRAMInitHeap@count 0168                            l2313 19E8  
                          l2321 19BC                            l2315 19FE                            l2323 19C8  
                          l2317 1A0A                            l2325 19D6                            l2351 180E  
                          l2319 19B2                            l4201 13D8                            l2361 1848  
                          l2353 1818                            l4211 16C4                            l4203 13F6  
                          l1483 1A18                            l2363 1858                            l2355 181E  
                          l2371 1AEA                            l4221 1706                            l4213 16D4  
                          l4205 1418                            l1485 1A1A                            l4301 18CE  
                          l2365 1864                            l2357 1834                            l2349 1B38  
                          l2381 1ADC                            l2373 1AC4                            l4223 1718  
                          l4215 16E8                            l4311 18E2                            l4303 18D6  
                          l2359 1840                            l2375 1AC8                            l4225 1A46  
                          l4217 16EE                            l4209 16A0                            l4313 18E4  
                          l4305 18DA                            l4321 1AAE                            l2377 1AD8  
                          l2369 1AE0                            l4219 1700                            l4315 18E6  
                          l4307 18DE                            l2379 1ADA                            l2491 1B06  
                          l2483 1AF6                            l4323 1966                            l4317 190A  
                          l4309 18E0                            l2485 1AFA                            l4325 19A6  
                          l4191 1382                            l4319 1A9C                            l2487 1AFE  
                          l4193 138E                            l2489 1B02                            l4195 13A0  
                          l4197 13B0                            l4189 1374                            l4199 13B8  
                          l4299 18CA                            u1600 1834                            u1601 1830  
                          u4041 1902                            i1l60 18C4                            i2l60 1964  
                          i2l69 169E                            _TMR0 0FD6                            _WREG 0FE8  
                 SRAMfree@pSRAM 000D                            _main 1966                            fsr1h 0FE2  
                          fsr2h 0FDA                            indf1 0FE7                            indf2 0FDF  
                          fsr1l 0FE1                            fsr2l 0FD9                  ??_conf_timer_0 0166  
                          btemp 001A                            prodh 0FF4                            prodl 0FF3  
                          start 000E                 SRAMalloc@nBytes 0090                    ___param_bank 0000  
         __end_ofi2_os_task_pos 1966                 SRAMalloc@segLen 008E                  i2os_task_pos@i 0005  
                         ?_main 0001                 __end_of___awmod 14D4                           i1l205 1B18  
                         i1l141 0D6E                           i1l151 0F18                           i1l306 180C  
                         i1l154 0FB4                           i1l331 1B28                           i1l317 10DA  
                         i1l309 179E                           i1l342 12E2                           i1l326 10D6  
                         i1l343 1372                           i1l319 100C                           i1l292 1616  
                         i2l205 1B36                           i1l285 0A2E                           i1l198 11BC  
                         i1l288 0ACA                           i2l252 0D3A                           i2l249 0CA0  
                         i1l596 14D2                           i2l198 129A                           i2l596 1580  
                         u53_20 1A2A                           u53_21 1A24                           u53_26 1A2C  
                    __SRAMmerge 129C                           _canal 0060                __end_of_SRAMfree 1B2A  
                         plusw1 0FE3                           plusw2 0FDB                           ttemp5 001B  
                         ttemp6 001E                           ttemp7 0022                           status 0FD8  
                         wtemp8 001B                     i2_scheduler 1B2A                 __initialization 1A72  
                  ?_ISR_TIMER_0 0001                    __end_of_main 19B2                  i2_rr_scheduler 11BE  
                        ??_main 016B                   __activetblptr 0000                          i1l4001 0980  
                        i1l4011 0A08                          i1l4003 0984                          i1l4101 1060  
                        i1l4013 0A30                          i1l4005 09A4                          i1l4021 0AC8  
                        i1l4103 1072                          i1l4111 108C                          i1l4031 1614  
                        i1l4023 1582                          i1l4015 0A42                          i1l4007 09E4  
                        i1l4041 12DC                          i1l4033 129C                          i1l4113 109A  
                        i1l4105 107C                          i1l4025 1584                          i1l4017 0A94  
                        i1l4009 0A06                          i1l4051 1302                          i1l4035 12B4  
                        i1l4115 10A6                          i1l4027 15B6                          i1l4019 0AB4  
                        i1l4131 178E                          i1l4123 1726                          i1l4061 133C  
                        i1l4045 12F0                          i1l4037 12C0                          i1l4117 10CA  
                        i1l4141 0DE0                          i1l4029 15DE                          i1l4133 179C  
                        i1l4125 1728                          i1l4063 1344                          i1l4039 12CC  
                        i1l4151 0E6E                          i1l4143 0E32                          i1l4135 0D58  
                        i1l4127 1736                          i1l4065 1350                          i1l4073 1364  
                        i1l4057 131A                          i1l4161 0F1A                          i1l4153 0E8E  
                        i1l4145 0E46                          i1l4137 0D5A                          i1l4129 1756  
                        i1l4067 135E                          i1l4059 1330                          i1l4083 0FD8  
                        i1l4171 1B1A                          i1l4163 0F2C                          i1l4155 0ECE  
                        i1l4147 0E56                          i1l4139 0D8E                          i1l4181 1800  
                        i1l4173 17A0                          i1l4085 0FE0                          i1l4077 0FBA  
                        i1l4165 0F7E                          i1l4157 0EF0                          i1l4149 0E6A  
                        i1l4183 180A                          i1l4175 17A2                          i1l4095 101A  
                        i1l4087 0FEE                          i1l4079 0FCC                          i1l4167 0F9E  
                        i1l4159 0EF2                          i2l2201 0AF8                          i1l4177 17AE  
                        i1l4097 102C                          i1l4089 0FF8                          i1l4169 0FB2  
                        i2l2211 0BD2                          i2l2203 0AFC                          i1l4179 17D2  
                        i1l4099 1048                          i2l2221 0C56                          i2l2213 0BE2  
                        i2l2205 0B1C                          i2l2231 0D04                          i2l2223 0C78  
                        i2l2207 0B6E                          i2l2215 0BF4                          i1l3911 18AA  
                        i1l3903 1874                          i2l1361 1642                          i2l2081 1B2A  
                        i2l2233 0D24                          i2l2225 0C7A                          i2l2217 0BF8  
                        i2l2209 0BBE                          i1l3921 1428                          i1l3905 187C  
                        i1l3913 18AC                          i2l1363 1674                          i2l2227 0CA2  
                        i2l2219 0C18                          i2l2235 0D38                          i1l3931 1458  
                        i1l3923 1436                          i1l3915 18C2                          i1l3907 18A4  
                        i2l1365 1686                          i2l1357 1618                          i2l2229 0CB4  
                        i1l3941 149E                          i1l3933 146A                          i1l3925 143E  
                        i2l1359 1620                          i2l1367 1688                          i1l3951 14CA  
                        i1l3943 14A6                          i1l3935 1472                          i1l3927 1442  
                        i1l3919 1424                          i1l3945 14AC                          i1l3937 147A  
                        i1l3929 1450                          i1l3961 111E                          i1l3939 1488  
                        i1l3947 14B2                          i1l3963 1146                          i1l3971 1164  
                        i1l3955 10DC                          i2l1741 194A                          i2l1733 1916  
                        i2l2197 0AE6                          i1l3949 14C2                          i1l3973 1184  
                        i1l3965 1148                          i1l3957 10FC                          i1l3981 0802  
                        i2l1751 14D6                          i2l1735 191C                          i2l1743 194C  
                        i2l2199 0AF6                          i1l3975 11AC                          i1l3967 1158  
                        i1l3959 10FE                          i1l3991 08A4                          i1l3983 0804  
                        i2l1761 1506                          i2l1753 14E4                          i2l1745 1962  
                        i2l1737 1944                          i1l3993 08F6                          i1l3985 0828  
                        i2l1771 154C                          i2l1763 1518                          i2l1755 14EC  
                        i1l3979 1B0A                          i1l3995 0948                          i1l3987 084E  
                        i2l1781 1578                          i2l1773 1554                          i2l1765 1520  
                        i2l1757 14F0                          i2l1749 14D4                          i2l1941 11FC  
                        i1l3997 095C                          i1l3989 0884                          i2l1775 155A  
                        i2l1767 1528                          i2l1759 14FE                          i2l1943 1224  
                        i2l1951 1242                          i2l1935 11BE                          i1l3999 096C  
                        i2l1769 1536                          i2l1777 1560                          i2l1953 1262  
                        i2l1945 1226                          i2l1937 11DC                          i2l1779 1570  
                        i2l1955 128A                          i2l1947 1236                          i2l1939 11DE  
                        u390_20 16E8                          u390_21 16E4                          u391_20 1700  
                        u391_21 16FC                          u392_20 1718                          u392_21 1714  
                        u393_20 1A56                          u393_21 1A50                          u393_26 1A58  
                        u388_20 13C8                          u388_21 13C2                          u388_26 13CA  
                        u389_20 16B0                          u389_21 16AA                          u389_26 16B2  
                        _STATUS 0FD8                          _STKPTR 0FFC                    ?_os_task_pos 014B  
                     ??___awmod 014F          __end_ofi2_rr_scheduler 129C               __end_of_SRAMalloc 10DC  
                        clear_0 1A7A                          clear_1 1A8C                 ___awmod@divisor 014D  
                        isa$std 0001                 ___awmod@counter 014F                __end_of_os_delay 0FB6  
              __end_of_tarefa_1 1424                __end_of_tarefa_2 1726                __end_of_tarefa_3 1A72  
              __end_of_sem_init 1A18                __end_of_sem_wait 0ACC                __end_of_sem_post 1618  
          __end_of_conf_timer_0 1AE0               __end_ofi2___awmod 1582                __end_of_os_start 1B0A  
                  __mediumconst 0800                     ?__SRAMmerge 000D                  i2___awmod@sign 0006  
                    __accesstop 0060         __end_of__initialization 1A92                   ___rparam_used 0001  
                _os_create_task 18C6                  __pcstackCOMRAM 0001                 ?i2_rr_scheduler 0007  
                     ?_SRAMfree 000D                 __SRAMmerge@uSum 0010                os_create_task@id 0200  
                    __pbssBANK0 0060                   __uDynamicHeap 0480          __end_of_os_create_task 1916  
                    ??_SRAMfree 000F                   ?_os_idle_task 0001           _os_task_time_decrease 1618  
                    _config_app 1AE0                         i2u40_40 1674                         i2u40_41 1670  
                       i2u41_40 169E                         i2u41_41 169A                         i2u39_40 1642  
                       i2u39_41 163E                         i2u90_40 14E4                         i2u90_41 14E0  
                       i2u91_40 14FE                         i2u91_41 14FA                         i2u92_40 1518  
                       i2u92_41 1514                         i2u93_40 1536                         i2u93_41 1532  
                       i2u94_40 154C                         i2u94_41 1548                         i2u95_40 1570  
                       i2u95_41 156C                         i2u88_40 1944                         i2u88_41 1940  
                       i2u89_40 1962                         i2u89_41 195E                    ?i2_scheduler 0001  
               ?_os_create_task 0166                       ?_os_delay 0001                       ?_tarefa_1 0001  
                     ?_tarefa_2 0001                       ?_tarefa_3 0001                         __Hparam 0000  
                     ?_sem_init 0166                       ?_sem_wait 0157               ??_conf_interrupts 0166  
                     ?_sem_post 0151                         __Lparam 0000                       ?_os_start 0001  
                       ___awmod 1424                    __psmallconst 0800                  ??_os_idle_task 0001  
                       __pcinit 1A72                         __ramtop 0800                   ?_SRAMInitHeap 0001  
                       __ptext0 1966                         __ptext1 1AF6                         __ptext2 1AE0  
                       __ptext3 19B2                         __ptext4 19E8                         __ptext5 1AC4  
                       __ptext6 1B38                         __ptext7 180E                         __ptext8 1A9C  
                       __ptext9 18C6                       _T0CONbits 0FD5                      _readyQueue 026B  
              ___awmod@dividend 014B               __end_of_read_pipe 180E             os_create_task@prior 0168  
             __end_of_scheduler 1B1A     i2rr_scheduler@idle_selected 000B                  __pintcode_body 0ACC  
          end_of_initialization 1A92               __end_of_os_config 1AC4                         int_func 0ACC  
                 tarefa_1@dados 0149                    _conf_timer_0 1AC4          os_create_task@new_task 0201  
                    ??_tarefa_1 0017                      ??_os_delay 008A                   tarefa_1@index 0147  
                    ??_tarefa_2 0163                      ??_tarefa_3 0165                      ??_sem_init 0168  
                    ??_sem_wait 0158                      ??_sem_post 0152                      ??_os_start 016B  
                       postdec1 0FE5                         postdec2 0FDD                   ?_rr_scheduler 0151  
                       postinc0 0FEE                         postinc1 0FE6                         postinc2 0FDE  
                ??_SRAMInitHeap 0166                       _PORTDbits 0F83                       _SRAMalloc 0FB6  
        ?_os_task_time_decrease 0001                     ?_config_app 0001                       _TRISCbits 0F94  
                     _TRISDbits 0F95                    ??__SRAMmerge 000F                       i2___awmod 14D4  
                 ??_create_pipe 016B                write_pipe@buffer 008B                ??i2_rr_scheduler 0009  
                ??_rr_scheduler 0153                   i2_os_task_pos 1916              __end_of__SRAMmerge 1374  
                    _write_pipe 1726                      ?_SRAMalloc 008A             start_initialization 1A72  
            SRAMalloc@segHeader 008F                __SRAMmerge@pSegA 000D                __SRAMmerge@pSegB 0011  
              __SRAMmerge@uSegA 0013                __SRAMmerge@uSegB 0014                      ?i2___awmod 0001  
          __end_of_os_idle_task 1A46             __end_of_create_pipe 19E8                  ?i2_os_task_pos 0001  
                    read_pipe@p 015F                     __pbssBIGRAM 026B    rr_scheduler@pos_task_running 0156  
                 __pcstackBANK0 0081                   __pcstackBANK1 0100                   __pcstackBANK2 0200  
               _conf_interrupts 1B38                ??_os_create_task 0169            __end_of_SRAMInitHeap 1874  
             i2os_task_pos@task 0001                   ??_ISR_TIMER_0 000D                       __pintcode 0008  
                      ?___awmod 014B                     ?_write_pipe 008A                     __smallconst 0800  
                   ??_SRAMalloc 0015            __end_of_rr_scheduler 11BE                     ??i2___awmod 0005  
                     _read_pipe 17A0                       _scheduler 1B0A                     _create_pipe 19B2  
                      _LATCbits 0F8B                        _LATDbits 0F8C                       _os_config 1A9C  
               ??i2_os_task_pos 0003                        i2u110_40 1224                        i2u110_41 1220  
                      i2u111_40 1236                        i2u111_41 1232                        i1u360_20 14C2  
                      i1u360_21 14BE                        i2u112_40 1262                        i2u112_41 125E  
                      i1u353_20 18A4                        i1u361_20 1146                        i1u353_21 18A0  
                      i1u361_21 1142                        i2u113_40 128A                        i2u113_41 1286  
                      i1u354_20 18C2                        i1u362_20 1158                        i1u370_20 0AB4  
                      i1u354_21 18BE                        i1u362_21 1154                        i1u370_21 0AB0  
                  tarefa_2@dado 0164                        i1u355_20 1436                        i1u363_20 1184  
                      i1u371_20 15B6                        i1u355_21 1432                        i1u363_21 1180  
                      i1u371_21 15B2                        i1u372_20 12DC                        i1u380_20 102C  
                      i1u356_20 1450                        i1u364_20 11AC                        i1u372_21 12D8  
                      i1u380_21 1028                        i1u356_21 144C                        i1u364_21 11A8  
                      i1u373_20 12F0                        i1u381_20 1048                        i1u357_20 146A  
                      i1u365_20 0828                        i1u373_21 12EC                        i1u381_21 1044  
                      i1u357_21 1466                        i1u365_21 0824                        i2u141_40 0AF6  
                      i2u141_41 0AF2                        i1u374_20 12FE                        i1u382_20 1072  
                      i1u358_20 1488                        i1u366_20 08A4                        i1u374_21 12FA  
                      i1u382_21 106E                        i1u358_21 1484                        i1u366_21 08A0  
                      i2u142_40 0B1C                        i2u142_41 0B18                        i1u375_20 1316  
                      i1u359_20 149E                        i1u383_20 0D8E                        i1u367_20 096C  
                      i1u375_21 1312                        i1u359_21 149A                        i1u383_21 0D8A  
                      i1u367_21 0968                        i2u143_40 0BE2                        i2u143_41 0BDE  
                      i1u376_20 1330                        i1u384_20 0E56                        i1u368_20 09A4  
                      i1u376_21 132C                        i1u384_21 0E52                        i1u368_21 09A0  
                      i2u144_40 0C18                        i2u144_41 0C14                        i1u377_20 0FCC  
                      i1u385_20 0E8E                        i1u369_20 0A06                        i1u377_21 0FC8  
                      i1u385_21 0E8A                        i1u369_21 0A02                        i2u145_40 0C78  
                      i2u145_41 0C74                        i1u378_20 1008                        i1u386_20 0EF0  
                      i1u378_21 1004                        i1u386_21 0EEC                        i2u146_40 0D24  
                      i2u146_41 0D20                        i1u379_20 101A                        i1u387_20 0F9E  
                      i1u379_21 1016                        i1u387_21 0F9A                   ??_os_task_pos 014D  
                  os_delay@time 000D          os_task_time_decrease@i 0002                        _SRAMfree 1B1A  
       ??_os_task_time_decrease 0001             __end_of_ISR_TIMER_0 0D56         __end_of_conf_interrupts 1B3C  
                  ??_config_app 016B                     write_pipe@p 008A                      ?_read_pipe 015F  
            i2___awmod@dividend 0001                      ?_scheduler 0001                      ?_os_config 0001  
                      __Hrparam 0000                        __Lrparam 0000              __end_of_config_app 1AF6  
           __end_of_os_task_pos 18C6                    _os_idle_task 1A18                        __ptext10 1A18  
                      __ptext11 1374                        __ptext20 1B1A                        __ptext12 1726  
                      __ptext21 0FB6                        __ptext13 0802                        __ptext30 14D4  
                      __ptext22 129C                        __ptext14 1582                        __ptext31 1618  
                      __ptext23 16A0                        __ptext15 0D56                        __ptext24 17A0  
                      __ptext16 1B0A                        __ptext25 1A46                        __ptext17 10DC  
                      __ptext18 1874                        __ptext27 1B2A                        __ptext19 1424  
                      __ptext28 11BE                        __ptext29 1916                       sem_init@s 0166  
                     sem_wait@s 0157                       sem_post@s 0151                        _os_delay 0D56  
                      _tarefa_1 1374                        _tarefa_2 16A0                        _tarefa_3 1A46  
                      _sem_init 19E8                        _sem_wait 0802                        _sem_post 1582  
          os_create_task@task_f 0166                        _os_start 1AF6                        isa$xinst 0000  
                   _ISR_TIMER_0 0008                        int$flags 001A                    os_task_pos@i 014F  
               read_pipe@buffer 0160                    _SRAMInitHeap 180E               i2___awmod@divisor 0003  
             i2___awmod@counter 0005                ?_conf_interrupts 0001                      _INTCONbits 0FF2  
                   ??_read_pipe 0162                        intlevel1 0000                        intlevel2 0000  
                 ??i2_scheduler 000D                     ??_scheduler 0157  i2rr_scheduler@pos_task_running 000C  
                   ??_os_config 016A                     _os_task_pos 1874                    _rr_scheduler 10DC  
                  ??_write_pipe 000D       rr_scheduler@idle_selected 0155                    ?_create_pipe 016A  
            __end_of_write_pipe 17A0                   ?_conf_timer_0 0001                 os_task_pos@task 014B  
            sem_init@init_value 0167  
